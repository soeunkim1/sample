/*
 * App URI: app/ccr/extCcrCBatchTlsnReq
 * Source Location: app/ccr/extCcrCBatchTlsnReq.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccr/extCcrCBatchTlsnReq", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcrCBatchTlsnReq.xtm"/>
			
			/**
			 * 일괄수강신청
			 * @class extCcrCBatchTlsnReq
			 * @author 박갑수 at 2016. 6. 7
			 */
			var extCcrCBatchTlsnReq = function() {
				var moPage = new Page();
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onModelConstructDone_ExtCcrCBatchTlsnReq = function() {
					
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcrTlsnReq"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpDataDtl"], ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd"]);
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
					
					// 대상건수, 처리건수 초기화
					doClearCnt();
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
					
					// 대상건수, 처리건수 초기화
					doClearCnt();
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc 대상건수, 처리건수 초기화
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				function doClearCnt() {
					util.Control.setValue(app, "ipbTgtStudCnt", "");
					util.Control.setValue(app, "ipbProcStudCnt", "");
					util.DataMap.setValue(app, "dmResList", "strProcStudCnt", "");
					util.DataMap.setValue(app, "dmResList", "strTgtStudCnt", "");
				};
				
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 강좌가없는학생 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcrTlsnReq");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnAllBat]일괄수강신청 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				moPage.onClick_BtnAllBat = function() {
					// 조회조건 필수체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
						return false;
					}
					
					// 일괄수강신청 전 체크
					doSaveChk(function(pbSuccess) {
						if (pbSuccess){
							// 일괄수강신청
							doAllBat();
						}
					});
				};
				
				/**
				 * @desc  일괄수강신청 전 체크
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				function doSaveChk(poCallBackFunc) {
					//strCommand: saveChk 
					util.Submit.send(app, "subSaveChk", function(pbSuccess){
						if(pbSuccess){
							
							var vsSaveChk = util.DataMap.getValue(app, "dmResList", "strChkYn");
							if(ValueUtil.fixNull(vsSaveChk) == "Y"){
								// 기존에 수강신청 한 자료가 존재합니다. 삭제 후 진행
								var vsMsg = NLS.CCR.EXT001;
								// "기존에 수강신청 한 자료가 존재합니다. 삭제 후 진행하시겠습니까?" 메시지
								if(!util.Msg.confirm("NLS-CRM-M010", [vsMsg]) ){
									// 콜백함수실행
									if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
									return false;
								}
							}else {
								// 일괄수강신청을 진행
								var vsMsg = NLS.CCR.EXT002;
								// "일괄수강신청을 진행하시겠습니까?" 메시지
								if(!util.Msg.confirm("NLS-CRM-M010", [vsMsg]) ){
									// 콜백함수실행
									if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
									return false;
								}
							}
							
							// 콜백함수실행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc 일괄수강신청
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 7
				 */
				function doAllBat() {
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["ipbTgtStudCnt", "ipbProcStudCnt"]);
							
							// "처리되었습니다." 헤더 메시지
							util.Msg.notify(app, "NLS.INF.M003");
						}else {
							// "처리가 취소되었습니다." 헤더 메시지
							util.Msg.notify(app, "NLS.INF.M013");
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCcrTlsnReq");
			dataSet_3.parseData({
				"columns": [
					{"name": "SA_NM"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "CLASS_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strProcStudCnt",
						"dataType": "string"
					},
					{
						"name": "strChkYn",
						"dataType": "string"
					},
					{
						"name": "strTgtStudCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccr/ExtCcrBatchTlsnReq/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccr/ExtCcrBatchTlsnReq/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveChk");
			submission_3.action = "/ccr/ExtCcrBatchTlsnReq/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_1, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/ccr/ExtCcrBatchTlsnReq/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_1, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subDate");
			submission_5.action = "/cmn/StdCmnDateTime/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addResponseData(dataMap_2, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "150px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "335px",
					"width": "120px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_2 = new cpr.controls.Button("btnAllBat");
				button_2.value = "";
				button_2.style.setClasses(["btn-commit"]);
				button_2.bind("value").toLanguage("UI-SCR-CCRTLSNREQBAT");
				if(typeof onBtnAllBatClick == "function") {
					button_2.addEventListener("click", onBtnAllBatClick);
				}
				container.addChild(button_2, {
					"top": "60px",
					"left": "315px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optComment");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_3, {
					"top": "195px",
					"left": "155px",
					"width": "430px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optComment1");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_4, {
					"top": "235px",
					"left": "155px",
					"width": "430px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optComment2");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "275px",
					"left": "155px",
					"width": "430px",
					"height": "45px"
				});
				var output_6 = new cpr.controls.Output("optComment3");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_6, {
					"top": "340px",
					"left": "155px",
					"width": "430px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbTgtStudCnt");
				inputBox_1.enabled = false;
				inputBox_1.readOnly = true;
				inputBox_1.maxLength = 5;
				inputBox_1.bind("fieldLabel").toExpression("#optTgtStudCnt.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmResList"), "strTgtStudCnt");
				container.addChild(inputBox_1, {
					"top": "100px",
					"left": "390px",
					"width": "80px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optTgtStudCnt");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-TGTSTUDCNT");
				container.addChild(output_7, {
					"top": "100px",
					"left": "265px",
					"width": "120px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optProcStudCnt");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-PROCSTUDCNT");
				container.addChild(output_8, {
					"top": "125px",
					"left": "265px",
					"width": "120px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbProcStudCnt");
				inputBox_2.enabled = false;
				inputBox_2.readOnly = true;
				inputBox_2.maxLength = 5;
				inputBox_2.bind("fieldLabel").toExpression("#optProcStudCnt.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmResList"), "strProcStudCnt");
				container.addChild(inputBox_2, {
					"top": "125px",
					"left": "390px",
					"width": "80px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "720px",
				"height": "598px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NOLECTSTUD");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcrTlsnReq");
				grid_1.init({
					"dataSet": app.lookup("dsCcrTlsnReq"),
					"columns": [
						{"width": "40px"},
						{"width": "207px"},
						{"width": "100px"},
						{"width": "60px"},
						{"width": "60px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CLASSZ");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CLASS_RCD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "483px",
					"height": "559px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "72px",
				"left": "735px",
				"width": "495px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "일괄수강신청";
	cpr.core.Platform.INSTANCE.register(app);
})();
