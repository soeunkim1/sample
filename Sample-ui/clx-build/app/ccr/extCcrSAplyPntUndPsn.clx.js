/*
 * App URI: app/ccr/extCcrSAplyPntUndPsn
 * Source Location: app/ccr/extCcrSAplyPntUndPsn.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccr/extCcrSAplyPntUndPsn", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcrSAplyPntUndPsn.xtm"/>
			
			/**
			 * 최저학점이하 수강신청자 조회
			 * @class extCcrSAplyPntUndPsn
			 * @author 유형기 at 2016. 6. 28
			 */
			var extCcrSAplyPntUndPsn = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCdNm",
					iCd					:	"",
					iNm					:	"ipbSaCdNm",
					iObjDivRcd			:	["CC009OG", "CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strObjCd",
					oCdNm				:	"ipbSaCdNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
						/*
						var vsObjCd = util.DataMap.getValue(app, "dmReqKey", "strObjCd");
						if(!ValueUtil.isNull(vsObjCd)){
							// 학사부서 In조건용
							doSaInList();
						}
						*/
					}
				}];
				
				// 학년도 ,학기, 출력순서를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onModelConstructDone_ExtCcrSAplyPntUndPsn = function() {
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							// 조회조건 컨트롤 refresh(학년도, 학기)
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbDgrCrsDivRcd"]);
							
							setStdCmnPObjSchObjInfo();
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
					
					// 조회조건 초기화
					doClearSch();
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
					
					// 조회조건 초기화
					doClearSch();
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc 조회조건(학사부서) 초기화
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				function doClearSch(){
					util.Control.setValue(app, "ipbSaCdNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strObjCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", "");
					util.DataMap.setValue(app, "dmReqKey", "strListSaCd", "");
					util.Control.setValue(app, "iptFrom","");
					util.Control.setValue(app, "iptTo","");
				};
				
				/**
				 * @desc [btnSaCdNm]소속(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onClick_BtnSaCdNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaCdNm]소속 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onValueChanged_IpbSaCdNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				moPage.onClick_BtnSearch = function() {
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaCdNm"])){
						return false;
					}
					
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
								var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
								var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
								
								var voParam = {
										p_strLanDivRcd 		: util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd"),	// 언어키
										p_strKeyDate 		: util.DataMap.getValue(app, "dmKeyDateMap", "END_DT"),		// 기준일자
										p_strSchYearRcd 	: vsSchYearRcd,															// 학년도코드
										p_strSmtRcd 			: vsSmtRcd,																	// 학기코드
										p_strListSaCd		: util.DataMap.getValue(app, "dmReqKey", "strListSaCd"),			// 학사부서코드 In조건용
										p_strCheckAuthId 	: moUserInfo.id,																// 사용자ID
										p_strGradeFrom      : util.Control.getValue(app, "iptFrom"),										//학점FROM
										p_strGradeTo         : util.Control.getValue(app, "iptTo"),											//학점TO				
										p_strDgrCrsDivRcd  : util.Control.getValue(app, "cbbDgrCrsDivRcd")							//학위구분
								};
								
								var vsSchYearRcdNm = ExtInstance.getValue("/root/resOnLoad/schYearRcdList/row", "CD_NM" , "child::CD='"+ vsSchYearRcd +"'");
								var vsSmtRcdNm = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM" , "child::CD='"+ vsSmtRcd +"'");
								var vsTitle = vsSchYearRcdNm + " 최저학점이하 수강신청자 조회";
								
								var voOzFormParam = {
									  TITLE 		 : vsTitle			// 리포트타이틀
									, SUB_TITLE 	 : "" 					// 리포트서브타이틀		
									, FORM_TYPE : "flash"
								};
								
								util.Report.open(app, "hojReport", "extCcrSAplyPntUndPsn", voOzFormParam, voParam);
						}
					});
					
					
					
				}
				
				/**
				 * @desc 객체 하위 학사부서 In조건용 String 조회
				 * @param 
				 * @return void
				 * @author 유형기 at 2016. 6. 28
				 */
				function doSaInList(){
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsDgrCrsDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strObjNm",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strListSaCd",
						"dataType": "string"
					},
					{
						"name": "strGradeFrom",
						"dataType": "string"
					},
					{
						"name": "strGradeTo",
						"dataType": "string"
					},
					{
						"name": "strDgrCrsDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccr/ExtCcrAplyPntUndPsn/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccr/ExtCcrAplyPntUndPsn/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subDate");
			submission_3.action = "/cmn/StdCmnDateTime/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NCSLUMPLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "340px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "563px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "80px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "180px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "255px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaCdNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaCdNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strObjNm");
				if(typeof onIpbSaCdNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaCdNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "430px",
					"width": "110px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSaCdNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "355px",
					"width": "70px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCdNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdNmClick == "function") {
					button_2.addEventListener("click", onBtnSaCdNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "540px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optFrom");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_4, {
					"top": "5px",
					"left": "765px",
					"width": "110px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optTo");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "5px",
					"left": "965px",
					"width": "110px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("iptFrom");
				numberEditor_1.bind("fieldLabel").toExpression("#optFrom.value");
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strGradeFrom");
				container.addChild(numberEditor_1, {
					"top": "5px",
					"left": "874px",
					"width": "50px",
					"height": "25px"
				});
				var numberEditor_2 = new cpr.controls.NumberEditor("iptTo");
				numberEditor_2.bind("fieldLabel").toExpression("#optTo.value");
				numberEditor_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strGradeTo");
				container.addChild(numberEditor_2, {
					"top": "5px",
					"left": "1080px",
					"width": "50px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optFromTo");
				output_6.value = "~";
				container.addChild(output_6, {
					"top": "7px",
					"left": "935px",
					"width": "25px",
					"height": "15px"
				});
				var output_7 = new cpr.controls.Output("optDgrCrsDivRcd");
				output_7.value = "학위과정코드";
				container.addChild(output_7, {
					"top": "5px",
					"left": "570px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbDgrCrsDivRcd");
				comboBox_3.bind("fieldLabel").toExpression("#optDgrCrsDivRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDgrCrsDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsDgrCrsDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "665px",
					"width": "90px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "최저학점이하수강신청자조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
