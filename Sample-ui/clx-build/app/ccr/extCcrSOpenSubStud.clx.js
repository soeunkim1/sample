/*
 * App URI: app/ccr/extCcrSOpenSubStud
 * Source Location: app/ccr/extCcrSOpenSubStud.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccr/extCcrSOpenSubStud", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcrSOpenSubStud.xtm"/>
			
			/**
			 * 수강과목조회
			 * @class extCcrSOpenSubStud
			 * @author 박갑수 at 2016. 6. 29
			 */
			var extCcrSOpenSubStud = function() {
				var moPage = new Page();
				
				// 탭 정의
				var TAB = {
					// 금학기수강
					CCR	: "tabCcr",
					// 이수교과목
					CGD  : "tabCgd"
				};
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 학생검색팝업
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnStudId",
					iStudNo 					: "ipbStudId",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/keyDateMap/END_DT", 
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					: "",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqKey/strStudId",
					oStudNo 					: "ipbStudId",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						// 검색조건이 있을경우 조회
			//			var vsSchYearRcd = ExtControl.getValue("cbbSchYearRcd");
			//			var vsSmtRcd = ExtControl.getValue("cbbSmtRcd");
			//			var vsStudId = ExtInstance.getValue("/root/reqKey/strStudId");
			//			
			//			if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsStudId)){
			//				ExtModel.dispatch("btnSearch", "DOMActivate");
			//			}
					}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onModelConstructDone_ExtCcrSOpenSubStud = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcrTlsnReq"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 권한에따른 교수명 컬럼 검색가능 여부
					doVisibleCtlByAuth();
							
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbSchDiv"]);
							
							// 검색구분값 - 금학기수강 Default
							util.Control.setValue(app, "cbbSchDiv", "CCR");
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.CCR);
							
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
						}
					}, true);
				};
				
				/**
				 * 권한에 따른 조회조건 컨트롤 활성/비활성 처리
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 6. 29
				 */	
				function doVisibleCtlByAuth() {
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Control.setVisible(app, false, ["btnStudId"]);
						util.Control.setEnable(app, false, ["ipbStudId"]);
						
						util.Control.setValue(app, "ipbStudId", moUserInfo.studNo);
						util.DataMap.setValue(app, "dmReqKey", "strStudId", moUserInfo.id);
						util.Control.setStyleAttr(app, "ipbStudId", "width", "120");
					}
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["dipKeyDate"]);
							
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnStudId]학번(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onClick_BtnStudId = function(sender) {
					// 학생검색팝업 호출
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc [ipbStudId]학번 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					// 값변경시 학생검색팝업 호출
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc [cbbSchDiv]검색구분 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onValueChanged_CbbSchDiv = function() {
					var vsSchDiv = util.Control.getValue(app, "cbbSchDiv");
					
					if(ValueUtil.fixNull(vsSchDiv) == "CGD"){
						util.Control.setEnable(app, false, ["cbbSchYearRcd", "cbbSmtRcd"]);
						
						util.Tab.setSelectedTabItem(app, "tabMain", TAB.CGD);
					}else {
						util.Control.setEnable(app, true, ["cbbSchYearRcd", "cbbSmtRcd"]);
						
						util.Tab.setSelectedTabItem(app, "tabMain", TAB.CCR);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					var vsSchDiv = util.Control.getValue(app, "cbbSchDiv");
					if(ValueUtil.fixNull(vsSchDiv) == "CGD"){
						// 조회조건 필수 체크
						if(!util.validate(app, ["ipbStudId", "cbbSchDiv"])){
							return false;
						}
					}else {
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbStudId", "cbbSchDiv"])){
							return false;
						}
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 개설과목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcrTlsnReq");
							util.Control.redraw(app, "grdCcrTlsnReq1");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [rdBtnPlanPaper]강의계획서 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onClick_RdBtnPlanBtn = function() {
					
					var vsKeyDate = "";
					
					var vsSchDiv = util.Control.getValue(app, "cbbSchDiv");
					
					if(ValueUtil.fixNull(vsSchDiv) == "CGD"){
						vsKeyDate = util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate");
					}else {
						vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "END_DT");
					}
					
					var vsSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SCH_YEAR_RCD");
					var vsSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SMT_RCD");
					var vsSaCd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SA_CD");
					var vsRefKey = util.Grid.getCellValue(app, "grdCcrTlsnReq", "REF_KEY");
					
					var vsPlanBtn = util.Grid.getCellValue(app, "grdCcrTlsnReq", "PLAN_BTN");
					
					if(ValueUtil.isNull(vsPlanBtn)){
						// "작성된 강의계획서가 없습니다." 메시지
						util.Msg.alert("NLS-CCR-EXT003");
						return false;
					}else {
						// 강의계획서 출력
						var voParam = {
								p_strLanDivRcd 			: msDefaultLocale	 			 // 언어키
							  ,	p_strKeyDate 			: vsKeyDate	  					 // 기준일
							  ,	p_strSchYearRcd		: vsSchYearRcd  				 // 학년도
							  ,	p_strSmtRcd 				: vsSmtRcd  						 // 학기
							  ,	p_strSaCd	 				: vsSaCd  							 // 부서코드
							  ,	p_strRefKey 				: vsRefKey							 // 교과목참조키
							  ,	p_strCheckAuthId 		: moUserInfo.id					 // 사용자ID
						};
								
						var voOzFormParam = {
								  TITLE 		 : "강의계획서" 		//리포트타이틀
								, SUB_TITLE   : "" 		//리포트서브타이틀		
								, FORM_TYPE : "flash"
						};	
								
						ReportUtil.fOzPopupOpen("강의계획서", "stdNcsSCurPrt04", voOzFormParam, voParam);
					}
				};
				
				/**
				 * @desc [rdBtnPlanPaper1]강의계획서 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onClick_RdBtnPlanBtn1 = function() {
					
					var vsKeyDate = "";
					
					var vsSchDiv = util.Control.getValue(app, "cbbSchDiv");
					
					if(ValueUtil.fixNull(vsSchDiv) == "CGD"){
						vsKeyDate = util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate");
					}else {
						vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "END_DT");
					}
					
					var vsSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq1", "SCH_YEAR_RCD");
					var vsSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq1", "SMT_RCD");
					var vsSaCd = util.Grid.getCellValue(app, "grdCcrTlsnReq1", "SA_CD");
					var vsRefKey = util.Grid.getCellValue(app, "grdCcrTlsnReq1", "REF_KEY");
					
					var vsPlanBtn = util.Grid.getCellValue(app, "grdCcrTlsnReq1", "PLAN_BTN");
					
					if(ValueUtil.isNull(vsPlanBtn)){
						// "작성된 강의계획서가 없습니다." 메시지
						util.Msg.alert("NLS-CCR-EXT003");
						return false;
					}else {
						// 강의계획서 출력
						var voParam = {
								p_strLanDivRcd 			: msDefaultLocale	 			 // 언어키
							  ,	p_strKeyDate 			: vsKeyDate	  					 // 기준일
							  ,	p_strSchYearRcd		: vsSchYearRcd  				 // 학년도
							  ,	p_strSmtRcd 				: vsSmtRcd  						 // 학기
							  ,	p_strSaCd	 				: vsSaCd  							 // 부서코드
							  ,	p_strRefKey 				: vsRefKey							 // 교과목참조키
							  ,	p_strCheckAuthId 		: moUserInfo.id					 // 사용자ID
						};
								
						var voOzFormParam = {
								  TITLE 		 : "강의계획서" 		//리포트타이틀
								, SUB_TITLE   : "" 		//리포트서브타이틀		
								, FORM_TYPE : "flash"
						};	
								
						ReportUtil.fOzPopupOpen("강의계획서", "stdNcsSCurPrt04", voOzFormParam, voParam);
					}
				}
				
				/**
				 * @desc [rdBtnEvalBtn]평가계획서 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 6. 29
				 */
				moPage.onClick_RdBtnEvalBtn = function() {
					var vsSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SCH_YEAR_RCD");
					var vsSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SMT_RCD");
					var vsSaCd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SA_CD");
					var vsRefKey = util.Grid.getCellValue(app, "grdCcrTlsnReq", "CUR_REF_KEY");
					var vsCuCd = util.Grid.getCellValue(app, "grdCcrTlsnReq", "CU_CD");
					var vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "END_DT");
					
					var vsEvalBtn = util.Grid.getCellValue(app, "grdCcrTlsnReq", "EVAL_BTN");
					
					if(ValueUtil.isNull(vsEvalBtn)){
						// "작성된 평가계획서가 없습니다." 메시지
						util.Msg.alert("NLS-CCR-EXT004");
						return false;
					}else {
						
						// 평가계획서 출력
						var voParam = {
								p_strLanDivRcd 			: msDefaultLocale	 			// 언어키
							  ,	p_strKeyDate 			: vsKeyDate	  					// 기준일
							  ,	p_strSchYearRcd		: vsSchYearRcd  				// 학년도
							  ,	p_strSmtRcd 				: vsSmtRcd  						// 학기
							  ,	p_strSaCd	 				: vsSaCd  							// 부서코드
							  ,	p_strRefKey 				: vsRefKey							// 교과목참조키
							  , p_strCuCd					: vsCuCd							// 교과그룹코드
							  ,	p_strCheckAuthId 		: moUserInfo.id					// 사용자ID
						};
						
						var voOzFormParam = {
								  TITLE 		 : "평가계획서" 		//리포트타이틀
								, SUB_TITLE   : "" 		//리포트서브타이틀		
								, FORM_TYPE : "flash"
						};	
								
						ReportUtil.fOzPopupOpen("평가계획서", "stdNcsSCurPrt03", voOzFormParam, voParam);
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCcrTlsnReq");
			dataSet_3.parseData({
				"columns": [
					{"name": "PROF_NM"},
					{"name": "SB_CD_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SB_LVL_RCD_NM"},
					{"name": "TLSN_REQ_COUNT"},
					{"name": "PNT"},
					{"name": "SB_CD"},
					{"name": "LECT_TIME_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "SMT_RCD"},
					{"name": "DAY_NIGHT_DIV_RCD_NM"},
					{"name": "DCL_RCD_NM"},
					{"name": "TLSN_TGT"},
					{"name": "PLAN_BTN"},
					{"name": "SA_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "REF_KEY"},
					{"name": "SCH_YEAR_RCD_NM"},
					{"name": "SMT_RCD_NM"},
					{"name": "GRD_RCD_NM"},
					{"name": "CU_CD"},
					{"name": "EVAL_BTN"},
					{"name": "CUR_REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strSchDiv",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccr/ExtCcrOpenSubStud/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccr/ExtCcrOpenSubStud/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "100px",
					"width": "110px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "220px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "315px",
					"width": "110px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optStId");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_3, {
					"top": "5px",
					"left": "435px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optStId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "530px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudId");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudIdClick == "function") {
					button_2.addEventListener("click", onBtnStudIdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "630px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSchDiv");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "660px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSchDiv");
				comboBox_3.enabled = false;
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSchDiv.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchDiv");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("금학기강좌", "CCR"));
					comboBox_3.addItem(new cpr.controls.Item("이수교과목", "CGD"));
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
				})(comboBox_3);
				if(typeof onCbbSchDivSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbSchDivSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "755px",
					"width": "110px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tabCcr";
					var group_3 = new cpr.controls.Container("grpCcr");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_3.setLayout(formLayout_1);
					(function(container){
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("UI-SCR-OPENSUBLIST");
						container.addChild(userDefinedControl_2, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcrTlsnReq");
						grid_1.init({
							"dataSet": app.lookup("dsCcrTlsnReq"),
							"columns": [
								{"width": "40px"},
								{"width": "70px"},
								{"width": "140px"},
								{"width": "45px"},
								{"width": "50px"},
								{"width": "70px"},
								{"width": "45px"},
								{"width": "80px"},
								{"width": "110px"},
								{"width": "84px"},
								{"width": "70px"},
								{"width": "55px"},
								{"width": "115px"},
								{"width": "70px"},
								{"width": "77px"},
								{"width": "77px"},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "95px",
									"visible": false
								},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "85px",
									"visible": false
								},
								{
									"width": "85px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-DIVCLS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SHYR");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PNT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-CHARGPROF");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CLASSTIME_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CLASSROOM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LIMITCAPA");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-DAN-DIV-RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-DCL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PERMIT_LIMIT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LECTSCHE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LECTSCHE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SMT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SB_CD";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SB_CD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "DIVCLS_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "SB_LVL_RCD_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "CMP_DIV_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "PNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PROF_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "LECT_TIME_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "LECT_ROOM_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "TLSN_REQ_COUNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "DAY_NIGHT_DIV_RCD_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "DCL_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "TLSN_TGT";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "PLAN_BTN";
											cell.control = (function(){
												var button_3 = new cpr.controls.Button("gdBtnPlanBtn");
												button_3.bind("value").toDataColumn("PLAN_BTN");
												return button_3;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "EVAL_BTN";
											cell.control = (function(){
												var button_4 = new cpr.controls.Button("gdBtnEvalBtn");
												button_4.bind("value").toDataColumn("EVAL_BTN");
												return button_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "SCH_YEAR_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.columnName = "SMT_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "SA_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "CU_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "CUR_REF_KEY";
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "552px"
						});
					})(group_3);
					tabItem_1.content = group_3;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tabCgd";
					var group_4 = new cpr.controls.Container("grpCgd");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-OPENSUBLIST");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCcrTlsnReq1");
						grid_2.init({
							"dataSet": app.lookup("dsCcrTlsnReq"),
							"columns": [
								{"width": "40px"},
								{"width": "76px"},
								{"width": "76px"},
								{"width": "76px"},
								{"width": "218px"},
								{"width": "65px"},
								{"width": "50px"},
								{"width": "65px"},
								{"width": "82px"},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "95px",
									"visible": false
								},
								{
									"width": "65px",
									"visible": false
								},
								{
									"width": "50px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PNT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LECTSCHE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SMT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-DIVCLS");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SCH_YEAR_RCD_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SMT_RCD_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "SB_CD";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "SB_CD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "CMP_DIV_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "PNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "GRD_RCD_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "PLAN_BTN";
											cell.control = (function(){
												var button_5 = new cpr.controls.Button("gdBtnPlanBtn1");
												button_5.bind("value").toDataColumn("PLAN_BTN");
												return button_5;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "SCH_YEAR_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "SMT_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "SA_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "DIVCLS_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "552px"
						});
					})(group_4);
					tabItem_2.content = group_4;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "5px",
					"left": "5px",
					"width": "1213px",
					"height": "588px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
		}
	});
	app.title = "수강과목조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
