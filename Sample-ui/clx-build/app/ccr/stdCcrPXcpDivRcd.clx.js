/*
 * App URI: app/ccr/stdCcrPXcpDivRcd
 * Source Location: app/ccr/stdCcrPXcpDivRcd.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccr/stdCcrPXcpDivRcd", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcrPXcpDivRcd.xtm"/>
			
			/**
			 * 취소사유
			 * @class stdCcrPXcpDivRcd
			 * @author 박갑수 at 2016. 4. 21
			 */
			var stdCcrPXcpDivRcd = function() {
				var moPage = new Page();
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 21
				 */
				moPage.onModelConstructDone_StdCcrPXcpDivRcd = function() {
					if(ExtPopUp.isPopUp()){
			
						//strCommand: xcpDivRcdList 
						util.Submit.send(app, "subXcpDivRcdList", function(pbSuccess){
							if(pbSuccess){
								util.Control.redraw(app, "cbbXcpDivRcd");
							}
						});
					}
				};
			
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 21
				 */
				moPage.onClick_BtnCloseCancel = function() {
					ExtPopUp.closeLayeredPopup("callbackXcpDivRcdPopupCancel");
					// 팝업 닫기
					app.close();
				};
			
				/**
				 * @desc [btnSearch]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 21
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 선택닫기 함수
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 21
				 */
				function doCloseOk() {
					var vsXcpDivRcd = util.Control.getValue(app, "cbbXcpDivRcd");
					if(ValueUtil.isNull(vsXcpDivRcd)){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					ExtPopUp.closeLayeredPopup("callbackXcpDivRcdPopup", vsXcpDivRcd);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsXcpDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strXcpDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subXcpDivRcdList");
			submission_1.action = "/ccr/StdCcrTlsnReq/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.style.setClasses(["btn-commit"]);
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "70px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseOk");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_2.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_2, {
				"top": "70px",
				"left": "205px",
				"width": "60px",
				"height": "25px"
			});
			
			var output_1 = new cpr.controls.Output("optXcpDivRcd");
			output_1.value = "";
			output_1.style.setClasses(["require"]);
			output_1.bind("value").toLanguage("NLS-DLG-LBL-L001");
			container.addChild(output_1, {
				"top": "5px",
				"left": "5px",
				"width": "75px",
				"height": "25px"
			});
			
			var comboBox_1 = new cpr.controls.ComboBox("cbbXcpDivRcd");
			comboBox_1.userAttr({"require": "Y"});
			comboBox_1.bind("fieldLabel").toExpression("#optXcpDivRcd.value");
			comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strXcpDivRcd");
			(function(comboBox_1){
				comboBox_1.addItem(new cpr.controls.Item("선택", ""));
				comboBox_1.setItemSet(app.lookup("dsXcpDivRcdList"), {
					"label": "CD_NM",
					"value": "CD"
				});
			})(comboBox_1);
			container.addChild(comboBox_1, {
				"top": "5px",
				"left": "85px",
				"width": "180px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "삭제사유";
	cpr.core.Platform.INSTANCE.register(app);
})();
