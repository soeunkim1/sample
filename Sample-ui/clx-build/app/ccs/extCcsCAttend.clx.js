/*
 * App URI: app/ccs/extCcsCAttend
 * Source Location: app/ccs/extCcsCAttend.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsCAttend", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsCAttend.xtm"/>
			
			/**
			 * 출결관리
			 * @class extCcsCAttend
			 * @author 박갑수 at 2016. 5. 2
			 */
			var extCcsCAttend = function() {
				var moPage = new Page();
				
				var moPObject = new PObject();
				
				// 교직원검색팝업 호출
				moPObject.moIdsForStdCmnPPrsnSearch = [
				{ 
					 controlId					: "btnProfNm",
					 istrStaffGrpAuth			: "",					
					 istrWkdtyAuth			: "true",
					 iKeyDate					: "/root/keyDateMap/END_DT",
					 iStaffNo					: "ipbProfNm",				
					 iStaffGrpRcd				: "",	
					 iStaffGrpRcdLock		: "", 				
					 iStaffSubGrpRcd		: "",				
					 iStaffSubGrpRcdLock	: "",		
					 iStatusRcd				: "",		
					 iRepNm					: "",		
					 iObjDivRcd				: "",			
					 iObjCd						: "",			
					 iObjNm					: "",		
					 istrObjCdInList			: "",		
					 iWkgrdRcd				: "",			
					  
					 oObjNo					: "/root/reqKey/strProfObjNo",		
					 oStaffNo					: "",				
					 oRepNm					: "ipbProfNm",			
					 oBirthday					: "",			
					 oStatNm					: "",		
					 oStatRcd					: "",			
					 oOgNm					: "",			
					 oOgCd						: "",				
					 oPosNm					: "",				
					 oPosCd					: "",				
					 oWkgrdNm				: "",			
					 oWkgrdRcd				: "",			
					 oStaffGrpRcd				: "",				
					 oStaffSubGrpRcd		: "",			
					 oHoRcd					: "",				
					 oSsn						: "",					
					 oWkdtyRcd				: "",				
					 oWkdtyNm				: "",	
					 func                         : function(poParam){
						// 담당교과목목록 조회
						doChargeSbList();
					}
				}];
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{
					 controlId					: "btnSbNm",			
					 iDivClsYn					: "Y",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "",			
					 iSaNm        				: "",		
					 iSaObjDivRcd       		: "",		
					 iSbCd        				: "",			
					 iSbNm        				: "ipbSbNm",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "",			
					 oSbNm					: "ipbSbNm",			
					 oSaCd						: "",			
					 oSaNm					: "",			
					 oCuCd						: "",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "",	
					 oCmpDivRcd				: "",		
					 oPnt							: "/root/reqKey/strPnt",		
					 oTheoTc					: "/root/reqKey/strTheoTc",	
					 oEpacTc					: "/root/reqKey/strEpacTc",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "/root/reqKey/strRefKey",
					 oSbLvlRcd				: "",
					 oLectTimeCnt			: "/root/reqKey/strLectTimeCnt",
					 func : function(poParam) {
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsRefKey = util.DataMap.getValue(app, "dmReqKey", "strRefKey");
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsRefKey)){
							util.Header.clickSearch(app);
						}
					 }
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onModelConstructDone_ExtCcsCAttend = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsTimeDay", "rptExtCcsAttend"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData", "grpDataDtl"]);
					
					// 권한에따른 교수명 컬럼 검색가능 여부
					doVisibleCtlByAuth();
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbPrtOrd"]);
							
							// 라디오버튼 교수명으로 default값 세팅
							util.Control.setValue(app, "rdbProfOrSb", "PROF");
							
							// 출력순서 학번으로 default값 세팅
							util.SelectCtl.selectItem(app, "cbbPrtOrd", 0);
							
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							// 개인권한[CC00104]일경우 담당교과목 조회
							if(moPageInfo.authRngRcd == "CC00104"){
								// 담당교과목목록 조회
								doChargeSbList();
							}
						}
					}, true);
				};
				
				/**
				 * 권한에 따른 교수명 활성/비활성 처리
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 5. 2
				 */	
				function doVisibleCtlByAuth() {
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Control.setVisible(app, false, ["btnProfNm", "lblSbNm", "ipbSbNm", "btnSbNm"]);
						util.Control.setEnable(app, false, ["rdbProfOrSb", "cbbSchYearRcd", "ipbProfNm"]);
									
						util.Control.setValue(app, "ipbProfNm", moUserInfo.userNm);
						util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", moUserInfo.id);
						util.Control.setStyleAttr(app, "ipbProfNm", "width", "120");
					}
				};
				
				/**
				 * @desc 담당교과목목록 조회
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doChargeSbList() {
					//strCommand: chargeSbList 
					util.Submit.send(app, "subChargeSbList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbSbCd");
							util.SelectCtl.selectItem(app, "cbbSbCd", 0);
						}
					});
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
							
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
							
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doChangeYearSmt(psDiv) {
					
					//--전체 권한이 아닐경우.
					if (moPageInfo.authRngRcd != "CC00102") {
						
						/*
							수업의 학년도 학기 설정에서
							1학기이면 1학기, 여름학기만 선택 할 수 있고,
							2학기이면 2학기, 동계학기만 선택 할 수 있다.
						*/
						var vsSmtRcdOrg 	= util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcdOrg");
						var vsSmtRcd		= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
						if('CA00390' == vsSmtRcdOrg||'CA00391' == vsSmtRcdOrg){			
							if('CA00390' != vsSmtRcd && 'CA00391' != vsSmtRcd){
								var vsSmtNm1 = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM", "child::CD = 'CA00390'");
								var vsSmtNm2 = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM", "child::CD = 'CA00391'");
								//alert("(1학기, 하계계절)만 선택 할 수 있습니다.");
								util.Msg.alert("NLS-CCS-M089", [vsSmtNm1, vsSmtNm2]);
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
								return false;
							}			
						}else if('CA00392' == vsSmtRcdOrg||'CA00393' == vsSmtRcdOrg){			
							if('CA00392' != vsSmtRcd && 'CA00393' != vsSmtRcd){
								var vsSmtNm1 = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM", "child::CD = 'CA00392'");
								var vsSmtNm2 = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM", "child::CD = 'CA00393'");
								//alert("(2학기, 동계계절)만 선택 할 수 있습니다.");
								util.Msg.alert("NLS-CCS-M089", [vsSmtNm1, vsSmtNm2]);
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
								return false;
							}			
						}else{
							//--시스템 내부 장애가 발생하였습니다.\n 정보전산원에 문의 하시기 바랍니다.
							util.Msg.alert("NLS-ERR-SRV");
						}
					}
					
					
					
					
					
					
					
					
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["dipKeyDate"]);
							
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							// 조회조건(교수명, 개설과목 담당교과목)항목초기화
							doClearSchCtl();
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
					
					return true;
				};
				
				/**
				 * @desc 조회조건(교수명, 개설과목 담당교과목)항목초기화
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doClearSchCtl() {
					if (moPageInfo.authRngRcd == "CC00104") {
						// 담당교과목목록 조회
						doChargeSbList();
					}else{
						// 교수명
						util.Control.setValue(app, "ipbProfNm", "");
						util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", "");
						// 개설과목
						util.Control.setValue(app, "ipbSbNm", "");
						util.DataMap.setValue(app, "dmReqKey", "strRefKey");
						// 담당교과목
						util.Control.setValue(app, "cbbSbCd", "");
						ExtSelectCtl.deleteAllItem("cbbSbCd");
					}
					
				};
				
				/**
				 * @desc [btnProfNm]교수명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onClick_BtnProfNm = function(sender) {
					// 교직원검색팝업 호출
					doOnClickStdCmnPPrsnSearch(sender);
				};
				
				
				/**
				 * @desc [ipbProfNm]교수명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onValueChanged_IpbProfNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdExtCcsAttend"])){
						return false;
					}
					
					if(moPageInfo.authRngRcd == "CC00104"){
						return false;
					}
					
					// 값변경시 교직원검색팝업 호출
					doOnChangeStdCmnPPrsnSearch(sender);
				};
				
				/**
				 * @desc [btnSbNm]개설과목(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onClick_BtnSbNm = function(sender) {
					// 개설과목검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [ipbSbNm]개설과목 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onValueChanged_IpbSbNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdExtCcsAttend"])){
						return false;
					}
					
					if(moPageInfo.authRngRcd == "CC00104"){
						return false;
					}
					
					// 값변경시 교직원검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [rdbProfOrSb]교수or교과목 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onValueChanged_RdbProfOrSb = function() {
					var vsProfOrSb = util.Control.getValue(app, "rdbProfOrSb");
			
					// 교과목일경우
					if(ValueUtil.fixNull(vsProfOrSb) == "SB"){
						util.Control.setVisible(app, true, ["lblSbNm", "ipbSbNm", "btnSbNm"]);
						util.Control.setVisible(app, false, ["lblProfNm", "ipbProfNm", "btnProfNm", "lblSbCd", "cbbSbCd"]);
						
						util.Control.setStyleAttr(app, "lblPrtOrd", "left", "685");
						util.Control.setStyleAttr(app, "cbbPrtOrd", "left", "760");
					// 교수일경우
					}else {
						util.Control.setVisible(app, false, ["lblSbNm", "ipbSbNm", "btnSbNm"]);
						util.Control.setVisible(app, true, ["lblProfNm", "ipbProfNm", "btnProfNm", "lblSbCd", "cbbSbCd"]);
						
						util.Control.setStyleAttr(app, "lblPrtOrd", "left", "995");
						util.Control.setStyleAttr(app, "cbbPrtOrd", "left", "1070");
					}
					
					// 조회조건(교수명, 개설과목 담당교과목)항목초기화
					doClearSchCtl();
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 교수명or교과목
					var vsProfOrSb = util.Control.getValue(app, "rdbProfOrSb");
					
					// 교과목일경우
					if(ValueUtil.fixNull(vsProfOrSb) == "SB"){
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSbNm"])){
							return false;
						}
									
					// 교수일경우
					}else {
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbProfNm", "cbbSbCd"])){
							return false;
						}
					}
					
					// 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					}, true);
				};
				
				/**
				 * @desc 수업일 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doList(poCallBackFunc, pbBtnSearch) {
					// 디테일 리피트 변경시 변경내역 체크 방지
					util.Control.redraw(app, "grdExtCcsAttend");
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							// 출결석점수 여부에따른 디테일활성화여부
							var vsAttendInputCnt = util.DataMap.getValue(app, "dmResList", "strAttendInputCnt");
							if(0 < Number(vsAttendInputCnt)){
								util.Control.setVisible(app, true, ["lblComment"]);
								util.Control.setEnable(app, false, ["btnSave"]);
								util.Control.setReadOnly(app, true, ["rptExtCcsAttend"]);
							}else {
								util.Control.setVisible(app, false, ["lblComment"]);
								util.Control.setEnable(app, true, ["btnSave"]);
								util.Control.setReadOnly(app, false, ["rptExtCcsAttend"]);
							}
							
							// 담당교과목 or 개설과목에따른 학점, 이론+실습, 강의시수 세팅
							doSetOptValue();
							
							var vsPkValue = util.DataMap.getValue(app, "dmResList", "strPkValue");
							
							if(!ValueUtil.isNull(vsPkValue) && pbBtnSearch){
								ExtRepeat.setPkValues("rptCcsTimeDay", vsPkValue);
								util.Control.redraw(app, "grdCcsTimeDay");
							}else {
								util.Control.redraw(app, "grdCcsTimeDay");
							}
											
							// 마스터에 데이터가 없을 경우 디테일 입력 불가
							if(util.Grid.getRowCount(app, "grdCcsTimeDay") < 1){
								util.Control.setEnable(app, false,["grpDataDtl"]);
								util.Control.reset(app, "rptExtCcsAttend");
							}else{
								// 각 컨트롤 활성화 제어
								doDtlRptStatus();
							}
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 디테일 데이터의 변경내역이 존재여부에 따른 마스터 활성/비활성
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doDtlRptStatus(){
					if(util.Grid.isModified(app, "grdExtCcsAttend")){
						util.Control.setEnable(app, false, ["grpData"]);
					}else{
						util.Control.setEnable(app, true, ["grpData"]);
					}
				};
				
				/**
				 * @desc 출석부 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doSetOptValue() {
					var vsRefKey = util.Control.getValue(app, "cbbSbCd");
					// 담당교과목 값이 없을경우 개설과목의 리턴값
					if(ValueUtil.isNull(vsRefKey)){
						
						// 학점
						var vsPnt = util.DataMap.getValue(app, "dmReqKey", "strPnt");
						if(ValueUtil.isNull(vsPnt)){
							vsPnt = "0";
						}
						
						// 이론
						var vsTheoTc = util.DataMap.getValue(app, "dmReqKey", "strTheoTc");
						if(ValueUtil.isNull(vsTheoTc)){
							vsTheoTc = "0";
						}
						
						// 실숩
						var vsEpacTc = util.DataMap.getValue(app, "dmReqKey", "strEpacTc");
						if(ValueUtil.isNull(vsEpacTc)){
							vsEpacTc = "0";
						}
						
						// 이론+실습
						var vnTheoTcEpacTc = Number(vsTheoTc) + Number(vsEpacTc);
						
						// 강의시수
						var vsLectTimeCnt = util.DataMap.getValue(app, "dmReqKey", "strLectTimeCnt");
						if(ValueUtil.isNull(vsLectTimeCnt)){
							vsLectTimeCnt = "0";
						}
						
						util.Control.setValue(app, "optPnt", vsPnt);
						util.Control.setValue(app, "optTheoTcEpacTc", vnTheoTcEpacTc);
						// ExtControl.setValue("optLectTimeCnt", vsLectTimeCnt);
						
					// 담당교과목 값이 있을경우 담당과목의 값 세팅
					}else {
						
						// 학점
						var vsPnt = ExtInstance.getValue("/root/resList/chargeSbList/row", "PNT" , "child::REF_KEY='"+vsRefKey+"'");
						if(ValueUtil.isNull(vsPnt)){
							vsPnt = "0";
						}
						
						// 이론
						var vsTheoTc = ExtInstance.getValue("/root/resList/chargeSbList/row", "THEO_TC" , "child::REF_KEY='"+vsRefKey+"'");
						if(ValueUtil.isNull(vsTheoTc)){
							vsTheoTc = "0";
						}
						
						// 실숩
						var vsEpacTc = ExtInstance.getValue("/root/resList/chargeSbList/row", "EPAC_TC" , "child::REF_KEY='"+vsRefKey+"'");
						if(ValueUtil.isNull(vsEpacTc)){
							vsEpacTc = "0";
						}
						
						// 이론+실습
						var vnTheoTcEpacTc = Number(vsTheoTc) + Number(vsEpacTc);
						
						// 강의시수
						var vsLectTimeCnt = ExtInstance.getValue("/root/resList/chargeSbList/row", "LECT_TIME_CNT" , "child::REF_KEY='"+vsRefKey+"'");
						if(ValueUtil.isNull(vsLectTimeCnt)){
							vsLectTimeCnt = "0";
						}
						
						util.Control.setValue(app, "optPnt", vsPnt);
						
						
					
					
						util.Control.setValue(app, "optTheoTcEpacTc", vnTheoTcEpacTc);
						// ExtControl.setValue("optLectTimeCnt", vsLectTimeCnt);
					}
				};
				
				/**
				 * @desc [rptCcsTimeDay]수업일 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				moPage.onRowSelect_RptCcsTimeDay = function() {		
					// 출석부 조회
					doListDtl();
					
					
				};
				
				/**
				 * @desc 출석부조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doListDtl(pnIdx, poCallBackFunc) {
					
					if(ValueUtil.isNull(pnIdx)){
						util.DataMap.setValue(app, "dmReqSelRow", "strLectDt", util.Grid.getCellValue(app, "grdCcsTimeDay", "LECT_DT"));
						util.DataMap.setValue(app, "dmReqSelRow", "strSklcDt", util.Grid.getCellValue(app, "grdCcsTimeDay", "SKLC_DT"));
						
						util.DataMap.setValue(app, "dmReqSelRow", "strRefKey", util.Grid.getCellValue(app, "grdCcsTimeDay", "REF_KEY"));
						util.DataMap.setValue(app, "dmReqSelRow", "strSkplcDivRcd", util.Grid.getCellValue(app, "grdCcsTimeDay", "SKPLC_DIV_RCD"));
					}else {
						util.DataMap.setValue(app, "dmReqSelRow", "strLectDt", util.Grid.getCellValue(app, "grdCcsTimeDay", "LECT_DT", pnIdx));
						util.DataMap.setValue(app, "dmReqSelRow", "strSklcDt", util.Grid.getCellValue(app, "grdCcsTimeDay", "SKLC_DT", pnIdx));
						util.DataMap.setValue(app, "dmReqSelRow", "strRefKey", util.Grid.getCellValue(app, "grdCcsTimeDay", "REF_KEY", pnIdx));
						util.DataMap.setValue(app, "dmReqSelRow", "strSkplcDivRcd", util.Grid.getCellValue(app, "grdCcsTimeDay", "SKPLC_DIV_RCD", pnIdx));
					}
					
					//strCommand: listAttend 
					util.Submit.send(app, "subListDtl", function(pbSuccess){
						if(pbSuccess){
			
							util.Control.redraw(app, "grdExtCcsAttend");
							
							var vsSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							//if(vsSmtRcd == 'CA00391' || vsSmtRcd == 'CA00393'){
								var vnTheoTcEpacTc = util.DataMap.getValue(app, "dmResList", "strLectTimeCnt");
								util.Control.setValue(app, "optTheoTcEpacTc", vnTheoTcEpacTc);
							//}
							
										
							// 바인드 리플래시
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//				ExtControl.refreshBind(["bindAttendStudId1", "bindAttendStudId2", "bindAttendStudId3", "bindAttendStudId4", "bindAttendStudId5"]);
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				
				
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_BtnSave = function() {
					var vnIdx = util.Grid.getIndex(app, "grdCcsTimeDay");
					var vsCloseYn = util.Grid.getCellValue(app, "grdCcsTimeDay", "CLOSE_YN", vnIdx);
					var vsLectDt = util.Grid.getCellValue(app, "grdCcsTimeDay", "LECT_DT_SHOW", vnIdx);
					var vsMsg = "";
					if(ValueUtil.fixNull(vsCloseYn) == "Y"){
					// (@)일자 출석체크 마감을 취소 하시겠습니까?
						vsMsg = "("+vsLectDt+")"+NLS.CCS.EXT001;
					}else {
					// (@)일자 출석체크 완료 하시겠습니까?
						vsMsg = "("+vsLectDt+")"+NLS.CCS.EXT002;
					}
					
					// @ 하시겠습니까?
					if(util.Msg.confirm("NLS-CRM-M010", [vsMsg])   ){
						util.Grid.setRowStateAll(app, "grdExtCcsAttend", cpr.data.tabledata.RowState.UPDATED);
						
						util.DataMap.setValue(app, "dmReqSelRow", "strCloseYn", vsCloseYn);
					}else {
						// 서버에서 기존 마감여부와 반대로 처리함..  작업저장만 하기 위해서
						util.DataMap.setValue(app, "dmReqSelRow", "strCloseYn", "Y");
					}
					
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc 출석부 목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				function doSave() {
					// 변경사항 체크
					if(!util.Grid.isModified(app, "grdExtCcsAttend")){
						return false;
					}
					
					var vsPkValue = "LECT_DT_SHOW:" + util.Grid.getCellValue(app, "grdCcsTimeDay", "LECT_DT_SHOW");
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							ExtControl.getControl("rptCcsTimeDay").pk_values =  vsPkValue;
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
			
								// 디테일 리피트 상태에 따른 마스터 활성화 제어
								doDtlRptStatus();
							});
						}
					});
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt1]결석시수1 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				 moPage.onValueChanged_IpbFrfLectTimeCnt1 = function() {
					// 결석시수 체크
					doChkAbnTimeCnt("ABN_TIME_CNT_1", "ipbFrfLectTimeCnt1");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt2]결석시수2 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onValueChanged_IpbFrfLectTimeCnt2 = function() {
					// 결석시수 체크
					doChkAbnTimeCnt("ABN_TIME_CNT_2", "ipbFrfLectTimeCnt2");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt3]결석시수3 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onValueChanged_IpbFrfLectTimeCnt3 = function() {
					// 결석시수 체크
					doChkAbnTimeCnt("ABN_TIME_CNT_3", "ipbFrfLectTimeCnt3");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt4]결석시수4 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onValueChanged_IpbFrfLectTimeCnt4 = function() {
					// 결석시수 체크
					doChkAbnTimeCnt("ABN_TIME_CNT_4", "ipbFrfLectTimeCnt4");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt5]결석시수5 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onValueChanged_IpbFrfLectTimeCnt5 = function() {
					// 결석시수 체크
					doChkAbnTimeCnt("ABN_TIME_CNT_5", "ipbFrfLectTimeCnt5");
				};
				
				/**
				 * @desc 결석시수 체크
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				function doChkAbnTimeCnt(psColNm, psCtlId) {
					var vnIdx = util.Grid.getIndex(app, "grdExtCcsAttend");
					
					var vsSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
					// 이론+실습 시수
					var vsTheoTcEpacTc = util.Control.getValue(app, "optTheoTcEpacTc");
					
					
					//if(vsSmtRcd == 'CA00391' || vsSmtRcd == 'CA00393'){
						vsTheoTcEpacTc = ValueUtil.fixNumber(util.DataMap.getValue(app, "dmResList", "strLectTimeCnt"));
					//}
					
					
					
					// 결석시수
					var vsAbnTimeCnt = util.Grid.getCellValue(app, "grdExtCcsAttend", psColNm,vnIdx);
					if(!ValueUtil.isNull(vsAbnTimeCnt)){
						
						// 이론+실습 시수보다 결석시수가 큰경우
						if(Number(vsTheoTcEpacTc) < Number(vsAbnTimeCnt)){
							// 현 강좌는 @ 시수 입니다. 결석시수를 확인하세요.
							util.Msg.alert("NLS-CCS-EXT003", [vsTheoTcEpacTc]);
							
							util.Grid.setCellValue(app, "grdExtCcsAttend", psColNm, "", vnIdx);
							ExtRepeat.setColFocus("rptExtCcsAttend", vnIdx, psCtlId);
						}
					}
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt1]결석시수1 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onSetFocus_IpbFrfLectTimeCnt1 = function() {
					doChkLimitDt("RSN_1", "txtRsn1");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt2]결석시수2 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onSetFocus_IpbFrfLectTimeCnt2 = function() {
					doChkLimitDt("RSN_2", "txtRsn2");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt3]결석시수3 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onSetFocus_IpbFrfLectTimeCnt3 = function() {
					doChkLimitDt("RSN_3", "txtRsn3");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt4]결석시수4 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onSetFocus_IpbFrfLectTimeCnt4 = function() {
					doChkLimitDt("RSN_4", "txtRsn4");
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt5]결석시수5 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onSetFocus_IpbFrfLectTimeCnt5 = function() {
					doChkLimitDt("RSN_5", "txtRsn5");
				};
				
				/**
				 * @desc 출결입력기간제어 일자
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				function doChkLimitDt(psColNm, psCtlId) {
					
					var vnIdx = util.Grid.getIndex(app, "grdExtCcsAttend");
					
					var vsLimitDt = util.DataMap.getValue(app, "dmLimitDt", "LIMIT_DT");
					// 제한일자
					if(!ValueUtil.isNull(vsLimitDt)){
						// 사유
						var vsRsn = util.Grid.getCellValue(app, "grdExtCcsAttend", psColNm, vnIdx);
						var vsLectDt = util.DataMap.getValue(app, "dmReqSelRow", "strLectDt").substr(0,8);
						
						if(ValueUtil.isNull(vsRsn) && Number(vsLimitDt) > Number(vsLectDt)){
							// "입력기간이지난 출석부는 사유를 먼저 입력하시기 바랍니다." 메시지 출력
							util.Msg.alert("NLS-CCS-EXT004");
							ExtRepeat.setColFocus("rptExtCcsAttend", vnIdx, psCtlId);
						}
					}
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt1]결석시수1 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_IpbFrfLectTimeCnt1 = function() {
					// 학번
					var vsStudId = util.Grid.getCellValue(app, "grdExtCcsAttend", "STUD_ID_1");
					
					// 경고메시지 조건 체크
					doChkAltMsg(vsStudId);
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt2]결석시수2 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_IpbFrfLectTimeCnt2 = function() {
					// 학번
					var vsStudId = util.Grid.getCellValue(app, "grdExtCcsAttend", "STUD_ID_2");
					
					// 경고메시지 조건 체크
					doChkAltMsg(vsStudId);
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt3]결석시수3 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_IpbFrfLectTimeCnt3 = function() {
					// 학번
					var vsStudId = util.Grid.getCellValue(app, "grdExtCcsAttend", "STUD_ID_3");
					
					// 경고메시지 조건 체크
					doChkAltMsg(vsStudId);
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt4]결석시수4 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_IpbFrfLectTimeCnt4 = function() {
					// 학번
					var vsStudId = util.Grid.getCellValue(app, "grdExtCcsAttend", "STUD_ID_4");
					
					// 경고메시지 조건 체크
					doChkAltMsg(vsStudId);
				};
				
				/**
				 * @desc [ipbFrfLectTimeCnt5]결석시수5 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				moPage.onClick_IpbFrfLectTimeCnt5 = function() {
					// 학번
					var vsStudId = util.Grid.getCellValue(app, "grdExtCcsAttend", "STUD_ID_5");
					 
					// 경고메시지 조건 체크
					doChkAltMsg(vsStudId);
				};
				
				/**
				 * @desc 경고메시지 조건 체크
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 4
				 */
				function doChkAltMsg(psStudId){
					// 1. STUD_ID가 있을경우
					if(!ValueUtil.isNull(psStudId)){
						// 2. 출결평가가 입력되있지 않을경우
						var vsAttendInputCnt = util.DataMap.getValue(app, "dmResList", "strAttendInputCnt");
						
						if(0 == Number(vsAttendInputCnt)){
							// 3.마감여부가 Y인경우
							var vsCloseYn =  util.Grid.getCellValue(app, "grdCcsTimeDay", "CLOSE_YN");
							if(ValueUtil.fixNull(vsCloseYn) == "Y"){
								
								// 마감이 되어 입력 할 수 없습니다.
								util.Msg.alert("NLS-CCS-EXT013");
							}
						}
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsLimitInputDtList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCcsTimeDay");
			dataSet_4.parseData({
				"info": "CCS_TIME_DAY@LECT_DT_SHOW",
				"columns": [
					{"name": "LECT_DT_SHOW"},
					{"name": "CLOSE_YN"},
					{"name": "REF_KEY"},
					{"name": "LECT_DT"},
					{"name": "INPUT_YN"},
					{"name": "ICON"},
					{"name": "SKPLC_DIV_RCD"},
					{"name": "SKLC_DT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsExtCcsAttend");
			dataSet_5.parseData({
				"columns": [
					{"name": "ABN_TIME_CNT_2"},
					{"name": "RSN_2"},
					{"name": "PHOTO_FILE_PATH_2"},
					{"name": "REP_NM_2"},
					{"name": "STUD_ID_3"},
					{"name": "ABN_TIME_CNT_3"},
					{"name": "RSN_3"},
					{"name": "PHOTO_FILE_PATH_3"},
					{"name": "REP_NM_3"},
					{"name": "STUD_ID_2"},
					{"name": "STUD_ID_4"},
					{"name": "ABN_TIME_CNT_4"},
					{"name": "RSN_4"},
					{"name": "PHOTO_FILE_PATH_4"},
					{"name": "REP_NM_4"},
					{"name": "STUD_ID_5"},
					{"name": "ABN_TIME_CNT_5"},
					{"name": "RSN_5"},
					{"name": "PHOTO_FILE_PATH_5"},
					{"name": "REP_NM_5"},
					{"name": "STUD_ID_1"},
					{"name": "ABN_TIME_CNT_1"},
					{"name": "RSN_1"},
					{"name": "PHOTO_FILE_PATH_1"},
					{"name": "REP_NM_1"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsChargeSbList");
			dataSet_6.parseData({
				"columns": [
					{"name": "SB_DIVCLS_CD_NM"},
					{"name": "REF_KEY"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "LECT_TIME_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcdOrg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmLimitDt");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "NOW_DT",
						"dataType": "string"
					},
					{
						"name": "LIMIT_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strProfOrSb",
						"dataType": "string"
					},
					{
						"name": "strProfNm",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSbRefKey",
						"dataType": "string"
					},
					{
						"name": "strTheoTc",
						"dataType": "string"
					},
					{
						"name": "strPnt",
						"dataType": "string"
					},
					{
						"name": "strEpacTc",
						"dataType": "string"
					},
					{
						"name": "strLectTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strPrtOrd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strAttendInputCnt",
						"dataType": "string"
					},
					{
						"name": "strPkValue",
						"dataType": "string"
					},
					{
						"name": "strLectTimeCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strLectDt",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strPnt",
						"dataType": "string"
					},
					{
						"name": "strTheoTcEpacTc",
						"dataType": "string"
					},
					{
						"name": "strLectTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strCloseYn",
						"dataType": "string"
					},
					{
						"name": "strSkplcDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSklcDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsAttend/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_5, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsAttend/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_5);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/ccs/ExtCcsAttend/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_5);
			submission_3.addRequestData(dataMap_6);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_5);
			submission_4.addResponseData(dataMap_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subChargeSbList");
			submission_5.action = "/ccs/ExtCcsAttend/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_3);
			submission_5.addRequestData(dataMap_5);
			submission_5.addResponseData(dataSet_6, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListDtl");
			submission_6.action = "/ccs/ExtCcsAttend/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_5);
			submission_6.addRequestData(dataMap_6);
			submission_6.addRequestData(dataMap_3);
			submission_6.addResponseData(dataSet_5, false);
			submission_6.addResponseData(dataMap_4, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnProfNm");
				button_1.value = "";
				button_1.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnProfNmClick == "function") {
					button_1.addEventListener("click", onBtnProfNmClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "655px",
					"width": "20px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSbNm");
				button_2.visible = false;
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbNmClick == "function") {
					button_2.addEventListener("click", onBtnSbNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "654px",
					"width": "20px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "80px",
					"width": "85px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "175px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "250px",
					"width": "85px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSbCd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-CHARGESUBJ");
				container.addChild(output_3, {
					"top": "5px",
					"left": "685px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSbCd");
				comboBox_3.enabled = false;
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSbCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbRefKey");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.setItemSet(app.lookup("dsChargeSbList"), {
						"label": "SB_DIVCLS_CD_NM",
						"value": "REF_KEY"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "770px",
					"width": "210px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbProfOrSb");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfOrSb");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("교수", "PROF"));
					radioButton_1.addItem(new cpr.controls.Item("교과목", "SB"));
				})(radioButton_1);
				if(typeof onRdbProfOrSbValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbProfOrSbValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "5px",
					"left": "345px",
					"width": "125px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optProfNm");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-SCR-STAFFNO");
				container.addChild(output_4, {
					"top": "5px",
					"left": "480px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbProfNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optProfNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfNm");
				if(typeof onIpbProfNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbProfNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "555px",
					"width": "100px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSbNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-SCR-OPNESUB");
				container.addChild(output_5, {
					"top": "5px",
					"left": "480px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_2.visible = false;
				inputBox_2.maxLength = 100;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSbNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "555px",
					"width": "100px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optPrtOrd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-PRT_ORD");
				container.addChild(output_6, {
					"top": "5px",
					"left": "990px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbPrtOrd");
				comboBox_4.enabled = false;
				comboBox_4.bind("fieldLabel").toExpression("#optPrtOrd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strPrtOrd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("학번", "STUD_NO, REP_NM"));
					comboBox_4.addItem(new cpr.controls.Item("성명", "REP_NM, STUD_NO"));
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "1065px",
					"width": "70px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-LSNDTLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "195px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsTimeDay");
				grid_1.init({
					"dataSet": app.lookup("dsCcsTimeDay"),
					"columns": [
						{"width": "125px"},
						{"width": "47px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CLOSEYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "LECT_DT_SHOW";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "ICON";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LECT_DT";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptLectDt");
										output_7.dataType = "date";
										output_7.format = "YYYY-MM-DD";
										output_7.bind("value").toDataColumn("LECT_DT");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "INPUT_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdCcsTimeDaySelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCcsTimeDaySelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "190px",
					"height": "563px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "202px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPPrsnSearch");
			cpr.core.App.load("app/cmn/impStdCmnPPrsnSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "115px",
				"width": "120px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var output_8 = new cpr.controls.Output("optLectTimeCnt");
				output_8.visible = false;
				output_8.value = "";
				output_8.style.css({
					"text-align" : "right"
				});
				output_8.bind("value").toDataMap(app.lookup("dmReqSelRow"), "strLectTimeCnt");
				container.addChild(output_8, {
					"top": "5px",
					"left": "220px",
					"width": "20px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optLectTimeCnt");
				output_9.visible = false;
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-DB-LECT_TIME_CNT");
				container.addChild(output_9, {
					"top": "5px",
					"left": "150px",
					"width": "65px",
					"height": "25px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.ctrl = app.lookup("grdExtCcsAttend");
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-ATTENDBOOK");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "175px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-SAVECLOSEYN");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "890px",
					"width": "120px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optWarn");
				output_10.value = "";
				output_10.bind("value").toLanguage("NLS-CCS-EXT005");
				container.addChild(output_10, {
					"top": "5px",
					"left": "245px",
					"width": "320px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optPnt");
				output_11.value = "";
				output_11.bind("value").toLanguage("UI-DB-PNT");
				container.addChild(output_11, {
					"top": "5px",
					"left": "75px",
					"width": "35px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optPnt");
				output_12.value = "";
				output_12.style.css({
					"text-align" : "right"
				});
				output_12.bind("value").toDataMap(app.lookup("dmReqSelRow"), "strPnt");
				container.addChild(output_12, {
					"top": "5px",
					"left": "115px",
					"width": "20px",
					"height": "25px"
				});
				var output_13 = new cpr.controls.Output("optTheoTcEpacTc");
				output_13.value = "";
				output_13.bind("value").toLanguage("UI-SCR-THEOEPACTC");
				container.addChild(output_13, {
					"top": "5px",
					"left": "145px",
					"width": "70px",
					"height": "25px"
				});
				var output_14 = new cpr.controls.Output("optTheoTcEpacTc");
				output_14.value = "";
				output_14.style.css({
					"text-align" : "right"
				});
				output_14.bind("value").toDataMap(app.lookup("dmReqSelRow"), "strTheoTcEpacTc");
				container.addChild(output_14, {
					"top": "5px",
					"left": "220px",
					"width": "20px",
					"height": "25px"
				});
				var output_15 = new cpr.controls.Output("optComment1");
				output_15.value = "";
				output_15.bind("value").toLanguage("NLS-CCS-EXT007");
				container.addChild(output_15, {
					"top": "5px",
					"left": "570px",
					"width": "315px",
					"height": "25px"
				});
				var output_16 = new cpr.controls.Output("optComment");
				output_16.value = "";
				output_16.bind("value").toLanguage("NLS-CCS-EXT006");
				container.addChild(output_16, {
					"top": "30px",
					"left": "5px",
					"width": "650px",
					"height": "25px"
				});
				var group_4 = new cpr.controls.Container("rptExtCcsAttend");
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_17 = new cpr.controls.Output("label6");
					output_17.value = "";
					container.addChild(output_17, {
						"top": "0px",
						"left": "794px",
						"width": "193px",
						"height": "128px"
					});
					var output_18 = new cpr.controls.Output("label5");
					output_18.value = "";
					container.addChild(output_18, {
						"top": "0px",
						"left": "596px",
						"width": "193px",
						"height": "128px"
					});
					var output_19 = new cpr.controls.Output("label4");
					output_19.value = "";
					container.addChild(output_19, {
						"top": "0px",
						"left": "398px",
						"width": "193px",
						"height": "128px"
					});
					var output_20 = new cpr.controls.Output("label3");
					output_20.value = "";
					container.addChild(output_20, {
						"top": "0px",
						"left": "200px",
						"width": "193px",
						"height": "128px"
					});
					var output_21 = new cpr.controls.Output("label2");
					output_21.value = "";
					container.addChild(output_21, {
						"top": "0px",
						"left": "2px",
						"width": "193px",
						"height": "128px"
					});
					var image_1 = new cpr.controls.Image("imgPhoto1");
					image_1.src = "images/imgs/stud_profile.jpg";
					image_1.bind("value").toDataMap(app.lookup("dmRow"), "PHOTO_FILE_PATH_1");
					(function(image_1){
					})(image_1);
					container.addChild(image_1, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "120px"
					});
					var output_22 = new cpr.controls.Output("optFrfLectTimeCnt1");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
					container.addChild(output_22, {
						"top": "42px",
						"left": "110px",
						"width": "49px",
						"height": "25px"
					});
					var textArea_1 = new cpr.controls.TextArea("txtRsn1");
					textArea_1.maxLength = 250;
					textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "RSN_1");
					container.addChild(textArea_1, {
						"top": "66px",
						"left": "110px",
						"width": "80px",
						"height": "59px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt1");
					numberEditor_1.format = "99";
					numberEditor_1.bind("fieldLabel").toExpression("#optFrfLectTimeCnt1.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmRow"), "ABN_TIME_CNT_1");
					if(typeof onIpbFrfLectTimeCnt1ValueChange == "function") {
						numberEditor_1.addEventListener("value-change", onIpbFrfLectTimeCnt1ValueChange);
					}
					if(typeof onIpbFrfLectTimeCnt1Focus == "function") {
						numberEditor_1.addEventListener("focus", onIpbFrfLectTimeCnt1Focus);
					}
					if(typeof onIpbFrfLectTimeCnt1Click == "function") {
						numberEditor_1.addEventListener("click", onIpbFrfLectTimeCnt1Click);
					}
					container.addChild(numberEditor_1, {
						"top": "42px",
						"left": "165px",
						"width": "25px",
						"height": "25px"
					});
					var image_2 = new cpr.controls.Image("imgPhoto2");
					image_2.src = "images/imgs/stud_profile.jpg";
					image_2.bind("value").toDataMap(app.lookup("dmRow"), "PHOTO_FILE_PATH_2");
					(function(image_2){
					})(image_2);
					container.addChild(image_2, {
						"top": "5px",
						"left": "203px",
						"width": "100px",
						"height": "120px"
					});
					var output_23 = new cpr.controls.Output("optFrfLectTimeCnt2");
					output_23.value = "";
					output_23.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
					container.addChild(output_23, {
						"top": "42px",
						"left": "308px",
						"width": "50px",
						"height": "25px"
					});
					var textArea_2 = new cpr.controls.TextArea("txtRsn2");
					textArea_2.maxLength = 250;
					textArea_2.bind("value").toDataMap(app.lookup("dmRow"), "RSN_2");
					container.addChild(textArea_2, {
						"top": "66px",
						"left": "308px",
						"width": "80px",
						"height": "59px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt2");
					numberEditor_2.format = "99";
					numberEditor_2.bind("fieldLabel").toExpression("#optFrfLectTimeCnt2.value");
					numberEditor_2.bind("value").toDataMap(app.lookup("dmRow"), "ABN_TIME_CNT_2");
					if(typeof onIpbFrfLectTimeCnt2ValueChange == "function") {
						numberEditor_2.addEventListener("value-change", onIpbFrfLectTimeCnt2ValueChange);
					}
					if(typeof onIpbFrfLectTimeCnt2Focus == "function") {
						numberEditor_2.addEventListener("focus", onIpbFrfLectTimeCnt2Focus);
					}
					if(typeof onIpbFrfLectTimeCnt2Click == "function") {
						numberEditor_2.addEventListener("click", onIpbFrfLectTimeCnt2Click);
					}
					container.addChild(numberEditor_2, {
						"top": "42px",
						"left": "363px",
						"width": "25px",
						"height": "25px"
					});
					var image_3 = new cpr.controls.Image("imgPhoto3");
					image_3.src = "images/imgs/stud_profile.jpg";
					image_3.bind("value").toDataMap(app.lookup("dmRow"), "PHOTO_FILE_PATH_3");
					(function(image_3){
					})(image_3);
					container.addChild(image_3, {
						"top": "5px",
						"left": "401px",
						"width": "100px",
						"height": "120px"
					});
					var output_24 = new cpr.controls.Output("optFrfLectTimeCnt3");
					output_24.value = "";
					output_24.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
					container.addChild(output_24, {
						"top": "42px",
						"left": "506px",
						"width": "50px",
						"height": "25px"
					});
					var textArea_3 = new cpr.controls.TextArea("txtRsn3");
					textArea_3.maxLength = 250;
					textArea_3.bind("value").toDataMap(app.lookup("dmRow"), "RSN_3");
					container.addChild(textArea_3, {
						"top": "66px",
						"left": "506px",
						"width": "80px",
						"height": "59px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt3");
					numberEditor_3.format = "99";
					numberEditor_3.bind("fieldLabel").toExpression("#optFrfLectTimeCnt3.value");
					numberEditor_3.bind("value").toDataMap(app.lookup("dmRow"), "ABN_TIME_CNT_3");
					if(typeof onIpbFrfLectTimeCnt3ValueChange == "function") {
						numberEditor_3.addEventListener("value-change", onIpbFrfLectTimeCnt3ValueChange);
					}
					if(typeof onIpbFrfLectTimeCnt3Focus == "function") {
						numberEditor_3.addEventListener("focus", onIpbFrfLectTimeCnt3Focus);
					}
					if(typeof onIpbFrfLectTimeCnt3Click == "function") {
						numberEditor_3.addEventListener("click", onIpbFrfLectTimeCnt3Click);
					}
					container.addChild(numberEditor_3, {
						"top": "42px",
						"left": "561px",
						"width": "25px",
						"height": "25px"
					});
					var image_4 = new cpr.controls.Image("imgPhoto4");
					image_4.src = "images/imgs/stud_profile.jpg";
					image_4.bind("value").toDataMap(app.lookup("dmRow"), "PHOTO_FILE_PATH_4");
					(function(image_4){
					})(image_4);
					container.addChild(image_4, {
						"top": "5px",
						"left": "599px",
						"width": "100px",
						"height": "120px"
					});
					var output_25 = new cpr.controls.Output("optFrfLectTimeCnt4");
					output_25.value = "";
					output_25.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
					container.addChild(output_25, {
						"top": "42px",
						"left": "704px",
						"width": "50px",
						"height": "25px"
					});
					var textArea_4 = new cpr.controls.TextArea("txtRsn4");
					textArea_4.maxLength = 250;
					textArea_4.bind("value").toDataMap(app.lookup("dmRow"), "RSN_4");
					container.addChild(textArea_4, {
						"top": "66px",
						"left": "704px",
						"width": "80px",
						"height": "59px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt4");
					numberEditor_4.format = "99";
					numberEditor_4.bind("fieldLabel").toExpression("#optFrfLectTimeCnt4.value");
					numberEditor_4.bind("value").toDataMap(app.lookup("dmRow"), "ABN_TIME_CNT_4");
					if(typeof onIpbFrfLectTimeCnt4ValueChange == "function") {
						numberEditor_4.addEventListener("value-change", onIpbFrfLectTimeCnt4ValueChange);
					}
					if(typeof onIpbFrfLectTimeCnt4Focus == "function") {
						numberEditor_4.addEventListener("focus", onIpbFrfLectTimeCnt4Focus);
					}
					if(typeof onIpbFrfLectTimeCnt4Click == "function") {
						numberEditor_4.addEventListener("click", onIpbFrfLectTimeCnt4Click);
					}
					container.addChild(numberEditor_4, {
						"top": "42px",
						"left": "759px",
						"width": "25px",
						"height": "25px"
					});
					var image_5 = new cpr.controls.Image("imgPhoto5");
					image_5.src = "images/imgs/stud_profile.jpg";
					image_5.bind("value").toDataMap(app.lookup("dmRow"), "PHOTO_FILE_PATH_5");
					(function(image_5){
					})(image_5);
					container.addChild(image_5, {
						"top": "5px",
						"left": "798px",
						"width": "100px",
						"height": "120px"
					});
					var output_26 = new cpr.controls.Output("optFrfLectTimeCnt5");
					output_26.value = "";
					output_26.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
					container.addChild(output_26, {
						"top": "42px",
						"left": "903px",
						"width": "50px",
						"height": "25px"
					});
					var textArea_5 = new cpr.controls.TextArea("txtRsn5");
					textArea_5.maxLength = 250;
					textArea_5.bind("value").toDataMap(app.lookup("dmRow"), "RSN_5");
					container.addChild(textArea_5, {
						"top": "66px",
						"left": "903px",
						"width": "80px",
						"height": "59px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt5");
					numberEditor_5.format = "99";
					numberEditor_5.bind("fieldLabel").toExpression("#optFrfLectTimeCnt5.value");
					numberEditor_5.bind("value").toDataMap(app.lookup("dmRow"), "ABN_TIME_CNT_5");
					if(typeof onIpbFrfLectTimeCnt5ValueChange == "function") {
						numberEditor_5.addEventListener("value-change", onIpbFrfLectTimeCnt5ValueChange);
					}
					if(typeof onIpbFrfLectTimeCnt5Focus == "function") {
						numberEditor_5.addEventListener("focus", onIpbFrfLectTimeCnt5Focus);
					}
					if(typeof onIpbFrfLectTimeCnt5Click == "function") {
						numberEditor_5.addEventListener("click", onIpbFrfLectTimeCnt5Click);
					}
					container.addChild(numberEditor_5, {
						"top": "42px",
						"left": "958px",
						"width": "25px",
						"height": "25px"
					});
					var output_27 = new cpr.controls.Output("optFrfLectTimeCnt6");
					output_27.value = "";
					output_27.bind("value").toDataMap(app.lookup("dmRow"), "REP_NM_1");
					container.addChild(output_27, {
						"top": "5px",
						"left": "110px",
						"width": "80px",
						"height": "33px"
					});
					var output_28 = new cpr.controls.Output("optFrfLectTimeCnt7");
					output_28.value = "";
					output_28.bind("value").toDataMap(app.lookup("dmRow"), "REP_NM_2");
					container.addChild(output_28, {
						"top": "5px",
						"left": "308px",
						"width": "80px",
						"height": "33px"
					});
					var output_29 = new cpr.controls.Output("optFrfLectTimeCnt8");
					output_29.value = "";
					output_29.bind("value").toDataMap(app.lookup("dmRow"), "REP_NM_3");
					container.addChild(output_29, {
						"top": "5px",
						"left": "506px",
						"width": "80px",
						"height": "33px"
					});
					var output_30 = new cpr.controls.Output("optFrfLectTimeCnt9");
					output_30.value = "";
					output_30.bind("value").toDataMap(app.lookup("dmRow"), "REP_NM_4");
					container.addChild(output_30, {
						"top": "5px",
						"left": "704px",
						"width": "80px",
						"height": "33px"
					});
					var output_31 = new cpr.controls.Output("optFrfLectTimeCnt10");
					output_31.value = "";
					output_31.bind("value").toDataMap(app.lookup("dmRow"), "REP_NM_5");
					container.addChild(output_31, {
						"top": "5px",
						"left": "903px",
						"width": "80px",
						"height": "33px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "55px",
					"left": "5px",
					"width": "1005px",
					"height": "538px"
				});
				var output_32 = new cpr.controls.Output("optComment2");
				output_32.value = "";
				output_32.bind("value").toLanguage("NLS-CCS-EXT005");
				container.addChild(output_32, {
					"top": "30px",
					"left": "660px",
					"width": "265px",
					"height": "25px"
				});
				var output_33 = new cpr.controls.Output("optComment3");
				output_33.value = "";
				output_33.bind("value").toLanguage("NLS-CCS-EXT007");
				container.addChild(output_33, {
					"top": "30px",
					"left": "925px",
					"width": "85px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "72px",
				"left": "212px",
				"width": "1018px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "출결관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
