/*
 * App URI: app/ccs/extCcsCBachlorAct
 * Source Location: app/ccs/extCcsCBachlorAct.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsCBachlorAct", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsCBachlorAct.xtm"/>
			
			/**
			 * 성적인정항목관리
			 * @class stdCgdCRRMng
			 * @author 박갑수 at 2016. 3. 24
			 */
			var extCcsCBachlorAct = function() { 
				var moPage = new Page();
				var moPObject = new Page();
			
				
				
				
				// 교직원 검색
				 moPObject.moIdsForStdCmnPPrsnSearch = [
					{
						 controlId					: "rdBtnProfProfNm",
						 istrStaffGrpAuth			: "",					
						 istrWkdtyAuth			: "",				
						 iKeyDate					: "",	
						 iStaffNo					: "rdIpbProfProfNm",			
						 iStaffGrpRcd				: "",		
						 iStaffGrpRcdLock		: "", 			
						 iStaffSubGrpRcd		: "",	
						 iStaffSubGrpRcdLock	: "",				
						 iStatusRcd				: "CF00501",				
						 iRepNm					: "",				
						 iObjDivRcd				: "",
						 iObjCd						: "",				
						 iObjNm					: "",	
						 istrObjCdInList			: "",
						 iWkgrdRcd				: "",	
						  
						 oObjNo					: "ipbProfObjNo",
						 oStaffNo					: "",					
						 oRepNm					: "rdIpbProfProfNm",					
						 oBirthday					: "",					
						 oStatNm					: "",				
						 oStatRcd					: "",					
						 oOgNm					: "",				
						 oOgCd						: "",				
						 oPosNm					: "",				
						 oPosCd					: "",				
						 oWkgrdNm				: "",			
						 oWkgrdRcd				: "",				
						 oStaffGrpRcd				: "",					
						 oStaffSubGrpRcd		: "",				
						 oHoRcd					: "",					
						 oSsn						: "",					
						 oWkdtyRcd				: "",					
						 oWkdtyNm				: "",				
						 func                         : function(poRtnValue){
							 
						 }
					}
					,{
						 controlId					: "IpbSchProfProfNmsNm",
						 istrStaffGrpAuth			: "",					
						 istrWkdtyAuth			: "",				
						 iKeyDate					: "",	
						 iStaffNo					: "IpbSchProfProfNmsNm",			
						 iStaffGrpRcd				: "",		
						 iStaffGrpRcdLock		: "", 			
						 iStaffSubGrpRcd		: "",	
						 iStaffSubGrpRcdLock	: "",				
						 iStatusRcd				: "CF00501",				
						 iRepNm					: "",				
						 iObjDivRcd				: "",
						 iObjCd						: "",				
						 iObjNm					: "",	
						 istrObjCdInList			: "",
						 iWkgrdRcd				: "",	
						  
						 oObjNo					: "/root/reqKey/strProfObjNo",
						 oStaffNo					: "",					
						 oRepNm					: "IpbSchProfProfNmsNm",					
						 oBirthday					: "",					
						 oStatNm					: "",				
						 oStatRcd					: "",					
						 oOgNm					: "",				
						 oOgCd						: "",				
						 oPosNm					: "",				
						 oPosCd					: "",				
						 oWkgrdNm				: "",			
						 oWkgrdRcd				: "",				
						 oStaffGrpRcd				: "",					
						 oStaffSubGrpRcd		: "",				
						 oHoRcd					: "",					
						 oSsn						: "",					
						 oWkdtyRcd				: "",					
						 oWkdtyNm				: "",				
						 func                         : function(poRtnValue){
							 
						 }
					}
				];
				
				
				
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				
				
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onModelConstructDone_extCcsCBachlorAct = function() {
					
					
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptMain", "frfDetail"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData", "grpDataDtl"]);
					
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							var vsSchYearRcd 	= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							var vsSmtRcd 		= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.DataMap.setValue(app, "dmReqKey", "strSchYearRcdSt", vsSchYearRcd);
							util.DataMap.setValue(app, "dmReqKey", "strSmtRcdSt", vsSmtRcd);
							
							
							util.Control.redraw(app, ["cbbDataDivRcd", "cbbSchYearRcd", "cbbSmtRcd", "cbbSchYearRcdEnd", "cbbSmtRcdEnd"]);
							util.SelectCtl.selectItem(app, "cbbDataDivRcd", 0);
							util.Control.setFocus(app, "cbbDataDivRcd");
						}
					}, true);
				};
				
				
				
				
				/**
				 * @desc 책갈피 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onKeyDown_IpbRrCd = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						var vsKeyDate = util.Control.getValue(app, "ipbTitleCont");
						if(!ValueUtil.isNull(vsKeyDate)){
							util.Header.clickSearch(app);
						}
					}
				};
				
				/**
				 * @desc 내용 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onKeyDown_IpbRrNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						var vsKeyDate = util.Control.getValue(app, "ipbMainCont");
						if(!ValueUtil.isNull(vsKeyDate)){
							util.Header.clickSearch(app);
						}
					}
				};
				
				
				
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onClick_BtnSearch = function() {
					
					
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbDataDivRcd", "cbbSchYearRcd", "cbbSmtRcd"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
							if(util.Grid.getRowCount(app, "grdMain") > 0){
								//--상세내용조회
								doListDtl();
							}else{
								util.Control.reset(app, "frfDetail");
							}
						}
					});
				};
				
				
				
				/**
				 * @desc 성적인정항목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				function doList(poCallBackFunc) {
				
				
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdMain");
							
							
								if(util.Grid.getRowCount(app, "grdMain") == 0){
									// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
									doCompareFrfEnable();
								}
								
						}
							// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				
				
				/**
				 * @desc [rptCgdRr]성적인정항목목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				moPage.onRowSelect_RptCgdRr = function() {
					
					
					
					var voSelectRowIdx = util.Grid.getIndex(app, "grdMain");
					util.DataMap.setValue(app, "dmReqSelRow", "strSerialNo"			, util.Grid.getCellValue(app, "grdMain", "SERIAL_NO"  	,voSelectRowIdx));						// 성적인정항목코드
							
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					
					//--상세내용조회
					doListDtl();
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				function doCompareFrfEnable() {
					
					
					// 마스터 로우 없을경우 프리폼 리셋
					if(!util.Grid.getIndex(app, "grdMain")){
						util.Control.reset(app, "frfDetail");
					}
					
					if( (!util.Grid.getIndex(app, "grdMain")) 
						|| util.Grid.getRowState(app, "grdMain") == cpr.data.tabledata.RowState.DELETED) {
							
						util.Control.setEnable(app, false, ["frfDetail"]);
						
					} else {
						util.Control.setEnable(app, true, ["frfDetail"]);	
					
					}
				};
				
				
				
				/**
				 * @desc 성적인정항목(프리폼) 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				function doListDtl() {
					
					// 성적인정항목 포커싱된 인덱스
					var vnIndex = util.Grid.getIndex(app, "grdMain");
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptMain","frfDetail", vnIndex);
				};
				
				
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				
				moPage.onClick_BtnNew = function() {
			
					
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdMain");
					
					// 신규 Defalut값 설정 
			
					// 시작일자 : 조회조건 기준일자
					var vsSchYearRcd	= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
					var vsSmtRcd 		= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
					var vsDataDivRcd	= util.DataMap.getValue(app, "dmReqKey", "strDataDivRcd");
					
					
					util.FreeForm.setValue(app, "frfDetail", "SCH_YEAR_RCD"	, vsSchYearRcd);
					util.FreeForm.setValue(app, "frfDetail", "SMT_RCD"				, vsSmtRcd);
					util.FreeForm.setValue(app, "frfDetail", "DATA_DIV_RCD"		, vsDataDivRcd);
					
							
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "rdIpbProfProfNm");
				};
				
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				
				moPage.onClick_BtnDel = function() {
					
					// 삭제
					util.Grid.deleteRow(app, "grdMain");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					
				};
				
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdMain");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptMain", "frfDetail");
				};
				
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				
				/**
				 * @desc 성적인정항목목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 24
				 */
				function doSave() {
					
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdMain"], "MSG")){
						return false;
					}
					
					
					// 리피트 Validation Check		
					if(!util.validate(app, "grdMain")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							var vsPkValues = util.DataMap.getValue(app, "dmResSave", "strPkValues");
							
							if(!ValueUtil.isNull(vsPkValues)){					
								ExtRepeat.setPkValues("rptMain", vsPkValues);				
							}
									
									
							//조회건수가 0건이면 프리폼이 내역이 반영되지 않기 떄문
							util.Control.reset(app, "frfDetail");
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess){
									util.Msg.notify(app, "NLS.INF.M025");
									
								}
								
			
									
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");				
						}
					});
				};
				
				
				
				/*
					교직원검색 팝업 valueChang
				*/	
				moPage.onValueChanged_RdIpbProfProfNm = function(sender){
					
					doOnChangeStdCmnPPrsnSearch(sender);
				}
				
				
				/*
					교직원 팝업 클릭
				*/
				moPage.onClick_RdBtnProfProfNm = function(sender){
					doOnClickStdCmnPPrsnSearch(sender);
				}
				
				
				/*
					프리폼에서 update[변경]시 그리드로 복사를 한다.
				*/
				moPage.onUpdate_FrfDetail = function(){
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptMain","frfDetail");
				}
				
				
				
				
				
				moPage.onClick_RdBtnProfProfNm1 = function(sender){
					doOnClickStdCmnPPrsnSearch(sender);
				}
				
				moPage.onValueChanged_RdIpbProfProfNm1 = function(sender){
					
					doOnChangeStdCmnPPrsnSearch(sender);
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListDataDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsMain");
			dataSet_5.parseData({
				"info": "EXT_CCS_SANCT_RECD@SERIAL_NO",
				"columns": [
					{"name": "SERIAL_NO"},
					{"name": "DATA_DIV_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "TITLE_CONT"},
					{"name": "MAIN_CONT"},
					{"name": "FLAG_GBN"},
					{"name": "DATA_DIV_RCD"},
					{"name": "PROF_OBJ_NM"},
					{"name": "PROF_OBJ_NO"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsFrfDetail");
			dataSet_6.parseData({
				"columns": [
					{"name": "SERIAL_NO"},
					{"name": "DATA_DIV_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "PROF_OBJ_NO"},
					{"name": "TITLE_CONT"},
					{"name": "MAIN_CONT"},
					{"name": "FLAG_GBN"},
					{"name": "DATA_DIV_NM"},
					{"name": "PROF_OBJ_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strDataDivRcd",
						"dataType": "string"
					},
					{
						"name": "strTitleCont",
						"dataType": "string"
					},
					{
						"name": "strMainCont",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcdSt",
						"dataType": "string"
					},
					{
						"name": "strSmtRcdSt",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcdEnd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcdEnd",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strSerialNo",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResSave");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strPkValues",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsBachlorAct/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsBachlorAct/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/ccs/ExtCcsBachlorAct/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataSet_5);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optRrCd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-RR_CD");
				container.addChild(output_1, {
					"top": "30px",
					"left": "290px",
					"width": "105px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optRrNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-GRDACPTLSTNM");
				container.addChild(output_2, {
					"top": "30px",
					"left": "779px",
					"width": "61px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbMainCont");
				inputBox_1.maxLength = 200;
				inputBox_1.bind("fieldLabel").toExpression("#optRrNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strMainCont");
				if(typeof onIpbMainContKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbMainContKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "30px",
					"left": "844px",
					"width": "291px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optRrDivRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-DIVCD");
				container.addChild(output_3, {
					"top": "5px",
					"left": "6px",
					"width": "120px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbDataDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optRrDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDataDivRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListDataDivRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "130px",
					"width": "146px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbTitleCont");
				inputBox_2.maxLength = 10;
				inputBox_2.bind("fieldLabel").toExpression("#optRrCd.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strTitleCont");
				if(typeof onIpbTitleContKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbTitleContKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "399px",
					"width": "374px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcdSt");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "488px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_3.enabled = false;
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcdSt");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "399px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSchYearRcd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_4, {
					"top": "5px",
					"left": "290px",
					"width": "105px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSchYearRcd1");
				output_5.value = "~";
				container.addChild(output_5, {
					"top": "5px",
					"left": "577px",
					"width": "18px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbSmtRcdEnd");
				comboBox_4.enabled = false;
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcdEnd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "683px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbSchYearRcdEnd");
				comboBox_5.enabled = false;
				comboBox_5.userAttr({"require": "Y"});
				comboBox_5.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcdEnd");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "5px",
					"left": "594px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("IpbSchProfProfNmsNm");
				inputBox_3.maxLength = 100;
				inputBox_3.userAttr({"require": "Y"});
				inputBox_3.bind("value").toDataMap(app.lookup("dmRow"), "PROF_OBJ_NM");
				if(typeof onIpbSchProfProfNmsNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbSchProfProfNmsNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "30px",
					"left": "130px",
					"width": "125px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSchProfProfNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSchProfProfNmClick == "function") {
					button_2.addEventListener("click", onBtnSchProfProfNmClick);
				}
				container.addChild(button_2, {
					"top": "30px",
					"left": "255px",
					"width": "21px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optRrDivRcd1");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-DIVCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "6px",
					"width": "120px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCgdRr");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-GRDACPTITMLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "245px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.init({
					"dataSet": app.lookup("dsMain"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "161px"},
						{"width": "105px"},
						{"width": "99px"},
						{"width": "101px"},
						{"width": "301px"},
						{"width": "373px"},
						{
							"width": "55px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-RR_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-GRDACPTLSTNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-GRDACPTLSTALI");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-RR_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-RR_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RR_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RR_DESC");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "34px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_7 = new cpr.controls.Output();
										output_7.style.css({
											"text-align" : "center"
										});
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "DATA_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("combobox1");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsListDataDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("DATA_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "PROF_OBJ_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("combobox2");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										comboBox_7.userAttr({"require": "Y"});
										(function(comboBox_7){
											comboBox_7.addItem(new cpr.controls.Item("선택", ""));
											comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("combobox3");
										comboBox_8.enabled = false;
										comboBox_8.hideButton = true;
										comboBox_8.userAttr({"require": "Y"});
										(function(comboBox_8){
											comboBox_8.addItem(new cpr.controls.Item("선택", ""));
											comboBox_8.setItemSet(app.lookup("dsSmtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("SMT_RCD");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "TITLE_CONT";
									cell.control = (function(){
										var textArea_1 = new cpr.controls.TextArea("textarea1");
										textArea_1.readOnly = true;
										textArea_1.userAttr({"require": "Y"});
										textArea_1.bind("value").toDataColumn("TITLE_CONT");
										return textArea_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "MAIN_CONT";
									cell.control = (function(){
										var textArea_2 = new cpr.controls.TextArea("textarea2");
										textArea_2.readOnly = true;
										textArea_2.bind("value").toDataColumn("MAIN_CONT");
										return textArea_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("inputbox1");
										inputBox_4.visible = false;
										return inputBox_4;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdMainSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdMainSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "332px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "368px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-GLS-RR");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var group_4 = linker.group_4 = new cpr.controls.Container("frfDetail");
				group_4.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_8 = new cpr.controls.Output("optFrfRrShortNm");
					output_8.value = "";
					output_8.style.setClasses(["require"]);
					output_8.bind("value").toLanguage("UI-SCR-GRDACPTLSTALI");
					container.addChild(output_8, {
						"top": "29px",
						"left": "5px",
						"width": "100px",
						"height": "55px"
					});
					var output_9 = new cpr.controls.Output("optFrfRrPrpRcd");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-SCR-RRPRPRCD");
					container.addChild(output_9, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfRrPrpRcd");
					comboBox_9.bind("fieldLabel").toExpression("#optFrfRrPrpRcd.value");
					comboBox_9.bind("value").toDataColumn("DATA_DIV_RCD");
					(function(comboBox_9){
						comboBox_9.addItem(new cpr.controls.Item("선택", ""));
						comboBox_9.setItemSet(app.lookup("dsListDataDivRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"top": "5px",
						"left": "109px",
						"width": "135px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("rdIpbProfProfNm");
					inputBox_5.maxLength = 100;
					inputBox_5.userAttr({"require": "Y"});
					inputBox_5.bind("value").toDataColumn("PROF_OBJ_NM");
					if(typeof onRdIpbProfProfNmValueChange == "function") {
						inputBox_5.addEventListener("value-change", onRdIpbProfProfNmValueChange);
					}
					container.addChild(inputBox_5, {
						"top": "5px",
						"left": "340px",
						"width": "108px",
						"height": "25px"
					});
					var button_3 = new cpr.controls.Button("rdBtnProfProfNm");
					button_3.value = "";
					button_3.style.setClasses(["btn-pop-search"]);
					if(typeof onRdBtnProfProfNmClick == "function") {
						button_3.addEventListener("click", onRdBtnProfProfNmClick);
					}
					container.addChild(button_3, {
						"top": "5px",
						"left": "448px",
						"width": "21px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfEndDt1");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-DB-END_DT");
					container.addChild(output_10, {
						"top": "5px",
						"left": "253px",
						"width": "80px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfRrPrpRcd1");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-SCR-RRPRPRCD");
					container.addChild(output_11, {
						"top": "5px",
						"left": "477px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_10 = new cpr.controls.ComboBox("cbbFrfRrPrpRcd1");
					comboBox_10.bind("fieldLabel").toExpression("#optFrfRrPrpRcd.value");
					comboBox_10.bind("value").toDataColumn("SCH_YEAR_RCD");
					(function(comboBox_10){
						comboBox_10.addItem(new cpr.controls.Item("선택", ""));
						comboBox_10.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_10);
					container.addChild(comboBox_10, {
						"top": "5px",
						"left": "561px",
						"width": "100px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfRrPrpRcd2");
					output_12.value = "";
					output_12.style.setClasses(["require"]);
					output_12.bind("value").toLanguage("UI-SCR-RRPRPRCD");
					container.addChild(output_12, {
						"top": "5px",
						"left": "670px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_11 = new cpr.controls.ComboBox("cbbFrfRrPrpRcd2");
					comboBox_11.bind("fieldLabel").toExpression("#optFrfRrPrpRcd.value");
					comboBox_11.bind("value").toDataColumn("SMT_RCD");
					(function(comboBox_11){
						comboBox_11.addItem(new cpr.controls.Item("선택", ""));
						comboBox_11.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_11);
					container.addChild(comboBox_11, {
						"top": "5px",
						"left": "754px",
						"width": "100px",
						"height": "25px"
					});
					var textArea_3 = new cpr.controls.TextArea("textarea3");
					textArea_3.maxLength = 300;
					textArea_3.bind("value").toDataColumn("TITLE_CONT");
					container.addChild(textArea_3, {
						"top": "29px",
						"left": "109px",
						"width": "1101px",
						"height": "55px"
					});
					var output_13 = new cpr.controls.Output("optFrfRrShortNm1");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-GRDACPTLSTALI");
					container.addChild(output_13, {
						"top": "88px",
						"left": "5px",
						"width": "100px",
						"height": "75px"
					});
					var textArea_4 = new cpr.controls.TextArea("textarea4");
					textArea_4.maxLength = 1000;
					textArea_4.bind("value").toDataColumn("MAIN_CONT");
					container.addChild(textArea_4, {
						"top": "88px",
						"left": "109px",
						"width": "1101px",
						"height": "75px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbProfObjNo");
					inputBox_6.visible = false;
					inputBox_6.bind("value").toDataColumn("PROF_OBJ_NO");
					container.addChild(inputBox_6, {
						"top": "5px",
						"left": "885px",
						"width": "100px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "169px"
				});
				var button_4 = new cpr.controls.Button("btnNew");
				button_4.value = "";
				button_4.style.setClasses(["btn-new"]);
				button_4.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_4.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "964px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnDel");
				button_5.value = "";
				button_5.style.setClasses(["btn-delete"]);
				button_5.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_5.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1029px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnRestore");
				button_6.value = "";
				button_6.style.setClasses(["btn-restore"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_6.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1094px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnSave");
				button_7.value = "";
				button_7.style.setClasses(["btn-save"]);
				button_7.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_7.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "470px",
				"left": "5px",
				"width": "1225px",
				"height": "205px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPPrsnSearch");
			cpr.core.App.load("app/cmn/impStdCmnPPrsnSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_4.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "제재조치관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
