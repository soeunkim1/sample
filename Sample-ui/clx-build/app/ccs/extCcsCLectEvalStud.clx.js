/*
 * App URI: app/ccs/extCcsCLectEvalStud
 * Source Location: app/ccs/extCcsCLectEvalStud.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsCLectEvalStud", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsCLectEvalStud.xtm"/>
			
			/**
			 * 강의평가입력(학생용)
			 * @class extCcsCLectEvalStud
			 * @author 박갑수 at 2016. 5. 13
			 */
			var extCcsCLectEvalStud = function() {
				var moPage = new Page();
				
				// 리피터 현재 인덱스 - 변경체크시 false일경우 되돌리기 위함
				var mnNowIdx = 1;
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 13
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				moPage.onModelConstructDone_ExtCcsCLectEvalStud = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcrTlsnReq"]);
					// 검색조건 초기 설정
					// ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					util.Control.setValue(app, "ipbStudNm", moUserInfo.userNm);
					util.DataMap.setValue(app, "dmReqKey", "strStudId", moUserInfo.id);
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "rdbLanDivRcd"]);
							
							// 조회
							doList(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
						}
					}, true);
				};
				
				/**
				 * @desc 수강과목 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				function doList(poCallBackFunc) {
					// 디테일 초기화 - 작업변경체크 피하기위해
					util.Control.redraw(app, "frfCcsLectEvalRslt");
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCcrTlsnReq");
							
							mnNowIdx = util.Grid.getIndex(app, "grdCcrTlsnReq");  
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [rptCcrTlsnReq]수강과목 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				moPage.onRowSelect_RptCcrTlsnReq = function() {
					// 프리폼 변경사항 체크
					if(util.Grid.isModified(app, ["frfCcsLectEvalRslt"], "CRM")){
						// 로직구현....
						util.Grid.selectRow(app, "grdCcrTlsnReq", mnNowIdx, false);
						
						return false;
					}
					
					mnNowIdx = util.Grid.getIndex(app, "grdCcrTlsnReq");
					// 강의평가 제외
					var vsLectEvalXcpYn = util.Grid.getCellValue(app, "grdCcrTlsnReq", "LECT_EVAL_XCP_YN");
					
					// 교과목 라벨 세팅, 코멘트 보이기여부
					var vsSbNm = util.Grid.getCellValue(app, "grdCcrTlsnReq", "SB_CD_NM");
					ExtControl.setTextValue("lblComment", vsSbNm);
					var vsLectEvalYn = util.Grid.getCellValue(app, "grdCcrTlsnReq", "LECT_EVAL_YN");
					if(ValueUtil.fixNull(vsLectEvalYn) == "Y"){
						// 코멘트 보이기여부
						util.Control.setVisible(app, true , ["lblComment1"]);
						util.Control.setVisible(app, false , ["btnSave"]);
						util.Control.setReadOnly(app, true, ["frfCcsLectEvalRslt"]);
					}else {
						util.Control.setVisible(app, false , ["lblComment1"]);
						if(ValueUtil.fixNull(vsLectEvalXcpYn) == "Y"){
							util.Control.setVisible(app, false , ["btnSave"]);
						}else{
							util.Control.setVisible(app, true , ["btnSave"]);
						}
						util.Control.setReadOnly(app, false, ["frfCcsLectEvalRslt"]);
					}
					
					// 강의평가 제외가 Y일경우 경고메시지
					if(ValueUtil.fixNull(vsLectEvalXcpYn) == "Y"){
						util.Control.setVisible(app, false, ["frfCcsLectEvalRslt"]);
						
						// "강의평가제외가 Y인 교과목은 강의평가를 작성할 수 없습니다." 메시지
						util.Msg.alert("NLS-CCS-EXT009");
					}else {
						util.Control.setVisible(app, true, ["frfCcsLectEvalRslt"]);
						// 강의평가항목 조회
						doListDtl();
					}
				};
				
				/**
				 * @desc 강의평가항목 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				function doListDtl(poCallBackFunc) {
					var vnIdx = util.Grid.getIndex(app, "grdCcrTlsnReq");
					util.DataMap.setValue(app, "dmReqSelRow", "strRefKey", util.Grid.getCellValue(app, "grdCcrTlsnReq", "REF_KEY", vnIdx));
					util.DataMap.setValue(app, "dmReqSelRow", "strLectDivRcd", util.Grid.getCellValue(app, "grdCcrTlsnReq", "LECT_EVAL_TYPE_RCD", vnIdx));
					util.DataMap.setValue(app, "dmReqSelRow", "strProfObjNo", util.Grid.getCellValue(app, "grdCcrTlsnReq", "PROF_OBJ_NO", vnIdx));
					util.DataMap.setValue(app, "dmReqSelRow", "strSaCd", util.Grid.getCellValue(app, "grdCcrTlsnReq", "SA_CD", vnIdx));
					
					//strCommand: listDtl 
					util.Submit.send(app, "subListDtl", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "frfCcsLectEvalRslt");
							
							// 다이나믹 생성
							doDynamicRptRender();
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 강의평가항목 다이나믹 생성
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				function doDynamicRptRender(){
					
					var vnLength = Number(util.DataMap.getValue(app, "dmResList", "strFctorRsltCnt"));
					
					var vnRptDetailTop = 65 * vnLength;
					var vnTxtCtlTop = 5;
					var vnTxtCtlOjvHeight = 55;
					var vnTxtCtlSjvHeight = 95;
					
					var vnLblCtlTop = 5;
					var vnRdbCtlTop = 30;
					var vnTabOrder = 10;
					
					// 작업저장버튼 보이기여부
					var vbSaveBtnVisible = false;
					
					for(var i=1; i<=vnLength; i++){
						
						// 객관식, 주관식 구분 : 객관식[1], 주관식[2]
						var vsSjvOjvDivRcd = util.DataSet.getValue(app, "dsFrfCcsLectEvalRslt", "SJV_OJV_DIV_RCD_" +  i, "1");
						var vsAnsTypeRcd = util.DataSet.getValue(app, "dsFrfCcsLectEvalRslt", "ANS_TYPE_RCD_" +  i, "1");
						var vsAns = util.DataSet.getValue(app, "dsFrfCcsLectEvalRslt", "ANS_" +  i, "1");
			//			// 답변이 없을때 작업저장 보기이여부 설정
			//			if(ValueUtil.isNull(vsAns) && vsSjvOjvDivRcd == "1"){
			//				vbSaveBtnVisible = true;
			//			}else {
			//				vbSaveBtnVisible = false;
			//			}
						
						
						// 객관식일경우 
						if(ValueUtil.fixNull(vsSjvOjvDivRcd) == "1"){
							
							///////////////////////////// 			TxtArea 추가						/////////////////////////////
							var vsTxtCtlAttr = "<textarea id='txt_" + i +"' class='ipbFrf' ref='/root/resList/frfCcsLectEvalRslt/row/QUEST_ARA_NM_"+ i +"'  enable='False' scrolltype='none' style='left:5px; top:"+ vnTxtCtlTop +"px; width:105px; height:"+ vnTxtCtlOjvHeight +"px; font-weight:bold; '/>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsTxtCtlAttr, "detail");
							
							vnTxtCtlTop = vnTxtCtlTop + 65;
							
							
							///////////////////////////// 			Label 추가							/////////////////////////////
							var vsLblCtlAttr = "<label id='lbl_" + i +"' class='lblComn' ref='/root/resList/frfCcsLectEvalRslt/row/QUEST_CONT_"+ i +"' style='left:115px; top:"+ vnLblCtlTop +"px; width:1075px; height:20px; '/>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsLblCtlAttr, "detail");
							
							vnLblCtlTop = vnLblCtlTop + 65;
								
							
							///////////////////////////// 			RadioButton 추가				/////////////////////////////
							var vsRdbCtlAttr = "<select1 id='rdb_" + i +"' colindex='"+ vnTabOrder +"'  class='rdbFrf' ref='/root/resList/frfCcsLectEvalRslt/row/ANS_"+ i +"' appearance='full' style='left:115px; top:"+ vnRdbCtlTop +"px; width:1075px; height:20px; border-width:0; '>"
														+ "<choices><itemset nodeset='/root/resList/lectRsltTypeList/row'><label ref='ANS_CONT'/><value ref='SERIAL_NO'/></itemset></choices></select1>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsRdbCtlAttr, "detail");
							
							ExtControl.setAttr("rdb_" + i, "nodeset", "/root/resList/lectRsltTypeList/row[child::ANS_TYPE_RCD = '"+vsAnsTypeRcd+"'] " );
							util.Control.redraw(app, "rdb_" + i);
							
							vnTabOrder = vnTabOrder + 10;
							vnRdbCtlTop = vnRdbCtlTop + 65;
							
							
						// 주관식일경우
						}else {
							///////////////////////////// 			TxtArea 추가						/////////////////////////////
							var vsTxtCtlAttr = "<textarea id='txt_" + i +"' class='ipbFrf' ref='/root/resList/frfCcsLectEvalRslt/row/QUEST_ARA_NM_"+ i +"'  enable='False' scrolltype='none' style='left:5px; top:"+ vnTxtCtlTop +"px; width:105px; height:"+ vnTxtCtlSjvHeight +"px; font-weight:bold; '/>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsTxtCtlAttr, "detail");
							
							vnTxtCtlTop = vnTxtCtlTop + 105;
							vnRptDetailTop = vnRptDetailTop+50;		// 리피터 detail 높이 추가
							
							///////////////////////////// 			Label 추가							/////////////////////////////
							var vsLblCtlAttr = "<label id='lbl_" + i +"' class='lblComn' ref='/root/resList/frfCcsLectEvalRslt/row/QUEST_CONT_"+ i +"' style='left:115px; top:"+ vnLblCtlTop +"px; width:1075px; height:20px; '/>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsLblCtlAttr, "detail");
							
							vnLblCtlTop = vnLblCtlTop + 105;
							
							///////////////////////////// 			TxtArea(주관식) 추가			/////////////////////////////
							var vsTxtCtlSjvAttr = "<textarea id='txtSjv_" + i +"' class='ipbFrf' ref='/root/resList/frfCcsLectEvalRslt/row/ANS_"+ i +"' maxlength='500' style='left:115px; top:"+ vnRdbCtlTop +"px; width:1075px; height:70px; '/>";
							ExtRepeat.addRptCtl("frfCcsLectEvalRslt", vsTxtCtlSjvAttr, "detail");
							
							vnRdbCtlTop = vnRdbCtlTop + 105;
							
						}
					}
					
					// 프리폼 높이 설정
					ExtControl.getControl("frfCcsLectEvalRslt").rowHeight = vnRptDetailTop;
					
			//		ExtControl.setReadOnly(!vbSaveBtnVisible, ["frfCcsLectEvalRslt"]);
					// 작업저장버튼 보이기여부
			//		ExtControl.setVisible(vbSaveBtnVisible , ["btnSave"]);
					
					util.Control.redraw(app, "frfCcsLectEvalRslt");
			//		// 스크롤이 상단에 위치되기위해
			//		var vsLectEvalRslt = ExtControl.getControl("frfCcsLectEvalRslt");
			//		vsLectEvalRslt.vScrollbar.SCROLLINFO.value = 0;
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc 강의평가항목 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 13
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCcsLectEvalRslt"], "MSG")){
						return false;
					}
					
					// 리피트 필수값체크
					if(!moPage.checkNotNullRpt()){
						return false;
					}
					
					// "저장된 강의평가는 수정할 수 없습니다. \n계속 진행하시겠습니까?"
					if (!util.Msg.confirm("NLS-CRM-M086") ) {
						return false;
					}
					
					var vsPkValue = "REF_KEY:" + util.Grid.getCellValue(app, "grdCcrTlsnReq", "REF_KEY");
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							ExtControl.getControl("rptCcrTlsnReq").pk_values =  vsPkValue;
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc 강의평가항목 필수체크
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 5. 13
				 */
				moPage.checkNotNullRpt = function() {
					// 유효성 true or false
					var vbValid = true;
					
					var vnLength = Number(util.DataMap.getValue(app, "dmResList", "strFctorRsltCnt"));
					
					for(var i=1; i<=vnLength; i++){
					
						// 객관식, 주관식 구분 : 객관식[1], 주관식[2]
						var vsSjvOjvDivRcd = util.DataSet.getValue(app, "dsFrfCcsLectEvalRslt", "SJV_OJV_DIV_RCD_" +  i, "1");
						// 객관식만 필수체크
						if(ValueUtil.fixNull(vsSjvOjvDivRcd) == "2") continue;
						var vsRdbValue = util.Control.getValue(app, "rdb_" + i);
					
						if(ValueUtil.isNull(vsRdbValue)){
							// "강의평가항목의 [@]번 항목은 필수 입력 항목입니다. \n항목을 모두 입력해 주시기 바랍니다." 메시지
							util.Msg.alert("NLS-CCS-EXT008", [i]);
							
							util.Control.setFocus(app, "rdb_" + i);
							vbValid = false;
							return vbValid;
						}
					}
				
					return vbValid;
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCcrTlsnReq");
			dataSet_3.parseData({
				"info": "CCR_TLSN_REQ@REF_KEY",
				"columns": [
					{"name": "LECT_EVAL_YN"},
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "DIVCLS_NM"},
					{"name": "PROF_NM"},
					{"name": "LECT_EVAL_XCP_YN"},
					{"name": "REF_KEY"},
					{"name": "LECT_EVAL_TYPE_RCD"},
					{"name": "PROF_OBJ_NO"},
					{"name": "SA_CD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsLectRsltTypeList");
			dataSet_4.parseData({
				"columns": [
					{"name": "ANS_CONT"},
					{"name": "ANS_TYPE_RCD"},
					{"name": "SERIAL_NO"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strFctorRsltCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strStudNm",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strLectDivRcd",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsLectEvalStud/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_3);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsLectEvalStud/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListDtl");
			submission_3.action = "/ccs/ExtCcsLectEvalStud/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_5);
			submission_3.addRequestData(dataMap_4);
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataMap_2, false);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/ccs/ExtCcsLectEvalStud/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_5);
			submission_4.addRequestData(dataMap_1);
			submission_4.addRequestData(dataMap_3);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbLanDivRcd");
				radioButton_1.bind("value").toDataMap(app.lookup("dmResOnLoad"), "strLanDivRcd");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("한국어", "CS003KR"));
					radioButton_1.addItem(new cpr.controls.Item("English", "CS003US"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"top": "5px",
					"left": "590px",
					"width": "150px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optStudNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-PER_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "395px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudNm");
				inputBox_1.enabled = false;
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optStudNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNm");
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "480px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-TLSNSUB");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "215px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.visible = false;
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "570px",
					"left": "582px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcrTlsnReq");
				grid_1.init({
					"dataSet": app.lookup("dsCcrTlsnReq"),
					"columns": [
						{"width": "40px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "250px"},
						{"width": "50px"},
						{"width": "100px"},
						{"width": "110px"},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "130px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHARGPROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EXPYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPEN_SUB_REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPEN_SUB_REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_XCP_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PROF_OBJ_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							}
						]
					}
				});
				if(typeof onGrdCcrTlsnReqSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCcrTlsnReqSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "170px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-LECTEVALITEM");
				container.addChild(userDefinedControl_3, {
					"top": "210px",
					"left": "5px",
					"width": "120px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfCcsLectEvalRslt");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var checkBox_1 = new cpr.controls.CheckBox("checkbox1");
					checkBox_1.value = "";
					checkBox_1.trueValue = "checkbox1";
					checkBox_1.falseValue = "";
					checkBox_1.text = "checkbox1";
					container.addChild(checkBox_1, {
						"top": "1px",
						"left": "1px",
						"width": "0px",
						"height": "0px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "235px",
					"left": "5px",
					"width": "1213px",
					"height": "330px"
				});
				var output_4 = new cpr.controls.Output("optComment1");
				output_4.value = "";
				output_4.bind("value").toLanguage("NLS-CCS-EXT010");
				container.addChild(output_4, {
					"top": "210px",
					"left": "305px",
					"width": "330px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optComment");
				output_5.value = "";
				output_5.bind("value").toLanguage("NLS-CCS-EXT007");
				container.addChild(output_5, {
					"top": "210px",
					"left": "135px",
					"width": "161px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("label1");
				output_6.value = "수강과목 모두 강의평가를 완료해야 성적을 열람 할 수 있습니다.";
				container.addChild(output_6, {
					"top": "5px",
					"left": "114px",
					"width": "636px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "강의평가입력(학생용)";
	cpr.core.Platform.INSTANCE.register(app);
})();
