/*
 * App URI: app/ccs/extCcsCLectEvalSum
 * Source Location: app/ccs/extCcsCLectEvalSum.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsCLectEvalSum", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsCLectEvalSum.xtm"/>
			
			/**
			 * 강의평가처리
			 * @class extCcsCLectEvalSum
			 * @author 박갑수 at 2016. 5. 16
			 */
			var extCcsCLectEvalSum = function() {
				var moPage = new Page();
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 16
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				moPage.onModelConstructDone_ExtCcsCLectEvalSum = function() {
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "ckbEvalXcpGrd"]);
						}
					}, true);
				};
			
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnSave]강의평가집계 실행 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				moPage.onClick_BtnSave = function() {
					
					// 조회조건 필수체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
						return false;
					}
					
					// 강의평가집계 데이터 카운트 조회
					doListCnt(function(pbSuccess) {
						if (pbSuccess){
							
							var vsChkCnt = util.DataMap.getValue(app, "dmResList", "strChkCnt");
							
							
							var vsSchYearRcdNm = ExtInstance.getValue("/root/resOnLoad/schYearRcdList/row", "CD_NM" , "child::CD='"+util.Control.getValue(app, "cbbSchYearRcd")+"'");
							var vsSmtRcdNm = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM" , "child::CD='"+util.Control.getValue(app, "cbbSmtRcd")+"'");
							
							var vsMsgParam  = "";
							if(0 < Number(vsChkCnt)){
								// 강의평가집계 데이터가 존재합니다.\n강의평가 집계처리를 재계산
								vsMsgParam = vsSchYearRcdNm + " " + vsSmtRcdNm + " " + NLS.CCS.EXT011;
							}else {
								// 강의평가집계처리를 진행
								vsMsgParam = vsSchYearRcdNm + " " + vsSmtRcdNm + " " + NLS.CCS.EXT012;
							}
							
							// @ 하시겠습니까?
							if(!util.Msg.confirm("NLS-CRM-M010", [vsMsgParam]) ){
								return false;
							}else {
								// 강의평가집계처리
								doSave();
							}
						}
					});
				};
				
				/**
				 * @desc  강의평가집계 데이터 카운트 조회
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 16
				 */
				function doListCnt(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					});
				};
				
				/**
				 * @desc 강의평가집계실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 16
				 */
				function doSave() {
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							//처리되었습니다.
							util.Msg.alert("NLS-INF-M003");
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsGrdRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResList");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strChkCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strEvalXcpGrd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsLectEvalSum/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsLectEvalSum/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/ccs/ExtCcsLectEvalSum/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_2);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "120px",
					"width": "185px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "315px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "420px",
					"width": "185px",
					"height": "25px"
				});
				var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("ckbEvalXcpGrd");
				checkBoxGroup_1.fixedWidth = false;
				checkBoxGroup_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEvalXcpGrd");
				(function(checkBoxGroup_1){
					checkBoxGroup_1.setItemSet(app.lookup("dsGrdRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					})
				})(checkBoxGroup_1);
				container.addChild(checkBoxGroup_1, {
					"top": "30px",
					"left": "120px",
					"width": "485px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optEvalXcpGrd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-EVALXCPGRD");
				container.addChild(output_3, {
					"top": "30px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-LECTEVALSUMACT");
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "55px",
					"left": "245px",
					"width": "120px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "610px",
				"height": "85px"
			});
			
			var group_2 = new cpr.controls.Container("grpComment");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-CONVGDSTDMNGLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "250px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optComment1");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_4, {
					"top": "55px",
					"left": "25px",
					"width": "250px",
					"height": "75px"
				});
				var output_5 = new cpr.controls.Output("optComment2");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "150px",
					"left": "25px",
					"width": "365px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optComment3");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_6, {
					"top": "190px",
					"left": "25px",
					"width": "490px",
					"height": "40px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "620px",
				"width": "610px",
				"height": "635px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "강의평가처리";
	cpr.core.Platform.INSTANCE.register(app);
})();
