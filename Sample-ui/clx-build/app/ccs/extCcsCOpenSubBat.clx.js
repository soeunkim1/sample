/*
 * App URI: app/ccs/extCcsCOpenSubBat
 * Source Location: app/ccs/extCcsCOpenSubBat.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsCOpenSubBat", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsCOpenSubBat.xtm"/>
			
			/**
			 * 개설과목배치
			 * @class extCcsCOpenSubBat
			 * @author 박갑수 at 2016. 4 .27
			 */
			var extCcsCOpenSubBat = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnDeptNm",
					iCd					:	"",
					iNm					:	"ipbDeptNm",
					iObjDivRcd			:	["CC009OG", "CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strDeptCd",
					oCdNm				:	"ipbDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
						// 부서(행정,학사)에따른 조회조건컨트롤 필터링
						doSaFilter();
					}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				var msKeyDate = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onModelConstructDone_ExtCcsCOpenSubBat = function() {
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipKeyDate"]);
							
							util.Control.setEnable(app, false, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
						}
					}, true);
				};
				
				/**
				 * @desc 부서(행정,학사)에따른 조회조건컨트롤 필터링
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doSaFilter(){
					// 소속부서에따른 교과그룹 필터링
					var vsObjDivRcd = util.DataMap.getValue(app, "dmReqKey", "strObjDivRcd");
					
					// 행정부서[CC009OG], 학사부서[CC009SA]에따른 교과그룹, 학년, 개설분반 활성 비활성
					if(vsObjDivRcd == "CC009SA"){
						//strCommand: estDivclslist 
						util.Submit.send(app, "subEstDivclsList", function(pbSuccess){
							if(pbSuccess){
								
								util.Control.setEnable(app, true, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
								util.Control.redraw(app, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
								
								// 교과그룹에따른 학년 필터링
								doFilterSbLvl();
								// 교과그룹, 학년에따른 개설분반 필터링
								doFilterDivcls();
							}
						});
					}else {
						util.Control.setValue(app, "cbbCuCd", "");
						util.Control.setValue(app, "cbbSbLvlRcd", "");
						util.Control.setValue(app, "cbbDivclsNm", "");
						
						util.Control.setEnable(app, false, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
					}
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
					
					// 소속, 교과그룹, 학년, 개설분반 초기화
					doClearSchCtl();
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
					
					// 소속, 교과그룹, 학년, 개설분반 초기화
					doClearSchCtl();
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							msKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT");
							util.Control.setValue(app, "dipKeyDate", msKeyDate);
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
								util.Control.setValue(app, "dipKeyDate", msKeyDate);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSchYearRcd);
								util.Control.setValue(app, "dipKeyDate", msKeyDate);
							}
						}
					});
				};
				
				/**
				 * @desc 학년도 학기 변경시 소속, 교과그룹, 학년, 개설분반 초기화
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doClearSchCtl() {
					util.DataMap.setValue(app, "dmReqKey", "strDeptCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", "");
					util.Control.setValue(app, "ipbDeptNm", "");
					util.Control.setValue(app, "cbbCuCd", "");
					util.Control.setValue(app, "cbbSbLvlRcd", "");
					util.Control.setValue(app, "cbbDivclsNm", "");
					
					util.Control.setEnable(app, false, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
				};
				
				/**
				 * @desc [btnDeptNm]부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onClick_BtnDeptNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbDeptNm]부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
					
					var vsDeptNm = util.Control.getValue(app, "ipbDeptNm");
					if(ValueUtil.isNull(vsDeptNm)){
						util.Control.setEnable(app, false, ["cbbCuCd", "cbbSbLvlRcd", "cbbDivclsNm"]);
					}
				};
					
				/**
				 * @desc [cbbCuCd]교과그룹 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onValueChanged_CbbCuCd = function() {
					// 교과그룹에따른 학년 필터링
					doFilterSbLvl();
					// 교과그룹, 학년에따른 개설분반 필터링
					doFilterDivcls();
				};
				
				/**
				 * @desc [cbbSbLvlRcd]학년 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onValueChanged_CbbSbLvlRcd = function() {
					// 교과그룹, 학년에따른 개설분반 필터링
					doFilterDivcls();
				};
				
				/**
				 * @desc 교과그룹, 학년에따른 개설분반 필터링
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doFilterDivcls(){
					var vsCuCd = util.Control.getValue(app, "cbbCuCd");
					var vsSbLvlRcd = util.Control.getValue(app, "cbbSbLvlRcd");
					
					ExtControl.setAttr("cbbDivclsNm", "nodeset", "/root/resList/estDivclsList/row[child::CU_CD = '"+vsCuCd+"' and SB_LVL_RCD = '"+vsSbLvlRcd+"'] " );
					
					util.Control.redraw(app, "cbbDivclsNm");
				};
				
				/**
				 * @desc 교과그룹에따른 학년 필터링
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doFilterSbLvl(){
					var vsCuCd = util.Control.getValue(app, "cbbCuCd");
					
					ExtControl.setAttr("cbbSbLvlRcd", "nodeset", "/root/resList/estDivclsSbLvlList/row[child::CU_CD = '"+vsCuCd+"'] " );
					
					util.Control.redraw(app, "cbbSbLvlRcd");
				};
				
				/**
				 * @desc [btnAllBat]일괄생성 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onClick_BtnAllBat = function() {
					// 조회조건 필수체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipKeyDate", "ipbDeptNm"])){
						return false;
					}
					
					// 일괄개설 전 체크
					doSaveChk(function(pbSuccess) {
						if (pbSuccess){
							// 일괄개설
							doAllBat();
						}
					});
				};
				
				/**
				 * @desc  일괄개설 전 체크
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doSaveChk(poCallBackFunc) {
					//strCommand: saveChk 
					util.Submit.send(app, "subSaveChk", function(pbSuccess){
						if(pbSuccess){
							
							var vsSaveChk = util.DataMap.getValue(app, "dmResList", "strChkYn");
							if(ValueUtil.fixNull(vsSaveChk) == "Y"){
								var vsTitle = ExtControl.getTextValue("btnAllBat");
								// 기존에 있던 자료는 삭제됩니다
								var vsMsg = NLS.APS.M002 + ". " + vsTitle;
								// "기존 DATA는 삭제 됩니다. 일괄 개설 하시겠습니까?" 메시지
								if(!util.Msg.confirm("NLS-CRM-M010", [vsMsg]) ){
									// 콜백함수실행
									if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
									return false;
								}
							}else {
								var vsTitle = ExtControl.getTextValue("btnAllBat");
								// "일괄개설 을(를) 처리하시겠습니까?" 메시지
								if(!util.Msg.confirm("NLS-CRM-M018", [vsTitle]) ){
									// 콜백함수실행
									if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
									return false;
								}
							}
							
							// 콜백함수실행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc 일괄개설
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				function doAllBat() {
					//strCommand: allBat 
					util.Submit.send(app, "subAllBat", function(pbSuccess){
						if(pbSuccess){
							// "처리되었습니다." 헤더 메시지
							util.Msg.notify(app, "NLS.INF.M003");
						}else {
							// "처리가 취소되었습니다." 헤더 메시지
							util.Msg.notify(app, "NLS.INF.M013");
						}
					});
				};
				
				/**
				 * @desc [btnAllDel]일괄삭제 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4 .27
				 */
				moPage.onClick_BtnAllDel = function() {
					// 조회조건 필수체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipKeyDate", "ipbDeptNm"])){
						return false;
					}
					
					var vsTitle = ExtControl.getTextValue("btnAllDel");
					// "일괄삭제 을(를) 처리하시겠습니까?" 메시지
					if(util.Msg.confirm("NLS-CRM-M018", [vsTitle]) ){
						//strCommand: allDel 
						util.Submit.send(app, "subAllDel", function(pbSuccess){
							if(pbSuccess){
								// "처리되었습니다." 헤더 메시지
								util.Msg.notify(app, "NLS.INF.M003");
							}else {
								// "처리가 취소되었습니다." 헤더 메시지
								util.Msg.notify(app, "NLS.INF.M013");
							}
						});
					}
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsEstDivclsSbLvlList");
			dataSet_3.parseData({
				"columns": [
					{"name": "SB_LVL_RCD"},
					{"name": "SB_LVL_NM"},
					{"name": "CU_CD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsEstDivclsCuList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CU_CD"},
					{"name": "CU_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsEstDivclsList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CU_CD"},
					{"name": "CU_NM"},
					{"name": "SB_LVL_RCD"},
					{"name": "SB_LVL_NM"},
					{"name": "DIVCLS_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strChkYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strDivclsNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsOpenSubBat/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subEstDivclsList");
			submission_2.action = "/ccs/ExtCcsOpenSubBat/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataSet_5, false);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveChk");
			submission_3.action = "/ccs/ExtCcsOpenSubBat/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subAllBat");
			submission_4.action = "/ccs/ExtCcsOpenSubBat/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addRequestData(dataMap_4);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subAllDel");
			submission_5.action = "/ccs/ExtCcsOpenSubBat/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_3);
			submission_5.addRequestData(dataMap_4);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subDate");
			submission_6.action = "/cmn/StdCmnDateTime/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_4);
			submission_6.addResponseData(dataMap_4, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnAllBat");
				button_1.value = "";
				button_1.style.setClasses(["btn-commit"]);
				button_1.bind("value").toLanguage("UI-SCR-COLLOPEN");
				if(typeof onBtnAllBatClick == "function") {
					button_1.addEventListener("click", onBtnAllBatClick);
				}
				container.addChild(button_1, {
					"top": "10px",
					"left": "540px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optComment");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_1, {
					"top": "165px",
					"left": "445px",
					"width": "380px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optComment1");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_2, {
					"top": "186px",
					"left": "445px",
					"width": "380px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optComment2");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_3, {
					"top": "207px",
					"left": "445px",
					"width": "380px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnAllDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-commit"]);
				button_2.bind("value").toLanguage("UI-SCR-ALLDELETE");
				if(typeof onBtnAllDelClick == "function") {
					button_2.addEventListener("click", onBtnAllDelClick);
				}
				container.addChild(button_2, {
					"top": "10px",
					"left": "605px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var group_2 = new cpr.controls.Container("grpSch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_4 = new cpr.controls.Output("optSchYearRcd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_4, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "150px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSmtRcd");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_5, {
					"top": "5px",
					"left": "250px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "335px",
					"width": "120px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optDeptNm");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_6, {
					"top": "5px",
					"left": "660px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "745px",
					"width": "140px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDeptNm");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_3.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "885px",
					"width": "20px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.readOnly = true;
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "ST_DT");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "550px",
					"width": "100px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optKeyDate");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_7, {
					"top": "5px",
					"left": "465px",
					"width": "80px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optCuCd");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_8, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbCuCd");
				comboBox_3.enabled = false;
				comboBox_3.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuCd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsEstDivclsCuList"), {
						"label": "CU_NM",
						"value": "CU_CD"
					});
				})(comboBox_3);
				if(typeof onCbbCuCdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbCuCdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "90px",
					"width": "150px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optSbLvlRcd");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_9, {
					"top": "30px",
					"left": "250px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbSbLvlRcd");
				comboBox_4.enabled = false;
				comboBox_4.bind("fieldLabel").toExpression("#optSbLvlRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbLvlRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsEstDivclsSbLvlList"), {
						"label": "SB_LVL_NM",
						"value": "SB_LVL_RCD"
					});
				})(comboBox_4);
				if(typeof onCbbSbLvlRcdSelectionChange == "function") {
					comboBox_4.addEventListener("selection-change", onCbbSbLvlRcdSelectionChange);
				}
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "335px",
					"width": "120px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optDivclsNm");
				output_10.value = "";
				output_10.bind("value").toLanguage("UI-SCR-OPENDIVCLS");
				container.addChild(output_10, {
					"top": "30px",
					"left": "465px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbDivclsNm");
				comboBox_5.enabled = false;
				comboBox_5.bind("fieldLabel").toExpression("#optDivclsNm.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivclsNm");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsEstDivclsList"), {
						"label": "DIVCLS_NM",
						"value": "DIVCLS_NM"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "30px",
					"left": "550px",
					"width": "100px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "개설과목배치";
	cpr.core.Platform.INSTANCE.register(app);
})();
