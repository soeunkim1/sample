/*
 * App URI: app/ccs/extCcsPDutyTimeSrh
 * Source Location: app/ccs/extCcsPDutyTimeSrh.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsPDutyTimeSrh", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsPDutyTimeSrh.xtm"/>
			
			/**
			 * 교과과정검색팝업
			 * @class stdCcsPCurriPopup
			 * @author 박갑수 at 2016. 2. 3
			 */
			var extCcsPDutyTimeSrh = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				 /*
				 * 팝업 내부사용 변수
				 * @member impStdCcsPCurriPopup
				 * @author 박갑수 at 2016. 2. 3
				 */
				var moExtCcsPDutyTimeSrh = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false
					// 선택가능 범위를 제한
					, strCdCls        : ""	// 코드분류
					, strCdPrp1InCond : ""	// 코드용도1 IN 조건절
					, strKeyDate      : ""	// 기준일
					, strWkdtyNm      : "" 	// 직책명
					
					// 선택열 결과 리턴
					, Result : {
						CD                : "",
						LAN_DIV_RCD       : "",
						CD_CLS            : "",
						OG_CD             : "",
						UCD               : "",
						ULAN_DIV_RCD      : "",
						CD_NM             : "",
						CD_SHORT_NM       : "",
						CD_LEN            : "",
						PRT_ORD           : "",
						EFFT_ST_DT        : "",
						EFFT_END_DT       : "",
						CD_DESC           : "",
						UNIT_SYSTEM_RCD   : "",
						CD_PRP1           : "",
						CD_PRP2           : "",
						CD_PRP3           : "",
						CD_PRP4           : "",
						CD_PRP5           : "",
						CD_PRP6           : "",
						CD_PRP7           : "",
						CD_PRP8           : "",
						CD_PRP9           : "",
						CD_PRP10          : ""
					}
				};
				
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onModelConstructDone_StdCcsPCurriPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptMain"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voExtCcsPDutyTimeSrh =  ExtPopUp.getParentVal("moExtCcsPDutyTimeSrh");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voExtCcsPDutyTimeSrh) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moExtCcsPDutyTimeSrh [key] = voExtCcsPDutyTimeSrh [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voExtCcsPDutyTimeSrh.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doOnLoad() {
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbWkdtyDivRcd", "rdCbbCmpDivCd"]);
							
							// 파라미터 받아서 초기 검색조건 세팅.
							var voParam = moExtCcsPDutyTimeSrh;
							
							// 직책명
							if (!ValueUtil.isNull(voParam.strWkdtyNm)) {
								util.Control.setValue(app, "ipbWkdtyNm", voParam.strWkdtyNm);
							}
							
							if(!voParam.controlId.startsWith("btn")){
								var vsWkdtyNm = util.Control.getValue(app, "ipbWkdtyNm");
								
								if (!ValueUtil.isNull(vsWkdtyNm)) {
									util.Header.clickSearch(app);
								}
							}
							
							
							
						}
					});
				};
				
				/**
				 * @desc [ipbSbCdNm]교과목명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onKeyDown_IpbSbCdNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnSearch = function() {
					
					// 교과과정목록 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				
				
				
				/**
				 * @desc 교과과정목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doList(poCallBackFunc) {
					
					var strWkdtyDivRcd = util.DataMap.getValue(app, "dmReqKey", "strWkdtyDivRcd");
					var vsCdCls = ExtInstance.getValue("/root/resOnLoad/wkdtyDivRcdList/row", "CD_PRP1", "child::CD='"+strWkdtyDivRcd+"'");
					
					util.DataMap.setValue(app, "dmReqKey", "strCdCls", vsCdCls);
					
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdMain");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [rptCcsCurCls]교과과정목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onDoubleClick_RptCcsCurCls = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				/**
				 * @desc [btnSearch]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doCloseOk(){
					var voResult = moExtCcsPDutyTimeSrh.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdMain"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdMain");
					var vsRptId = "rptMain";
					
					voResult.CD                = util.Grid.getCellValue(app, vsRptId, "CD"              ,vnIdx);
					voResult.LAN_DIV_RCD       = util.Grid.getCellValue(app, vsRptId, "LAN_DIV_RCD"     ,vnIdx);
					voResult.CD_CLS            = util.Grid.getCellValue(app, vsRptId, "CD_CLS"          ,vnIdx);
					voResult.OG_CD             = util.Grid.getCellValue(app, vsRptId, "OG_CD"           ,vnIdx);
					voResult.UCD               = util.Grid.getCellValue(app, vsRptId, "UCD"             ,vnIdx);
					voResult.ULAN_DIV_RCD      = util.Grid.getCellValue(app, vsRptId, "ULAN_DIV_RCD"    ,vnIdx);
					voResult.CD_NM             = util.Grid.getCellValue(app, vsRptId, "CD_NM"           ,vnIdx);
					voResult.CD_SHORT_NM       = util.Grid.getCellValue(app, vsRptId, "CD_SHORT_NM"     ,vnIdx);
					voResult.CD_LEN            = util.Grid.getCellValue(app, vsRptId, "CD_LEN"          ,vnIdx);
					voResult.PRT_ORD           = util.Grid.getCellValue(app, vsRptId, "PRT_ORD"         ,vnIdx);
					voResult.EFFT_ST_DT        = util.Grid.getCellValue(app, vsRptId, "EFFT_ST_DT"      ,vnIdx);
					voResult.EFFT_END_DT       = util.Grid.getCellValue(app, vsRptId, "EFFT_END_DT"     ,vnIdx);
					voResult.CD_DESC           = util.Grid.getCellValue(app, vsRptId, "CD_DESC"         ,vnIdx);
					voResult.UNIT_SYSTEM_RCD   = util.Grid.getCellValue(app, vsRptId, "UNIT_SYSTEM_RCD" ,vnIdx);
					voResult.CD_PRP1           = util.Grid.getCellValue(app, vsRptId, "CD_PRP1"         ,vnIdx);
					voResult.CD_PRP2           = util.Grid.getCellValue(app, vsRptId, "CD_PRP2"         ,vnIdx);
					voResult.CD_PRP3           = util.Grid.getCellValue(app, vsRptId, "CD_PRP3"         ,vnIdx);
					voResult.CD_PRP4           = util.Grid.getCellValue(app, vsRptId, "CD_PRP4"         ,vnIdx);
					voResult.CD_PRP5           = util.Grid.getCellValue(app, vsRptId, "CD_PRP5"         ,vnIdx);
					voResult.CD_PRP6           = util.Grid.getCellValue(app, vsRptId, "CD_PRP6"         ,vnIdx);
					voResult.CD_PRP7           = util.Grid.getCellValue(app, vsRptId, "CD_PRP7"         ,vnIdx);
					voResult.CD_PRP8           = util.Grid.getCellValue(app, vsRptId, "CD_PRP8"         ,vnIdx);
					voResult.CD_PRP9           = util.Grid.getCellValue(app, vsRptId, "CD_PRP9"         ,vnIdx);
					voResult.CD_PRP10          = util.Grid.getCellValue(app, vsRptId, "CD_PRP10"        ,vnIdx);
			
					ExtPopUp.closeLayeredPopup("callbackExtCcsPDutyTimeSrh", moExtCcsPDutyTimeSrh);
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsWkdtyDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMain");
			dataSet_2.parseData({
				"info": "CCS_CUR_CLS@ST_DT,END_DT,CU_CD,CU_OBJ_DIV_RCD,SB_CD,SB_OBJ_DIV_RCD",
				"columns": [
					{"name": "CD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CD_CLS"},
					{"name": "OG_CD"},
					{"name": "UCD"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_NM"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_LEN"},
					{"name": "PRT_ORD"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "STD_YN"},
					{"name": "CD_PRP4"},
					{"name": "CD_PRP5"},
					{"name": "CD_PRP6"},
					{"name": "CD_PRP7"},
					{"name": "CD_PRP8"},
					{"name": "CD_PRP9"},
					{"name": "CD_PRP10"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strCdCls",
						"dataType": "string"
					},
					{
						"name": "strWkdtyNm",
						"dataType": "string"
					},
					{
						"name": "strWkdtyDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsDutyTimeSrh/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsDutyTimeSrh/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSpCuList");
			submission_3.action = "/ccs/StdCcsCurriPopup/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_1, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btnCloseOk");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_1.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_1, {
				"top": "375px",
				"left": "685px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseCancel");
			button_2.value = "";
			button_2.style.setClasses(["btn-commit"]);
			button_2.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_2.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_2, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCcsCurCls");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-CURLIST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "220px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.init({
					"dataSet": app.lookup("dsMain"),
					"columns": [
						{"width": "40px"},
						{"width": "124px"},
						{"width": "97px"},
						{"width": "450px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "CD_CLS";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsWkdtyDivRcdList"), {
												"label": "CD_NM",
												"value": "CD_PRP1"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("CD_CLS");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CD_NM";
								}
							}
						]
					}
				});
				if(typeof onGrdMainDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdMainDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "728px",
					"height": "263px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "740px",
				"height": "298px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "673px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optCmpDivRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbWkdtyDivRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strWkdtyDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsWkdtyDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "79px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSbCdNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "178px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbWkdtyNm");
				inputBox_1.maxLength = 10;
				inputBox_1.bind("fieldLabel").toExpression("#optSbCdNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strWkdtyNm");
				if(typeof onIpbWkdtyNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbWkdtyNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "262px",
					"width": "318px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "740px",
				"height": "32px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "직급/직책검색 팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
