/*
 * App URI: app/ccs/extCcsSAttendAbnPcnd
 * Source Location: app/ccs/extCcsSAttendAbnPcnd.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSAttendAbnPcnd", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsSAttendAbnPcnd.xtm"/>
			
			/**
			 * 결석자현황
			 * @class extCcsSAttendAbnPcnd
			 * @author 박갑수 at 2016. 5. 9
			 */
			var extCcsSAttendAbnPcnd = function() {
				var moPage = new Page();
				
				var moPObject = new PObject();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnDeptNm",
					iCd					:	"",
					iNm					:	"ipbDeptNm",
					iObjDivRcd			:	["CC009OG", "CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strDeptCd",
					oCdNm				:	"ipbDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){}
				}];
				
				// SMS/Email 발송
				moPObject.moIdsForExtCmnSender = {
					rptId			 				: "rptExtCcsAttendProf",											// (필수) SMS 리피트 id
					sendDivChar 	 			: ["rhBtnDivclsProfNoDtl"], 	// (선택) 발송문구구분_발송내용의 @ 키워드와 매핑됨
					sndId						: "CMN01404",														// (선택) 발송id
					unitSystemRcd			: "CB001CCS",														// (선택) 단위시스템구분코드		-- 발송Id입력 시 필수
					repNm						: "rhBtnDivclsProfNmDtl", 										// (필수 )수신자명 리피트 헤더 ID
					
					/*************************************SMS*************************************************************/
					phoneNo			 		: "rhBtnProfClpNoDtl",													// (필수) 휴대폰번호 그리드 헤더 id
					defSenderSms     		: "01034090203",															// (선택) 보내는이(SMS)
					sendMsgContSms    	: "",																			// (선택) SMS발송 내용
					sendTitleSms        	: "",																			// (선택) SMS발송 제목
					/******************************************************************************************************/
					
					/*************************************Email*************************************************************/
					email			 			: "",														// (필수) 이메일 그리드 헤더 id
					defSenderEmail 	 		: "", 														// (선택) 보내는이(Email)
					defPersonalNmEmail 	: "",												 		// (선택) 보내는이 명(닉네임)(Email)
					sendMsgContEmail	: "",														// (선택) Email발송 내용
					sendTitleEmail			: "",														// (선택) Email발송 제목
					/******************************************************************************************************/
					
					callBackfunc : function(pbSuccess, psSmsEmailDivCd, paIdxs) {
						/*						
						pbSuccess		: 성공여부(현재 성공시에만 콜백함수 호출됨)
						psSmsEmailDivCd : CMN01302 (이메일). CMN01301(SMS)
						paIdxs			: 선택된 그리드 index
						*/
					}
				};
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onModelConstructDone_ExtCcsSAttendAbnPcnd = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptExtCcsAttend", "rptExtCcsAttendProf"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 권한에따른 조회조건 처리
					doVisibleCtlByAuth();
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipStLsnDt", "dipEndLsnDt", "cbbWeekSeqSt"]);
							
							util.SelectCtl.selectItem(app, "cbbWeekSeqSt", 0);
							
							page.onValueChanged_CbbWeekSeqSt();
			
							// 초기값 : 비율[RATE]
							util.Control.setValue(app, "rdbRateOrTimeCnt", "RATE");
							
							//if (moPageInfo.authRngRcd == "CC00104") {
								// 조회조건값 세팅 : 코드값 -CCS10901
								doSetAuthSchCtl();
							//}
							
						}
					}, true);
				};
				
				/**
				 * 권한에따른 조회조건 처리
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 5. 9
				 */	
				function doVisibleCtlByAuth() {
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Control.setVisible(app, false, ["lblRowCnt_rptExtCcsAttendProf", "rptExtCcsAttendProf", "ckbCloseYn", "impSnd", "btnSave", "lblDeptNm", "ipbDeptNm", "btnDeptNm", "lblLsnDt", "dipStLsnDt", "lblDtDiv", "dipEndLsnDt", "rdbRateOrTimeCnt", "lblRate", "ipbRate",  "lblAbnTimeCnt", "ipbAbnTimeCnt"]);
						util.Control.setEnable(app, false, ["cbbSchYearRcd", "cbbSmtRcd", "ipbProfNm"]);
						util.Control.setVisible(app, true, ["lblProfNm", "ipbProfNm"]);
						
						util.Control.setStyleAttr(app, "lblRowCnt_rptExtCcsAttend", "left", "1158");
						util.Control.setStyleAttr(app, "rptExtCcsAttend", "width", "1213");
									
						util.Control.setValue(app, "ipbProfNm", moUserInfo.userNm);
						util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", moUserInfo.id);
					}
				};
				
				/**
				 * 조회조건값 세팅
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 5. 9
				 */
				function doSetAuthSchCtl() {
					// 수업시작일
					var vsStLsnDt = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP1" , "1");
					
					//ExtInstance.setValue("/root/reqKey/strStDt", vsStLsnDt);
					//ExtControl.setValue("dipStLsnDt", vsStLsnDt);
					
					// 수업종료일
					var vsEndLsnDt = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP2" , "1");
					
					//ExtInstance.setValue("/root/reqKey/strEndDt", vsEndLsnDt);					
					//ExtControl.setValue("dipEndLsnDt", vsEndLsnDt);
					
					// 비율or시수
					var vsRateOrTimeCnt = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP3" , "1");
					util.DataMap.setValue(app, "dmReqKey", "strRateOrTimeCnt", vsRateOrTimeCnt);	
					util.Control.setValue(app, "rdbRateOrTimeCnt", vsRateOrTimeCnt);
					
					// 비율
					var vsRate = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP4" , "1");
					util.DataMap.setValue(app, "dmReqKey", "strRate", vsRate);
					util.Control.setValue(app, "ipbRate", vsRate);
					
					//--비율or시수 에 따라 보이기/안보이기
					page.rdbRateOrTimeCnt();
					
					
					// 총시수
					var vsLectTimeCnt = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP5" , "1")
					util.DataMap.setValue(app, "dmReqKey", "strLectTimeCnt", vsLectTimeCnt);
					//ExtControl.setValue("ipbLectTimeCnt", vsLectTimeCnt);
					
					// 결석시수
					var vsAbnTimeCnt = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP6" , "1");
					util.DataMap.setValue(app, "dmReqKey", "strAbnTimeCnt", vsAbnTimeCnt);
					util.Control.setValue(app, "ipbAbnTimeCnt", vsAbnTimeCnt);
					
					// 마감여부
					var vsCloseYn = util.DataSet.getValue(app, "dsSchReqList", "CD_PRP7" , "1");
					util.DataMap.setValue(app, "dmReqKey", "strCloseYn", vsCloseYn);
					util.Control.setValue(app, "ckbCloseYn", vsCloseYn);
					
					//ExtModel.dispatch("btnSearch", "DOMActivate");
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
								//--주차를 조회한다.
							page.doWeekList();
							
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				
				/**
				 * @desc 주차를 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 25
				 */
				function doWeekList(poCallBackFunc) {
					
					
					
					util.DataMap.setValue(app, "dmReqKey", "strStWeek", "");
					//strCommand: weekList 
					util.Submit.send(app, "subWeekList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbWeekSeqSt"]);
							
							page.onValueChanged_CbbWeekSeqSt();
							
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				
				
				/**
				 * @desc [btnDeptNm]소속(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onClick_BtnDeptNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbDeptNm]소속 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [dipStLsnDt]수업기간(시작) onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_DipStLsnDt = function() {
					if(!doCheckDate("ST_DT")){
						util.Control.setValue(app, "dipStLsnDt", "");
					}
				};
				
				/**
				 * @desc [dipEndLsnDt]수업기간(종료) onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_DipEndLsnDt = function() {
					if( !doCheckDate("END_DT")){
						util.Control.setValue(app, "dipEndLsnDt", "");
					}
				};
				
				/**
				 * @desc 시작일이 종료일보다 크거나 종료일이 시작일보다 작은지 검사
				 * @param psColNm		(필수) 날짜컬럼명
				 * @return boolean
				 * @author 박갑수 at 2016. 5. 9
				 */
				function doCheckDate(psColNm){
					// 유효성 true or false
					var vbValid = true;
			
					// 시작일자
					var vsStDt = util.Control.getValue(app, "dipStLsnDt").substring(0, 8);
					// 종료일자
					var vsEndDt = util.Control.getValue(app, "dipEndLsnDt").substring(0, 8);
					
					// 시작일 유효성 체크
					if(psColNm == "ST_DT"){
						if(!ValueUtil.isNull(vsEndDt) && vsStDt > vsEndDt){
							// "시작일이 종료일 보다 클 수 없습니다." 메시지 출력
							util.Msg.alert("NLS-CSS-M063");
							vbValid = false;
							return vbValid;
						}
			
					// 종료일 유효성 체크
					} else if(psColNm == "END_DT"){
						if(!ValueUtil.isNull(vsStDt) && vsStDt > vsEndDt){
							util.Msg.alert("NLS-CSS-M064");
							vbValid = false;
							return vbValid;
						}
					}
					
					return vbValid;
				};
				
				/**
				 * @desc [rdbRateOrTimeCnt]비율or시수 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_RdbRateOrTimeCnt = function() {
					
					//--비율or시수 에 따라 보이기/안보이기
					page.rdbRateOrTimeCnt();
					
					// 비율, 총시수, 결석시수 초기화
					util.Control.setValue(app, "ipbRate", "");
					//ExtControl.setValue("ipbLectTimeCnt", "");
					util.Control.setValue(app, "ipbAbnTimeCnt", "");
				};
				
				
				
				/**
					비율 or 시수 에 따라 컨트롤을 보이기/안보이기 한다.
				*/
				moPage.rdbRateOrTimeCnt = function() {
					var vsRateOrTimeCnt = util.Control.getValue(app, "rdbRateOrTimeCnt");
			
					if (moPageInfo.authRngRcd != "CC00104") {
						// 비율일경우
						if(ValueUtil.fixNull(vsRateOrTimeCnt) == "RATE"){
							util.Control.setVisible(app, true, ["lblRate", "ipbRate"]);
							util.Control.setVisible(app, false, [ "lblAbnTimeCnt", "ipbAbnTimeCnt"]);
			
						// 교수일경우
						}else {
							util.Control.setVisible(app, false, ["lblRate", "ipbRate"]);
							util.Control.setVisible(app, true, [ "lblAbnTimeCnt", "ipbAbnTimeCnt"]);
						}
					}
				}
				
				
				
				/**
				 * @desc [ipbRate]비율 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_IpbRate = function() {
					ValidUtil.checkIntegerDecimal("ipbRate", 3, 2, true);
				};
				
				/**
				 * @desc [ipbLectTimeCnt]총시수 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_IpbLectTimeCnt = function() {
					ValidUtil.checkIntegerDecimal("ipbLectTimeCnt", 3, 0, true);
				};
				
				/**
				 * @desc [ipbAbnTimeCnt]결석시수 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_IpbAbnTimeCnt = function() {
					ValidUtil.checkIntegerDecimal("ipbAbnTimeCnt", 3, 0, true);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
				
					// 비율or시수
					var vsRateOrTimeCnt = util.Control.getValue(app, "rdbRateOrTimeCnt");
					
					// 비율일경우
					if(ValueUtil.fixNull(vsRateOrTimeCnt) == "RATE"){
						// 조회조건 필수 체크
						if (moPageInfo.authRngRcd == "CC00104") {
							if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
								return false;
							}
						}else{
							if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbDeptNm", "cbbWeekSeqSt", "ipbRate"])){
								return false;
							}
						}	
						
									
					// 시수일경우
					}else {
							// 조회조건 필수 체크
						if (moPageInfo.authRngRcd == "CC00104") {
							if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbWeekSeqSt"])){
								return false;
							}
						}else{
						
							if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbDeptNm", "cbbWeekSeqSt", "ipbAbnTimeCnt"])){
								return false;
							}
						}
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 결석자현황 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdExtCcsAttend");
							util.Control.redraw(app, "grdExtCcsAttendProf");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnSave]조건저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc 학과별 반편성 목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				function doSave() {
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
								// 저장 : "저장되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M001");
						}
					});
				};
			
				/**
				 * @desc import SmsEmail발송 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onLoadImportDone_ImpSnd = function() {
					doExtCmnSmsEmailLoad();
				};
				
				/**
				 * @desc [rhCkbSelect]패널 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 9
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/*
					주차를 변경 시 시작일자 종료일자를 변경한다.
				*/
				moPage.onValueChanged_CbbWeekSeqSt = function() {
					
					var vsWeekSeq = util.DataMap.getValue(app, "dmReqKey", "strStWeek");
					
					if(vsWeekSeq != null && vsWeekSeq != ""){
						var vsStDt = ExtInstance.getValue("/root/resOnLoad/listWeekSeq/row", "ST_DT", "child::WEEK_SEQ = '"+vsWeekSeq+"'");
						var vsEndDt = ExtInstance.getValue("/root/resOnLoad/listWeekSeq/row", "END_DT", "child::WEEK_SEQ = '"+vsWeekSeq+"'");
						
						util.DataMap.setValue(app, "dmReqKey", "strStDt"		, vsStDt);
						util.DataMap.setValue(app, "dmReqKey", "strEndDt"	, vsEndDt);
						
						util.Control.redraw(app, ["dipStLsnDt", "dipEndLsnDt"]);
					}
					
					
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchReqList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_PRP4"},
					{"name": "CD_PRP5"},
					{"name": "CD_PRP6"},
					{"name": "CD_PRP7"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListWeekSeq");
			dataSet_4.parseData({
				"columns": [
					{"name": "WEEK_SEQ"},
					{"name": "PRT_WEEK_SEQ"},
					{"name": "ST_DT"},
					{"name": "END_DT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsExtCcsAttend");
			dataSet_5.parseData({
				"columns": [
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "PROF_NM"},
					{"name": "DIVCLS_NM"},
					{"name": "SB_LVL_RCD_NM"},
					{"name": "PNT"},
					{"name": "LECT_TIME_CNT"},
					{"name": "LECT_CLOSE_CNT"},
					{"name": "SA_CD_NM"},
					{"name": "DIVCLS_PROF_NM"},
					{"name": "STUD_NO"},
					{"name": "STUD_NM"},
					{"name": "ABN_TIME_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsExtCcsAttendProf");
			dataSet_6.parseData({
				"columns": [
					{"name": "DIVCLS_PROF_NM"},
					{"name": "DIVCLS_PROF_NO"},
					{"name": "PROF_CLP_NO"},
					{"name": "OG_NM"},
					{"name": "WKGRD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strRate",
						"dataType": "string"
					},
					{
						"name": "strLectTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strAbnTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strProfNm",
						"dataType": "string"
					},
					{
						"name": "strRateOrTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strCloseYn",
						"dataType": "string"
					},
					{
						"name": "strStWeek",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsAttendAbnPcnd/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/ExtCcsAttendAbnPcnd/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_5, false);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subWeekList");
			submission_4.action = "/ccs/ExtCcsAttendAbnPcnd/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_4, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSave");
			submission_5.action = "/ccs/ExtCcsAttendAbnPcnd/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-LECTATTENDEND");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExtCcsAttend");
				grid_1.init({
					"dataSet": app.lookup("dsExtCcsAttend"),
					"columns": [
						{"width": "40px"},
						{"width": "158px"},
						{"width": "75px"},
						{"width": "153px"},
						{"width": "45px"},
						{"width": "72px"},
						{"width": "55px"},
						{"width": "40px"},
						{"width": "40px"},
						{"width": "79px"},
						{"width": "76px"},
						{"width": "90px"},
						{"width": "59px"},
						{
							"width": "83px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DIVCLS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-GUD_PROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-TIME_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHARGPROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ABNTIMECNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LECTCLOSECNT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "LECT_TIME_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "STUD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ABN_TIME_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "LECT_CLOSE_CNT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "990px",
					"height": "538px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSnd");
				if(typeof onEmaSndAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaSndAppReady);
				}
				cpr.core.App.load("app/cmn/impExtCmnSmsEmailSend", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "818px",
					"width": "330px",
					"height": "25px"
				});
				var grid_2 = new cpr.controls.Grid("grdExtCcsAttendProf");
				grid_2.init({
					"dataSet": app.lookup("dsExtCcsAttendProf"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "62px"},
						{"width": "75px"},
						{"width": "143px"},
						{"width": "75px"},
						{
							"width": "75px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PROFNUM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-GUD_PROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-GUD_PROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-GUD_PROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-HANDPHONE");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_PROF_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OG_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "WKGRD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROF_CLP_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "1005px",
					"width": "213px",
					"height": "538px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "65px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "75px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "170px",
					"width": "65px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "240px",
					"width": "80px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optLsnDt");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-LSNTERM");
				container.addChild(output_3, {
					"top": "30px",
					"left": "527px",
					"width": "70px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipStLsnDt");
				dateInput_1.visible = false;
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optLsnDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStDt");
				if(typeof onDipStLsnDtValueChange == "function") {
					dateInput_1.addEventListener("value-change", onDipStLsnDtValueChange);
				}
				container.addChild(dateInput_1, {
					"top": "30px",
					"left": "602px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optDtDiv");
				output_4.value = "~";
				container.addChild(output_4, {
					"top": "30px",
					"left": "692px",
					"width": "15px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipEndLsnDt");
				dateInput_2.visible = false;
				dateInput_2.userAttr({"require": "Y"});
				dateInput_2.bind("fieldLabel").toExpression("#optLsnDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndDt");
				if(typeof onDipEndLsnDtValueChange == "function") {
					dateInput_2.addEventListener("value-change", onDipEndLsnDtValueChange);
				}
				container.addChild(dateInput_2, {
					"top": "30px",
					"left": "707px",
					"width": "90px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbRateOrTimeCnt");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRateOrTimeCnt");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("비율", "RATE"));
					radioButton_1.addItem(new cpr.controls.Item("시수", "LECT_TIME_CNT"));
				})(radioButton_1);
				if(typeof onRdbRateOrTimeCntValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbRateOrTimeCntValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "5px",
					"left": "805px",
					"width": "100px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optDeptNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "5px",
					"left": "325px",
					"width": "65px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "395px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "495px",
					"width": "20px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optRate");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-GLS-RATE");
				container.addChild(output_6, {
					"top": "5px",
					"left": "915px",
					"width": "65px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("ipbRate");
				numberEditor_1.format = "999,999";
				numberEditor_1.userAttr({"require": "Y"});
				numberEditor_1.bind("fieldLabel").toExpression("#optRate.value");
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRate");
				if(typeof onIpbRateValueChange == "function") {
					numberEditor_1.addEventListener("value-change", onIpbRateValueChange);
				}
				container.addChild(numberEditor_1, {
					"top": "5px",
					"left": "985px",
					"width": "40px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optLectTimeCnt");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-SCR-ALLTIMECNT");
				container.addChild(output_7, {
					"top": "30px",
					"left": "806px",
					"width": "65px",
					"height": "25px"
				});
				var numberEditor_2 = new cpr.controls.NumberEditor("ipbLectTimeCnt");
				numberEditor_2.visible = false;
				numberEditor_2.format = "999";
				numberEditor_2.userAttr({"require": "Y"});
				numberEditor_2.bind("fieldLabel").toExpression("#optLectTimeCnt.value");
				numberEditor_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strLectTimeCnt");
				if(typeof onIpbLectTimeCntValueChange == "function") {
					numberEditor_2.addEventListener("value-change", onIpbLectTimeCntValueChange);
				}
				container.addChild(numberEditor_2, {
					"top": "30px",
					"left": "876px",
					"width": "40px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optAbnTimeCnt");
				output_8.value = "";
				output_8.style.setClasses(["require"]);
				output_8.bind("value").toLanguage("UI-SCR-ABNTIMECNT");
				container.addChild(output_8, {
					"top": "5px",
					"left": "914px",
					"width": "76px",
					"height": "25px"
				});
				var numberEditor_3 = new cpr.controls.NumberEditor("ipbAbnTimeCnt");
				numberEditor_3.visible = false;
				numberEditor_3.format = "999";
				numberEditor_3.userAttr({"require": "Y"});
				numberEditor_3.bind("fieldLabel").toExpression("#optAbnTimeCnt.value");
				numberEditor_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strAbnTimeCnt");
				if(typeof onIpbAbnTimeCntValueChange == "function") {
					numberEditor_3.addEventListener("value-change", onIpbAbnTimeCntValueChange);
				}
				container.addChild(numberEditor_3, {
					"top": "5px",
					"left": "995px",
					"width": "40px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optProfNm");
				output_9.value = "";
				output_9.style.setClasses(["require"]);
				output_9.bind("value").toLanguage("UI-DB-PROF_NM");
				container.addChild(output_9, {
					"top": "5px",
					"left": "325px",
					"width": "65px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbProfNm");
				inputBox_2.visible = false;
				inputBox_2.enabled = false;
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optProfNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfNm");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "395px",
					"width": "100px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-SCHREQSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbCloseYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "출결마감 완료 자료";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCloseYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "915px",
					"width": "185px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optWeekNm");
				output_10.value = "주";
				output_10.style.css({
					"text-align" : "center"
				});
				container.addChild(output_10, {
					"top": "5px",
					"left": "524px",
					"width": "47px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbWeekSeqSt");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optWeekNm.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strStWeek");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsListWeekSeq"), {
						"label": "PRT_WEEK_SEQ",
						"value": "WEEK_SEQ"
					});
				})(comboBox_3);
				if(typeof onCbbWeekSeqStSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbWeekSeqStSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "575px",
					"width": "222px",
					"height": "26px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "결석자현황";
	cpr.core.Platform.INSTANCE.register(app);
})();
