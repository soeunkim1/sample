/*
 * App URI: app/ccs/extCcsSAttendPoto
 * Source Location: app/ccs/extCcsSAttendPoto.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSAttendPoto", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCcsSAttendPoto.xtm"/>
			
			var extCcsSAttendPoto = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
					
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaNm",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/reqKey/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strSaObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){}
				}];
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{ 
					 controlId					: "btnSbCd",			
					 iDivClsYn					: "Y",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "/root/reqKey/strSaCd",			
					 iSaNm        				: "ipbSaNm",		
					 iSaObjDivRcd       		: "/root/reqKey/strSaObjDivRcd",		
					 iSbCd        				: "ipbSbNm",			
					 iSbNm        				: "",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "/root/reqKey/strSbCd",			
					 oSbNm					: "ipbSbNm",			
					 oSaCd						: "",			
					 oSaNm					: "",			
					 oCuCd						: "/root/reqKey/strCuCd",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "/root/reqKey/strDivclsNm",	
					 oCmpDivRcd				: "",		
					 oPnt							: "",		
					 oTheoTc					: "",	
					 oEpacTc					: "",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "/root/reqKey/strRefKey",		
					 func 					:  function(voParam){
						util.Control.redraw(app, "ipbDivclsNm");
						if(voParam != null){
							if("" != voParam.Result.REF_KEY){
								
								util.DataMap.setValue(app, "dmReqKey", "strSaObjDivRcd", "CC009SA");
								util.DataMap.setValue(app, "dmReqKey", "strSaCd", voParam.Result.SA_CD);
								util.Control.setValue(app, "ipbSaNm", voParam.Result.SA_NM);			
								util.Control.redraw(app, "ipbSaNm");
								
							}
						}
						
					}
				 }];
				
				// 교직원 검색
				 moPObject.moIdsForStdCmnPPrsnSearch = [
				{
					 controlId					: "btnProfObjNo",
					 istrStaffGrpAuth			: "",					
					 istrWkdtyAuth			: "true",				
					 iKeyDate					: "",	
					 iStaffNo					: "ipbProfNm",			
					 iStaffGrpRcd				: "",		
					 iStaffGrpRcdLock		: "", 			
					 iStaffSubGrpRcd		: "",	
					 iStaffSubGrpRcdLock	: "",				
					 iStatusRcd				: "",				
					 iRepNm					: "",				
					 iObjDivRcd				: "",
					 iObjCd						: "",				
					 iObjNm					: "",	
					 istrObjCdInList			: "",
					 iWkgrdRcd				: "",	
					  
					 oObjNo					: "/root/reqKey/strProfObjNo",
					 oStaffNo					: "",					
					 oRepNm					: "ipbProfNm",					
					 oBirthday					: "",					
					 oStatNm					: "",				
					 oStatRcd					: "",					
					 oOgNm					: "",				
					 oOgCd						: "",				
					 oPosNm					: "",				
					 oPosCd					: "",				
					 oWkgrdNm				: "",			
					 oWkgrdRcd				: "",				
					 oStaffGrpRcd				: "",					
					 oStaffSubGrpRcd		: "",				
					 oHoRcd					: "",					
					 oSsn						: "",					
					 oWkdtyRcd				: "",					
					 oWkdtyNm				: "",				
					 func                         : function(poRtnValue){
						 
						page.doChargeSbList();
					 }
				}];
				
				
				/*
					학생 검색 팝업
				*/
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnPopStudSearch",
					iStudNo 					: "ipbStudNo",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/keyDateMap/END_DT",
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					:"",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqKey/strStudId",
					oStudNo 					: "ipbStudNo",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						page.doChargeSbList();
					}
				}
				];
				
				
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author 유형기 at 2016.7.7
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
							
				/**
				 * @desc 화면 초기화
				 * @return 
				 * @author 양선하 2016.06.20
				 */
				moPage.onModelConstructDone_ExtCcsSAttendPoto = function() {
					doOnLoad();
				};
			
			
				/**
				 * @desc 온로드 실행
				 * @return 
				 * @author 유형기 at 2016.7.7
				 */
				function doOnLoad() {
					
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					
					// 권한에따른 교수명 컬럼 검색가능 여부
					doVisibleCtlByAuth();
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
					
						if(pbSuccess){
								util.Control.setValue(app, "dipKeyDate",util.DataMap.getValue(app, "dmKeyDateMap", "END_DT"));
								
								util.DataMap.setValue(app, "dmReqKey", "strPrtData", "1");
								
								//조회조건 컨트롤 refresh(학년도, 학기)
								util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd","dipKeyDate", "cbbProcRlst", "cbbPrtData"]);
								util.SelectCtl.selectItem(app, "cbbProcRlst", "CA20600");
								util.SelectCtl.selectItem(app, "cbbPrtOrd", 0);
								util.SelectCtl.selectItem(app, "cbbPrtData", 0);
								util.SelectCtl.selectItem(app, "cbbProcRlst", "");
								
								var vsDefYear = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
								var vsDefSmt = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
								var vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "END_DT");
								
								if(ValueUtil.isNull(vsDefYear)) {
									// 콤보박스 첫 번째 값 세팅
									util.SelectCtl.selectItem(app, "cbbSchYearRcd", 0);
								} else {
									// 학년도로 기본 셋팅
									util.Control.setValue(app, "cbbSchYearRcd",vsDefYear);
									
								}
								
								if(ValueUtil.isNull(vsDefSmt)) {
									// 콤보박스 첫 번째 값 세팅
									util.SelectCtl.selectItem(app, "cbbSmtRcd", 0);
								} else {
									// 학기로 기본 셋팅
									util.Control.setValue(app, "cbbSmtRcd",vsDefSmt);
								}
								
								// 기준일 세팅
								util.DataMap.setValue(app, "dmRoot", "reqKey", "strKeyDate", vsKeyDate);
								
								// 학사부서 focus
								util.Control.setFocus(app, "ipbSaNm");
								
								// 개인권한[CC00104]일경우 담당교과목 조회
								if(moPageInfo.authRngRcd == "CC00104"){
									// 담당교과목목록 조회
									doChargeSbList();
								}
							
								
						}
					});
				};
				
				/**
				 * 권한에 따른 교수명 활성/비활성 처리
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 5. 2
				 */	
				function doVisibleCtlByAuth() {
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Control.setVisible(app, false, ["lblSaNm", "ipbSaNm", "btnSaNm", "btnProfObjNo"]);
						util.Control.setVisible(app, true, ["lblProfNm", "ipbProfNm"]);
						util.Control.setValue(app, "rdbProfOrSa", "PROF");
						util.Control.setEnable(app, false, ["ipbProfNm", "rdbProfOrSa"]);
						
						util.Control.setValue(app, "ipbProfNm", moUserInfo.userNm);
						util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", moUserInfo.id);
						util.Control.setStyleAttr(app, "ipbProfNm", "width", "150");
						
						page.doChagnCtlAuth();
					}else {
						util.Control.setValue(app, "rdbProfOrSa", "SA");
					}
				};
				
				/**
				 * @desc 조회조건(학사부서)항목초기화
				 * @param 
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				function doClearSchCtl() {
					
					// 학사부서
					util.Control.setValue(app, "ipbSaNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaObjDivRcd", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", "");
				};
				
			
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회 함수
				 * @param 
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				function doChangeYearSmt(psDiv) {
					
					util.DataMap.setValue(app, "dmRoot", "keyDateMap", "YEAR", util.DataMap.getValue(app, "dmReqKey", "strSchYearRcd"));
					util.DataMap.setValue(app, "dmRoot", "keyDateMap", "SMT", util.DataMap.getValue(app, "dmReqKey", "strSmtRcd"));
					
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						
						
						
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							var vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "END_DT");
							
							var vsProfOrSa = util.DataMap.getValue(app, "dmReqKey", "strProfOrSa");
							
							// 조회조건 세팅
							util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							util.DataMap.setValue(app, "dmRoot", "reqKey", "strKeyDate", vsKeyDate);
							
							if("PROF" == vsProfOrSa){
								page.doChargeSbList();
							}
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSchYearRcd);
							}
							util.DataMap.setValue(app, "dmRoot", "reqKey", "strKeyDate", "");
						}
					});
				};
				
				/**
				 * @desc [btnSearch] 조회 버튼 on click 이벤트
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				moPage.onClick_BtnSearch = function() {
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 교수명 or 학사부서
					var vsProfOrSa = util.Control.getValue(app, "rdbProfOrSa");
					var vsCosRefKey = util.DataMap.getValue(app, "dmReqKey", "strSbRefKey");
					var vsSaRefKey = util.DataMap.getValue(app, "dmReqKey", "strRefKey");
					var vsRefKey = "";
					// 교과목일경우
					if(ValueUtil.fixNull(vsProfOrSa) == "SA"){
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaNm", "dipKeyDate", "cbbPrtOrd", "cbbPrtData"])){
							return false;
						}
						
						vsRefKey = vsSaRefKey;
									
					// 교수일경우
					}else if(ValueUtil.fixNull(vsProfOrSa) == "PROF"){
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbProfNm", "dipKeyDate", "cbbPrtOrd", "cbbPrtData"])){
							return false;
						}
						
						vsRefKey = vsCosRefKey;
						
						//--학생일 경우
					}else{
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbStudNo", "dipKeyDate", "cbbPrtOrd", "cbbPrtData"])){
							return false;
						}
						
						vsRefKey = vsCosRefKey;
					}
					
					var vsYear = util.DataMap.getValue(app, "dmReqKey", "strProcRlst");
					
					if(vsYear == "CA20600"){
						vsYear = "";
					}
					
					
					
					
					var voParam = {
							p_strLanDivRcd 		: msDefaultLocale,	 														// 언어키
							p_strKeyDate 		: util.DataMap.getValue(app, "root/reqKey", "strKeyDate"),			// 기준일자(시작일)
							p_strSchYearRcd 	: util.DataMap.getValue(app, "root/reqKey", "strSchYearRcd"),		// 학년도코드
							p_strSmtRcd 			: util.DataMap.getValue(app, "root/reqKey", "strSmtRcd"),			// 학기코드
							p_strSaCd				: util.DataMap.getValue(app, "root/reqKey", "strSaCd"),				// 학과코드
							p_strProfObjNo		: util.DataMap.getValue(app, "dmReqKey", "strProfObjNo"),			// 교수
							p_strRefKey			: vsRefKey,				// ref키
							
							p_strSbCd				: util.DataMap.getValue(app, "dmReqKey", "strSbCd"),				// 교과목코드
							p_strDivclsNm		: util.DataMap.getValue(app, "dmReqKey", "strDivclsNm"),			// 분반명
							p_strCuCd				: util.DataMap.getValue(app, "dmReqKey", "strCuCd"),				// 교과그룹
							
							p_strProcRlst			: vsYear,			// 학년
							p_strPrtOrd			: util.DataMap.getValue(app, "dmReqKey", "strPrtOrd"),				// 출력순서
							p_strPrtData			: util.DataMap.getValue(app, "dmReqKey", "strPrtData"),				// 데이타 출력유무
							
							p_strStudId			: util.DataMap.getValue(app, "dmReqKey", "strStudId"),				// 학생 오브젝트아이디
							
							p_strCheckAuthId 	: moUserInfo.id,																//사용자ID
							p_strPath				: util.DataMap.getValue(app, "dmResOnLoad", "strPath")												//url경로
						};
					
					
					 var voOzFormParam = {
						  TITLE : "출    석    부" //리포트타이틀
						, SUB_TITLE : "" //리포트서브타이틀		
						, FORM_TYPE : "flash"
					};	
							
					util.Report.open(app, "hojReport", "extCcsSAttendPoto", voOzFormParam, voParam);
					
				};
				
				
				/**
				 * @desc [cbbSchYearRcd] 학년도 value changed 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
					
					// 조회조건(학사부서명, 학생명)항목초기화
					doClearSchCtl();
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 value changed 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
					
					// 조회조건(학사부서명, 학생명)항목초기화
					doClearSchCtl();
				};
				
				/**
				 * @desc [btnSaNm]학사부서명 버튼 click 이벤트
				 * @param 
				 * @return void
				 * @author유형기 at 2016.7.7
				 */
				moPage.onClick_BtnSaNm = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [IpbSaNm]학사부서명 value changed 이벤트
				 * @param 
				 * @return void
				 * @author 유형기 at 2016.7.7
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				
				moPage.onClick_BtnSbCd = function(sender) {
					// 개설과목검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				};
				
				moPage.onValueChanged_IpbSbNm = function(sender) {
					// 값변경시 교과목검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [btnProfObjNo]교수명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 10. 24
				 */
				moPage.onClick_BtnProfObjNo = function(sender) {
					// 교직원검색팝업 호출
					doOnClickStdCmnPPrsnSearch(sender);
				};
				
				/**
				 * @desc [ipbProfNm]교수명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 10. 24
				 */
				moPage.onValueChanged_IpbProfNm = function(sender) {
					// 값변경시 교직원검색팝업 호출
					doOnChangeStdCmnPPrsnSearch(sender);
				};
				
				/**
				 * @desc [rdbProfOrSa]학사부서or교수 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 10. 24
				 */
				moPage.onValueChanged_RdbProfOrSa = function() {
					
					page.doChagnCtlAuth();
					
					// 값 초기화
					util.Control.setValue(app, "ipbSaNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaObjDivRcd", "");
					util.Control.setValue(app, "ipbProfNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", "");
					util.Control.setValue(app, "cbbProcRlst", "");
					util.Control.setValue(app, "ipbDivclsNm", "");
					util.Control.setValue(app, "ipbSbNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strSbCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strSbRefKey", "");
					
					util.DataMap.setValue(app, "dmReqKey", "strStudNo", "");
					util.DataMap.setValue(app, "dmReqKey", "strStudId", "");
					
					
					ExtSelectCtl.deleteAllItem("cbbSbCd");
					
				};
				
				
				function doChagnCtlAuth(){
					
					var vsProfOrSa = util.Control.getValue(app, "rdbProfOrSa");
			
					util.Control.setVisible(app, false, ["lblSaNm", "ipbSaNm", "btnSaNm", "lblProcRlst", "cbbProcRlst", "lblDivclsNm", "ipbDivclsNm", "lblSbNm", "ipbSbNm", "btnSbCd"
					, "lblProfNm", "ipbProfNm", "btnProfObjNo", "lblSbCd", "cbbSbCd"
					, "lblStudId", "ipbStudNo", "btnPopStudSearch"
					]);
					
					// 학사부서일경우
					if(ValueUtil.fixNull(vsProfOrSa) == "SA"){
						util.Control.setVisible(app, true, ["lblSaNm", "ipbSaNm", "btnSaNm", "lblProcRlst", "cbbProcRlst", "lblDivclsNm", "ipbDivclsNm", "lblSbNm", "ipbSbNm", "btnSbCd"]);			
						
					//--교수일경우
					}else if(ValueUtil.fixNull(vsProfOrSa) == "PROF"){
						
						util.Control.setVisible(app, true, ["lblProfNm", "ipbProfNm", "btnProfObjNo", "lblSbCd", "cbbSbCd"]);
						
					// 학생일경우
					}else{			
						util.Control.setVisible(app, true, ["lblStudId", "ipbStudNo", "btnPopStudSearch", "lblSbCd", "cbbSbCd"]);
					}
				}
				
				
				
				/**
				 * @desc 담당교과목목록 조회
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 2
				 */
				function doChargeSbList() {
					//strCommand: chargeSbList 
					util.Submit.send(app, "subChargeSbList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbSbCd");
							util.SelectCtl.selectItem(app, "cbbSbCd", 0);
						}
					});
				};
				
				
				moPage.onClick_BtnPopStudSearch = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				}
				
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListProcRlst");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsChargeSbList");
			dataSet_4.parseData({
				"columns": [
					{"name": "SB_DIVCLS_CD_NM"},
					{"name": "REF_KEY"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "LECT_TIME_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSaOrStud",
						"dataType": "string"
					},
					{
						"name": "strProcRlst",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strPrtOrd",
						"dataType": "string"
					},
					{
						"name": "strPrtData",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strDivclsNm",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strProfNm",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strProfOrSa",
						"dataType": "string"
					},
					{
						"name": "strSbRefKey",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsAttendPoto/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subChargeSbList");
			submission_3.action = "/ccs/ExtCcsAttendPoto/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSaNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("NLS-SCR-SANM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "640px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 50;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "745px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaNmClick == "function") {
					button_2.addEventListener("click", onBtnSaNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "875px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optKeyDate");
				output_4.value = "기준일자";
				output_4.style.setClasses(["require"]);
				container.addChild(output_4, {
					"top": "5",
					"left": "905px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDate");
				container.addChild(dateInput_1, {
					"top": "5",
					"left": "990px",
					"width": "90px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optProcRlst");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_5, {
					"top": "30px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbProcRlst");
				comboBox_3.bind("fieldLabel").toExpression("#optProcRlst.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcRlst");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsListProcRlst"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optSbNm");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_6, {
					"top": "30px",
					"left": "555px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSbNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "660px",
					"width": "130px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSbCd");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbCdClick == "function") {
					button_3.addEventListener("click", onBtnSbCdClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "790px",
					"width": "20px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optPrtOrd");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_7, {
					"top": "30px",
					"left": "820px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbPrtOrd");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optPrtOrd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strPrtOrd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("학번", "D1.STUD_NO"));
					comboBox_4.addItem(new cpr.controls.Item("성명", "D1.REP_NM"));
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "905px",
					"width": "90px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optPrtData");
				output_8.value = "";
				output_8.style.setClasses(["require"]);
				output_8.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_8, {
					"top": "30px",
					"left": "1005px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbPrtData");
				comboBox_5.userAttr({"require": "Y"});
				comboBox_5.bind("fieldLabel").toExpression("#optPrtData.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strPrtData");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("데이터 적용", "1"));
					comboBox_5.addItem(new cpr.controls.Item("빈용지", "2"));
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "30px",
					"left": "1090px",
					"width": "90px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optDivclsNm");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_9, {
					"top": "30px",
					"left": "395px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDivclsNm");
				inputBox_3.bind("fieldLabel").toExpression("#optDivclsNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivclsNm");
				container.addChild(inputBox_3, {
					"top": "30px",
					"left": "479px",
					"width": "66px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optProfNm");
				output_10.value = "";
				output_10.style.setClasses(["require"]);
				output_10.bind("value").toLanguage("UI-DB-PROF_NM");
				container.addChild(output_10, {
					"top": "5px",
					"left": "640px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbProfNm");
				inputBox_4.visible = false;
				inputBox_4.userAttr({"require": "Y"});
				inputBox_4.bind("fieldLabel").toExpression("#optProfNm.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfNm");
				if(typeof onIpbProfNmValueChange == "function") {
					inputBox_4.addEventListener("value-change", onIpbProfNmValueChange);
				}
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "745px",
					"width": "130px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnProfObjNo");
				button_4.visible = false;
				button_4.value = "";
				button_4.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnProfObjNoClick == "function") {
					button_4.addEventListener("click", onBtnProfObjNoClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "875px",
					"width": "20px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbProfOrSa");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfOrSa");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("학사부서", "SA"));
					radioButton_1.addItem(new cpr.controls.Item("교수", "PROF"));
					radioButton_1.addItem(new cpr.controls.Item("학생", "STUD"));
				})(radioButton_1);
				if(typeof onRdbProfOrSaValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbProfOrSaValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "5px",
					"left": "395px",
					"width": "240px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optSbCd");
				output_11.value = "";
				output_11.bind("value").toLanguage("UI-SCR-CHARGESUBJ");
				container.addChild(output_11, {
					"top": "30px",
					"left": "555px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_6 = new cpr.controls.ComboBox("cbbSbCd");
				comboBox_6.visible = false;
				comboBox_6.enabled = false;
				comboBox_6.bind("fieldLabel").toExpression("#optSbCd.value");
				comboBox_6.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbRefKey");
				(function(comboBox_6){
					comboBox_6.addItem(new cpr.controls.Item("선택", ""));
					comboBox_6.setItemSet(app.lookup("dsChargeSbList"), {
						"label": "SB_DIVCLS_CD_NM",
						"value": "REF_KEY"
					});
				})(comboBox_6);
				container.addChild(comboBox_6, {
					"top": "30px",
					"left": "660px",
					"width": "149px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optStudId");
				output_12.value = "";
				output_12.style.setClasses(["require"]);
				output_12.bind("value").toLanguage("NLS-SCR-SANM");
				container.addChild(output_12, {
					"top": "4px",
					"left": "640px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_5.visible = false;
				inputBox_5.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_5.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_5, {
					"top": "4px",
					"left": "744px",
					"width": "130px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnPopStudSearch");
				button_5.visible = false;
				button_5.value = "";
				button_5.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopStudSearchClick == "function") {
					button_5.addEventListener("click", onBtnPopStudSearchClick);
				}
				container.addChild(button_5, {
					"top": "4px",
					"left": "875px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "290px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "537px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch1");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "680px",
				"left": "225px",
				"width": "120px",
				"height": "25px"
			});
			
			var embeddedApp_4 = new cpr.controls.EmbeddedApp("emaStdCmnPPrsnSearch");
			cpr.core.App.load("app/cmn/impStdCmnPPrsnSearch", function(app) {
				if(app){
					embeddedApp_4.app = app;
				}
			});
			container.addChild(embeddedApp_4, {
				"top": "680px",
				"left": "355px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "사진출석부";
	cpr.core.Platform.INSTANCE.register(app);
})();
