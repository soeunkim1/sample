/*
 * App URI: app/ccs/extCcsSCurClsSmtPrt
 * Source Location: app/ccs/extCcsSCurClsSmtPrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSCurClsSmtPrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsSCurClsSmtPrt.xtm"/>
			
			/**
			 * 강의실현황
			 * @class extCcsSRoomPcnd
			 * @author 박갑수 at 2016. 7. 6
			 */
			var extCcsSCurClsSmtPrt = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaCd",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"dipKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaCd",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
						var vsKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate");
						
							// 학사부서 입력시 이수과정목록, 교과그룹목록 GET
						doSpCuList(function(pbSuccess) {
							if (pbSuccess){						
								if(ValueUtil.isNull(vsSaNm)){
									util.Control.setValue(app, "cbbCuCd", "");					
								}
							}
						});
						
					}
				}];
				
				
				
				
				// 학년도 ,학기, 출력순서를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 7. 6
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 6
				 */
				moPage.onModelConstructDone_ExtCcsSRoomPcnd = function() {
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							// 조회조건 컨트롤 refresh(학년도, 학기)
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbCuDivRcd"]);
							
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							page.doChangeYearSmt();
							
							util.DataMap.setValue(app, "dmReqKey", "strDiv", "DEPT");
							util.Control.redraw(app, "radDiv");
							
							page.onValueChanged_RadDiv();
							
							util.Control.setFocus(app, "ipbSaCd");
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 9
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 9
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 9
				 */
				function doChangeYearSmt(psDiv) {
					
					
					util.DataMap.setValue(app, "dmKeyDateMap", "SMT", "CA00390");
					var vsSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
					
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.DataMap.setValue(app, "dmKeyDateMap92", "SMT", "CA00392");
							util.DataMap.setValue(app, "dmKeyDateMap", "YEAR", vsSchYearRcd);
							
							//strCommand: date 
							util.Submit.send(app, "subDate92", function(pbSuccess){
								if(pbSuccess){										
								
								}
							});
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				
				
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 9
				 */
				moPage.onClick_BtnSearch = function() {
					
					
					var vsSchDiv = util.DataMap.getValue(app, "dmReqKey", "strDiv");
					
					
					if(vsSchDiv == 'DEPT'){
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaCd", "cbbCuCd"])){
							return false;
						}
					}else{
						if(!util.validate(app, ["cbbSchYearRcd"])){
							return false;
						}
					}
					
					
					var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					var vsSaCd	= util.DataMap.getValue(app, "dmReqKey", "strSaCd");
					var vsCuDiv	= util.DataMap.getValue(app, "dmReqKey", "strCuDiv");
					var vsCuDivRcd	= util.DataMap.getValue(app, "dmReqKey", "strCuDivRcd");
					var vsCuCd   = util.DataMap.getValue(app, "dmReqKey", "strCuCd");
					
					if(vsSchDiv == 'DEPT'){
						vsCuDivRcd = "";
					}else{
						vsSaCd = "";
						vsCuCd = "";
					}
					
					var voParam = {				
							p_strKeyDate 		: util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT"),			// 기준일자	
							p_strKeyDate92 		: util.DataMap.getValue(app, "dmKeyDateMap92", "ST_DT"),			// 기준일자	
							p_strSchYearRcd	: vsSchYearRcd,															//학년도
							p_strSaCd				: vsSaCd,																		//학사부서코드
							p_strCuCd				: vsCuCd,				// 교과그룹코드
							p_strCuDiv             : vsCuDiv,
							p_strCuDivRcd             : vsCuDivRcd,
							p_strCheckAuthId 	: moUserInfo.id																// 사용자ID
					};
					
					var vsTitle = "교육과정";
					
					var voOzFormParam = {
						  TITLE 		 : vsTitle			// 리포트타이틀
						, SUB_TITLE 	 : "" 					// 리포트서브타이틀		
						, FORM_TYPE : "flash"
					};
					
					util.Report.open(app, "hojReport", "extCcsSCurClsSmtPrt", voOzFormParam, voParam);
				}
				
				
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				}
				
				moPage.onValueChanged_IpbSaCd = function(sender) {
					
					
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				}
				
				
				
				/**
				 * @desc 이수과정, 교과그룹목록 조회
				 * @param poCallBackFunc 콜백정의, 교과목코드
				 * @return void
				 * @author 박갑수 at 2016. 2. 1
				 */
				function doSpCuList(poCallBackFunc, psCuCd) {
					//strCommand: getSaSpCu 
					util.Submit.send(app, "subSpCuList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, [ "cbbCuCd"]);
							util.SelectCtl.selectItem(app, "cbbCuCd", 0);				
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				
				
				
				
				
				moPage.onValueChanged_RadDiv = function() {
					
					var vsSchDiv = util.DataMap.getValue(app, "dmReqKey", "strDiv");
					var vaCtl = ['lblSaNm','ipbSaCd','btnSaCd','lblCuCd','cbbCuCd'];
					var vaCtl1 = ['cbbCuDivRcd','lblCuCd1'];
					
					
					if(vsSchDiv == 'DEPT'){
						util.Control.setVisible(app, true, vaCtl );
						util.Control.setVisible(app, false, vaCtl1 );
						
						
					}else{
						util.Control.setVisible(app, false, vaCtl);
						util.Control.setVisible(app, true, vaCtl1 );
						
					}
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListCuDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSpList");
			dataSet_4.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCuList");
			dataSet_5.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"},
					{"name": "PATH"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmKeyDateMap92");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strLectRoomCd",
						"dataType": "string"
					},
					{
						"name": "strLectRoomNm",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strDiv",
						"dataType": "string"
					},
					{
						"name": "strCuDiv",
						"dataType": "string"
					},
					{
						"name": "strCuDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsCurClsPrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSpCuList");
			submission_2.action = "/ccs/ExtCcsCurClsPrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subDate");
			submission_3.action = "/cmn/StdCmnDateTime/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate92");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_4);
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataMap_2, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "89px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "1015px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.visible = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "1040px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSaNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-DB-SA_CD_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "314px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaCd");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaCdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaCdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "409px",
					"width": "225px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "634px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optCuCd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_4, {
					"top": "5px",
					"left": "662px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbCuCd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuCd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsCuList"), {
						"label": "OBJ_CD_NM",
						"value": "OBJ_CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "746px",
					"width": "199px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.visible = false;
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "ST_DT");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "1020px",
					"width": "131px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optKeyDate");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_5, {
					"top": "5px",
					"left": "1015px",
					"width": "90px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("radDiv");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDiv");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("학과", "DEPT"));
					radioButton_1.addItem(new cpr.controls.Item("전체", "ALL"));
				})(radioButton_1);
				if(typeof onRadDivValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRadDivValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "5px",
					"left": "193px",
					"width": "112px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCuCd1");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_6, {
					"top": "5px",
					"left": "314px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbCuDivRcd");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuDivRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsListCuDivRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "388px",
					"width": "111px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NCSLUMPLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "290px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "563px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "35px",
				"left": "1245px",
				"width": "325px",
				"height": "75px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "669px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "강의실현황";
	cpr.core.Platform.INSTANCE.register(app);
})();
