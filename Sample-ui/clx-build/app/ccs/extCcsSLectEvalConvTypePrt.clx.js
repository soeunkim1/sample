/*
 * App URI: app/ccs/extCcsSLectEvalConvTypePrt
 * Source Location: app/ccs/extCcsSLectEvalConvTypePrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSLectEvalConvTypePrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsSLectEvalConvTypePrt.xtm"/>
			
			/**
			 * 개설과목관리
			 * @class stdCcsCCurClsFrf
			 * @author 박갑수 at 2016. 2. 4
			 */
			var extCcsSLectEvalConvTypePrt = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009OG"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strObjCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
					}
				}];
				
				
				
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onModelConstructDone_StdCcsCOpenSubFrf = function() {
					
					
					
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbDiv", "cbbDeptDiv", "dipKeyDate"]);
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.SelectCtl.selectItem(app, "cbbDiv", 0);
							util.SelectCtl.selectItem(app, "cbbDeptDiv", 0);
							
							setStdCmnPObjSchObjInfo();
							
						}
					}, true);
				};
				
				
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 5
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSearch = function() {
					 
					 
					 // 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipKeyDate", "ipbSaNm"])){
						return false;
					}
					
					doList(function(pbSuccess) {
						
					});
				};
				
				/**
				 * @desc 개설과목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doList(poCallBackFunc) {	
				
					//strCommand: ogList 
					util.Submit.send(app, "subOgList", function(pbSuccess){
						if(pbSuccess){
					
				
								var vsSchYearRcd 	=  util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
								var vsSmtRcd 		=  util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
								var vsKeyDate 		=  util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate");
								var vsStaffSubGrp 	=  util.DataMap.getValue(app, "dmReqKey", "strStaffSubGrp");
								var vsDeptDiv 		=  util.DataMap.getValue(app, "dmReqKey", "strDeptDiv");
								var vsUpCnt 			= util.DataMap.getValue(app, "dmReqKey", "strUpCnt");
								var vsDownCnt 		= util.DataMap.getValue(app, "dmReqKey", "strDownCnt");
								var vsOgCdList 		= util.DataMap.getValue(app, "dmResList", "strListOgCd");				
								var vsRepNm			= util.DataMap.getValue(app, "dmReqKey", "strRepNm");
							
							
								var voParam = {
										p_strLanDivRcd 		: util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd"),	// 언어키
										p_strKeyDate 		: vsKeyDate,									// 기준일자
										p_strSchYearRcd 	: vsSchYearRcd,															// 학년도코드
										p_strSmtRcd 			: vsSmtRcd,																	// 학기코드
										p_strStaffSubGrp     : vsStaffSubGrp,						//--전임/비전임
										p_strDeptDiv			: vsDeptDiv,							//전체 /  학과
										p_strUpCnt				: vsUpCnt,								//상위
										p_strDownCnt		: vsDownCnt,							//하위
										p_strOgCd	 			: vsOgCdList,  													      	 			// 부서코드
										p_strRepNm			: vsRepNm,							//성명
										p_strMenuId 				: moPageInfo.menuId,												// 메뉴ID
										p_strCheckAuthId 		: moUserInfo.id														// 사용자ID
								};
								
								var vsTitle = "";
								var vsSchYearRcdValue 	= vsSchYearRcd.substring(5, 10);		
								var vsSmtRcdValue		= ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_NM", "child::CD = '"+vsSmtRcd+"'");
								
								
								vsTitle = vsSchYearRcdValue+"-"+vsSmtRcdValue;
								/*
									전임 : CF00310
									외래 : CF00399
								*/		
								if('CF00310' == vsStaffSubGrp){
									vsTitle = vsTitle+" 전임교수";
								}else if('CF00399' == vsStaffSubGrp){
									vsTitle = vsTitle+" 외래교수";
								}else{
									vsTitle = vsTitle+" 전체";
								}
								
								vsTitle = vsTitle + " 환산점수 집계표";
								
								if(!ValueUtil.isNull(vsUpCnt)){
									vsTitle = vsTitle + "-(상위 "+vsUpCnt+"위)";
								}
								
								if(!ValueUtil.isNull(vsDownCnt)){
									vsTitle = vsTitle + "-(하위 "+vsDownCnt+"위)";
								}
								
								
								var voOzFormParam = {
									  TITLE 		 : vsTitle			// 리포트타이틀
									, SUB_TITLE 	 : "" 					// 리포트서브타이틀		
									, FORM_TYPE : "flash"
								};
								
								util.Report.open(app, "hojReport", "extCcsSLectEvalConvTypePrt", voOzFormParam, voParam);
								
								
						}
					});
					
				};
				
				
				
				
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				}
				
				moPage.onValueChanged_IpbSaNm = function(sender) {
					
					
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListCuDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDayNightDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSaPostDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsEvalMethodRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsLectTypeRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRelEstTypeCdList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsLectEvalTypeRcd");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsReTlsnYnRcdList");
			dataSet_10.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsSbTypeRcdList");
			dataSet_11.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsRecCiiRcdList");
			dataSet_12.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			
			var dataSet_13 = new cpr.data.DataSet("dsSbDivRcdList");
			dataSet_13.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_13);
			
			var dataSet_14 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_14.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_14);
			
			var dataSet_15 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_15.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_15);
			
			var dataSet_16 = new cpr.data.DataSet("dsListMain");
			dataSet_16.parseData({
				"columns": [
					{"name": "ALL_RNK"},
					{"name": "DPT_RNK"},
					{"name": "OG_NM"},
					{"name": "WKGRD_NM"},
					{"name": "STAFF_NO"},
					{"name": "REP_NM"},
					{"name": "OPEN_SUB_CNT"},
					{"name": "TLSN_NOP"},
					{"name": "EVAL_NOP"},
					{"name": "EVAL_SCR"},
					{"name": "EVAL_AVG"},
					{"name": "STAFF_SUB_GRP_RCD"},
					{"name": "PROF_TOT"},
					{"name": "EVAL_AVG1"},
					{"name": "EVAL_AVG2"},
					{"name": "YEAR_SMT1"},
					{"name": "YEAR_SMT2"}
				],
				"rows": []
			});
			app.register(dataSet_16);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strListOgCd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strCuDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStaffSubGrp",
						"dataType": "string"
					},
					{
						"name": "strDeptDiv",
						"dataType": "string"
					},
					{
						"name": "strUpCnt",
						"dataType": "string"
					},
					{
						"name": "strDownCnt",
						"dataType": "string"
					},
					{
						"name": "strRepNm",
						"dataType": "string"
					},
					{
						"name": "strObjNm",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResPopup");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strFrfCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strFrfPnt",
						"dataType": "string"
					},
					{
						"name": "strFrfTheoTc",
						"dataType": "string"
					},
					{
						"name": "strFrfEpacTc",
						"dataType": "string"
					},
					{
						"name": "strFrfLectTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa1",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa2",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa3",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa4",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmResDelChk");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strTimeSche",
						"dataType": "string"
					},
					{
						"name": "strLectSche",
						"dataType": "string"
					},
					{
						"name": "strRestApp",
						"dataType": "string"
					},
					{
						"name": "headersmt1",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsSLectEvalConvType/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_14, false);
			submission_1.addResponseData(dataSet_15, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/ExtCcsSLectEvalConvType/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_16, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subOgList");
			submission_3.action = "/ccs/ExtCcsSLectEvalConvType/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_4);
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_4);
			submission_4.addResponseData(dataMap_4, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "275px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_2, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optCuCd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_3, {
					"top": "5px",
					"left": "560px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbDiv");
				comboBox_3.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strStaffSubGrp");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전임", "CF00310"));
					comboBox_3.addItem(new cpr.controls.Item("외래", "CF00399"));
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "645px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optCuCd1");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_4, {
					"top": "5px",
					"left": "745px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbDeptDiv");
				comboBox_4.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptDiv");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체순위", "ALL"));
					comboBox_4.addItem(new cpr.controls.Item("학과순위", "DEPT"));
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "829px",
					"width": "90px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optCuCd2");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_5, {
					"top": "5px",
					"left": "930px",
					"width": "53px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCuCd3");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_6, {
					"top": "5px",
					"left": "1042px",
					"width": "53px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("inputbox1");
				numberEditor_1.style.css({
					"text-align" : "center"
				});
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strUpCnt");
				container.addChild(numberEditor_1, {
					"top": "5px",
					"left": "987px",
					"width": "45px",
					"height": "25px"
				});
				var numberEditor_2 = new cpr.controls.NumberEditor("inputbox2");
				numberEditor_2.style.css({
					"text-align" : "center"
				});
				numberEditor_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDownCnt");
				container.addChild(numberEditor_2, {
					"top": "5px",
					"left": "1099px",
					"width": "45px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmResOnLoad"), "strKeyDate");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "460px",
					"width": "90px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optKeyDate");
				output_7.value = "기준일자";
				output_7.style.setClasses(["require"]);
				container.addChild(output_7, {
					"top": "5px",
					"left": "375px",
					"width": "80px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optCuCd4");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-SUBGRUP");
				container.addChild(output_8, {
					"top": "29px",
					"left": "745px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("inputbox3");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRepNm");
				container.addChild(inputBox_1, {
					"top": "29px",
					"left": "829px",
					"width": "90px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optSaNm");
				output_9.value = "";
				output_9.style.setClasses(["require"]);
				output_9.bind("value").toLanguage("UI-DB-SA_NM");
				container.addChild(output_9, {
					"top": "29px",
					"left": "375px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_2.maxLength = 100;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strObjNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "29px",
					"left": "460px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "29px",
					"left": "591px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "55px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-TCHRLICISSUELIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "200px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "540px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "95px",
				"left": "5px",
				"width": "1225px",
				"height": "575px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "개설과목관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
