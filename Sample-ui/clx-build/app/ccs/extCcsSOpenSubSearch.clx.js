/*
 * App URI: app/ccs/extCcsSOpenSubSearch
 * Source Location: app/ccs/extCcsSOpenSubSearch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSOpenSubSearch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsSOpenSubSearch.xtm"/>
			
			/**
			 * 개설과목조회
			 * @class extCcsSOpenSubSearch
			 * @author 박갑수 at 2016. 4. 27
			 */
			var extCcsSOpenSubSearch = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnDeptNm",
					iCd					:	"",
					iNm					:	"ipbDeptNm",
					iObjDivRcd			:	["CC009OG", "CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strDeptCd",
					oCdNm				:	"ipbDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsDeptCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
						
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsDeptCd)){
							//ExtModel.dispatch("btnSearch", "DOMActivate");
						}
					}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onModelConstructDone_ExtCcsSOpenSubSearch = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsOpenSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbSbLvlRcd", "cbbCmpDivRcd"]);
							
							// 권한에 따른 소속부서 default값 세팅 
							doSetCtlByAuth();
						}
					}, true);
				};
				
				/**
				 * 권한에 따른 소속부서 default값 세팅 
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 8. 9
				 */	
				function doSetCtlByAuth() {
					
					// 전체권한[CC00102] 아닐경우 자신의 소속 Default 세팅 
					if (moPageInfo.authRngRcd != "CC00102") {
						
						util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", moUserInfo.asgnDeptDivRcd);
						util.DataMap.setValue(app, "dmReqKey", "strDeptCd", moUserInfo.asgnDeptCd);
						util.Control.setValue(app, "ipbDeptNm", moUserInfo.asgnDeptNm);
					}
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnDeptNm]소속(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onClick_BtnDeptNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbDeptNm]소속 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
			
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbDeptNm"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 성적내역 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsOpenSub");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [ipbDivclsNm]분반 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onKeyDown_IpbDivclsNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsDeptCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
						
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsDeptCd)){
							util.Header.clickSearch(app);
						}
					}
				};
				
				/**
				 * @desc [ipbSbNm]과목명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onKeyDown_IpbSbNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsDeptCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
						
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsDeptCd)){
							util.Header.clickSearch(app);
						}
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCcsOpenSub");
			dataSet_5.parseData({
				"columns": [
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "DIVCLS_NM"},
					{"name": "PNT"},
					{"name": "SB_LVL_RCD"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DCL_RCD_NM"},
					{"name": "EXP_YN"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "DAY_NIGHT_DIV_RCD_NM"},
					{"name": "LECT_TIME_NM"},
					{"name": "SA_CD_NM"},
					{"name": "TLSN_REQ_CAPA"},
					{"name": "CU_CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strDivclsNm",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strExpYn",
						"dataType": "string"
					},
					{
						"name": "strScheNot",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsOpenSubSearch/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/ExtCcsOpenSubSearch/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-GLS-IQY");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "80px",
					"width": "120px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "210px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optDeptNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "415px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "500px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "630px",
					"width": "20px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbExpYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "폐강포함";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strExpYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "660px",
					"width": "120px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optDivclsNm");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-DIVCLS");
				container.addChild(output_4, {
					"top": "30px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDivclsNm");
				inputBox_2.maxLength = 10;
				inputBox_2.bind("fieldLabel").toExpression("#optDivclsNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivclsNm");
				if(typeof onIpbDivclsNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbDivclsNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "80px",
					"width": "120px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSbNm");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_5, {
					"top": "30px",
					"left": "210px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_3.maxLength = 100;
				inputBox_3.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbNmKeydown == "function") {
					inputBox_3.addEventListener("keydown", onIpbSbNmKeydown);
				}
				container.addChild(inputBox_3, {
					"top": "30px",
					"left": "285px",
					"width": "120px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCmpDivRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "415px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_3.enabled = false;
				comboBox_3.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "500px",
					"width": "150px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optSbLvlRcd");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_7, {
					"top": "5px",
					"left": "660px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbSbLvlRcd");
				comboBox_4.enabled = false;
				comboBox_4.bind("fieldLabel").toExpression("#optSbLvlRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbLvlRcd");
				(function(comboBox_4){
					comboBox_4.setItemSet(app.lookup("dsSbLvlRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "745px",
					"width": "120px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbExpYn1");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "시간표 미입력 조회";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScheNot");
				container.addChild(checkBox_2, {
					"top": "30px",
					"left": "779px",
					"width": "136px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-OPNESUB");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "205px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsOpenSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsOpenSub"),
					"columns": [
						{"width": "40px"},
						{"width": "120px"},
						{"width": "125px"},
						{"width": "55px"},
						{"width": "75px"},
						{"width": "125px"},
						{"width": "45px"},
						{"width": "57px"},
						{"width": "70px"},
						{"width": "45px"},
						{"width": "60px"},
						{"width": "70px"},
						{"width": "75px"},
						{"width": "90px"},
						{"width": "60px"},
						{"width": "97px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PRCSDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CANCLYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DIVCLS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DNDIV2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHARGPROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CLASSTIME_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CLASSROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LIMITCAPA");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DCL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CU_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "EXP_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbSbLvlRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsSbLvlRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SB_LVL_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "LECT_TIME_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_NM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "538px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "개설과목조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
