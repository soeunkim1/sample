/*
 * App URI: app/ccs/extCcsSSubjectList
 * Source Location: app/ccs/extCcsSSubjectList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/extCcsSSubjectList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCcsSSubjectList.xtm"/>
			
			/**
			 * 과목코드 조회(영문)
			 * @class extCcsSSubjectList
			 * @author 박갑수 at 2016. 7. 1
			 */
			var extCcsSSubjectList = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCdNm",
					iCd					:	"",
					iNm					:	"ipbSaCdNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaCdNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
					}
				}];
				
				// 파일첨부 Util
				moPObject.moIdsForStdCmnFileUtil = [
				{
					controlId 				: "btnSaveFileUp",
					iFileSerialNo 			: "btnSaveFileUp",
					iFileSubPath 			: "",
					iTableName 			: "",
					iIsDirectUpLoad		: null,
					iIsFileSelectorOnly	: true,
					iIsMultiple				: false,
					iIsHideDelete 			: null,			
					iIsDownloadOnly 	: null,
					iFileExtFilter 			: null,
					oFileSerailNo			: "",
					oTmpFilePath		: "/root/reqKey/strTmpFilePath",			//리피트일경우 null로 지정
					oFileCnt				: "",		
					oFileDataChanged	: "",
					func						: function(poReturn) {
						
						var vsMsg = ExtControl.getTextValue("btnSaveFileUp");
						
						// @을(를) 처리하시겠습니까?
						if(!util.Msg.confirm("NLS-CRM-M018", [vsMsg]) ){
							util.DataMap.setValue(app, "dmReqKey", "strProcYn", "");
							doExcelDataSave(poReturn.TMP_FILE_PATH);
						}else {
							util.DataMap.setValue(app, "dmReqKey", "strProcYn", "Y");
							doExcelDataSave(poReturn.TMP_FILE_PATH);
						}
					}
				}];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016.7. 1
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016.7. 1
				 */
				moPage.onModelConstructDone_ExtCcsSSubjectList = function() {
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					// 기준일자 조회하는 내부 팝업 호출을 위한 단위시스템코드 설정
					setUnitSystem("CCS");
					
					// 전체권한[CC00102]일경우만 엑셀파일업로드버튼 활성화
					if(moPageInfo.authRngRcd == "CC00102"){
						util.Control.setVisible(app, true, ["btnSaveFileUp"]);
					}else {
						util.Control.setVisible(app, false, ["btnSaveFileUp"]);
					}
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							// 조회조건 컨트롤 refresh
							util.Control.redraw(app, ["dipKeyDate", "cbbCmpDivRcd"]);
							// 정렬순서 Default : 과목코드순
							util.SelectCtl.selectItem(app, "cbbOrderBy", 0);
							
							setStdCmnPObjSchObjInfo();
						}
					}, true);
				};
				
				/**
				 * @desc [btnSaCdNm]학사부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 1
				 */
				moPage.onClick_BtnSaCdNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaCdNm]학사부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 1
				 */
				moPage.onValueChanged_IpbSaCdNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 1
				 */
				moPage.onClick_BtnSearch = function() {
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["dipKeyDate", "ipbSaCdNm", "cbbOrderBy"])){
						return false;
					}
							
					var voParam = {
							p_strLanDivRcd 		: util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd"),	// 언어키
							p_strKeyDate 		: util.DataMap.getValue(app, "dmKeyDateMap", "END_DT"),		// 기준일자
							p_strSaCd				: util.DataMap.getValue(app, "dmReqKey", "strSaCd"),				// 학사부서코드
							p_strExpYn			: util.Control.getValue(app, "ckbExpYn"),									// 폐기과목포함
							p_strNoRegEng		: util.Control.getValue(app, "ckbNoRegEng"),								// 영문명미등록
							
							p_strOrderBy			: util.Control.getValue(app, "cbbOrderBy"),								// 정렬순서
							
							p_strSbCd				: util.Control.getValue(app, "ipbSbCd"),										// 과목코드
							p_strSbNm			: util.Control.getValue(app, "ipbSbNm"),									// 과목명
							p_strCmpDivRcd		: util.Control.getValue(app, "cbbCmpDivRcd"),							// 이수구분
							p_strSbNmEng       : util.Control.getValue(app, "ipbSbNmEng"),										// 과목코드
				
							p_strCheckAuthId 	: moUserInfo.id																// 사용자ID
					};
			
					var vsTitle = "교과목 LIST";
					
					var voOzFormParam = {
						  TITLE 		 : vsTitle			// 리포트타이틀
						, SUB_TITLE 	 : "" 					// 리포트서브타이틀		
						, FORM_TYPE : "flash"
					};
					
					util.Report.open(app, "hojReport", "extCcsSSubjectList", voOzFormParam, voParam);
				};
				
				/**
				 * @desc [btnYearSmt]기준일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 12
				 */
				moPage.onClick_BtnYearSmt = function() {
					//기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDate","impSchYearSmt");
				};
				
				/**
				 * @desc [btnSaveFileUp]엑셀파일업로드(영문명생성) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 9. 27
				 */
				moPage.onClick_BtnSaveFileUp = function(sender) {
					// 파일선택창 호출
					doOnClickStdCmnPFileUtil(sender);
				};
				
				/**
				 * @desc 엑셀 업로드전 확장자 체크
				 * @param 
				 * @return 
				 * @author 박갑수 at 2016. 9. 27
				 */
				function doExcelUploadProc() {
					
					FileUtil.getFileName(true, ["xls", "xlsx"], function(psFileNm){
						doExcelDataSave(psFileNm);
					},"",false);
				};
				
				/**
				 * @desc 엑셀업로드 서브미션 전송 함수
				 * @param
				 * @return 
				 * @author 박갑수 at 2016. 9. 27
				 */
				function doExcelDataSave() {
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							var vsProcYn = util.DataMap.getValue(app, "dmReqKey", "strProcYn");
							if(!ValueUtil.isNull(vsProcYn)){
								var vsTotCnt = util.DataMap.getValue(app, "dmResUpload", "iTotCnt");
								var vsFailCnt = util.DataMap.getValue(app, "dmResUpload", "iFailCnt");
								var vsSucessCnt = util.DataMap.getValue(app, "dmResUpload", "iSuccessCnt");
								var vsErrMsg = util.DataMap.getValue(app, "dmResUpload", "strErrMsg");
								
								var vsFullMsg = "대상 : " + vsTotCnt + "\n성공 : " + vsSucessCnt + "\n실패 : " + vsFailCnt;
								
								if(!ValueUtil.isNull(vsErrMsg)){
									vsFullMsg = vsFullMsg + "\n" + vsErrMsg;
								}
								
								util.Msg.alert("vsFullMsg");
							}
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strOrderBy",
						"dataType": "string"
					},
					{
						"name": "strExpYn",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSbNmEng",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strNoRegEng",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					},
					{
						"name": "strProcYn",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResUpload");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "iTotCnt",
						"dataType": "string"
					},
					{
						"name": "iFailCnt",
						"dataType": "string"
					},
					{
						"name": "iSuccessCnt",
						"dataType": "string"
					},
					{
						"name": "strErrMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/ExtCcsSubjectList/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/ccs/ExtCcsSubjectList/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaCdNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optSaCdNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaCdNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaCdNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "30px",
					"left": "100px",
					"width": "120px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSaCdNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_1, {
					"top": "30px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCdNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdNmClick == "function") {
					button_2.addEventListener("click", onBtnSaCdNmClick);
				}
				container.addChild(button_2, {
					"top": "30px",
					"left": "220px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optKeyDate");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "ST_DT");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "100px",
					"width": "124px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbOrderBy");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optOrderBy.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strOrderBy");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("과목코드순", "1"));
					comboBox_1.addItem(new cpr.controls.Item("과목명순", "2"));
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "345px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optOrderBy");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "250px",
					"width": "90px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbExpYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "폐기과목포함";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strExpYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "475px",
					"width": "105px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnYearSmt");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_3.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_3, {
					"top": "7px",
					"left": "224px",
					"width": "16px",
					"height": "16px"
				});
				var output_4 = new cpr.controls.Output("optSbCd");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-DB-SB_CD");
				container.addChild(output_4, {
					"top": "30px",
					"left": "250px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbCd");
				inputBox_2.maxLength = 10;
				inputBox_2.bind("fieldLabel").toExpression("#optSbCd.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbCd");
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "345px",
					"width": "120px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSbNm");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-DB-SB_NM");
				container.addChild(output_5, {
					"top": "30px",
					"left": "475px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_3.maxLength = 200;
				inputBox_3.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				container.addChild(inputBox_3, {
					"top": "30px",
					"left": "570px",
					"width": "120px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCmpDivRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "925px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "30px",
					"left": "1020px",
					"width": "100px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbNoRegEng");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "영문명 미등록";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strNoRegEng");
				container.addChild(checkBox_2, {
					"top": "5px",
					"left": "590px",
					"width": "115px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSaveFileUp");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-EXCEL_UPLOAD");
				if(typeof onBtnSaveFileUpClick == "function") {
					button_4.addEventListener("click", onBtnSaveFileUpClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "725px",
					"width": "170px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NCSLUMPLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "290px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "538px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "35px",
				"left": "1240px",
				"width": "325px",
				"height": "75px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaFile");
			cpr.core.App.load("app/imp/impFileUtil", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "675px",
				"left": "115px",
				"width": "95px",
				"height": "25px"
			});
			
			var output_7 = new cpr.controls.Output("optSbNm1");
			output_7.value = "";
			output_7.bind("value").toLanguage("UI-DB-SB_NM");
			container.addChild(output_7, {
				"top": "65px",
				"left": "705px",
				"width": "90px",
				"height": "25px"
			});
			
			var inputBox_4 = new cpr.controls.InputBox("ipbSbNmEng");
			inputBox_4.maxLength = 200;
			inputBox_4.bind("fieldLabel").toExpression("#optSbNm.value");
			inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNmEng");
			container.addChild(inputBox_4, {
				"top": "65px",
				"left": "800px",
				"width": "120px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "과목코드 조회(영문)";
	cpr.core.Platform.INSTANCE.register(app);
})();
