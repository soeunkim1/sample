/*
 * App URI: app/ccs/stdCcsCClassManage2
 * Source Location: app/ccs/stdCcsCClassManage2.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCClassManage2", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCClassManage2.xtm"/>
			
			/**
			 * 분합반처리
			 * @class stdCcsCClassManage
			 * @author 박갑수 at 2016. 3. 15
			 */
			var stdCcsCClassManage2 = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{
					 controlId					: "btnSbCd",			
					 iDivClsYn					: "N",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "",			
					 iSaNm        				: "",		
					 iSaObjDivRcd       		: "",		
					 iSbCd        				: "",			
					 iSbNm        				: "ipbSchSbNm",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "/root/reqKey/strSbCd",			
					 oSbNm					: "ipbSchSbNm",			
					 oSaCd						: "/root/reqKey/strSaCd",			
					 oSaNm					: "",			
					 oCuCd						: "/root/reqKey/strCuCd",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "",	
					 oCmpDivRcd				: "",		
					 oPnt							: "",		
					 oTheoTc					: "",	
					 oEpacTc					: "",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "",
					 oSbLvlRcd				: "/root/reqKey/strSbLvlRcd",
					 func : function(poParam) {
						 
						// 분반목록 조회
						doDivclsList(function(pbSuccess) {
							if (pbSuccess){
								// 검색조건이 있을경우 조회
								var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
								var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
								var vsSbNm = util.DataMap.getValue(app, "dmReqKey", "strSbNm");
								if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsSbNm)){
									util.Header.clickSearch(app);
								}
							}
						});
					 }
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onModelConstructDone_StdCcsCClassManage = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcrTlsnReqLeft", "rptCcrTlsnReqRight"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd"]);
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.Control.setFocus(app, "ipbSaNm");
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [IpbSchSbNm]교과목명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_IpbSchSbNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCcrTlsnReqLeft", "grdCcrTlsnReqRight"])){
						return false;
					}
					
					// 값변경시 교과목검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [btnSbCd]교과목명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onClick_BtnSbCd = function(sender) {
					// 개설과목검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSchSbNm"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
							
							doClearCtl("LEFT");
							doClearCtl("RIGHT");
						}
					});
				};
				
				/**
				 * @desc 분반목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				function doDivclsList(poCallBackFunc) {
					//strCommand: getDivclsList2 
					util.Submit.send(app, "subDivclsList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbDivclsCd", "cbbDivclsCd1"]);
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				/**
				 * @desc [rhCkbSelect]패널 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/**
				 * @desc [rhCkbSelect1]패널(right) onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_RhCkbSelect1 = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect1");
				};
			
				/**
				 * @desc [cbbDivclsCd]분반 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_CbbDivclsCd = function() {
							
					// 컨트롤 값세팅
					var vsDivclsCd = util.Control.getValue(app, "cbbDivclsCd");
					// 참조키
					var vsRefKey = ExtInstance.getValue("/root/resList/divclsList/row", "REF_KEY" , "child::DIVCLS_CD='"+ vsDivclsCd +"'");
					util.DataMap.setValue(app, "dmReqKey", "strLeftRefKey", vsRefKey);
					// 학사부서
					var vsSaNm = ExtInstance.getValue("/root/resList/divclsList/row", "SA_CD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'");
					util.Control.setValue(app, "optSaNm", vsSaNm);
					// 교과목명
					var vsSbNm = ExtInstance.getValue("/root/resList/divclsList/row", "SB_CD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optSbNm", vsSbNm);
					// 담당교수
					var vsProfNm = ExtInstance.getValue("/root/resList/divclsList/row", "PROF_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optProfNm", vsProfNm);
					 // 학점
					var vsPnt = ExtInstance.getValue("/root/resList/divclsList/row", "PNT" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optPnt", vsPnt);
					 // 학년
					var vsSbLvlRcdNm = ExtInstance.getValue("/root/resList/divclsList/row", "SB_LVL_RCD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optSbLvlRcdNm", vsSbLvlRcdNm);
					// 이수구분
					var vsCmpDivRcdNm = ExtInstance.getValue("/root/resList/divclsList/row", "CMP_DIV_RCD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optCmpDivRcd", vsCmpDivRcdNm);
					// 시간표,강의실
					var vsLectRoomLttmNm = ExtInstance.getValue("/root/resList/divclsList/row", "LECT_ROOM_LTTM_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optLectRoomNm", vsLectRoomLttmNm);
					
					// 분반이없을경우 리피터 초기화
					if(ValueUtil.isNull(vsDivclsCd)){
						util.Control.reset(app, "rptCcrTlsnReqLeft");
					}
					
					// 동일한 분반을 입력한 경우, 경고메세지 출력, 관련컨트롤 초기화
					var vsRightRefKey = util.DataMap.getValue(app, "dmReqKey", "strRightRefKey");
					if(!ValueUtil.isNull(vsRefKey) && !ValueUtil.isNull(vsRightRefKey)){
						if(vsRefKey == vsRightRefKey){
							// 분반이 @1쪽과 같은 수 없습니다.
							//ComMsg.alert(NLS.WRN.M021, [NLS.NSCR.RIGHT]);
							alert("양쪽 모두 같은 강좌를 선택 할 수 없습니다.");
							
							doClearCtl("LEFT");
							
							return;
						}
					}
					
					if(!ValueUtil.isNull(vsRefKey)){
						// 조회
						doList(function(pbSuccess) {
							if (pbSuccess){
								// 조회 : "조회되었습니다." header 메세지 표시
								util.Msg.notify(app, "NLS.INF.M024");
							}
						});
					}
				};
				
				/**
				 * @desc 컨트롤 초기화
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				function doClearCtl(psGbn) {
					var vaLeftCtls = ["optSaNm", "optSbNm", "optProfNm", "optPnt", "optCmpDivRcd", "optLectRoomNm"];
					var vaRightCtls = ["optSaNm1", "optSbNm1", "optProfNm1", "optPnt1", "optCmpDivRcd1", "optLectRoomNm1"];
					
					if(psGbn == "LEFT"){
						util.Control.reset(app, vaLeftCtls);
						ExtSelectCtl.setValue("cbbDivclsCd", "");
						util.Control.reset(app, "rptCcrTlsnReqLeft");
						util.DataMap.setValue(app, "dmReqKey", "strLeftRefKey", "");
					}
					
					if(psGbn == "RIGHT"){
						util.Control.reset(app, vaRightCtls);
						ExtSelectCtl.setValue("cbbDivclsCd1", "");
						util.Control.reset(app, "rptCcrTlsnReqRight");
						util.DataMap.setValue(app, "dmReqKey", "strRightRefKey", "");
					}
				};
				
				/**
				 * @desc 분합반대상목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				function doList(poCallBackFunc) {
					//strCommand: getSbList 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							ExtTreeView.rebuild(["rptCcrTlsnReqLeft", "rptCcrTlsnReqRight"]);
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				/**
				 * @desc [cbbDivclsCd1]분반(right) onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onValueChanged_CbbDivclsCd1 = function() {
					
					// 컨트롤 값세팅
					var vsDivclsCd = util.Control.getValue(app, "cbbDivclsCd1");
					// 참조키
					var vsRefKey = ExtInstance.getValue("/root/resList/divclsList/row", "REF_KEY" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.DataMap.setValue(app, "dmReqKey", "strRightRefKey", vsRefKey);
					// 학사부서
					var vsSaNm = ExtInstance.getValue("/root/resList/divclsList/row", "SA_CD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'");
					util.Control.setValue(app, "optSaNm1", vsSaNm);
					// 교과목명
					var vsSbNm = ExtInstance.getValue("/root/resList/divclsList/row", "SB_CD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optSbNm1", vsSbNm);
					// 담당교수
					var vsProfNm = ExtInstance.getValue("/root/resList/divclsList/row", "PROF_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optProfNm1", vsProfNm);
					 // 학점
					var vsPnt = ExtInstance.getValue("/root/resList/divclsList/row", "PNT" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optPnt1", vsPnt);
					 // 학년
					var vsSbLvlRcdNm = ExtInstance.getValue("/root/resList/divclsList/row", "SB_LVL_RCD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optSbLvlRcdNm1", vsSbLvlRcdNm);
					// 이수구분
					var vsCmpDivRcdNm = ExtInstance.getValue("/root/resList/divclsList/row", "CMP_DIV_RCD_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optCmpDivRcd1", vsCmpDivRcdNm);
					// 시간표,강의실
					var vsLectRoomLttmNm = ExtInstance.getValue("/root/resList/divclsList/row", "LECT_ROOM_LTTM_NM" , "child::DIVCLS_CD='"+ vsDivclsCd +"'"); 
					util.Control.setValue(app, "optLectRoomNm1", vsLectRoomLttmNm);
					
					// 분반이없을경우 리피터 초기화
					if(ValueUtil.isNull(vsDivclsCd)){
						util.Control.reset(app, "rptCcrTlsnReqRight");
					}
					
					// 동일한 분반을 입력한 경우, 경고메세지 출력, 관련컨트롤 초기화
					var vsLeftRefKey = util.DataMap.getValue(app, "dmReqKey", "strLeftRefKey");
					if(!ValueUtil.isNull(vsRefKey) && !ValueUtil.isNull(vsLeftRefKey)){
						if(vsRefKey == vsLeftRefKey){
							// 분반이 @1쪽과 같은 수 없습니다.
							util.Msg.alert("NLS-WRN-M021", [NLS.NSCR.LEFT]);
							
							doClearCtl("RIGHT");
							
							return;
						}
					}
					
					if(!ValueUtil.isNull(vsRefKey)){
						// 조회
						doList(function(pbSuccess) {
							if (pbSuccess){
								// 조회 : "조회되었습니다." header 메세지 표시
								util.Msg.notify(app, "NLS.INF.M024");
							}
						});
					}
				};
				
				/**
				 * @desc [btnRight]오른쪽이동 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onClick_BtnRight = function() {
					// 1. 참조키 입력되어있는지 체크
					var vsLeftRefKey = util.DataMap.getValue(app, "dmReqKey", "strLeftRefKey");
					var vsRightRefKey = util.DataMap.getValue(app, "dmReqKey", "strRightRefKey");
					
					if(ValueUtil.isNull(vsRightRefKey)){
						// @쪽 분반을 선택해 주십시오.
						util.Msg.alert("NLS-CCS-M074", [NLS.NSCR.RIGHT]);
						return false;
					}
					
					// 2. 로우 선택 체크
					var vnRowCnt = ExtInstance.getNodeListLength("/root/resList/rptCcrTlsnReqLeft/row[child::DEL_CKB='Y']");
					
					if(vnRowCnt == null || vnRowCnt == 0){
						// 라인을 선택하세요.
						util.Msg.alert("NLS-INF-M023");
						return false;
					}
					
					var vsIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCcrTlsnReqLeft");
					var vaIdx = vsIdx.split(",");
					
					for(var i=0; i<vaIdx.length; i++){
						// 3. 중복체크
						var vnIdx = vaIdx[i];
						
						// 중복일경우 Skip
						var vsDuplYn = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "DUPL_YN", vnIdx);
						if(ValueUtil.fixNull(vsDuplYn) == "Y"){
							continue;
						}
						
						var vnNewRowIdx = util.Grid.insertRow(app, "grdCcrTlsnReqRight");
					
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "REF_KEY", vsRightRefKey, vnNewRowIdx);
						
						var vsStudId = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "STUD_ID", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "STUD_ID", vsStudId, vnNewRowIdx);
						
						var vsStudNo = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "STUD_NO", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "STUD_NO", vsStudNo, vnNewRowIdx);
						
						var vsStudNm = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "STUD_NM", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "STUD_NM", vsStudNm, vnNewRowIdx);
						
						var vsPnt = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "PNT", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "PNT", vsPnt, vnNewRowIdx);
						
						var vsTheoTc = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "THEO_TC", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "THEO_TC", vsTheoTc, vnNewRowIdx);
						
						var vsEpacTc = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "EPAC_TC", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "EPAC_TC", vsEpacTc, vnNewRowIdx);
						
						var vsCmpDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "CMP_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "CMP_DIV_RCD", vsCmpDivRcd, vnNewRowIdx);
						
						var vsReTlsnSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SCH_YEAR_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SCH_YEAR_RCD", vsReTlsnSchYearRcd, vnNewRowIdx);
						
						var vsReTlsnSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SMT_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SMT_RCD", vsReTlsnSmtRcd, vnNewRowIdx);
						
						var vsReTlsnSbCd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SB_CD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SB_CD", vsReTlsnSbCd, vnNewRowIdx);
						
						var vsReTlsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_DIV_RCD", vsReTlsnDivRcd, vnNewRowIdx);
						
						var vsXcpDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "XCP_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "XCP_DIV_RCD", vsXcpDivRcd, vnNewRowIdx);
						
						var vsTlsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "TLSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "TLSN_DIV_RCD", vsTlsnDivRcd, vnNewRowIdx);
						
						var vsTlsnPsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "TLSN_PSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "TLSN_PSN_DIV_RCD", vsTlsnPsnDivRcd, vnNewRowIdx);
			
						var vsSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "SCH_YEAR_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "SCH_YEAR_RCD", vsSchYearRcd, vnNewRowIdx);
						
						var vsSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "SMT_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "SMT_RCD", vsSmtRcd, vnNewRowIdx);
						
						var vsTlsnCapaDiv = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "TLSN_CAPA_DIV", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "TLSN_CAPA_DIV", vsTlsnCapaDiv, vnNewRowIdx);
						
						var vsAplyDthr = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "APLY_DTHR", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "APLY_DTHR", vsAplyDthr, vnNewRowIdx);
						
						var vsCancelDthr = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "CANCEL_DTHR", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "CANCEL_DTHR", vsCancelDthr, vnNewRowIdx);
						
						var vsCancelBtn = util.Grid.getCellValue(app, "grdCcrTlsnReqLeft", "CANCEL_BTN", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqRight", "CANCEL_BTN", vsCancelBtn, vnNewRowIdx);
			
						// 해당ROW DELETE
						ExtControl.getControl("rptCcrTlsnReqLeft").setRowStatus(vnIdx, "delete");
					}
					
					util.Control.setEnable(app, false, ["btnRight", "btnLeft"]);
					
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc [btnLeft]왼쪽이동 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 15
				 */
				moPage.onClick_BtnLeft = function() {
			
					// 1. 참조키 입력되어있는지 체크
					var vsLeftRefKey = util.DataMap.getValue(app, "dmReqKey", "strLeftRefKey");
					var vsRightRefKey = util.DataMap.getValue(app, "dmReqKey", "strRightRefKey");
					
					if(ValueUtil.isNull(vsLeftRefKey)){
						// @쪽 분반을 선택해 주십시오.
						util.Msg.alert("NLS-CCS-M074", [NLS.NSCR.LEFT]);
						return false;
					}
					
					// 2. 로우 선택 체크
					var vnRowCnt = ExtInstance.getNodeListLength("/root/resList/rptCcrTlsnReqRight/row[child::DEL_CKB='Y']");
					
					if(vnRowCnt == null || vnRowCnt == 0){
						// 라인을 선택하세요.
						util.Msg.alert("NLS-INF-M023");
						return false;
					}
					
					var vsIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCcrTlsnReqRight");
					var vaIdx = vsIdx.split(",");
					
					for(var i=0; i<vaIdx.length; i++){
						// 3. 중복체크
						var vnIdx = vaIdx[i];
						
						// 중복일경우 Skip
						var vsDuplYn = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "DUPL_YN", vnIdx);
						if(ValueUtil.fixNull(vsDuplYn) == "Y"){
							continue;
						}
						
						var vnNewRowIdx = util.Grid.insertRow(app, "grdCcrTlsnReqLeft");
					
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "REF_KEY", vsLeftRefKey, vnNewRowIdx);
						
						var vsStudId = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "STUD_ID", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "STUD_ID", vsStudId, vnNewRowIdx);
						
						var vsStudNo = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "STUD_NO", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "STUD_NO", vsStudNo, vnNewRowIdx);
						
						var vsStudNm = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "STUD_NM", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "STUD_NM", vsStudNm, vnNewRowIdx);
						
						var vsPnt = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "PNT", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "PNT", vsPnt, vnNewRowIdx);
						
						var vsTheoTc = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "THEO_TC", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "THEO_TC", vsTheoTc, vnNewRowIdx);
						
						var vsEpacTc = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "EPAC_TC", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "EPAC_TC", vsEpacTc, vnNewRowIdx);
						
						var vsCmpDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "CMP_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "CMP_DIV_RCD", vsCmpDivRcd, vnNewRowIdx);
						
						var vsReTlsnSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SCH_YEAR_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SCH_YEAR_RCD", vsReTlsnSchYearRcd, vnNewRowIdx);
						
						var vsReTlsnSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SMT_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SMT_RCD", vsReTlsnSmtRcd, vnNewRowIdx);
						
						var vsReTlsnSbCd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_SB_CD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_SB_CD", vsReTlsnSbCd, vnNewRowIdx);
						
						var vsReTlsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "RE_TLSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "RE_TLSN_DIV_RCD", vsReTlsnDivRcd, vnNewRowIdx);
						
						var vsXcpDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "XCP_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "XCP_DIV_RCD", vsXcpDivRcd, vnNewRowIdx);
						
						var vsTlsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "TLSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "TLSN_DIV_RCD", vsTlsnDivRcd, vnNewRowIdx);
						
						var vsTlsnPsnDivRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "TLSN_PSN_DIV_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "TLSN_PSN_DIV_RCD", vsTlsnPsnDivRcd, vnNewRowIdx);
			
						var vsSchYearRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "SCH_YEAR_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "SCH_YEAR_RCD", vsSchYearRcd, vnNewRowIdx);
						
						var vsSmtRcd = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "SMT_RCD", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "SMT_RCD", vsSmtRcd, vnNewRowIdx);
						
						var vsTlsnCapaDiv = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "TLSN_CAPA_DIV", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "TLSN_CAPA_DIV", vsTlsnCapaDiv, vnNewRowIdx);
						
						var vsAplyDthr = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "APLY_DTHR", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "APLY_DTHR", vsAplyDthr, vnNewRowIdx);
						
						var vsCancelDthr = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "CANCEL_DTHR", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "CANCEL_DTHR", vsCancelDthr, vnNewRowIdx);
						
						var vsCancelBtn = util.Grid.getCellValue(app, "grdCcrTlsnReqRight", "CANCEL_BTN", vnIdx);
						util.Grid.setCellValue(app, "grdCcrTlsnReqLeft", "CANCEL_BTN", vsCancelBtn, vnNewRowIdx);
						
						// 해당ROW DELETE
						ExtControl.getControl("rptCcrTlsnReqRight").setRowStatus(vnIdx, "delete");
									
						
					}
					util.Control.setEnable(app, false, ["btnRight", "btnLeft"]);
					// 작업저장
						doSave();
				};
				
				/**
				 * @desc 휴보강 목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 17
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcrTlsnReqLeft", "grdCcrTlsnReqRight"], "MSG")){
						util.Control.setEnable(app, true, ["btnRight", "btnLeft"]);
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess){
									util.Control.setEnable(app, true, ["btnRight", "btnLeft"]);
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							util.Control.setEnable(app, true, ["btnRight", "btnLeft"]);
						}
					}, true);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCcrTlsnReqLeft");
			dataSet_4.parseData({
				"info": "CCR_TLSN_REQ@REF_KEY,STUD_ID,TLSN_REF_KEY",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "STUD_NM"},
					{"name": "REF_KEY"},
					{"name": "TLSN_REF_KEY"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "CMP_DIV_RCD"},
					{"name": "RE_TLSN_SCH_YEAR_RCD"},
					{"name": "RE_TLSN_SMT_RCD"},
					{"name": "RE_TLSN_SB_CD"},
					{"name": "RE_TLSN_DIV_RCD"},
					{"name": "XCP_DIV_RCD"},
					{"name": "TLSN_DIV_RCD"},
					{"name": "TLSN_PSN_DIV_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "TLSN_CAPA_DIV"},
					{"name": "APLY_DTHR"},
					{"name": "CANCEL_DTHR"},
					{"name": "CANCEL_BTN"},
					{"name": "DUPL_YN"},
					{"name": "REMARK"},
					{"name": "CLASS_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCcrTlsnReqRight");
			dataSet_5.parseData({
				"info": "CCR_TLSN_REQ1@REF_KEY,STUD_ID,TLSN_REF_KEY",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "STUD_NM"},
					{"name": "REF_KEY"},
					{"name": "TLSN_REF_KEY"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "CMP_DIV_RCD"},
					{"name": "RE_TLSN_SCH_YEAR_RCD"},
					{"name": "RE_TLSN_SMT_RCD"},
					{"name": "RE_TLSN_SB_CD"},
					{"name": "RE_TLSN_DIV_RCD"},
					{"name": "XCP_DIV_RCD"},
					{"name": "TLSN_DIV_RCD"},
					{"name": "TLSN_PSN_DIV_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "TLSN_CAPA_DIV"},
					{"name": "APLY_DTHR"},
					{"name": "CANCEL_DTHR"},
					{"name": "CANCEL_BTN"},
					{"name": "DUPL_YN"},
					{"name": "REMARK"},
					{"name": "CLASS_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsDivclsList");
			dataSet_6.parseData({
				"columns": [
					{"name": "SA_CD_NM"},
					{"name": "SB_CD_NM"},
					{"name": "REF_KEY"},
					{"name": "DIVCLS_CD"},
					{"name": "SB_DIVCLS_CD_NM"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "PNT"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_LTTM_NM"},
					{"name": "SB_CD"},
					{"name": "SB_LVL_RCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strLeftRefKey",
						"dataType": "string"
					},
					{
						"name": "strRightRefKey",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqTmpCtl");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strLeftDivclsCd",
						"dataType": "string"
					},
					{
						"name": "strRightDivclsCd",
						"dataType": "string"
					},
					{
						"name": "strSaCdNm",
						"dataType": "string"
					},
					{
						"name": "strSbCdNm",
						"dataType": "string"
					},
					{
						"name": "strProfNm",
						"dataType": "string"
					},
					{
						"name": "strPnt",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcdNm",
						"dataType": "string"
					},
					{
						"name": "strLectRoomLttmNm",
						"dataType": "string"
					},
					{
						"name": "strSaCdNm1",
						"dataType": "string"
					},
					{
						"name": "strSbCdNm1",
						"dataType": "string"
					},
					{
						"name": "strProfNm1",
						"dataType": "string"
					},
					{
						"name": "strPnt1",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcdNm1",
						"dataType": "string"
					},
					{
						"name": "strLectRoomLttmNm1",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcdNm",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcdNm1",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsClassManage/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/StdCcsClassManage/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_4, false);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDivclsList");
			submission_4.action = "/ccs/StdCcsClassManage/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_6, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSave");
			submission_5.action = "/ccs/StdCcsClassManage/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_4);
			submission_5.addRequestData(dataSet_5);
			submission_5.addRequestData(dataMap_3);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-GLS-IQY");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSchSbNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "415px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSchSbNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSchSbNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSchSbNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSchSbNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "515px",
					"width": "140px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSbCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbCdClick == "function") {
					button_2.addEventListener("click", onBtnSbCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "655px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCcrTlsnReq");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SPCBLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdCcrTlsnReqLeft");
				grid_1.init({
					"dataSet": app.lookup("dsCcrTlsnReqLeft"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "60px"},
						{"width": "71px"},
						{"width": "50px"},
						{"width": "50px"},
						{"width": "256px"},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DUP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STUID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNSCHYEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REDOSMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNSBNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-XCP_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TLSNDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TLSNERDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_CAPA_DIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-APPLY_DTHR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_DTHR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CANCEL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "STUD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DUPL_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbDuplYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("DUPL_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "TLSN_REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "XCP_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "TLSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "TLSN_PSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "TLSN_CAPA_DIV";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "APLY_DTHR";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptAplyDthr");
										output_5.bind("value").toDataColumn("APLY_DTHR");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DTHR";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptCancelDthr");
										output_6.bind("value").toDataColumn("CANCEL_DTHR");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "CANCEL_BTN";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "160px",
					"left": "5px",
					"width": "580px",
					"height": "433px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbDivclsCd");
				comboBox_3.bind("fieldLabel").toExpression("#optDivclsCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strLeftDivclsCd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.setItemSet(app.lookup("dsDivclsList"), {
						"label": "SB_DIVCLS_CD_NM",
						"value": "DIVCLS_CD"
					});
				})(comboBox_3);
				if(typeof onCbbDivclsCdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbDivclsCdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "105px",
					"width": "205px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optDivclsCd");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-GLS-DIVCLS");
				container.addChild(output_7, {
					"top": "30px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRight");
				button_3.value = "";
				if(typeof onBtnRightClick == "function") {
					button_3.addEventListener("click", onBtnRightClick);
				}
				container.addChild(button_3, {
					"top": "330px",
					"left": "598px",
					"width": "25px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnLeft");
				button_4.value = "";
				if(typeof onBtnLeftClick == "function") {
					button_4.addEventListener("click", onBtnLeftClick);
				}
				container.addChild(button_4, {
					"top": "410px",
					"left": "598px",
					"width": "25px",
					"height": "25px"
				});
				var grid_2 = new cpr.controls.Grid("grdCcrTlsnReqRight");
				grid_2.init({
					"dataSet": app.lookup("dsCcrTlsnReqRight"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "61px"},
						{"width": "63px"},
						{"width": "41px"},
						{"width": "50px"},
						{"width": "272px"},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DUP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STUID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNSCHYEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REDOSMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNSBNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RETLSNDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-XCP_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TLSNDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TLSNERDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_CAPA_DIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-APPLY_DTHR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_DTHR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CANCEL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_8 = new cpr.controls.Output();
										output_8.style.css({
											"text-align" : "center"
										});
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "STUD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DUPL_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdCkbDuplYn1");
										checkBox_2.enabled = false;
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("DUPL_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "TLSN_REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "XCP_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "TLSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "TLSN_PSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "TLSN_CAPA_DIV";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "APLY_DTHR";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptAplyDthr1");
										output_9.bind("value").toDataColumn("APLY_DTHR");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DTHR";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("gdOptCancelDthr1");
										output_10.bind("value").toDataColumn("CANCEL_DTHR");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "CANCEL_BTN";
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "160px",
					"left": "638px",
					"width": "580px",
					"height": "433px"
				});
				var output_11 = new cpr.controls.Output("optSaNm");
				output_11.value = "";
				output_11.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_11, {
					"top": "30px",
					"left": "320px",
					"width": "90px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optSaNm");
				output_12.value = "";
				output_12.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSaCdNm");
				container.addChild(output_12, {
					"top": "30px",
					"left": "415px",
					"width": "170px",
					"height": "25px"
				});
				var output_13 = new cpr.controls.Output("optProfNm");
				output_13.value = "";
				output_13.bind("value").toLanguage("UI-SCR-CHARGPROF");
				container.addChild(output_13, {
					"top": "55px",
					"left": "320px",
					"width": "90px",
					"height": "25px"
				});
				var output_14 = new cpr.controls.Output("optProfNm");
				output_14.value = "";
				output_14.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strProfNm");
				container.addChild(output_14, {
					"top": "55px",
					"left": "415px",
					"width": "170px",
					"height": "25px"
				});
				var output_15 = new cpr.controls.Output("optCmpDivRcd");
				output_15.value = "";
				output_15.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_15, {
					"top": "80px",
					"left": "320px",
					"width": "90px",
					"height": "25px"
				});
				var output_16 = new cpr.controls.Output("optSbNm");
				output_16.value = "";
				output_16.bind("value").toLanguage("UI-DB-SB_NM");
				container.addChild(output_16, {
					"top": "55px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var output_17 = new cpr.controls.Output("optSbNm");
				output_17.value = "";
				output_17.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSbCdNm");
				container.addChild(output_17, {
					"top": "55px",
					"left": "105px",
					"width": "205px",
					"height": "25px"
				});
				var output_18 = new cpr.controls.Output("optPnt");
				output_18.value = "";
				output_18.bind("value").toLanguage("UI-DB-PNT");
				container.addChild(output_18, {
					"top": "80px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var output_19 = new cpr.controls.Output("optPnt");
				output_19.value = "";
				output_19.style.css({
					"text-align" : "right"
				});
				output_19.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strPnt");
				container.addChild(output_19, {
					"top": "80px",
					"left": "105px",
					"width": "45px",
					"height": "25px"
				});
				var output_20 = new cpr.controls.Output("optLectRoomNm");
				output_20.value = "";
				output_20.bind("value").toLanguage("UI-SCR-TIMTBCLASR");
				container.addChild(output_20, {
					"top": "105px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var output_21 = new cpr.controls.Output("optLectRoomNm");
				output_21.value = "";
				output_21.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strLectRoomLttmNm");
				container.addChild(output_21, {
					"top": "105px",
					"left": "105px",
					"width": "480px",
					"height": "25px"
				});
				var output_22 = new cpr.controls.Output("optCmpDivRcd");
				output_22.value = "";
				output_22.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strCmpDivRcdNm");
				container.addChild(output_22, {
					"top": "80px",
					"left": "415px",
					"width": "170px",
					"height": "25px"
				});
				var output_23 = new cpr.controls.Output("optLectRoomNm1");
				output_23.value = "";
				output_23.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strLectRoomLttmNm1");
				container.addChild(output_23, {
					"top": "105px",
					"left": "738px",
					"width": "480px",
					"height": "25px"
				});
				var output_24 = new cpr.controls.Output("optLectRoomNm1");
				output_24.value = "";
				output_24.bind("value").toLanguage("UI-SCR-TIMTBCLASR");
				container.addChild(output_24, {
					"top": "105px",
					"left": "638px",
					"width": "95px",
					"height": "25px"
				});
				var output_25 = new cpr.controls.Output("optPnt1");
				output_25.value = "";
				output_25.bind("value").toLanguage("UI-DB-PNT");
				container.addChild(output_25, {
					"top": "80px",
					"left": "638px",
					"width": "95px",
					"height": "25px"
				});
				var output_26 = new cpr.controls.Output("optPnt1");
				output_26.value = "";
				output_26.style.css({
					"text-align" : "right"
				});
				output_26.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strPnt1");
				container.addChild(output_26, {
					"top": "80px",
					"left": "738px",
					"width": "45px",
					"height": "25px"
				});
				var output_27 = new cpr.controls.Output("optCmpDivRcd1");
				output_27.value = "";
				output_27.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_27, {
					"top": "80px",
					"left": "953px",
					"width": "90px",
					"height": "25px"
				});
				var output_28 = new cpr.controls.Output("optCmpDivRcd1");
				output_28.value = "";
				output_28.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strCmpDivRcdNm1");
				container.addChild(output_28, {
					"top": "80px",
					"left": "1048px",
					"width": "170px",
					"height": "25px"
				});
				var output_29 = new cpr.controls.Output("optProfNm1");
				output_29.value = "";
				output_29.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strProfNm1");
				container.addChild(output_29, {
					"top": "55px",
					"left": "1048px",
					"width": "170px",
					"height": "25px"
				});
				var output_30 = new cpr.controls.Output("optProfNm1");
				output_30.value = "";
				output_30.bind("value").toLanguage("UI-SCR-CHARGPROF");
				container.addChild(output_30, {
					"top": "55px",
					"left": "953px",
					"width": "90px",
					"height": "25px"
				});
				var output_31 = new cpr.controls.Output("optSbNm1");
				output_31.value = "";
				output_31.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSbCdNm1");
				container.addChild(output_31, {
					"top": "55px",
					"left": "738px",
					"width": "205px",
					"height": "25px"
				});
				var output_32 = new cpr.controls.Output("optSbNm1");
				output_32.value = "";
				output_32.bind("value").toLanguage("UI-DB-SB_NM");
				container.addChild(output_32, {
					"top": "55px",
					"left": "638px",
					"width": "95px",
					"height": "25px"
				});
				var output_33 = new cpr.controls.Output("optDivclsCd1");
				output_33.value = "";
				output_33.style.setClasses(["require"]);
				output_33.bind("value").toLanguage("UI-GLS-DIVCLS");
				container.addChild(output_33, {
					"top": "30px",
					"left": "638px",
					"width": "95px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbDivclsCd1");
				comboBox_4.bind("fieldLabel").toExpression("#optDivclsCd1.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strRightDivclsCd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("선택", ""));
					comboBox_4.setItemSet(app.lookup("dsDivclsList"), {
						"label": "SB_DIVCLS_CD_NM",
						"value": "DIVCLS_CD"
					});
				})(comboBox_4);
				if(typeof onCbbDivclsCd1SelectionChange == "function") {
					comboBox_4.addEventListener("selection-change", onCbbDivclsCd1SelectionChange);
				}
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "738px",
					"width": "205px",
					"height": "25px"
				});
				var output_34 = new cpr.controls.Output("optSaNm1");
				output_34.value = "";
				output_34.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_34, {
					"top": "30px",
					"left": "953px",
					"width": "90px",
					"height": "25px"
				});
				var output_35 = new cpr.controls.Output("optSaNm1");
				output_35.value = "";
				output_35.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSaCdNm1");
				container.addChild(output_35, {
					"top": "30px",
					"left": "1048px",
					"width": "170px",
					"height": "25px"
				});
				var output_36 = new cpr.controls.Output("optSbLvlRcdNm");
				output_36.value = "";
				output_36.bind("value").toLanguage("UI-DB-PNT");
				container.addChild(output_36, {
					"top": "80px",
					"left": "160px",
					"width": "95px",
					"height": "25px"
				});
				var output_37 = new cpr.controls.Output("optSbLvlRcdNm");
				output_37.value = "";
				output_37.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSbLvlRcdNm");
				container.addChild(output_37, {
					"top": "80px",
					"left": "260px",
					"width": "50px",
					"height": "25px"
				});
				var output_38 = new cpr.controls.Output("optSbLvlRcdNm1");
				output_38.value = "";
				output_38.bind("value").toLanguage("UI-DB-PNT");
				container.addChild(output_38, {
					"top": "80px",
					"left": "793px",
					"width": "95px",
					"height": "25px"
				});
				var output_39 = new cpr.controls.Output("optSbLvlRcdNm1");
				output_39.value = "";
				output_39.bind("value").toDataMap(app.lookup("dmReqTmpCtl"), "strSbLvlRcdNm1");
				container.addChild(output_39, {
					"top": "80px",
					"left": "893px",
					"width": "50px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "120px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "분합반처리";
	cpr.core.Platform.INSTANCE.register(app);
})();
