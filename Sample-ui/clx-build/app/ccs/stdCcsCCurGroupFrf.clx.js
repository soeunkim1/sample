/*
 * App URI: app/ccs/stdCcsCCurGroupFrf
 * Source Location: app/ccs/stdCcsCCurGroupFrf.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCCurGroupFrf", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCCurGroupFrf.xtm"/>
			
			/**
			 * 교과그룹관리
			 * @class stdCcsCWeek
			 * @author 박갑수 at 2016. 1. 29
			 */
			var stdCcsCCurGroupFrf = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 탭 정의
				var TAB = {
					// 데이터관리
					MANAGE	: "tabManage",
					// 이력관리
					HIS    		: "tabHistory",
					// 언어
					LANG   		: "tabLang"
				};
						
				// 탭버튼 정의
				var TAB_BTN = {
					tabManage	: "tabBtnManage",
					tabHistory		: "tabBtnHistory",
					tabLang    		: "tabBtnLang"
				};
						
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnFrfUcuCd",
					iCd					:	"",
					iNm					:	"ipbFrfUcuCdNm",
					iObjDivRcd			:	["CC009CU"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"dipKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"ipbFrfUobjDivRcd",
					oCd					:	"ipbFrfUcuCd",
					oCdNm				:	"ipbFrfUcuCdNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){}
				},
				{
					controlId			:	"btnFrfSpCd",
					iCd					:	"",
					iNm					:	"ipbFrfSpCdNm",
					iObjDivRcd			:	["CC009SP"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"dipKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"ipbFrfSpObjDivRcd",
					oCd					:	"ipbFrfSpCd",
					oCdNm				:	"ipbFrfSpCdNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){}
				},
				{
					controlId			:	"btnFrfSaCd",
					iCd					:	"",
					iNm					:	"ipbFrfSaCdNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"dipKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"ipbFrfSaObjDivRcd",
					oCd					:	"ipbFrfSaCd",
					oCdNm				:	"ipbFrfSaCdNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){}
				}];
				
				// 학사구조관리에서 교과목관리페이지 호출시, 서브페이지용 파라미터
				moPObject.moAcademicStructure = {
					// Academic Structure의 서브페이지용 파라미터
					mode     : "",
					treeNode : null,
					name     : "",
					objType  : "",
					objCd    : "",
					year     : "",
					smt      : "",
					keyDate  : ""
				};
				
				/**
				 * @desc 학사구조관리에서 교과그룹관리페이지 호출시 OnLoad 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doOnLoadWithAcademicStructure() {
					var voParentPage = ExtSubPage.getParent();
					var voParentParam = voParentPage.callScriptVal("moAcademicStructure");
					
					for (var key in  voParentParam ) {
						moAcademicStructure [key] = voParentParam[key];
					}
					
					var voParam = moAcademicStructure;
					
					// Academic Structure 모드가 지정되어 있는 경우에만
					if (voParam.mode) {
						var vnTop = util.Control.getStyleAttr(app, "grpData", "top");
						var vnLeft = util.Control.getStyleAttr(app, "grpData", "left");
						var vnGrpDataHeight = util.Control.getStyleAttr(app, "grpData", "height");
						var vnGrpDataDtlHeight = util.Control.getStyleAttr(app, "grpDataDtl", "height");
						var vnWidth = util.Control.getStyleAttr(app, "grpData", "width");
						
						vnTop = vnTop.replace(/[^0-9]/g, '');
						vnLeft = vnLeft.replace(/[^0-9]/g, '');
						vnGrpDataHeight = vnGrpDataHeight.replace(/[^0-9]/g, '');
						vnGrpDataDtlHeight = vnGrpDataDtlHeight.replace(/[^0-9]/g, '');
						vnWidth = vnWidth.replace(/[^0-9]/g, '');
						var vnHeight = String(Number(vnGrpDataHeight) + Number(vnGrpDataDtlHeight) + 5);
						
						var vsCallFunc =  "doCropPageToControl(null, "+ vnTop + ", " + vnLeft + ", " +  vnHeight + ", " + vnWidth+")";
						
						voParentPage.callScriptVal( vsCallFunc);
						
						// 검색조건 세팅
						util.Control.setValue(app, "ipbCuCd",voParam.objCd);
						util.Control.setValue(app, "dipKeyDate",voParam.keyDate);
						util.Control.setValue(app, "dipKeyDateHistory",voParam.keyDate);
						
						util.DataMap.setValue(app, "dmReqWithAS", "strAsMode",voParam.mode);
						util.DataMap.setValue(app, "dmReqWithAS", "strObjCd",voParam.objCd);
						
						//조회
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc 작업저장시 학사구조관리의 콜백메서드 실행
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doSaveWithAcademicStructure() {
					var voParam = moAcademicStructure;
							
					if(voParam.mode){
						var voParentPage = ExtSubPage.getParent();
			
						voParentPage.callScriptVal("callbackAcademicStructureSubPageSave()");
					}
				};
				
				/**
				 * @desc 헤더메시지 표시(부모창이 있는 경우 부모의 헤더에 메시지 표시)
				 * @param 메시지
				 * @return 
				 * @author 박갑수 at 2016. 3. 9
				 */
				function doSetMsgStatus(psMsg) {
					var voParam = moAcademicStructure;
					
					//부모페이지가 있는 경우 부모페이지의 헤더에 표시한다.
					if(voParam.mode){
						var voParentPage = ExtSubPage.getParent();
						var vsCallFunc =  "util.Msg.notify(app,  "'"+ psMsg + "'" )";
						voParentPage.callScriptVal(vsCallFunc);
					
					} else {
						util.Msg.notify(app, "psMsg");
					}
				};
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onModelConstructDone_StdCcsCCurGroupFrf = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsCur", "rptCcsCurHistory", "rptCcsCurLang"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData", "grpDataDtl"]);
					//3.첫번째 탭으로 로딩
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
					// 기준일자 조회하는 내부 팝업 호출을 위한 단위시스템코드 설정
					setUnitSystem("CCS");
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["dipKeyDate"]);
							
							// 학사부서관리 호출시
							doOnLoadWithAcademicStructure();
							
							util.Control.setFocus(app, "ipbCuCd");
						}
					}, true);
				};
				
				/**
				 * @desc [btnYearSmt]기준일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnYearSmt = function() {
					//기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDate","impSchYearSmt");
				}
				
				/**
				 * @desc [ipbCuCd]교과그룹코드 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onKeyDown_IpbCuCd = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [ipbCuNm]교과그룹명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onKeyDown_IpbCuNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["dipKeyDate"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							doSetMsgStatus(NLS.INF.M024);
						}
					});
				};
				
				/**
				 * @desc 교과그룹목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doList(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsCur");
							
							// 폐기처리로 인해 데이터가 없어질경우 [데이터관리] 텝으로 이동하기 위함.
							var strCuCd = util.DataMap.getValue(app, "dmReqSelRow", "strTmpCuCd");
							var vnLength = ExtInstance.getNodeListLength("/root/resList/rptCcsCur/row[child::CU_CD = '"+ strCuCd +"']");
							if(ValueUtil.isNull(strCuCd) || vnLength == 0){
								if(util.Grid.getRowCount(app, "grdCcsCur") == 0){
									// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
									doCompareFrfEnable();
								}
								ExtModel.dispatch("tabBtnManage","DOMActivate");
							}
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [rptCcsCur]교과그룹목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onRowSelect_RptCcsCur = function() {
					
					var vsTab = util.Tab.getSelectedId(app, "tabMain");
					var vsIndex = "";
					
					if(vsTab=="tabManage"){		
						vsIndex = TAB.MANAGE;
					}else if(vsTab=="tabHistory"){
						vsIndex =TAB.HIS;
					}else if(vsTab=="tabLang"){
						vsIndex =TAB.LANG;
					}
					
					var voSelectRowIdx = util.Grid.getIndex(app, "grdCcsCur");
					util.DataMap.setValue(app, "dmReqSelRow", "strCuCd", util.Grid.getCellValue(app, "grdCcsCur", "CU_CD"  	,voSelectRowIdx));					// 교과목코드
					util.DataMap.setValue(app, "dmReqSelRow", "strRefKey", util.Grid.getCellValue(app, "grdCcsCur", "REF_KEY"  ,voSelectRowIdx)); 					// 참조키
					util.DataMap.setValue(app, "dmReqSelRow", "strLanDivRcd", util.Grid.getCellValue(app, "grdCcsCur", "LAN_DIV_RCD"  ,voSelectRowIdx)); 	// 언어구분
					
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					
					doTabChange(vsIndex);
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doCompareFrfEnable() {
					// 신규시 제어 컬럼
					var vaEnableCtl = ["ipbFrfCuCd"];
					
					// 마스터 로우 없을경우 프리폼 리셋
					if(!util.Grid.getIndex(app, "grdCcsCur")){
						util.Control.reset(app, "frfCcsCur");
					}
					
					if( (!util.Grid.getIndex(app, "grdCcsCur")) 
						|| util.Grid.getRowState(app, "grdCcsCur") == cpr.data.tabledata.RowState.DELETED) {
							
						util.Control.setEnable(app, false, ["frfCcsCur"]);
						
					} else {
						util.Control.setEnable(app, true, ["frfCcsCur"]);	
						
						var vsFlgGbn = util.Grid.getCellValue(app, "grdCcsCur", "FLAG_GBN", util.Grid.getIndex(app, "grdCcsCur"));
						// 신규 상태에따른 프리폼항목 제어
						if(util.Grid.getRowState(app, "grdCcsCur") == cpr.data.tabledata.RowState.INSERTED && ValueUtil.fixNull(vsFlgGbn) != "C"){
							util.Control.setEnable(app, true, vaEnableCtl);	
						}else {
							util.Control.setEnable(app, false, vaEnableCtl);	
						}
					}
				};
				
				/**
				 * @desc [tabBtnManage]데이터관리 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_TabBtnManage = function() {
					doTabChange(TAB.MANAGE);
				};
				
				/**
				 * @desc [tabBtnHistory]이력관리 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_TabBtnHistory = function() {
					doTabChange(TAB.HIS);
				};
				
				/**
				 * @desc [tabBtnLang]언어 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_TabBtnLang = function() {
					doTabChange(TAB.LANG);
				};
				
				/**
				 * @desc 탭 변경시
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doTabChange(psCaseId) {
					// 선택된 TAB
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					
					// 1. 현재 선택된 탭의 상태 체크
					switch (vsSelTabId) {
						// 1-1. 데이터관리
						
						case TAB.MANAGE : {
							if(psCaseId != TAB.MANAGE){
								// 데이터관리 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdCcsCur"], "CRM") ){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 교과목 목록 변경이 일어난 후 다른탭으로 이동시 프리폼 리셋 처리
									if(util.Grid.isModified(app, ["grdCcsCur"])){
										// 교과목 목록 리셋
										util.Grid.revertAllData(app, "grdCcsCur");
										// 교과목 리셋
										util.Control.reset(app, "frfCcsCur");
									}
								}
							}					
							break;
						}
						
						// 1-2. 이력관리  버튼 선택
						case TAB.HIS : {
							// 이력관리 리피트 변경내역 있는 경우
							if(util.Grid.isModified(app, ["grdCcsCurHistory"], "CRM")){
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								
								return false;
							}else{
								if(util.Grid.isModified(app, ["grdCcsCurHistory"]) ){
									// 이력 목록 리셋
									util.Grid.revertAllData(app, "grdCcsCurHistory");
								}
							}
																							
							break;
						}
						
						// 1-3. 언어 버튼 선택
						case TAB.LANG : {
							// 언어 리피트 변경내역 있는 경우
							if(util.Grid.isModified(app, ["grdCcsCurLang"], "CRM")){
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								return false;
							}else{
								// 언어 목록 변경이 일어난 후 다른탭으로 이동시 프리폼 리셋 처리
								if(util.Grid.isModified(app, ["grdCcsCurLang"])){
									// 교과목 목록 리셋
									util.Grid.revertAllData(app, "grdCcsCurLang");
								}
							}
										
							break;
						}
					}
				
					// 2. 탭변경
					util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
					// 3. 탭변경 후 처리 로직
					switch (psCaseId) {
						// 3-1. 데이터관리 조회
						case TAB.MANAGE : {
							// 교과목 상세 조회
							doListDtl();
							
							break;
						}
						// 3-2. 이력관리 조회
						case TAB.HIS : {
							// 교과목목록 선택된 ROW 검사
							var voSelectRowIdx = util.Grid.getIndex(app, "grdCcsCur");
							
							if (!voSelectRowIdx) {
								// 데이터관리 프리폼 초기화
								util.Control.reset(app, "frfCcsCur");
								// 데이터관리  tab으로 이동
								ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
								util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
								
								return;
							}
							
							// 이력조회
							doListHistory();
							
							break;
						}
						// 3-3. 언어 조회
						case TAB.LANG : {
							// 교과목목록 선택된 ROW 검사
							var voSelectRowIdx = util.Grid.getIndex(app, "grdCcsCur");
							
							if (!voSelectRowIdx) {
								var vsMsgParam = util.Grid.getTitle(app, "grdCcsCurCcsCur");
								// "@(을)를 선택해주세요" 메시지 출력
								util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
								// 데이터관리  tab으로 이동
								ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
								util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
								
								return;
							}
							
							//언어 조회
							doListLang();
							
							break;
						}
					}
					
					// 교과그룹목록 활성화
					util.Control.setEnable(app, true, ["grpData"]);
				};
				
				/**
				 * @desc 교과그룹(프리폼) 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 22
				 */
				function doListDtl() {
					
					// 교과목 포커싱된 인덱스
					var vnIndex = util.Grid.getIndex(app, "grdCcsCur");
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCcsCur","frfCcsCur", vnIndex);
				};
				
				/**
				 * @desc [ipbFrfUcuCdNm]상위교과그룹명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onValueChanged_IpbFrfUcuCdNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnFrfUcuCd]상위교과그룹명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnFrfUcuCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbFrfSpCdNm]이수과정명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onValueChanged_IpbFrfSpCdNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnFrfSpCd]이수과정명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnFrfSpCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbFrfSaCdNm]학사부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onValueChanged_IpbFrfSaCdNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnFrfSaCd]학사부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnFrfSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnCopy]복사 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnCopy = function() {
					
					var vnOrgRowIdx = util.Grid.getIndex(app, "grdCcsCur");
					// 마스터 리피트 row 선택여부 체크
					if(vnOrgRowIdx == "0"){
						
						var vsMsgParam = util.Grid.getTitle(app, "grdCcsCurCcsCur");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					// 마스터 row(대상) 변경내역 체크
					var vsUptStatus = util.Grid.getCellValue(app, "grdCcsCur", "UPT_STATUS", vnOrgRowIdx);
					if(util.Grid.isModified(app, ["grdCcsCur"])){
						var vsMsgParam = ExtControl.getTextValue("lblTitleFrfCcsCur");
						// "@의 시점 복사 작업은 [작업저장]후 진행하시기 바랍니다." 메시지 출력			
						util.Msg.alert("NLS-CCS-M062", [vsMsgParam]);
						return;
					}
					
					// 종료일자
					var vsEndDt = util.Grid.getCellValue(app, "grdCcsCur", "END_DT", vnOrgRowIdx).substring(0, 8);
					var vsKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate").substring(0, 8);
					
					// 폐기여부 확인
					if(Number(vsEndDt) <= Number(vsKeyDate)){
						var vsMsgParam = ExtControl.getTextValue("lblTitleFrfCcsCur");
						// "폐기된 @은(는) 복사할 수 없습니다. 이력관리 탭에서 복구해주시기 바랍니다." 메시지 출력.
						util.Msg.alert("NLS-WRN-M208", [vsMsgParam]);
						return;
					}
					
					var voNextRow   = util.Grid.insertRow(app, "grdCcsCur");
					
					// 교과그룹 상세 조회
					doListDtl();
					
					// 값 복사
					ExtRepeat.copyToRowData("rptCcsCur", vnOrgRowIdx, "rptCcsCur", voNextRow);
					
					// 값복사후 Row의 내용 프리폼 반영을위해
					util.Grid.selectRow(app, "grdCcsCur", voNextRow);
					
					util.Grid.setCellValue(app, "grdCcsCur", "UPT_STATUS", "N", voNextRow);
					
					// 기본값 세팅
					// 시작일자 : 조회조건 기준일자
					util.FreeForm.setValue(app, "frfCcsCur", "ST_DT", vsKeyDate+"000000");
					
					// 종료일자 : 99991231
					util.FreeForm.setValue(app, "frfCcsCur", "END_DT", "99991231000000");
					
					// 참조키 : ""
					util.Grid.setCellValue(app, "grdCcsCur", "REF_KEY", "", voNextRow);
					
					// 언어키 : 시스템로케일
					var vsLanDivRcd = msSystemLocale;
					util.Grid.setCellValue(app, "grdCcsCur", "LAN_DIV_RCD", vsLanDivRcd, voNextRow);
					
					// FLAG_GBN : C
					var vsFlagGbn = "C";
					util.Grid.setCellValue(app, "grdCcsCur", "FLAG_GBN", vsFlagGbn, voNextRow);
					
					util.Control.setEnable(app, false, ["ipbFrfCuCd"]);
				};
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnNew = function() {
					
					
					var voChildList = ExtInstance.getNodeListLength("/root/resList/rptCcsCur/row[child::FLAG_GBN = 'C']");
					if(voChildList != null && voChildList > 0 ){
						//-- 복사기능 처리내역이 있습니다. 작업저장 후 진행 하시기 바랍니다.
						util.Msg.alert("NLS-CCS-M072");
						return;
					}
					
					
					
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdCcsCur");
					
					// 신규 Defalut값 설정 
			
					// 시작일자 : 조회조건 기준일자
					var vsStDt = util.DataMap.getValue(app, "dmReqKey", "strKeyDate");
					util.FreeForm.setValue(app, "frfCcsCur", "ST_DT", vsStDt);
					
					// 종료일자 : 99991231000000
					var vsEndDt = "99991231000000";
					util.FreeForm.setValue(app, "frfCcsCur", "END_DT", vsEndDt);
					
					// 객체구분코드 : 교과그룹[CC009CU]
					var vsObjDivRcd = "CC009CU";
					util.Grid.setCellValue(app, "grdCcsCur", "OBJ_DIV_RCD", vsObjDivRcd, vnIdx);
					
					// 언어키 : 시스템로케일
					var vsLanDivRcd = msSystemLocale;
					util.Grid.setCellValue(app, "grdCcsCur", "LAN_DIV_RCD", vsLanDivRcd, vnIdx);
					
					// FLAG_GBN : N
					var vsFlagGbn = "N";
					util.Grid.setCellValue(app, "grdCcsCur", "FLAG_GBN", vsFlagGbn, vnIdx);
							
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "cbbFrfCuDivRcd");
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnDel = function() {
					
					var voChildList = ExtInstance.getNodeListLength("/root/resList/rptCcsCur/row[child::FLAG_GBN = 'C']");		
					if(voChildList != null && voChildList >0 ){
						var vsFlgGbn = util.Grid.getCellValue(app, "grdCcsCur", "FLAG_GBN", util.Grid.getIndex(app, "grdCcsCur"));
						if(vsFlgGbn != 'C'){
							//--복사기능 처리내역이 있습니다. 작업저장 후 진행 하시기 바랍니다.
							util.Msg.alert("NLS-CCS-M072");
							return;
						}
						
					}
					
					
					// 삭제
					util.Grid.deleteRow(app, "grdCcsCur");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
				}
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdCcsCur");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCcsCur", "frfCcsCur");
				}
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				}
				
				/**
				 * @desc 교과그룹목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcsCur"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check		
					if(!util.validate(app, "grdCcsCur")) return false;
					
					// 리피트 필수값 : 상위교과그룹 OR 학사부서 필수
					if(!moPage.checkNotNullRpt()){
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							doSaveWithAcademicStructure();
							
							//조회건수가 0건이면 프리폼이 내역이 반영되지 않기 떄문
							util.Control.reset(app, "frfCcsCur");
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) doSetMsgStatus(NLS.INF.M025);
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							doSetMsgStatus(NLS.WRN.M119);
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
						}
					});
				};
				
				/**
				 * @desc 상위교과그룹 OR 학사부서 필수입력 확인.
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.checkNotNullRpt = function() {
					// 유효성 true or false
					var vbValid = true;
					
					var vsRptId = "rptCcsCur"
					// 리피트 RowCnt
					var vnRowCnt 	= util.Grid.getRowCount(app, vsRptId);		
					// 리피트 인덱스
					var vnRptIndex 	= util.Grid.getIndex(app, vsRptId);
					
					for (var i = 1; i <= vnRowCnt; i++) {
						var vsUptStatus = util.Grid.getCellValue(app, vsRptId, "UPT_STATUS", i);
						// 변경이없거나 삭제일경우 Skip
						if (ValueUtil.isNull(vsUptStatus) || vsUptStatus == "D") continue;
						
						// 상위교과그룹명
						var vsUcdCdNm = util.Grid.getCellValue(app, vsRptId, "UCU_CD_NM", i);
						// 학사부서명
						var vsSaCdNm = util.Grid.getCellValue(app, vsRptId, "SA_CD_NM", i);
						// 상위교과그룹명 과 학사부서명이 모두 없을경우 체크
						if(ValueUtil.isNull(vsUcdCdNm) && ValueUtil.isNull(vsSaCdNm)){
							var vsRptTiele = util.Grid.getTitle(app, "grdCcsCurCcsCur");
							var vsMsgParam = ExtControl.getTextValue("lblFrfUcuCdNm") + ", " + ExtControl.getTextValue("lblFrfSaCdNm");
							
							// @목록의 @번째 항목의 @중 한가지는 필수 입력 항목입니다.
							util.Msg.alert("NLS-CCS-M063", [vsRptTiele, i, vsMsgParam]);
							util.Grid.selectRow(app, vsRptId, i, true);
							
							vbValid = false;
							return vbValid;
						}
					}
				
					return vbValid;
				};
				
				/**
				 * @desc [frfCcsCur]교과그룹 onUpdate 이벤트
				 * @param pbStatus Boolean
				 * @return  
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onUpdate_FrfCcsCur = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptCcsCur", "frfCcsCur");
				};
				
				/**
				 * @desc 히스토리(이력)목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doListHistory(poCallBackFunc) {
					
					var vsHisDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDateHistory");
					var vsKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate");
					
					// 폐기/복구일자 모두 지워졌을 경우 조회조건 기준일자 셋팅
					if(vsHisDate ==""){
						util.DataMap.setValue(app, "dmReqKey", "strKeyDateHistory", vsKeyDate);
					}
					
					// 폐기/복구일자 defalut세팅
					util.Control.redraw(app, "dipKeyDateHistory"); 
					
					// 이력관리 조회 서브이션 
					//strCommand: listHistory 
					util.Submit.send(app, "subListHistory", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsCurHistory");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [btnYearSmtHis]폐기/복구일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnYearSmtHis = function() {
					// 기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDateHistory", "impSchYearSmt");
				};
				
				/**
				 * @desc [btnDisUse]폐기 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnDisUse = function() {
					// 교과목 폐기
					doDisUseHistory();
				};
				
				/**
				 * @desc 교과그룹 폐기
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doDisUseHistory() {
					// 9999레코드를  조회조건의 학기의 (시작일자 - 1초) 로 업데이트 = 해당학기까지 유효한 데이타
					var vnCnt =  util.Grid.getRowCount(app, "grdCcsCurHistory");
					// 조회조건 기준일자 : 마스터 포커스용
					var vsSchKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate").substring(0, 8);
					
					// 폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDateHistory")) return false;
					
					var vnMaxRowIdx   = null;
					var vnMaxEndDt 	= null;
					for (var i = 0; i < vnCnt; i++) {
						var vnRowIdx = i+1;
						
						var vsEndDt = util.Grid.getCellValue(app, "grdCcsCurHistory", "END_DT", vnRowIdx).substring(0, 8);
						if (vsEndDt == "99991231") {
							vnMaxEndDt 		= vsEndDt;
							vnMaxRowIdx   	= vnRowIdx;
							
							break;
						}
					}
					
					// 1. 종료일자가 99991231이 아닐때, 폐기 불가
					if (vnMaxRowIdx == null) {
						// "폐기 가능한 데이터가 없습니다." 메시지 표시
						util.Msg.alert("NLS-INF-M029");
						return;
					}
					
					// 99991231가 있는 로우의 시작일
					var vsStDt   = util.Grid.getCellValue(app, "grdCcsCurHistory", "ST_DT", vnMaxRowIdx).substring(0, 8);
					var vsKeyDate = util.Control.getValue(app, "dipKeyDateHistory").substring(0, 8);
					var vsBefDate = moPage.getBefDate(vsKeyDate).substring(0, 8);
					
					if (vsStDt >= vsBefDate) {
						// 폐기 가능한 데이터가 없습니다.
						util.Msg.alert("NLS-INF-M029");
						return;
					}
					
					util.DataMap.setValue(app, "dmReqKeyHis", "strCuCd", util.Grid.getCellValue(app, "grdCcsCurHistory", "CU_CD", vnMaxRowIdx));
					util.DataMap.setValue(app, "dmReqKeyHis", "strObjDivRcd", util.Grid.getCellValue(app, "grdCcsCurHistory", "OBJ_DIV_RCD", vnMaxRowIdx));
					util.DataMap.setValue(app, "dmReqKeyHis", "strStDt", util.Grid.getCellValue(app, "grdCcsCurHistory", "ST_DT", vnMaxRowIdx));
					util.DataMap.setValue(app, "dmReqKeyHis", "strEndDt", util.Grid.getCellValue(app, "grdCcsCurHistory", "END_DT", vnMaxRowIdx));
					
					// 폐기 가능여부 체크
					//strCommand: chkDisHistory 
					util.Submit.send(app, "subChkDisHistory", function(pbSuccess){
						if(pbSuccess){
			
							//폐기 가능할때 
							var vsDisYn = util.DataMap.getValue(app, "dmReqKeyHis", "strDisHistoryYn");
							if(vsDisYn == "Y"){
								// "교과그룹을 폐기하면 교과과정도 폐기됩니다. 폐기하시겠습니까?" 메시지
								if (!util.Msg.confirm("NLS-CRM-M052") ) {
									return ;
								}
							}
								
							// 전날자로 타겟로우의 종료일자 업데이트
							var vsMsgDate = vsBefDate.substring(0, 4) + NLS.NSCR.YEAR + vsBefDate.substring(4, 6) + NLS.NSCR.MONTH + vsBefDate.substring(6, 8) + NLS.NSCR.DAY;
							
							// "@부로 폐기합니다. \n진행하시겠습니까?" 메시지
							if(util.Msg.confirm("NLS-CRM-M047", [vsMsgDate]) ){
								util.Grid.setCellValue(app, "grdCcsCurHistory", "END_DT", vsBefDate + "000000", vnMaxRowIdx);
								util.Grid.selectRow(app, "grdCcsCurHistory", vnMaxRowIdx, true);
								
								/*
									그리드에 pk_colvalues를 넣는다.
									조회 후 찾아주기 위함.
									var vsSchKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate");
								*/
								if(vsSchKeyDate+"000000" >= vsStDt+"000000"){
									moPage.setCcsCurPkColRowValue("rptCcsCurHistory");
								}else{
									moPage.setCcsCurPkColRowValue("rptCcsCur");
								}
								
								doSaveHis();
							}
						}
							
						// 이력탭용 인스턴스값 초기화
						util.DataMap.setValue(app, "dmReqKeyHis", "strSbCd", "");
						util.DataMap.setValue(app, "dmReqKeyHis", "strObjDivRcd", "");
						util.DataMap.setValue(app, "dmReqKeyHis", "strStDt", "");
						util.DataMap.setValue(app, "dmReqKeyHis", "strEndDt", "");
					});
				};
				
				/**
				 * @desc 마스터 그리드의 pk_colvalues 값 세팅
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 12
				 */
				moPage.setCcsCurPkColRowValue = function(vpRptDetail){
					var vcRptCcsCur = model.getControl("rptCcsCur");
					var vsPkColValues = ExtRepeat.getPKColRowValues(vpRptDetail);					
					if(!ValueUtil.isNull(vsPkColValues)){
						vcRptCcsCur.pk_values = vsPkColValues;
					}
				};
				
				/**
				 * @desc 기준일 이전날짜 추출
				 * @param 기준일
				 * @return  기준일 이전일
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.getBefDate = function(psKeyDate) {
					
						var y  = psKeyDate.substring(0, 4);
						var m = psKeyDate.substring(4, 6);
						var d  = psKeyDate.substring(6, 8);
						var befDt = new Date(y, m - 1, d - 1);
						var befDtYear = befDt.getFullYear().toString();	// 2012.02.29 크롬에서도 정상적으로 작동되도록 수정함. 윤경희
						var befDtMonth = eval(befDt.getMonth() + 1).toString();
						var befDtDate = befDt.getDate().toString();
						
						if (befDtMonth.length == 1) befDtMonth = "0" + befDtMonth;
						if (befDtDate.length == 1) befDtDate = "0" + befDtDate;
						
						var vsBefDate = befDtYear + befDtMonth + befDtDate + "000000";
						
						return vsBefDate;
				};
				
				/**
				 * @desc 이력관리목록 변경사항 저장
				 * @param 
				 * @return  
				 * @author 박갑수 at 2016. 1. 25
				 */
				function doSaveHis() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcsCurHistory"], "MSG")){
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSaveHistory", function(pbSuccess){
						if(pbSuccess) {
							
							// 디테일 저장시 마스터의 포커스를 찾아가기위한 인스턴스 설정
							var vsCuCd =  util.DataMap.getValue(app, "dmReqSelRow", "strCuCd");
							util.DataMap.setValue(app, "dmReqSelRow", "strTmpCuCd", vsCuCd);
							
							doSaveWithAcademicStructure();	
							
							util.Control.redraw(app, "grdCcsCurHistory");
							
							// 교과목목록 조회
							doList(function(pbSuccess) {
								if (pbSuccess){
									// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
									doSetMsgStatus(NLS.INF.M025);
									
									// 마스터 포커스용 인스턴스 초기화
									util.DataMap.setValue(app, "dmReqSelRow", "strTmpCuCd", "");
								}
							});
			
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							doSetMsgStatus(NLS.WRN.M119);
							doListHistory();
						}
					});
				};
				
				/**
				 * @desc [btnDisUseCanc]폐기취소 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnDisUseCanc = function() {
					// 교과목 폐기취소
					doUseCancHistory();
				};
				
				/**
				 * @desc 교과그룹 폐기취소
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 25
				 */
				function doUseCancHistory() {
					
					var vnCnt = util.Grid.getRowCount(app, "grdCcsCurHistory");
					// 조회조건 기준일자 : 마스터 포커스용
					var vsSchKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDate").substring(0, 8);
					
					//폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDateHistory")) return false;
					
					var vnMaxRowIdx   = null;
					var vnMaxEndDt 	= null;
					for (var i = 0; i < vnCnt; i++) {
						var vnRowIdx = i+1;
						
						var vsEndDt = util.Grid.getCellValue(app, "grdCcsCurHistory", "END_DT", vnRowIdx).substring(0, 8);
						if ((vnMaxEndDt == null) || (vnMaxEndDt != null && vnMaxEndDt < vsEndDt)) {
							vnMaxEndDt = vsEndDt;
							vnMaxRowIdx = vnRowIdx;
						}
					}
			
					if (vnMaxEndDt == "99991231" ) {
						// 폐기취소 가능한 데이터가 없습니다.
						util.Msg.alert("NLS-INF-M030");
						
						return;
					}
					
					// "마지막 데이터의 종료일이 9999년 12월 31일로 변경됩니다. \n진행하시겠습니까?" 메시지
					if(util.Msg.confirm("NLS-CRM-M048") ){
						util.Grid.setCellValue(app, "grdCcsCurHistory", "END_DT", "99991231000000", vnMaxRowIdx);
						util.Grid.selectRow(app, "grdCcsCurHistory", vnMaxRowIdx);
						
						var vsBefDate =  util.Grid.getCellValue(app, "grdCcsCurHistory", "ST_DT", vnMaxRowIdx).substring(0, 8);
						/*
							그리드에 pk_colvalues를 넣는다.
							조회 후 찾아주기 위함.
							
						*/
						if(vsSchKeyDate+"000000" >= vsBefDate+"000000"){
							moPage.setCcsCurPkColRowValue("rptCcsCurHistory");
						}else{
							moPage.setCcsCurPkColRowValue("rptCcsCur");
						}
						
						// 이력사항 변경사항 저장
						doSaveHis();
					}
				};
				
				/**
				 * @desc [btnRecover]복구 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnRecover = function() {
					// 교과목 복구
					doRecoverHistory();
				};
				
				/**
				 * @desc 교과그룹 복구
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doRecoverHistory() {
					
					// 요약: 가장 최근의 레코드를 카피하여 insert한다. (단, 기준일자가 최종일자보다 커야 한다.)
					var vnCnt = util.Grid.getRowCount(app, "grdCcsCurHistory");
					// 조회조건 기준일자 : 마스터 포커스용
					var vsSchKeyDate	= util.DataMap.getValue(app, "dmReqKey", "strKeyDate").substring(0, 8);
					
					var vnMaxEndDt = null;
					var vnRowIdx = null;
					var vnMaxRowIdx = null;
					var vnMaxRowNum = null;
					
					// 폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDateHistory")) return false;
					
					for (var i = 0; i < vnCnt; i++) {
						voRowIdx = i+1;
						
						var vsEndDt = util.Grid.getCellValue(app, "grdCcsCurHistory", "END_DT", voRowIdx).substring(0, 8);
						if ((vnMaxEndDt == null) || (vnMaxEndDt != null && vnMaxEndDt < vsEndDt)) {
							vnMaxEndDt = vsEndDt;
							vnMaxRowIdx = vnRowIdx;
							vnMaxRowNum = i;
						}
					}
					
					// 폐기/복구일자
					var vsHistoryKeyDate = util.Control.getValue(app, "dipKeyDateHistory").substring(0, 8);
					
					if (vnMaxEndDt >= vsHistoryKeyDate) {
						// "복구 가능한 DATA가 없습니다." 메시지 표시
						util.Msg.alert("NLS-WRN-M128");
						
						return;
					}
					
					 var vsMsgCiiDate = vsHistoryKeyDate.substring(0, 4) + NLS.NSCR.YEAR + vsHistoryKeyDate.substring(4, 6) + NLS.NSCR.MONTH + vsHistoryKeyDate.substring(6, 8) + NLS.NSCR.DAY;
					 
					//  "시작일 @ 종료일 9999년12월31일로 데이터가 복구됩니다. \n진행하시겠습니까?"
					 if (util.Msg.confirm("NLS-CRM-M049", [vsMsgCiiDate]) ) {
						 
						vnMaxRowNum  = util.Grid.getIndex(app, "grdCcsCurHistory");
						var voNextRow   = util.Grid.insertRow(app, "grdCcsCurHistory");
						 
						ExtRepeat.copyToRowData("rptCcsCurHistory", vnMaxRowNum, "rptCcsCurHistory", voNextRow);
						
						var vsKeyDate = util.Control.getValue(app, "dipKeyDateHistory").substring(0, 8);
						util.Grid.setCellValue(app, "grdCcsCurHistory", "REF_KEY", "", voNextRow);
						util.Grid.setCellValue(app, "grdCcsCurHistory", "ST_DT", vsKeyDate + "000000", voNextRow);
						util.Grid.setCellValue(app, "grdCcsCurHistory", "END_DT", "99991231000000", voNextRow);
						util.Grid.setCellValue(app, "grdCcsCurHistory", "UPT_STATUS", "N", voNextRow);
						
						/*
							그리드에 pk_colvalues를 넣는다.
							조회 후 찾아주기 위함.
						*/
						if(vsSchKeyDate+"000000" >= vsKeyDate+"000000"){
							moPage.setCcsCurPkColRowValue("rptCcsCurHistory");
						}else{
							moPage.setCcsCurPkColRowValue("rptCcsCur");
						}
						
						// 이력사항 변경사항 저장
						doSaveHis();
					 }
				};
				
				/**
				 * @desc 언어목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doListLang(poCallBackFunc) {
					
					// 언어목록 조회 서브이션 
					//strCommand: listLang 
					util.Submit.send(app, "subListLang", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCcsCurLang");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [rptCcsCurLang]언어목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onRowSelect_RptCcsCurLang = function() {
					model.refreshBind(null, "bindRptCcsCurLang");
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doEnableMst();
				};
				
				/**
				 * @desc  디테일 리피트 상태에 따른 마스터 활성화 제어
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				function doEnableMst() {
					// 언어목록 변경사항 에따른 교과목목록 Enable 처리
					if(util.Grid.isModified(app, "grdCcsCurLang")){
						util.Control.setEnable(app, false, ["grpData"]);
					}else {
						util.Control.setEnable(app, true, ["grpData"]);
					}
				};
				
				/**
				 * @desc [btnNewLan]신규(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnNewLan = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdCcsCurLang");
					
					// 신규 Defalut값 설정 
					// 교과목코드 : 마스터목록
					var vsCuCd = util.DataMap.getValue(app, "dmReqSelRow", "strCuCd");
					util.Grid.setCellValue(app, "grdCcsCurLang", "CU_CD", vsCuCd, vnIdx);
					// 참조키 : 마스터목록
					var vsRefKey = util.DataMap.getValue(app, "dmReqSelRow", "strRefKey");
					util.Grid.setCellValue(app, "grdCcsCurLang", "REF_KEY", vsRefKey, vnIdx);
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doEnableMst();
				};
				
				/**
				 * @desc [btnDelLan]삭제(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnDelLan = function() {
					
					// 기본언어구분
					var vsLangDivRcd = util.DataMap.getValue(app, "dmReqSelRow", "strLanDivRcd");
					var vnRptIdx = util.Grid.getIndex(app, "grdCcsCurLang");
					
					var vsUptStatus = util.Grid.getCellValue(app, "grdCcsCurLang", "UPT_STATUS");
					if (ValueUtil.fixNull(vsLangDivRcd) == util.Grid.getCellValue(app, "grdCcsCurLang", "LAN_DIV_RCD", vnRptIdx)
					    && ValueUtil.isNull(vsUptStatus)) {
						// 기본언어레코드는 삭제할 수 없습니다. 메시지 표시
						util.Msg.alert("NLS-WRN-M010");
						return;
					}
					// 삭제
					util.Grid.deleteRow(app, "grdCcsCurLang");
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doEnableMst();
				};
			
				/**
				 * @desc [btnRestoreLan]작업취소(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnRestoreLan = function() {
					// 해당 리피트 상태 초기화
					util.Grid.restoreRow(app, "grdCcsCurLang");
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doEnableMst();
				};
				
				/**
				 * @desc [btnSaveLan]작업저장(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 29
				 */
				moPage.onClick_BtnSaveLan = function() {
					// 언어목록 변경사항 저장
					doSaveLan();
				};
				
				/**
				 * @desc 언어목록 변경사항 저장
				 * @param 
				 * @return  
				 * @author 박갑수 at 2016. 1. 25
				 */
				function doSaveLan() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcsCurLang"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdCcsCurLang")) return false;
					
					//strCommand: saveLang 
					util.Submit.send(app, "subSaveLang", function(pbSuccess){
						if(pbSuccess) {
							// 언어목록 조회
							doListLang(function(pbSuccessList) {
								if(pbSuccessList){
									// "갱신된 데이터가 조회되었습니다." header 메세지 표시
									doSetMsgStatus(NLS.INF.M025);
									
									doSaveWithAcademicStructure();	
								}
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							doSetMsgStatus(NLS.WRN.M119);
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsObjDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmpDivRcdRelList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDclRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCuDivRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsFrfCcsCur");
			dataSet_7.parseData({
				"columns": [
					{"name": "CU_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "UCU_CD"},
					{"name": "UOBJ_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "CU_NM"},
					{"name": "SHORT_NM"},
					{"name": "CERT_CU_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "MIN_PNT"},
					{"name": "MIN_SBJ_CNT"},
					{"name": "CU_DIV_RCD"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "UCU_CD_NM"},
					{"name": "SA_CD_NM"},
					{"name": "DCL_RCD_NM"},
					{"name": "SP_CD_NM"},
					{"name": "SP_OBJ_DIV_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsCcsCurHistory");
			dataSet_8.parseData({
				"info": "CCS_CUR@CU_CD,OBJ_DIV_RCD,ST_DT,END_DT",
				"columns": [
					{"name": "CU_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "UCU_CD"},
					{"name": "UOBJ_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "SP_OBJ_DIV_RCD"},
					{"name": "CU_NM"},
					{"name": "SHORT_NM"},
					{"name": "CERT_CU_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "MIN_PNT"},
					{"name": "MIN_SBJ_CNT"},
					{"name": "CU_DIV_RCD"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "UCU_CD_NM"},
					{"name": "SP_CD_NM"},
					{"name": "SA_CD_NM"},
					{"name": "DCL_RCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsCcsCur");
			dataSet_9.parseData({
				"info": "CCS_CUR@CU_CD,OBJ_DIV_RCD,ST_DT,END_DT",
				"columns": [
					{"name": "CU_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "UCU_CD"},
					{"name": "UOBJ_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "SP_OBJ_DIV_RCD"},
					{"name": "CU_NM"},
					{"name": "SHORT_NM"},
					{"name": "CERT_CU_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "MIN_PNT"},
					{"name": "CU_DIV_RCD"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "UCU_CD_NM"},
					{"name": "SP_CD_NM"},
					{"name": "SA_CD_NM"},
					{"name": "DCL_RCD_NM"},
					{"name": "MIN_SBJ_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsCcsCurLang");
			dataSet_10.parseData({
				"info": "CCS_CUR_LANG@REF_KEY,CU_CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CERT_CU_NM"},
					{"name": "CU_CD"},
					{"name": "SHORT_NM"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "PRT_ORD"},
					{"name": "CU_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strAsMode",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strKeyDateHistory",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strCuNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKeyHis");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strDisHistoryYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strTmpCuCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsCurGroup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsCurGroup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_9, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveHistory");
			submission_3.action = "/ccs/StdCcsCurGroup/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_8);
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListHistory");
			submission_4.action = "/ccs/StdCcsCurGroup/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_8, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListLang");
			submission_5.action = "/ccs/StdCcsCurGroup/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_3);
			submission_5.addResponseData(dataSet_10, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subChkDisHistory");
			submission_6.action = "/ccs/StdCcsCurGroup/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_2);
			submission_6.addResponseData(dataMap_2, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subSaveLang");
			submission_7.action = "/ccs/StdCcsCurGroup/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataSet_10);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subSave");
			submission_8.action = "/ccs/StdCcsCurGroup/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataSet_9);
			submission_8.addRequestData(dataMap_1);
			app.register(submission_8);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tabManage";
					var group_2 = new cpr.controls.Container("grpManage");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var button_1 = new cpr.controls.Button("btnRestore");
						button_1.value = "";
						button_1.style.setClasses(["btn-restore"]);
						button_1.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreClick == "function") {
							button_1.addEventListener("click", onBtnRestoreClick);
						}
						container.addChild(button_1, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
						var button_2 = new cpr.controls.Button("btnSave");
						button_2.value = "";
						button_2.style.setClasses(["btn-save"]);
						button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveClick == "function") {
							button_2.addEventListener("click", onBtnSaveClick);
						}
						container.addChild(button_2, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var button_3 = new cpr.controls.Button("btnDel");
						button_3.value = "";
						button_3.style.setClasses(["btn-delete"]);
						button_3.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelClick == "function") {
							button_3.addEventListener("click", onBtnDelClick);
						}
						container.addChild(button_3, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var button_4 = new cpr.controls.Button("btnCopy");
						button_4.value = "";
						button_4.bind("value").toLanguage("UI-SCR-COPY");
						if(typeof onBtnCopyClick == "function") {
							button_4.addEventListener("click", onBtnCopyClick);
						}
						container.addChild(button_4, {
							"top": "5px",
							"left": "886px",
							"width": "60px",
							"height": "25px"
						});
						var button_5 = new cpr.controls.Button("btnNew");
						button_5.value = "";
						button_5.style.setClasses(["btn-new"]);
						button_5.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewClick == "function") {
							button_5.addEventListener("click", onBtnNewClick);
						}
						container.addChild(button_5, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_1 = new udc.com.comFormTitle();
						userDefinedControl_1.bind("title").toLanguage("UI-SCR-SUBGRUP");
						container.addChild(userDefinedControl_1, {
							"top": "5px",
							"left": "5px",
							"width": "90px",
							"height": "25px"
						});
						var group_3 = linker.group_3 = new cpr.controls.Container("frfCcsCur");
						group_3.style.setClasses(["form-box"]);
						// Layout
						var xYLayout_3 = new cpr.controls.layouts.XYLayout();
						group_3.setLayout(xYLayout_3);
						(function(container){
							var inputBox_1 = new cpr.controls.InputBox("ipbFrfCuCd");
							inputBox_1.maxLength = 10;
							inputBox_1.userAttr({"require": "Y"});
							inputBox_1.bind("fieldLabel").toExpression("#optFrfCuCd.value");
							inputBox_1.bind("value").toDataColumn("CU_CD");
							container.addChild(inputBox_1, {
								"top": "31px",
								"left": "130px",
								"width": "130px",
								"height": "25px"
							});
							var dateInput_1 = new cpr.controls.DateInput("dipFrfStDt");
							dateInput_1.enabled = false;
							dateInput_1.maxDate = new Date(9999, 11, 31);
							dateInput_1.style.css({
								"text-align" : "center"
							});
							dateInput_1.bind("fieldLabel").toExpression("#optFrfStDt.value");
							dateInput_1.bind("value").toDataColumn("ST_DT");
							container.addChild(dateInput_1, {
								"top": "5px",
								"left": "130px",
								"width": "130px",
								"height": "25px"
							});
							var output_1 = new cpr.controls.Output("optFrfStDt");
							output_1.value = "";
							output_1.style.setClasses(["require"]);
							output_1.bind("value").toLanguage("UI-DB-ST_DT");
							container.addChild(output_1, {
								"top": "5px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_2 = new cpr.controls.Output("optFrfEndDt");
							output_2.value = "";
							output_2.style.setClasses(["require"]);
							output_2.bind("value").toLanguage("UI-DB-END_DT");
							container.addChild(output_2, {
								"top": "5px",
								"left": "270px",
								"width": "120px",
								"height": "25px"
							});
							var dateInput_2 = new cpr.controls.DateInput("dipFrfEndDt");
							dateInput_2.enabled = false;
							dateInput_2.maxDate = new Date(9999, 11, 31);
							dateInput_2.style.css({
								"text-align" : "center"
							});
							dateInput_2.bind("fieldLabel").toExpression("#optFrfEndDt.value");
							dateInput_2.bind("value").toDataColumn("END_DT");
							container.addChild(dateInput_2, {
								"top": "5px",
								"left": "395px",
								"width": "130px",
								"height": "25px"
							});
							var output_3 = new cpr.controls.Output("optFrfSaCdNm");
							output_3.value = "";
							output_3.bind("value").toLanguage("UI-DB-SA_CD_NM");
							container.addChild(output_3, {
								"top": "55px",
								"left": "270px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_2 = new cpr.controls.InputBox("ipbFrfSaCdNm");
							inputBox_2.maxLength = 100;
							inputBox_2.bind("fieldLabel").toExpression("#optFrfSaCdNm.value");
							inputBox_2.bind("value").toDataColumn("SA_CD_NM");
							if(typeof onIpbFrfSaCdNmValueChange == "function") {
								inputBox_2.addEventListener("value-change", onIpbFrfSaCdNmValueChange);
							}
							container.addChild(inputBox_2, {
								"top": "55px",
								"left": "395px",
								"width": "110px",
								"height": "25px"
							});
							var button_6 = new cpr.controls.Button("btnFrfSaCd");
							button_6.value = "";
							button_6.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfSaCdClick == "function") {
								button_6.addEventListener("click", onBtnFrfSaCdClick);
							}
							container.addChild(button_6, {
								"top": "55px",
								"left": "505px",
								"width": "20px",
								"height": "25px"
							});
							var output_4 = new cpr.controls.Output("optFrfCuCd");
							output_4.value = "";
							output_4.style.setClasses(["require"]);
							output_4.bind("value").toLanguage("UI-SCR-SUBGRPCD");
							container.addChild(output_4, {
								"top": "31px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_5 = new cpr.controls.Output("optFrfShortNm");
							output_5.value = "";
							output_5.bind("value").toLanguage("UI-GLS-SHORT_NM");
							container.addChild(output_5, {
								"top": "110px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_3 = new cpr.controls.InputBox("ipbFrfShortNm");
							inputBox_3.visible = false;
							inputBox_3.maxLength = 100;
							inputBox_3.bind("fieldLabel").toExpression("#optFrfShortNm.value");
							inputBox_3.bind("value").toDataColumn("SHORT_NM");
							container.addChild(inputBox_3, {
								"top": "110px",
								"left": "130px",
								"width": "395px",
								"height": "25px"
							});
							var output_6 = new cpr.controls.Output("optFrfCuDivRcd");
							output_6.value = "";
							output_6.style.setClasses(["require"]);
							output_6.bind("value").toLanguage("UI-SCR-CURGRPDIV");
							container.addChild(output_6, {
								"top": "5px",
								"left": "534px",
								"width": "120px",
								"height": "25px"
							});
							var comboBox_1 = new cpr.controls.ComboBox("cbbFrfCuDivRcd");
							comboBox_1.userAttr({"require": "Y"});
							comboBox_1.bind("fieldLabel").toExpression("#optFrfCuDivRcd.value");
							comboBox_1.bind("value").toDataColumn("CU_DIV_RCD");
							(function(comboBox_1){
								comboBox_1.setItemSet(app.lookup("dsCuDivRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_1);
							container.addChild(comboBox_1, {
								"top": "5px",
								"left": "659px",
								"width": "141px",
								"height": "25px"
							});
							var output_7 = new cpr.controls.Output("optFrfMinPnt");
							output_7.value = "";
							output_7.bind("value").toLanguage("UI-DB-MIN_PNT");
							container.addChild(output_7, {
								"top": "135px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfMinPnt");
							numberEditor_1.visible = false;
							numberEditor_1.format = "99,999";
							numberEditor_1.bind("fieldLabel").toExpression("#optFrfMinPnt.value");
							numberEditor_1.bind("value").toDataColumn("MIN_PNT");
							container.addChild(numberEditor_1, {
								"top": "135px",
								"left": "130px",
								"width": "130px",
								"height": "25px"
							});
							var output_8 = new cpr.controls.Output("optFrfMinSbjCnt");
							output_8.value = "";
							output_8.bind("value").toLanguage("UI-DB-MIN_SBJ_CNT");
							container.addChild(output_8, {
								"top": "135px",
								"left": "270px",
								"width": "120px",
								"height": "25px"
							});
							var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfMinSbjCnt");
							numberEditor_2.visible = false;
							numberEditor_2.format = "999,999,999,999,999";
							numberEditor_2.bind("fieldLabel").toExpression("#optFrfMinSbjCnt.value");
							numberEditor_2.bind("value").toDataColumn("MIN_SBJ_CNT");
							container.addChild(numberEditor_2, {
								"top": "135px",
								"left": "395px",
								"width": "130px",
								"height": "25px"
							});
							var inputBox_4 = new cpr.controls.InputBox("ipbFrfUcuCd");
							inputBox_4.visible = false;
							inputBox_4.maxLength = 10;
							inputBox_4.bind("value").toDataColumn("UCU_CD");
							container.addChild(inputBox_4, {
								"top": "86px",
								"left": "654px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_5 = new cpr.controls.InputBox("ipbFrfSpCd");
							inputBox_5.visible = false;
							inputBox_5.maxLength = 10;
							inputBox_5.bind("value").toDataColumn("SP_CD");
							container.addChild(inputBox_5, {
								"top": "86px",
								"left": "580px",
								"width": "20px",
								"height": "25px"
							});
							var output_9 = new cpr.controls.Output("optFrfCuNm");
							output_9.value = "";
							output_9.style.setClasses(["require"]);
							output_9.bind("value").toLanguage("UI-SCR-SUBGRPNAM");
							container.addChild(output_9, {
								"top": "31px",
								"left": "270px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_6 = new cpr.controls.InputBox("ipbFrfCuNm");
							inputBox_6.maxLength = 200;
							inputBox_6.userAttr({"require": "Y"});
							inputBox_6.bind("fieldLabel").toExpression("#optFrfCuNm.value");
							inputBox_6.bind("value").toDataColumn("CU_NM");
							container.addChild(inputBox_6, {
								"top": "31px",
								"left": "395px",
								"width": "405px",
								"height": "25px"
							});
							var output_10 = new cpr.controls.Output("optFrfUcuCdNm");
							output_10.value = "";
							output_10.bind("value").toLanguage("UI-SCR-HOBJGRPNAM");
							container.addChild(output_10, {
								"top": "55px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_7 = new cpr.controls.InputBox("ipbFrfUcuCdNm");
							inputBox_7.maxLength = 100;
							inputBox_7.bind("fieldLabel").toExpression("#optFrfUcuCdNm.value");
							inputBox_7.bind("value").toDataColumn("UCU_CD_NM");
							if(typeof onIpbFrfUcuCdNmValueChange == "function") {
								inputBox_7.addEventListener("value-change", onIpbFrfUcuCdNmValueChange);
							}
							container.addChild(inputBox_7, {
								"top": "55px",
								"left": "130px",
								"width": "110px",
								"height": "25px"
							});
							var button_7 = new cpr.controls.Button("btnFrfUcuCd");
							button_7.value = "";
							button_7.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfUcuCdClick == "function") {
								button_7.addEventListener("click", onBtnFrfUcuCdClick);
							}
							container.addChild(button_7, {
								"top": "55px",
								"left": "240px",
								"width": "20px",
								"height": "25px"
							});
							var output_11 = new cpr.controls.Output("optFrfSpCdNm");
							output_11.value = "";
							output_11.bind("value").toLanguage("UI-DB-SP_CD_NM");
							container.addChild(output_11, {
								"top": "86px",
								"left": "315px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_8 = new cpr.controls.InputBox("ipbFrfSpCdNm");
							inputBox_8.visible = false;
							inputBox_8.maxLength = 100;
							inputBox_8.bind("fieldLabel").toExpression("#optFrfSpCdNm.value");
							inputBox_8.bind("value").toDataColumn("SP_CD_NM");
							if(typeof onIpbFrfSpCdNmValueChange == "function") {
								inputBox_8.addEventListener("value-change", onIpbFrfSpCdNmValueChange);
							}
							container.addChild(inputBox_8, {
								"top": "86px",
								"left": "440px",
								"width": "110px",
								"height": "25px"
							});
							var button_8 = new cpr.controls.Button("btnFrfSpCd");
							button_8.visible = false;
							button_8.value = "";
							button_8.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfSpCdClick == "function") {
								button_8.addEventListener("click", onBtnFrfSpCdClick);
							}
							container.addChild(button_8, {
								"top": "86px",
								"left": "550px",
								"width": "20px",
								"height": "25px"
							});
							var output_12 = new cpr.controls.Output("optFrfCertCuNm");
							output_12.value = "";
							output_12.bind("value").toLanguage("UI-SCR-PROVUSESUBDIS");
							container.addChild(output_12, {
								"top": "110px",
								"left": "535px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_9 = new cpr.controls.InputBox("ipbFrfCertCuNm");
							inputBox_9.visible = false;
							inputBox_9.maxLength = 200;
							inputBox_9.bind("fieldLabel").toExpression("#optFrfCertCuNm.value");
							inputBox_9.bind("value").toDataColumn("CERT_CU_NM");
							container.addChild(inputBox_9, {
								"top": "110px",
								"left": "660px",
								"width": "130px",
								"height": "25px"
							});
							var output_13 = new cpr.controls.Output("optFrfPrtOrd");
							output_13.value = "";
							output_13.bind("value").toLanguage("UI-DB-PRT_ORD");
							container.addChild(output_13, {
								"top": "55px",
								"left": "535px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_10 = new cpr.controls.InputBox("ipbFrfPrtOrd");
							inputBox_10.maxLength = 10;
							inputBox_10.bind("fieldLabel").toExpression("#optFrfPrtOrd.value");
							inputBox_10.bind("value").toDataColumn("PRT_ORD");
							container.addChild(inputBox_10, {
								"top": "55px",
								"left": "660px",
								"width": "140px",
								"height": "25px"
							});
							var inputBox_11 = new cpr.controls.InputBox("ipbFrfSaCd");
							inputBox_11.visible = false;
							inputBox_11.maxLength = 10;
							inputBox_11.bind("value").toDataColumn("SA_CD");
							container.addChild(inputBox_11, {
								"top": "86px",
								"left": "704px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_12 = new cpr.controls.InputBox("ipbFrfUobjDivRcd");
							inputBox_12.visible = false;
							inputBox_12.maxLength = 10;
							inputBox_12.bind("value").toDataColumn("UOBJ_DIV_RCD");
							container.addChild(inputBox_12, {
								"top": "86px",
								"left": "679px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_13 = new cpr.controls.InputBox("ipbFrfSpObjDivRcd");
							inputBox_13.visible = false;
							inputBox_13.maxLength = 10;
							inputBox_13.bind("value").toDataColumn("SP_OBJ_DIV_RCD");
							container.addChild(inputBox_13, {
								"top": "86px",
								"left": "605px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_14 = new cpr.controls.InputBox("ipbFrfSaObjDivRcd");
							inputBox_14.visible = false;
							inputBox_14.maxLength = 10;
							inputBox_14.bind("value").toDataColumn("SA_OBJ_DIV_RCD");
							container.addChild(inputBox_14, {
								"top": "86px",
								"left": "729px",
								"width": "20px",
								"height": "25px"
							});
						})(group_3);
						container.addChild(group_3, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "169px"
						});
					})(group_2);
					tabItem_1.content = group_2;
					tabItem_1.bind("text").toLanguage("UI-SCR-DATAMANG");
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tabHistory";
					var group_4 = new cpr.controls.Container("grpHistory");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var button_9 = new cpr.controls.Button("btnRecover");
						button_9.value = "";
						button_9.bind("value").toLanguage("UI-SCR-RECOVERY");
						if(typeof onBtnRecoverClick == "function") {
							button_9.addEventListener("click", onBtnRecoverClick);
						}
						container.addChild(button_9, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var button_10 = new cpr.controls.Button("btnDisUseCanc");
						button_10.value = "";
						button_10.bind("value").toLanguage("UI-SCR-DISUSECANCL");
						if(typeof onBtnDisUseCancClick == "function") {
							button_10.addEventListener("click", onBtnDisUseCancClick);
						}
						container.addChild(button_10, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
						var button_11 = new cpr.controls.Button("btnDisUse");
						button_11.value = "";
						button_11.bind("value").toLanguage("UI-SCR-DISUSE");
						if(typeof onBtnDisUseClick == "function") {
							button_11.addEventListener("click", onBtnDisUseClick);
						}
						container.addChild(button_11, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("UI-SCR-HISTORYLST");
						container.addChild(userDefinedControl_2, {
							"top": "5px",
							"left": "5px",
							"width": "255px",
							"height": "25px"
						});
						var output_14 = new cpr.controls.Output("optKeyDateHistory");
						output_14.value = "";
						output_14.style.setClasses(["require"]);
						output_14.bind("value").toLanguage("UI-SCR-DISUSERECOVDT");
						container.addChild(output_14, {
							"top": "5px",
							"left": "750px",
							"width": "110px",
							"height": "25px"
						});
						var dateInput_3 = new cpr.controls.DateInput("dipKeyDateHistory");
						dateInput_3.format = "YYYY-MM-DD";
						dateInput_3.bind("fieldLabel").toExpression("#optKeyDateHistory.value");
						dateInput_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDateHistory");
						container.addChild(dateInput_3, {
							"top": "5px",
							"left": "865px",
							"width": "120px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsCurHistory");
						grid_1.init({
							"dataSet": app.lookup("dsCcsCurHistory"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "117px"},
								{"width": "214px"},
								{"width": "121px"},
								{"width": "126px"},
								{"width": "144px"},
								{"width": "172px"},
								{"width": "157px"},
								{"width": "80px"},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "130px",
									"visible": false
								},
								{
									"width": "80px",
									"visible": false
								},
								{
									"width": "80px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "90px",
									"visible": false
								},
								{
									"width": "120px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "120px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "120px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "120px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SUBGRPCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-ST_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-END_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-CURGRPDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-HOBJGRPNAM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PROVUSESUBDIS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MIN_PNT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MIN_SBJ_CNT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-UCU_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-HIGHOBJ");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SP_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-ISUCOURSDIS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-BACHDEPOBJDIS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-DCL_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-DCL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 26},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SP_CD_NM");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_15 = new cpr.controls.Output();
												output_15.style.css({
													"text-align" : "center"
												});
												return output_15;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "CU_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "CU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
											cell.control = (function(){
												var output_16 = new cpr.controls.Output("gdOptStDtHis");
												output_16.dataType = "date";
												output_16.format = "YYYY-MM-DD";
												output_16.style.css({
													"text-align" : "center"
												});
												output_16.bind("value").toDataColumn("ST_DT");
												return output_16;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "END_DT";
											cell.control = (function(){
												var output_17 = new cpr.controls.Output("gdOptEndDtHis");
												output_17.dataType = "date";
												output_17.format = "YYYY-MM-DD";
												output_17.style.css({
													"text-align" : "center"
												});
												output_17.bind("value").toDataColumn("END_DT");
												return output_17;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "CU_DIV_RCD";
											cell.control = (function(){
												var comboBox_2 = new cpr.controls.ComboBox("gdCbbCuDivRcdHis");
												comboBox_2.enabled = false;
												comboBox_2.hideButton = true;
												(function(comboBox_2){
													comboBox_2.setItemSet(app.lookup("dsCuDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_2);
												comboBox_2.bind("value").toDataColumn("CU_DIV_RCD");
												return comboBox_2;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "UCU_CD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "SA_CD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "CERT_CU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "MIN_PNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "MIN_SBJ_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "OBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.columnName = "CMP_DIV_RCD";
											cell.control = (function(){
												var comboBox_3 = new cpr.controls.ComboBox("gdCbbCmpDivCdHis");
												comboBox_3.enabled = false;
												comboBox_3.hideButton = true;
												(function(comboBox_3){
													comboBox_3.setItemSet(app.lookup("dsCmpDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_3);
												comboBox_3.bind("value").toDataColumn("CMP_DIV_RCD");
												return comboBox_3;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "UCU_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "UOBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "SP_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "SP_OBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.columnName = "SA_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.columnName = "SA_OBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.columnName = "DCL_RCD_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.columnName = "DCL_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 26},
										"configurator": function(cell){
											cell.columnName = "SP_CD_NM";
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "169px"
						});
						var button_12 = new cpr.controls.Button("btnYearSmtHis");
						button_12.value = "";
						button_12.style.setClasses(["btn-pop-search"]);
						if(typeof onBtnYearSmtHisClick == "function") {
							button_12.addEventListener("click", onBtnYearSmtHisClick);
						}
						container.addChild(button_12, {
							"top": "7px",
							"left": "985px",
							"width": "16px",
							"height": "16px"
						});
					})(group_4);
					tabItem_2.content = group_4;
					tabItem_2.bind("text").toLanguage("UI-SCR-HSTMNG");
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tabLang";
					var group_5 = new cpr.controls.Container("grpLang");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_5.setLayout(formLayout_3);
					(function(container){
						var button_13 = new cpr.controls.Button("btnSaveLan");
						button_13.value = "";
						button_13.style.setClasses(["btn-save"]);
						button_13.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveLanClick == "function") {
							button_13.addEventListener("click", onBtnSaveLanClick);
						}
						container.addChild(button_13, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-LANLST");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "5px",
							"width": "215px",
							"height": "25px"
						});
						var button_14 = new cpr.controls.Button("btnDelLan");
						button_14.value = "";
						button_14.style.setClasses(["btn-delete"]);
						button_14.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelLanClick == "function") {
							button_14.addEventListener("click", onBtnDelLanClick);
						}
						container.addChild(button_14, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var button_15 = new cpr.controls.Button("btnNewLan");
						button_15.value = "";
						button_15.style.setClasses(["btn-new"]);
						button_15.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewLanClick == "function") {
							button_15.addEventListener("click", onBtnNewLanClick);
						}
						container.addChild(button_15, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var button_16 = new cpr.controls.Button("btnRestoreLan");
						button_16.value = "";
						button_16.style.setClasses(["btn-restore"]);
						button_16.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreLanClick == "function") {
							button_16.addEventListener("click", onBtnRestoreLanClick);
						}
						container.addChild(button_16, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCcsCurLang");
						grid_2.init({
							"dataSet": app.lookup("dsCcsCurLang"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "130px"},
								{"width": "130px"},
								{"width": "280px"},
								{"width": "116px"},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "280px",
									"visible": false
								},
								{
									"width": "200px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-SUBGRPCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-LANDIS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SUBGRPALI");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PROVUSE");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_18 = new cpr.controls.Output();
												output_18.style.css({
													"text-align" : "center"
												});
												return output_18;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "CU_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_4 = new cpr.controls.ComboBox("gdCbbLanDivRcdLan");
												comboBox_4.userAttr({"require": "Y"});
												(function(comboBox_4){
													comboBox_4.addItem(new cpr.controls.Item("선택", ""));
													comboBox_4.setItemSet(app.lookup("dsLanDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_4);
												comboBox_4.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "CU_NM";
											cell.control = (function(){
												var inputBox_15 = new cpr.controls.InputBox("gdIpbCuNmLan");
												inputBox_15.maxLength = 200;
												inputBox_15.userAttr({"require": "Y"});
												inputBox_15.bind("value").toDataColumn("CU_NM");
												return inputBox_15;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
											cell.control = (function(){
												var inputBox_16 = new cpr.controls.InputBox("gdIpbPrtOgdLan");
												inputBox_16.maxLength = 10;
												inputBox_16.bind("value").toDataColumn("PRT_ORD");
												return inputBox_16;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
											cell.control = (function(){
												var inputBox_17 = new cpr.controls.InputBox("gdIpbShortNm");
												inputBox_17.maxLength = 100;
												inputBox_17.bind("value").toDataColumn("SHORT_NM");
												return inputBox_17;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "CERT_CU_NM";
											cell.control = (function(){
												var inputBox_18 = new cpr.controls.InputBox("gdIpbCertCuNmLan");
												inputBox_18.maxLength = 200;
												inputBox_18.bind("value").toDataColumn("CERT_CU_NM");
												return inputBox_18;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdCcsCurLangSelectionChange == "function") {
							grid_2.addEventListener("selection-change", onGrdCcsCurLangSelectionChange);
						}
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "169px"
						});
					})(group_5);
					tabItem_3.content = group_5;
					tabItem_3.bind("text").toLanguage("UI-GLS-LAN");
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "60px",
					"left": "5px",
					"width": "1213px",
					"height": "206px"
				});
				var button_17 = new cpr.controls.Button("tabBtnLang");
				button_17.value = "";
				button_17.bind("value").toLanguage("UI-GLS-LAN");
				if(typeof onTabBtnLangClick == "function") {
					button_17.addEventListener("click", onTabBtnLangClick);
				}
				container.addChild(button_17, {
					"top": "30px",
					"left": "203px",
					"width": "100px",
					"height": "28px"
				});
				var button_18 = new cpr.controls.Button("tabBtnHistory");
				button_18.value = "";
				button_18.bind("value").toLanguage("UI-SCR-HSTMNG");
				if(typeof onTabBtnHistoryClick == "function") {
					button_18.addEventListener("click", onTabBtnHistoryClick);
				}
				container.addChild(button_18, {
					"top": "30px",
					"left": "104px",
					"width": "100px",
					"height": "28px"
				});
				var button_19 = new cpr.controls.Button("tabBtnManage");
				button_19.value = "";
				button_19.bind("value").toLanguage("UI-SCR-DATAMANG");
				if(typeof onTabBtnManageClick == "function") {
					button_19.addEventListener("click", onTabBtnManageClick);
				}
				container.addChild(button_19, {
					"top": "30px",
					"left": "5px",
					"width": "100px",
					"height": "28px"
				});
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-SUBDETAIL");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "397px",
				"left": "5px",
				"width": "1225px",
				"height": "275px"
			});
			
			var group_6 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_6.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
				userDefinedControl_5.bind("title").toLanguage("UI-SCR-SUBGRPLST");
				container.addChild(userDefinedControl_5, {
					"top": "5px",
					"left": "5px",
					"width": "225px",
					"height": "25px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCcsCur");
				grid_3.init({
					"dataSet": app.lookup("dsCcsCur"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "113px"},
						{"width": "206px"},
						{"width": "124px"},
						{"width": "117px"},
						{"width": "141px"},
						{"width": "191px"},
						{"width": "171px"},
						{"width": "80px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "130px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CURGRPDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-HOBJGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PRT_ORD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PROVUSESUBDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-MIN_PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-MIN_SBJ_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-UCU_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-HIGHOBJ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SP_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ISUCOURSDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-BACHDEPOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DCL_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DCL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SP_NM");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_19 = new cpr.controls.Output();
										output_19.style.css({
											"text-align" : "center"
										});
										return output_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CU_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CU_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_20 = new cpr.controls.Output("gdOptStDt");
										output_20.dataType = "date";
										output_20.format = "YYYY-MM-DD";
										output_20.style.css({
											"text-align" : "center"
										});
										output_20.bind("value").toDataColumn("ST_DT");
										return output_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_21 = new cpr.controls.Output("gdOptEndDt");
										output_21.dataType = "date";
										output_21.format = "YYYY-MM-DD";
										output_21.style.css({
											"text-align" : "center"
										});
										output_21.bind("value").toDataColumn("END_DT");
										return output_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CU_DIV_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbCuDivRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsCuDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("CU_DIV_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "UCU_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SHORT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "CERT_CU_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "MIN_PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "MIN_SBJ_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "UCU_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "UOBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "SP_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "SP_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "SA_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "SP_CD_NM";
								}
							}
						]
					}
				});
				if(typeof onGrdCcsCurSelectionChange == "function") {
					grid_3.addEventListener("selection-change", onGrdCcsCurSelectionChange);
				}
				container.addChild(grid_3, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "285px"
				});
			})(group_6);
			container.addChild(group_6, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "320px"
			});
			
			var group_7 = new cpr.controls.Container("grpSearch");
			group_7.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_5 = new cpr.controls.layouts.XYLayout();
			group_7.setLayout(xYLayout_5);
			(function(container){
				var button_20 = new cpr.controls.Button("btnSearch");
				button_20.value = "";
				button_20.style.setClasses(["btn-search"]);
				button_20.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_20.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_20, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_22 = new cpr.controls.Output("optKeyDate");
				output_22.value = "";
				output_22.style.setClasses(["require"]);
				output_22.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_22, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_4 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_4.userAttr({"require": "Y"});
				dateInput_4.style.css({
					"text-align" : "center"
				});
				dateInput_4.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDate");
				container.addChild(dateInput_4, {
					"top": "5px",
					"left": "100px",
					"width": "131px",
					"height": "25px"
				});
				var output_23 = new cpr.controls.Output("optCuCd");
				output_23.value = "";
				output_23.bind("value").toLanguage("UI-SCR-SUBGRPCD");
				container.addChild(output_23, {
					"top": "5px",
					"left": "260px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_19 = new cpr.controls.InputBox("ipbCuCd");
				inputBox_19.maxLength = 10;
				inputBox_19.bind("fieldLabel").toExpression("#optCuCd.value");
				inputBox_19.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuCd");
				if(typeof onIpbCuCdKeydown == "function") {
					inputBox_19.addEventListener("keydown", onIpbCuCdKeydown);
				}
				container.addChild(inputBox_19, {
					"top": "5px",
					"left": "365px",
					"width": "130px",
					"height": "25px"
				});
				var output_24 = new cpr.controls.Output("optCuNm");
				output_24.value = "";
				output_24.bind("value").toLanguage("UI-SCR-SUBGRPNAM");
				container.addChild(output_24, {
					"top": "5px",
					"left": "505px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_20 = new cpr.controls.InputBox("ipbCuNm");
				inputBox_20.maxLength = 200;
				inputBox_20.bind("fieldLabel").toExpression("#optCuNm.value");
				inputBox_20.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuNm");
				if(typeof onIpbCuNmKeydown == "function") {
					inputBox_20.addEventListener("keydown", onIpbCuNmKeydown);
				}
				container.addChild(inputBox_20, {
					"top": "5px",
					"left": "610px",
					"width": "130px",
					"height": "25px"
				});
				var button_21 = new cpr.controls.Button("btnYearSmt");
				button_21.value = "";
				button_21.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_21.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_21, {
					"top": "5px",
					"left": "230px",
					"width": "20px",
					"height": "25px"
				});
			})(group_7);
			container.addChild(group_7, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_6 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_6, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "45px",
				"left": "1250px",
				"width": "325px",
				"height": "75px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_3));
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_5.ctrl = linker.grid_3;
		}
	});
	app.title = "교과그룹관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
