/*
 * App URI: app/ccs/stdCcsCExpManage
 * Source Location: app/ccs/stdCcsCExpManage.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCExpManage", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCExpManage.xtm"/>
			
			/**
			 * 개설과목관리
			 * @class stdCcsCCurClsFrf
			 * @author 박갑수 at 2016. 2. 4
			 */
			var stdCcsCExpManage = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
			
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{ 
					 controlId					: "btnFrfSbCd",			
					 iDivClsYn					: "Y",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "",			
					 iSaNm        				: "ipbFrfSbNm",		
					 iSaObjDivRcd       		: "",		
					 iSbCd        				: "",			
					 iSbNm        				: "",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "",			
					 oSbNm					: "ipbFrfSbNm",			
					 oSaCd						: "",			
					 oSaNm					: "",			
					 oCuCd						: "",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "",	
					 oCmpDivRcd				: "",		
					 oPnt							: "",		
					 oTheoTc					: "",	
					 oEpacTc					: "",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "",		
					 func : function(poParam) { 
					
					 }
				 }];
				
				
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onModelConstructDone_StdCcsCOpenSubFrf = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsOpenSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbFrfCmpDivRcd"]);
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd"]);
							util.Control.setEnable(app, true, ["grpData1"]);
							
							
							util.Control.setValue(app, "radDivRcd", "3");
							
							util.DataMap.setValue(app, "dmRow", "KeyDate", util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT"));
							
							
							
							util.DataMap.setValue(app, "dmRow", "strSchDiv", "CNT");
							util.Control.redraw(app, "radSchDiv");
							page.onValueChanged_Radiobutton5();
							
							
							/*
								이수구분, 교과목명 컨트롤을 활성/비활성 처리한다.
							*/
							page.onValueChanged_Radiobutton34();
							
						}
					}, true);
				};
				
				
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 5
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							util.DataMap.setValue(app, "dmRow", "KeyDate", util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT"));
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				
				
				
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
						return false;
					}
					
					
					var vsRadDiv = util.DataMap.getValue(app, "dmRow", "strDiv");
					if(vsRadDiv == 1 ){
						//모든 값이 널인경우 체크
						if (page.doCheckAllNullConditionCtl()) {
							return false;
						}
							
					}else if(vsRadDiv == 2 ){
						var vsSbNm     = util.DataMap.getValue(app, "dmRow", "strSbNm");
						var vsDivClsCd = util.DataMap.getValue(app, "dmRow", "strDivclsCd");
						if(vsSbNm == ""){
							
							util.Msg.alert("NLS-CCS-M048");
							return false;
						}
					}else{
						//--조건 없이 인원수만 체크한다.
					}
					
					var vsSchDiv = util.DataMap.getValue(app, "dmRow", "strSchDiv");
					
					if(vsSchDiv == 'CNT'){
						//--폐강 기준(수강정원)
						var vsValue = util.DataMap.getValue(app, "dmRow", "strNumber");
						if (vsValue == null || vsValue == "") {
							util.Msg.alert("NLS-CCS-M049");
							return  false;
						}
						
						//--단위
						var vsValue = util.DataMap.getValue(app, "dmRow", "strPercentOrCnt");
						if (vsValue == null || vsValue == "") {
							util.Msg.alert("NLS-CCS-M050");
							return  false;
						}
					}else if(vsSchDiv == 'SB_NM'){
						var vsSbNm     = util.DataMap.getValue(app, "dmRow", "strSbNm");
						if(vsSbNm == ""){
							
							util.Msg.alert("NLS-CCS-M048");
							return false;
						}
					}else{
						
					}
					
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				
				
				
				
				/**
				 * @desc 개설과목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doList(poCallBackFunc) {				
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							//ExtInstance.setValue("/root/reqKey/strExpYn", "");
							
							ExtTreeView.rebuild(["rptCcsOpenSub"]);
												
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				
				/**
				 * @desc 조회 시 구분에 따라 null 체크를 한다.
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doCheckAllNullConditionCtl() {
					
					
					var voCtls = ["cbbFrfCmpDivRcd"];
					
					var resultFlag = true;
					var vnArgc = voCtls.length;
					for (var i = 0; i < vnArgc; i++) {
						
						var voCtl = util.Control.getValue(app, voCtls[i]);
						
						
						if(voCtl != "") {
							resultFlag = false;
							return resultFlag;
						}
					}
					if(resultFlag == true) {			
						util.Msg.alert("NLS-CCS-M051");
						return resultFlag;
					}
				};	
				
				
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdCcsOpenSub");		
					
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCcsOpenSub");
				};
				
				
				
				
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				
				
				
				/**
				 * @desc 개설과목목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcsOpenSub"], "MSG")){
						return false;
					}
					
						
					//처리하시겠습니까?
					if(!util.Msg.confirm("NLS-CRM-M008") ) {		
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdCcsOpenSub")) return false;
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
						
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				
				
				/**
				 * @desc 개설과목 검핵팝업 onValueChanged
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_IpbFrfSbNm = function(sender) {
					// 값변경시 교과과정검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				}
				
				
				/**
				 * @desc 개설과목 검색팝업 버튼
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnFrfSbCd = function(sender) {
					// 교과과정검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				}
				
				
				
				/**
				 * @desc 이수구분으로 검색, 교과목명으로 검색 할 것인지 활성/비활성 처리한다.
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				
				moPage.onValueChanged_Radiobutton34 = function() {
					
					var vsSchDiv 			= 	util.DataMap.getValue(app, "dmRow", "strDiv");
					
					
					var vaCmpDivRcd	= ["cbbFrfCmpDivRcd"];
					var vaSbCtl			= ["ipbFrfSbNm","btnFrfSbCd","ipbFrfDivclsNm"];
					
					if(vsSchDiv == '1'){
						util.Control.setEnable(app, true, vaCmpDivRcd);
						util.Control.setEnable(app, false, vaSbCtl);
						util.DataMap.setValue(app, "dmReqKey", "strSbNm", "");
						util.DataMap.setValue(app, "dmReqKey", "strDivclsCd", "");
						//ExtControl.refresh(vaSbCtl);
						
						
					}else{
						util.Control.setEnable(app, false, vaCmpDivRcd);
						util.Control.setEnable(app, true, vaSbCtl);
						util.DataMap.setValue(app, "dmReqKey", "strCmpDivRcd", "");
						
						//ExtControl.refresh(vaCmpDivRcd);
					}
					
				};
				
				/*
					과목명 및 인원수 검색
				*/
				moPage.onValueChanged_Radiobutton5 = function() {
					
					var vsSchDiv 	= util.DataMap.getValue(app, "dmRow", "strSchDiv");
					util.Control.setVisible(app, false, ['lblTlsnCnt','ipbFrfSaCdNm','lblUnit','cbbFrfUnit','lblSbNm','ipbSbNm', 'label2']);
					
					if(vsSchDiv == "CNT"){
						util.Control.setVisible(app, true, ['lblTlsnCnt','ipbFrfSaCdNm','lblUnit','cbbFrfUnit']);
						util.DataMap.setValue(app, "dmRow", "strSbNm", "");
						util.Control.redraw(app, ['ipbFrfSaCdNm','cbbFrfUnit']);
					}else if(vsSchDiv == 'SB_NM'){
					
						util.Control.setVisible(app, true, ['lblSbNm','ipbSbNm']);
						
						util.DataMap.setValue(app, "dmRow", "strPercentOrCnt", "");
						util.DataMap.setValue(app, "dmRow", "strNumber", "");
						util.Control.redraw(app, ['ipbSbNm']);
						
						util.Control.setFocus(app, "ipbSbNm");
						
					}else{
						util.Control.setVisible(app, true, ['label2']);
						
						util.DataMap.setValue(app, "dmRow", "strPercentOrCnt", "");
						util.DataMap.setValue(app, "dmRow", "strNumber", "");
						util.DataMap.setValue(app, "dmRow", "strSbNm", "");
						util.Control.redraw(app, ['ipbSbNm']);
						util.Control.redraw(app, ['ipbFrfSaCdNm','cbbFrfUnit']);
						
					}
					
				};
				
				
				/**
				 * @desc [ipbSbNm]과목명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 27
				 */
				moPage.onKeyDown_IpbSbNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				
				
				
				
				moPage.onValueChanged_Checkbox2 = function() {
					
					
					var vsExpYn	= util.Control.getValue(app, "ckbExpYn");
					if(vsExpYn == "")return false;
					
					var vnRowCnt = util.Grid.getRowCount(app, "grdCcsOpenSub");
					
					for(var i =1 ; i<=vnRowCnt ; i++){
						
						var vsRptExpYn = util.Grid.getCellValue(app, "grdCcsOpenSub", "EXP_YN", i);
						if(vsRptExpYn == ""){
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EXP_YN","Y", i);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "UPT_STATUS","U", i);
							
						}
						
					}
					
					
				};
				
				
				
				
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSpList");
			dataSet_4.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCuList");
			dataSet_5.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"},
					{"name": "PATH"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCcsOpenSub");
			dataSet_6.parseData({
				"info": "CCS_OPEN_SUB@SCH_YEAR_RCD,SMT_RCD,SA_CD,SA_OBJ_DIV_RCD,CU_CD,CU_OBJ_DIV_RCD,SB_CD,SB_OBJ_DIV_RCD,DIVCLS_CD",
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "SA_NM"},
					{"name": "CU_CD"},
					{"name": "CU_OBJ_DIV_RCD"},
					{"name": "CU_NM"},
					{"name": "SB_CD"},
					{"name": "SB_OBJ_DIV_RCD"},
					{"name": "SB_NM"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "SB_LVL_RCD"},
					{"name": "SB_LVL_RCD_NM"},
					{"name": "TLSN_REQ_CAPA2"},
					{"name": "SUM_CAPA"},
					{"name": "AVERAGE"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "OBJ_NO"},
					{"name": "PROF_NO"},
					{"name": "PROF_NM"},
					{"name": "DIVCLS_INFO"},
					{"name": "DCL_RCD_NM"},
					{"name": "EXP_RSN"},
					{"name": "EXP_YN"},
					{"name": "REF_KEY"},
					{"name": "SA_POST_DIV_RCD"},
					{"name": "SA_POST_DIV_RCD_NM"},
					{"name": "TLSN_REQ_CAPA1"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsFrfSch");
			dataSet_7.parseData({
				"columns": [
					{"name": "strDiv"},
					{"name": "strDivclsCd"},
					{"name": "strCmpDivRcd"},
					{"name": "strNumber"},
					{"name": "strSbNm"},
					{"name": "KeyDate"},
					{"name": "strSchDiv"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strExpYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResPopup");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strFrfCmpDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResDelChk");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strTimeSche",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmTemp");
			dataMap_6.parseData({
				"columns" : [{
					"name": "strHeadExpYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsExpManage/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/StdCcsExpManage/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataSet_7);
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/ccs/StdCcsExpManage/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_6);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subDelChk");
			submission_5.action = "/ccs/StdCcsOpenSubFrfSub/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addResponseData(dataMap_5, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("checkbox2");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "폐강과목 제외";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strExpYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "414px",
					"width": "136px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-CANCLTGSUBLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "380px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsOpenSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsOpenSub"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "100px"},
						{"width": "113px"},
						{"width": "80px"},
						{"width": "120px"},
						{"width": "61px"},
						{"width": "53px"},
						{"width": "79px"},
						{"width": "49px"},
						{"width": "47px"},
						{"width": "47px"},
						{"width": "53px"},
						{"width": "73px"},
						{"width": "51px"},
						{"width": "100px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "76px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CAPA");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-COURSENUM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-RATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EXP_RSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CLASSRTIME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "__checkbox2";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CU_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA2";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "SUM_CAPA";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "AVERAGE";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "EXP_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("checkbox1");
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("EXP_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "EXP_RSN";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("inputbox1");
										inputBox_1.maxLength = 500;
										inputBox_1.bind("value").toDataColumn("EXP_RSN");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_INFO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "515px"
				});
				var button_2 = new cpr.controls.Button("btnRestore");
				button_2.value = "";
				button_2.style.setClasses(["btn-restore"]);
				button_2.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_2.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1094px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "120px",
				"left": "5px",
				"width": "1225px",
				"height": "552px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "115px",
				"width": "120px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container("grpData1");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var group_4 = new cpr.controls.Container("frfSch");
				group_4.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_4 = new cpr.controls.Output("optFrfCmpDivRcd");
					output_4.value = "";
					output_4.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
					container.addChild(output_4, {
						"top": "34px",
						"left": "73px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfCmpDivRcd");
					comboBox_3.bind("fieldLabel").toExpression("#optFrfCmpDivRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmRow"), "strCmpDivRcd");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsCmpDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "34px",
						"left": "187px",
						"width": "153px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfSbObjDIvRcd");
					inputBox_2.visible = false;
					inputBox_2.maxLength = 10;
					inputBox_2.bind("value").toDataMap(app.lookup("dmRow"), "SB_OBJ_DIV_RCD");
					container.addChild(inputBox_2, {
						"top": "65px",
						"left": "620px",
						"width": "20px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfCuCd");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-SCR-SUBGRUP");
					container.addChild(output_5, {
						"top": "34px",
						"left": "5px",
						"width": "30px",
						"height": "80px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfUnit");
					comboBox_4.bind("fieldLabel").toExpression("#optUnit.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmRow"), "strPercentOrCnt");
					(function(comboBox_4){
						comboBox_4.addItem(new cpr.controls.Item("명", "cnt"));
						comboBox_4.addItem(new cpr.controls.Item("%", "%"));
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "5px",
						"left": "694px",
						"width": "115px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfSbNm");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-DB-SB_CD_NM");
					container.addChild(output_6, {
						"top": "65px",
						"left": "73px",
						"width": "110px",
						"height": "25px"
					});
					var button_4 = new cpr.controls.Button("btnFrfSbCd");
					button_4.value = "";
					button_4.style.setClasses(["btn-pop-search"]);
					button_4.bind("value").toDataMap(app.lookup("dmRow"), "DIVCLS_SHORT_NM");
					if(typeof onBtnFrfSbCdClick == "function") {
						button_4.addEventListener("click", onBtnFrfSbCdClick);
					}
					container.addChild(button_4, {
						"top": "65px",
						"left": "320px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfSbNm");
					inputBox_3.maxLength = 100;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfSbNm.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmRow"), "strSbNm");
					if(typeof onIpbFrfSbNmValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpbFrfSbNmValueChange);
					}
					container.addChild(inputBox_3, {
						"top": "65px",
						"left": "188px",
						"width": "133px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optTlsnCnt");
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-SCR-CANCLSTDPER");
					container.addChild(output_7, {
						"top": "5px",
						"left": "295px",
						"width": "195px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfSaCdNm");
					numberEditor_1.format = "999";
					numberEditor_1.style.css({
						"text-align" : "center"
					});
					numberEditor_1.bind("fieldLabel").toExpression("#optTlsnCnt.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmRow"), "strNumber");
					container.addChild(numberEditor_1, {
						"top": "5px",
						"left": "494px",
						"width": "80px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfDivclsNm");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-DIVCLS_NM");
					container.addChild(output_8, {
						"top": "65px",
						"left": "378px",
						"width": "67px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfDivclsNm");
					inputBox_4.maxLength = 200;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfDivclsNm.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmRow"), "strDivclsCd");
					container.addChild(inputBox_4, {
						"top": "65px",
						"left": "449px",
						"width": "120px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optUnit");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-GLS-UNIT");
					container.addChild(output_9, {
						"top": "5px",
						"left": "623px",
						"width": "67px",
						"height": "25px"
					});
					var radioButton_1 = new cpr.controls.RadioButton("radDivRcd");
					radioButton_1.bind("value").toDataMap(app.lookup("dmRow"), "strDiv");
					(function(radioButton_1){
						radioButton_1.addItem(new cpr.controls.Item("", "1"));
						radioButton_1.addItem(new cpr.controls.Item("", "2"));
						radioButton_1.addItem(new cpr.controls.Item("", "3"));
					})(radioButton_1);
					if(typeof onRadDivRcdValueChange == "function") {
						radioButton_1.addEventListener("value-change", onRadDivRcdValueChange);
					}
					container.addChild(radioButton_1, {
						"top": "34px",
						"left": "44px",
						"width": "26px",
						"height": "80px"
					});
					var output_10 = new cpr.controls.Output("optFrfSbNm1");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-DB-SB_CD_NM");
					container.addChild(output_10, {
						"top": "94px",
						"left": "73px",
						"width": "496px",
						"height": "25px"
					});
					var radioButton_2 = new cpr.controls.RadioButton("radSchDiv");
					radioButton_2.bind("value").toDataMap(app.lookup("dmRow"), "strSchDiv");
					(function(radioButton_2){
						radioButton_2.addItem(new cpr.controls.Item("인원수", "CNT"));
						radioButton_2.addItem(new cpr.controls.Item("과목명", "SB_NM"));
						radioButton_2.addItem(new cpr.controls.Item("합강맵핑정보", "REL"));
					})(radioButton_2);
					if(typeof onRadSchDivValueChange == "function") {
						radioButton_2.addEventListener("value-change", onRadSchDivValueChange);
					}
					container.addChild(radioButton_2, {
						"top": "5px",
						"left": "5px",
						"width": "280px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbSbNm");
					inputBox_5.bind("value").toDataMap(app.lookup("dmRow"), "strSbNm");
					if(typeof onIpbSbNmKeydown == "function") {
						inputBox_5.addEventListener("keydown", onIpbSbNmKeydown);
					}
					container.addChild(inputBox_5, {
						"top": "5px",
						"left": "366px",
						"width": "120px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optSbNm");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-GLS-UNIT");
					container.addChild(output_11, {
						"top": "5px",
						"left": "295px",
						"width": "67px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("label2");
					output_12.value = "[조회]버튼 클릭하세요";
					container.addChild(output_12, {
						"top": "5px",
						"left": "295px",
						"width": "255px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "5px",
					"left": "5px",
					"width": "1213px",
					"height": "33px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "72px",
				"left": "5px",
				"width": "1224px",
				"height": "43px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "개설과목관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
