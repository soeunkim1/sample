/*
 * App URI: app/ccs/stdCcsCLectEvaluation
 * Source Location: app/ccs/stdCcsCLectEvaluation.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCLectEvaluation", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCLectEvaluation.xtm"/>
			
			
			var stdCcsCLectEvaluation = function() {
					
				
				var moPage = new Page();
				var moPObject = new PObject();
				
						
						
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009OG"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqList/strObjDivRcd",
					oCd					:	"/root/reqList/strObjCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func : function(poParam) {}
				}];
				
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					
					doHeaderOnLoad();
					
				};
				
				
				
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author 최영경 2016-01-18
				 */
				function doOnLoad() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptMain");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							var vsYear					= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							var vsSmt					= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							util.DataMap.setValue(app, "dmReqCopyKey", "strCopyYear", vsYear);
							util.DataMap.setValue(app, "dmReqCopyKey", "strCopySmt" , vsSmt);
							
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd 	= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd 		= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbLectEvalTypeRcd", "cbbSchYearRcdCopy", "cbbSmtRcdCopy", "ipbSaNm"]);
							
							util.SelectCtl.selectItem(app, "cbbLectEvalTypeRcd", 0);
							
							
							
						}
					}, true);
					
				};
				
				
				
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author 최영경 2016-01-18
				 */
				moPage.onClick_BtnSearch = function() {
					
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}		
					
					
						// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaNm", "cbbLectEvalTypeRcd"])){
						return false;
					}
					
					
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});		
				
				};
				
				
				
				
				/**
				 * @desc  강의평가유형목록 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdMain");
							
							// 답변내용 점수세팅
							doSetTotScr();		
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					}); 
				};
				
				/**
				 * @desc  답변내용 총점세팅
				 * @param 
				 * @return void
				 * @author 박갑수 2016-08-09
				 */
				function doSetTotScr() {
					var vnRowCnt = util.Grid.getRowCount(app, "grdMain");
					
					var vnTotScr = 0;
					
					for(var i=0; i<vnRowCnt; i++){
						var vnIdx = i+1;
						
						var vnScr = 0;
						
						// 답변유형
						var vsAnsTypeRcd = util.Grid.getCellValue(app, "grdMain", "ANS_TYPE_RCD", vnIdx);
						if(!ValueUtil.isNull(vsAnsTypeRcd)){
							vnScr = Number(ExtInstance.getValue("/root/resOnLoad/maxAnsTypeList/row", "MAX_ANS_SCR" , "child::ANS_TYPE_RCD='"+vsAnsTypeRcd+"'"));
						}
						
						vnTotScr = vnTotScr + vnScr;
					}
							
					var vsHeaderNm = "답변유형(" +  vnTotScr + "점)";
					
					// 버튼 값세팅
					ExtControl.setTextValue("rhBtnLectRoomShortNm", vsHeaderNm);
					util.Control.redraw(app, "rhBtnLectRoomShortNm");
				};
				
				/**
				 * @desc 강의평가유형목록 리피트 panel click event
				 *			 강의평가유형목록 리피트 row all check
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				
				
				
				/**
				 * @desc 신규 click event
				 *            강의평가유형목록 리피트 row 추가
				 * @return void
				 * @author 최영경 2016-01-18
				 */		
				moPage.onClick_BtnNew = function() {
					
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var voNewRow = util.Grid.insertRow(app, "grdMain", "rdIpbSerialNo");		
					
					
					var vsYear					= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
					var vsSmt					= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
					var vsObjCd				= util.DataMap.getValue(app, "dmReqList", "strObjCd");
					var vsObjDivRcd			= util.DataMap.getValue(app, "dmReqList", "strObjDivRcd");
					var vsLectDivRcd		= util.DataMap.getValue(app, "dmReqList", "strLectDivRcd");
					
					var vsLanDivRcdList 	= util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd");
					
					
					util.Grid.setCellValue(app, "grdMain"	, "SCH_YEAR_RCD"	, vsYear				, voNewRow, false, true);		//--학년도코드
					util.Grid.setCellValue(app, "grdMain"	, "SMT_RCD"				, vsSmt					, voNewRow, false, true);		//--학기코드
					util.Grid.setCellValue(app, "grdMain"	, "OBJ_CD"				, vsObjCd				, voNewRow, false, true);		//--객체코드
					util.Grid.setCellValue(app, "grdMain"	, "OBJ_DIV_RCD"		, vsObjDivRcd		, voNewRow, false, true);		//--객체구분코드[CC009]
					util.Grid.setCellValue(app, "grdMain"	, "LECT_DIV_RCD"		, vsLectDivRcd		, voNewRow, false, true);		//--강의구분코드[CL107]
					util.Grid.setCellValue(app, "grdMain"	, "LAN_DIV_RCD"		, vsLanDivRcdList	, voNewRow, false, false);		//--언어구분코드[CS003]
					
				};
				
				
				
				/**
				 * @desc 삭제 click event
				 *            강의평가유형목록 리피트 index row 삭제 status 변경
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnDel = function() {
					util.Grid.deleteRow(app, "grdMain");
				};
				
				/**
				 * @desc 작업취소 click event
				 *            강의평가유형목록 리피트 index row restore
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdMain");
					
					// 답변내용 점수세팅
					doSetTotScr();
				};
				
				/**
				 * @desc 작업저장 click event
				 *            강의평가유형목록  리피트 변경내역 저장
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnSave = function() {
					doSave();
					
				};
				
				
				/**
				 * @desc  강의평가유형목록  리피트 저장 submission 실행
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				function doSave() {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdMain"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdMain")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						
						if(pbSuccess){
							page.doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				}
				
				
				
				
				/**
				 * @desc 검색조건 학기를 변경 시 표준학기를 다시 가져온다.
				 * @param 
				 * @return void
				 * @author 최영경 at 2016. 2. 5
				 */	 
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				}
				
				/**
				 * @desc 검색조건 학년도를 변경 시 표준학기를 다시 가져온다.
				 * @param 
				 * @return void
				 * @author 최영경 at 2016. 2. 5
				 */	 
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				}
				
				
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 최영경 at 2016. 2. 5
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				
				
				/**
				 * @desc 검색조건 소속을 클릭 이벤트
				 * @param 
				 * @return void
				 * @author 최영경 at 2016. 2. 5
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				}
				
				
				/**
				 * @desc 검색조건 소속을 valueChang
				 * @param 
				 * @return void
				 * @author 최영경 at 2016. 2. 5
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdMain"])){
						return false;
					}
					
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				}
				
				
				
				
				
				
				/**
				 * 복사 버튼
				 * @member extCcsPPastSmtCopy
				 * @param {eXria.event.Event} e
				 * @type void
				 * @author sora at 14. 6. 17 오후 1:24
				 */
				moPage.onClick_Copy = function() {
					
					
					var vsCurYear 			= util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
					var vsCurSmt 				= util.DataMap.getValue(app, "dmKeyDateMap", "SMT");;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAnsTypeRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsLectEvalTypeRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsLectAraRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsMaxAnsTypeList");
			dataSet_6.parseData({
				"columns": [
					{"name": "ANS_TYPE_RCD"},
					{"name": "MAX_ANS_SCR"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsGrxMst");
			dataSet_8.parseData({
				"info": "CCS_LECT_EVAL_FCTOR@SCH_YEAR_RCD,SMT_RCD,OBJ_CD,OBJ_DIV_RCD,LECT_DIV_RCD,SERIAL_NO,LAN_DIV_RCD",
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "OBJ_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "LECT_DIV_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "LAN_DIV_RCD"},
					{"name": "SJV_OJV_DIV_RCD"},
					{"name": "QUEST_ARA_RCD"},
					{"name": "QUEST_CONT"},
					{"name": "SUM_XCP_YN"},
					{"name": "ANS_TYPE_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strLectDivRcd",
						"dataType": "string"
					},
					{
						"name": "strObjNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqCopyKey");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strCopyYear",
						"dataType": "string"
					},
					{
						"name": "strCopySmt",
						"dataType": "string"
					},
					{
						"name": "strCurYear",
						"dataType": "string"
					},
					{
						"name": "strCurSmt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResCopy");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "checkSmt",
						"dataType": "string"
					},
					{
						"name": "ischeckCurrent",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsLectEvaluation/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsLectEvaluation/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_8, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/ccs/StdCcsLectEvaluation/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subCheckYear");
			submission_5.action = "/ccs/StdCcsLectEvalCopy/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_4);
			submission_5.addResponseData(dataMap_5, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subCopy");
			submission_6.action = "/ccs/StdCcsLectEvalCopy/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_4);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optBuild");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-DB-BD_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "668px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbLectEvalTypeRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optBuild.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strLectDivRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsLectEvalTypeRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "762px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSchYearRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSmtRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_3, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_3.enabled = false;
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSaNm");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-DB-SA_NM");
				container.addChild(output_4, {
					"top": "5px",
					"left": "414px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strObjNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "509px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "639px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grd");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-LECTROOMMNGLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnNew");
				button_3.value = "";
				button_3.style.setClasses(["btn-new"]);
				button_3.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_3.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnDel");
				button_4.value = "";
				button_4.style.setClasses(["btn-delete"]);
				button_4.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_4.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRestore");
				button_5.value = "";
				button_5.style.setClasses(["btn-restore"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_5.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnSave");
				button_6.value = "";
				button_6.style.setClasses(["btn-save"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_6.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.init({
					"dataSet": app.lookup("dsGrxMst"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "69px"},
						{"width": "137px"},
						{"width": "99px"},
						{"width": "471px"},
						{"width": "128px"},
						{"width": "219px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-BD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "답변유형(0점)";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbSerialNo");
										numberEditor_1.readOnly = true;
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.style.css({
											"text-align" : "center"
										});
										numberEditor_1.bind("value").toDataColumn("SERIAL_NO");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "QUEST_ARA_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("combobox3");
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsLectAraRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("QUEST_ARA_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SJV_OJV_DIV_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("combobox1");
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("객관식", "1"));
											comboBox_5.addItem(new cpr.controls.Item("주관식", "2"));
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SJV_OJV_DIV_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "QUEST_CONT";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbLectRoomNm1");
										inputBox_2.maxLength = 500;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("QUEST_CONT");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SUM_XCP_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("checkbox1");
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("SUM_XCP_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ANS_TYPE_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("combobox2");
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsAnsTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("ANS_TYPE_RCD");
										return comboBox_6;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "563px"
				});
				var output_6 = new cpr.controls.Output("optSchYearRcd1");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_6, {
					"top": "5px",
					"left": "540px",
					"width": "109px",
					"height": "25px"
				});
				var comboBox_7 = new cpr.controls.ComboBox("cbbSchYearRcdCopy");
				comboBox_7.userAttr({"require": "Y"});
				comboBox_7.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_7.bind("value").toDataMap(app.lookup("dmReqCopyKey"), "strCopyYear");
				(function(comboBox_7){
					comboBox_7.addItem(new cpr.controls.Item("선택", ""));
					comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_7);
				container.addChild(comboBox_7, {
					"top": "5px",
					"left": "653px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_8 = new cpr.controls.ComboBox("cbbSmtRcdCopy");
				comboBox_8.userAttr({"require": "Y"});
				comboBox_8.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_8.bind("value").toDataMap(app.lookup("dmReqCopyKey"), "strCopySmt");
				(function(comboBox_8){
					comboBox_8.addItem(new cpr.controls.Item("선택", ""));
					comboBox_8.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_8);
				container.addChild(comboBox_8, {
					"top": "5px",
					"left": "752px",
					"width": "100px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnCopy");
				button_7.value = "";
				button_7.style.setClasses(["btn-commit"]);
				button_7.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnCopyClick == "function") {
					button_7.addEventListener("click", onBtnCopyClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "856px",
					"width": "100px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "690px",
				"left": "15px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCcsCRoom";
	cpr.core.Platform.INSTANCE.register(app);
})();
