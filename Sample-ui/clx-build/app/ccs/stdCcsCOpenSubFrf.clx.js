/*
 * App URI: app/ccs/stdCcsCOpenSubFrf
 * Source Location: app/ccs/stdCcsCOpenSubFrf.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCOpenSubFrf", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCOpenSubFrf.xtm"/>
			
			/**
			 * 개설과목관리
			 * @class stdCcsCCurClsFrf
			 * @author 박갑수 at 2016. 2. 4
			 */
			var stdCcsCOpenSubFrf = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strSaObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
						if(!ValueUtil.isNull(vsSaNm)){
							// 학사부서 입력시 이수과정목록, 교과그룹목록 GET
							doCuList(function(pbSuccess) {
								if (pbSuccess){
									// 조회조건 필수값 입력되었을경우 바로조회
									if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd)){
										// ExtModel.dispatch("btnSearch", "DOMActivate");
									}
								}
							});
						}else {
							// 값 초기화
							util.Control.setValue(app, "cbbCuCd", "");
						}
					}
				}];
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{ 
					 controlId					: "btnSbCd",			
					 iDivClsYn					: "",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "/root/reqKey/strSaCd",			
					 iSaNm        				: "ipbSaNm",		
					 iSaObjDivRcd       		: "/root/reqKey/strSaObjDivRcd",		
					 iSbCd        				: "ipbSbNm",			
					 iSbNm        				: "",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "/root/reqKey/strSbCd",			
					 oSbNm					: "ipbSbNm",			
					 oSaCd						: "",			
					 oSaNm					: "",			
					 oCuCd						: "",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "",	
					 oCmpDivRcd				: "",		
					 oPnt							: "",		
					 oTheoTc					: "",	
					 oEpacTc					: "",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "",		
					 func : function(poParam) { 
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
						var vsSbNm = util.DataMap.getValue(app, "dmReqKey", "strSbNm");
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsSaNm) && !ValueUtil.isNull(vsSbNm)){
							util.Header.clickSearch(app);
						}
					 }
				 }
				 ,
				 { 
					 controlId					: "btnFrfSbCd",			
					 iDivClsYn					: "Y",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "/root/reqKey/strParamSmtRcd",
					 iSaCd        				: "",			
					 iSaNm        				: "",		
					 iSaObjDivRcd       		: "",		
					 iSbCd        				: "",			
					 iSbNm        				: "ipbFrfSbNm",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "ipbFrfSbCd",			
					 oSbNm					: "ipbFrfSbNm",			
					 oSaCd						: "",			
					 oSaNm					: "",			
					 oCuCd						: "",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "ipbFrfDivclsCd",	
					 oDivclsNm				: "ipbFrfDivclsNm",	
					 oCmpDivRcd				: "cbbFrfCmpDivRcd",		
					 oPnt							: "ipbFrfPnt",		
					 oTheoTc					: "ipbFrfTheoTc",	
					 oEpacTc					: "ipbFrfEpacTc",	
					 oSbDivRcd				: "cbbFrfSbDivRcd",		
					 oSbLvlRcd                : "cbbFrfSblvlRcd",
					 oSbCatRcd				: "cbbFrfSbCatRcd",
					 oLectTypeRcd  		: "cbbFrfLectTypeRcd",
					 oRecScaleRcd			: "cbbFrfRecScaleRcd",
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "",		
					 func : function(poParam) { 
					 
						if(!ValueUtil.isNull(poParam.Result.SB_CD)){
							
							var vnIdx = poParam.rptRowIdx;
							
							
							var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
							var vnLecTimeCnt = 0;
							if("CA00391" == vsSmtRcd || "CA00393" == vsSmtRcd){
								
								vnLecTimeCnt = ((ValueUtil.fixNumber(poParam.Result.THEO_TC) + ValueUtil.fixNumber(poParam.Result.EPAC_TC)) * 15) /2;
							}
							
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "PNT",poParam.Result.PNT, false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "PNT", poParam.Result.PNT, vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "THEO_TC", poParam.Result.THEO_TC, false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "THEO_TC", poParam.Result.THEO_TC, vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "EPAC_TC", poParam.Result.EPAC_TC, false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EPAC_TC", poParam.Result.EPAC_TC, vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "LECT_TIME_CNT", vnLecTimeCnt, false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "LECT_TIME_CNT", vnLecTimeCnt, vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "CMP_DIV_RCD", poParam.Result.CMP_DIV_RCD, false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "CMP_DIV_RCD", poParam.Result.CMP_DIV_RCD, vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "CU_OBJ_DIV_RCD", "CC009CU", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "CU_OBJ_DIV_RCD", "CC009CU", vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "SB_OBJ_DIV_RCD", "CC009SB", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "SB_OBJ_DIV_RCD", "CC009SB", vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "SA_OBJ_DIV_RCD", "CC009SA", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "SA_OBJ_DIV_RCD", "CC009SA", vnIdx);
								
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA1", "45", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA1", "45", vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA2", "0", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA2", "0", vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA3", "0", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA3", "0", vnIdx);
							
							util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA4", "0", false, true);
							util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA4", "0", vnIdx);
						}
						
					 }
				 }
				 ];
				
				// 교과과정검색팝업 호출
				 moIdsForStdCcsPCurriPopup = [
				{
					 controlId					: "btnFrfSbCd",	
					 iSaSearchUse			: false,
					 iObjDivRcd				: "",
					 iKeyDate					: "/root/keyDateMap/ST_DT",	
					 iSaCd						: "/root/reqKey/strSaCd",	
					 iSaNm						: "/root/reqKey/strSaNm",
					 iSpCd						: "",
					 iSbCd						: "",
					 iSbNm						: "ipbFrfSbNm",
					 iCmpDivRcd				: "",	
					 iCuCd						: "", 
					 oStDt						: "",
					 oEndDt						: "",	
					 oCuCd						: "",
					 oCuObjDivRcd			: "",	
					 oSbCd						: "ipbFrfSbCd",	
					 oSbNm					: "ipbFrfSbNm",	
					 oSbObjDivRcd			: "ipbFrfSbObjDIvRcd",	
					 oSaCd						: "",
					 oSaNm					: "",
					 oSaObjDivRcd			: "",
					 oSpCd						: "cbbFrfSpCd",
					 oSpObjDivRcd			: "ipbFrfSpObjDivRcd",	
					 oDclRcdCd				: "ipbFrfDclRcd",
					 oDclRcdNm				: "ipbFrfDclRcdNm",
					 oSbLvlRcd				: "cbbFrfSblvlRcd",
					 oEstPrdRcd				: "",
					 oEstPrdNm				: "",	
					 oEvalMethodRcd		: "cbbFrfEvalMethodRcd",	
					 oLectTypeRcd			: "cbbFrfLectTypeRcd",	
					 oSbCatRcd				: "cbbFrfSbCatRcd",
					 oSbDivRcd				: "cbbFrfSbDivRcd",	
					 oSbTypeRcd				: "cbbFrfSbTypeRcd",
					 oCmpDivRcd				: "/root/resPopup/strFrfCmpDivRcd",
					 oCurDivRcd				: "",
					 oRecScaleRcd			: "cbbFrfRecScaleRcd",
					 oDayDivclsCnt			: "",
					 oNightDivclsCnt			: "",
					 oLectTimeCnt			: "/root/resPopup/strFrfLectTimeCnt",	
					 oPnt							: "/root/resPopup/strFrfPnt",	
					 oTheoTc					: "/root/resPopup/strFrfTheoTc",	
					 oEpacTc					: "/root/resPopup/strFrfEpacTc",
					 oTlsnReqCapa1		: "/root/resPopup/strTlsnReqCapa1",
					 oTlsnReqCapa2		: "/root/resPopup/strTlsnReqCapa2",
					 oTlsnReqCapa3		: "/root/resPopup/strTlsnReqCapa3",
					 oTlsnReqCapa4		: "/root/resPopup/strTlsnReqCapa4",
					 oReTlsnYnRcd			: "cbbFrfReTlsnYnRcd",
					 oMandSbYn				: "",
					 oLectEvalXcpYn		: "ckbFrfLectEvalXcpYn",	
					 oLectEvalSumXcpYn	: "ckbFrfLectEvalSumXcpYn",
					 oPntInstchYn			: "",
					 oRefKey					: "",	
					 oCuCdNm				: "",	
					 func : function(poParam) {
						 // 이수구분 임시 인스턴스값으로 받아 프리폼에 세팅 : 팝업값 세팅시 이수구분의 ValueChange 이벤트로인해 리피터에 해당값이 반영 안됨.
						 var vnIdx = util.Grid.getIndex(app, "grdCcsOpenSub");
						 
						var vsCmpDivRcd = util.DataMap.getValue(app, "dmResPopup", "strFrfCmpDivRcd");
						util.FreeForm.setValue(app, "frfCcsOpenSub", "CMP_DIV_RCD", vsCmpDivRcd, false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "CMP_DIV_RCD", vsCmpDivRcd, vnIdx);
								
						// 교직전공[CA20121]. 교직교양[CA20122]
						if(ValueUtil.fixNull(vsCmpDivRcd) == "CA20121" || ValueUtil.fixNull(vsCmpDivRcd) == "CA20122"){
							
							// 평가방법 : 절대평가[CA21001]
							util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21001");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21001", vnIdx);
							util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "", vnIdx);
							
							util.Control.setEnable(app, false, ["cbbFrfRelEstTypeRcd"]);
						}else {
							
							// 평가방법 : 상대평가[CA21002], 상대평가유형 : 상대평가[CD20901]
							util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21002");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21002", vnIdx);
							util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901", vnIdx);
							
							util.Control.setEnable(app, true, ["cbbFrfRelEstTypeRcd"]);
						}
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "PNT", util.DataMap.getValue(app, "dmResPopup", "strFrfPnt"), false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "PNT", util.DataMap.getValue(app, "dmResPopup", "strFrfPnt"), vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "THEO_TC", util.DataMap.getValue(app, "dmResPopup", "strFrfTheoTc"), false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "THEO_TC", util.DataMap.getValue(app, "dmResPopup", "strFrfTheoTc"), vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "EPAC_TC", util.DataMap.getValue(app, "dmResPopup", "strFrfEpacTc"), false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "EPAC_TC", util.DataMap.getValue(app, "dmResPopup", "strFrfEpacTc"), vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "LECT_TIME_CNT", util.DataMap.getValue(app, "dmResPopup", "strFrfLectTimeCnt"), false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "LECT_TIME_CNT", util.DataMap.getValue(app, "dmResPopup", "strFrfLectTimeCnt"), vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA1", util.DataMap.getValue(app, "dmResPopup", "strTlsnReqCapa1"), false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA1", util.DataMap.getValue(app, "dmResPopup", "strTlsnReqCapa1"), vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA2", "0", false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA2", "0", vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA3", "0", false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA3", "0", vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "TLSN_REQ_CAPA4", "0", false, true);
						util.Grid.setCellValue(app, "grdCcsOpenSub", "TLSN_REQ_CAPA4", "0", vnIdx);
						
						util.FreeForm.setValue(app, "frfCcsOpenSub", "CU_OBJ_DIV_RCD", "CC009CU");
						util.Grid.setCellValue(app, "grdCcsOpenSub", "CU_OBJ_DIV_RCD", "CC009CU", vnIdx);
						
						
					 }
				 }];
				 
				 // 학문분야검색
				moPObject.moIdsForStdCcsPDclExtendPopup = [
				{
					controlId 			: "btnFrfDclRcd",
					iLanDivRcd 		: "",
					iRefKey 			: "ipbFrfRefKey",				
					iCmpDivRcd 		: "cbbFrfCmpDivRcd",
					iDclRcdCd 		: "ipbFrfDclRcd",
					iDclRcdNm 		: "ipbFrfDclRcdNm",					
					iReadOnlyYn 		: "",
					iStdDclRcdYn 	: "",							//학문분야 표준임포트 사용여부
					oOutDclRcdNm 	: "ipbFrfDclRcdNm",	//학문분야 이름
					oOutDclRcdCd 	: "ipbFrfDclRcd",			//학문분야 배열코드															
					func : function(poParam) {
						var vsDclRcd = util.FreeForm.getValue(app, "frfCcsOpenSub", "DCL_RCD_CD");
						
						var vnIdx = util.Grid.getIndex(app, "grdCcsOpenSub");
						
						if(ValueUtil.fixNull(vsDclRcd).indexOf("CA21240") != -1){
							
							// 평가방법 : 절대평가[CA21001]
							util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21001");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21001", vnIdx);
							util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "", vnIdx);
							
							util.Control.setEnable(app, false, ["cbbFrfRelEstTypeRcd"]);
						}else {
							
							// 평가방법 : 상대평가[CA21002], 상대평가유형 : 상대평가[CD20901]
							util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21002");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21002", vnIdx);
							util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901");
							util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901", vnIdx);
							
							util.Control.setEnable(app, true, ["cbbFrfRelEstTypeRcd"]);
						}
					}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onModelConstructDone_StdCcsCOpenSubFrf = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsOpenSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbSbLvlRcd", "cbbCmpDivRcd", "cbbCuCd"]);
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.Control.setFocus(app, "ipbSaNm");
						}
					}, true);
				};
				
				/**
				 * @desc [btnSaCd]학사부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaNm]학사부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCcsOpenSub"])){
						return false;
					}
					
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnSaCd]교과목명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onClick_BtnSbCd = function(sender) {
					// 개설과목검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [ipbSbNm]교과목명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_IpbSbNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCcsOpenSub"])){
						return false;
					}
					
					// 값변경시 교과목검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 4
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 5
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaNm"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 개설과목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doList(poCallBackFunc) {			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							/*
								계절학기 이면 정규학기로 설정을 한다.
							*/
							var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
							if( "CA00391" == vsSmtRcd){
								util.DataMap.setValue(app, "dmReqKey", "strParamSmtRcd", "CA00390");
							}else if("CA00393" == vsSmtRcd){
								util.DataMap.setValue(app, "dmReqKey", "strParamSmtRcd", "CA00392");
							}
							
							ExtTreeView.rebuild(["rptCcsOpenSub"]);
							
							if(util.Grid.getRowCount(app, "grdCcsOpenSub") == 0){
								// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
								doCompareFrfEnable();
							}
								
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				/**
				 * @desc [rptCcsOpenSub]개설과목목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onRowSelect_RptCcsOpenSub = function() {
					// 리피트 현재 index get
					var vnIndex = util.Grid.getIndex(app, "grdCcsOpenSub");
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCcsOpenSub", "frfCcsOpenSub", vnIndex);
					// 프리폼 비활성화 제어
					doCompareFrfEnable();
					var vsCuCd = util.FreeForm.getValue(app, "frfCcsOpenSub", "CU_CD");
					//--교과그룹을 필터링한다. 이수구분 -> 학사부서코드로 필터링한다.
					 page.onValueChanged_CbbFrfSpCd();
					if("" != vsCuCd){
						 util.FreeForm.setValue(app, "frfCcsOpenSub", "CU_CD", vsCuCd, false, true);
					}
					
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doCompareFrfEnable() {
					// 신규시 제어 컬럼
					var vaEnableCtl = ["cbbFrfCmpDivRcd", "ipbFrfSbNm", "btnFrfSbCd", "ipbFrfDivclsCd", "cbbFrfCuCd"];
					
					// 마스터 로우 없을경우 프리폼 리셋
					if(!util.Grid.getIndex(app, "grdCcsOpenSub")){
						util.Control.reset(app, "frfCcsOpenSub");
					}
					
					if( (!util.Grid.getIndex(app, "grdCcsOpenSub")) 
						|| util.Grid.getRowState(app, "grdCcsOpenSub") == cpr.data.tabledata.RowState.DELETED) {
							
						util.Control.setEnable(app, false, ["frfCcsOpenSub"]);	
						
					} else {
						util.Control.setEnable(app, true, ["frfCcsOpenSub"]);	
						
						// 신규 상태에따른 프리폼항목 제어
						if(util.Grid.getRowState(app, "grdCcsOpenSub") == cpr.data.tabledata.RowState.INSERTED){
							util.Control.setEnable(app, true, vaEnableCtl);	
						}else {
							util.Control.setEnable(app, false, vaEnableCtl);	
						}
					}
					
					// 평가방법코드 : 상대평가[CA21002]
					var vsEvalMethodRcd = util.Grid.getCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD");
					// 상대평가일경우만 상대평가유형 활성화
					if(ValueUtil.fixNull(vsEvalMethodRcd) == "CA21002"){
						util.Control.setEnable(app, true, ["cbbFrfRelEstTypeRcd"]);
					}else {
						util.Control.setEnable(app, false, ["cbbFrfRelEstTypeRcd"]);
					}
				};
				
				/**
				 * @desc [frfCcsOpenSub]개설과목 상세내역 onUpdate 이벤트
				 * @param pbStatus Boolean
				 * @return  
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onUpdate_FrfCcsOpenSub = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptCcsOpenSub", "frfCcsOpenSub");
				};
				
				/**
				 * @desc [btnCopy]개설복사 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnCopy = function() {
					var vnOrgRowIdx = util.Grid.getIndex(app, "grdCcsOpenSub");
					// 마스터 리피트 row 선택여부 체크
					if(vnOrgRowIdx == "0"){
						
						var vsMsgParam = util.Grid.getTitle(app, "grdCcsOpenSubCcsOpenSub");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					var voNextRow   = util.Grid.insertRow(app, "grdCcsOpenSub");
					
					// 값 복사
					ExtRepeat.copyToRowData("rptCcsOpenSub", vnOrgRowIdx, "rptCcsOpenSub", voNextRow);
					
					// 값복사후 Row의 내용 프리폼 반영을위해
					util.Grid.selectRow(app, "grdCcsOpenSub", voNextRow);
					
					util.Grid.setCellValue(app, "grdCcsOpenSub", "UPT_STATUS", "N", voNextRow);
					
					// 기본값 세팅
					// 분반명 : 초기화
					util.FreeForm.setValue(app, "frfCcsOpenSub", "DIVCLS_CD", "");
					
					// 분반코드 : 초기화
					util.FreeForm.setValue(app, "frfCcsOpenSub", "DIVCLS_NM", "");
					
					// 참조키 : 초기화
					util.Grid.setCellValue(app, "grdCcsOpenSub", "REF_KEY", "", voNextRow);
				};
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnNew = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdCcsOpenSub");
					
					// 신규 Defalut값 설정
					// 학년도 : 조회조건 학년도
					var vsSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
					util.Grid.setCellValue(app, "grdCcsOpenSub", "SCH_YEAR_RCD", vsSchYearRcd, vnIdx);
					
					// 학기 : 조회조건 학기
					var vsSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
					util.Grid.setCellValue(app, "grdCcsOpenSub", "SMT_RCD", vsSmtRcd, vnIdx);
					
					// 학사부서 코드 : 조회조건 학사부서코드
					var vsSaCd = util.DataMap.getValue(app, "dmReqKey", "strSaCd");
					util.Grid.setCellValue(app, "grdCcsOpenSub", "SA_CD", vsSaCd, vnIdx);
					util.FreeForm.setValue(app, "frfCcsOpenSub", "SA_CD", vsSaCd);
					
					// 학사부서명 : 조회조건 학사부서명
					var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
					util.FreeForm.setValue(app, "frfCcsOpenSub", "SA_CD_NM", vsSaNm);
					
					// 학사부서 객체구분코드 : 조회조건 학사부서 객체구분코드
					var vsSaObjDivRcd = util.DataMap.getValue(app, "dmReqKey", "strSaObjDivRcd");
					util.Grid.setCellValue(app, "grdCcsOpenSub", "SA_OBJ_DIV_RCD", vsSaObjDivRcd, vnIdx);
				
					// 교과그룹 : 조회조건 교과그룹
					var vsCuCd = util.Control.getValue(app, "cbbCuCd");
					util.FreeForm.setValue(app, "frfCcsOpenSub", "CU_CD", vsCuCd);
					
					// 평가방법 : 상대평가[CA21002]
					var vsEvalMethodRcd = "CA21002";
					util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", vsEvalMethodRcd);
					
					// 상대평가유형 : 상대평가[CD20901]
					var vsRelEstTypeRcd = "CD20901";
					util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", vsRelEstTypeRcd);
					
					// 언어키 : 시스템 Locale
					util.Grid.setCellValue(app, "grdCcsOpenSub", "LAN_DIV_RCD", msSystemLocale, vnIdx);
					
					// 수강신청정원1 : 0
					// ExtFreeForm.setValue("frfCcsOpenSub", "TLSN_REQ_CAPA1", "0");
					
					//--교과그룹을 필터링한다. 이수구분 -> 학사부서코드로 필터링한다.
					page.onValueChanged_CbbFrfSpCd();
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnDel = function() {
					// 참조키
					var vsRefKey = util.Grid.getCellValue(app, "grdCcsOpenSub", "REF_KEY");
					util.DataMap.setValue(app, "dmReqKey", "strRefKey", vsRefKey);
				
					if(!ValueUtil.isNull(vsRefKey)){
						//strCommand: delChk 
						util.Submit.send(app, "subDelChk", function(pbSuccess){
							if(pbSuccess){
								var vsFullNm = "";
								var vbCheck = true;
								
								// 강의시간표 데이터 존재 여부 
								var vsTimeSche = util.DataMap.getValue(app, "dmResDelChk", "strTimeSche");
								if(ValueUtil.fixNull(vsTimeSche) == "Y"){
									if(ValueUtil.isNull(vsFullNm)){
										vsFullNm = NLS.CCS.TIMESCHE;
									}else {
										vsFullNm = vsFullNm + "," + NLS.CCS.TIMESCHE;
									}
									
									vbCheck = false;
								}
								
								// 강의계획서 데이터 존재 여부
								var vsLectSche = util.DataMap.getValue(app, "dmResDelChk", "strLectSche");
								if(ValueUtil.fixNull(vsLectSche) == "Y"){
									if(ValueUtil.isNull(vsFullNm)){
										vsFullNm = NLS.CCS.LECTSCHE;
									}else {
										vsFullNm = vsFullNm + "," + NLS.CCS.LECTSCHE;
									}
									
									vbCheck = false;
								}
								
								// 휴보강 데이터 존재 여부
								var vsRestApp = util.DataMap.getValue(app, "dmResDelChk", "strRestApp");
								if(ValueUtil.fixNull(vsRestApp) == "Y"){
									if(ValueUtil.isNull(vsFullNm)){
										vsFullNm = NLS.CCS.RESTAPP;
									}else {
										vsFullNm = vsFullNm + "," + NLS.CCS.RESTAPP;
									}
									
									vbCheck = false;
								}
								
								if(!vbCheck){
									if(util.Msg.confirm("NLS-CRM-M074", [vsFullNm])   ){
										util.Grid.deleteRow(app, "grdCcsOpenSub");
									}else {
										return false;
									}
								}else {
									// 삭제
									util.Grid.deleteRow(app, "grdCcsOpenSub");
									
									/*
										신규 상태로만 존재할경우
										[삭제]버튼 클릭 시 리피터에 데어터가 없어진다. 그러므로
										프리폼에 잔여가 남아 초기화 하는 작업이 필요하다.
									*/
									var vnCcsOpenRpt = util.Grid.getRowCount(app, "grdCcsOpenSub");
									if(vnCcsOpenRpt < 1){
										util.Control.reset(app, "rptCcsOpenSub");
									}
									
								}
								
								// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
								doCompareFrfEnable();
							}
						});
					}else {
						// 삭제
						util.Grid.deleteRow(app, "grdCcsOpenSub");
					}
				};
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdCcsOpenSub");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCcsOpenSub", "frfCcsOpenSub");
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc 개설과목목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCcsOpenSub"], "MSG")){
						return false;
					}
					
					//--프리폼 필수체크를 한다.
					if(!util.validate(app, "frfCcsOpenSub")) return false;
					
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdCcsOpenSub")) return false;
			
					//strCommand: saveOpenSub 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
											
							//조회건수가 0건이면 프리폼이 내역이 반영되지 않기 떄문
							util.Control.reset(app, "frfCcsOpenSub");
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc [cbbFrfSpCd]이수과정 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_CbbFrfSpCd = function() {
					// 이수과정에따른 교과그룹값 필터링
					// 이수과정에따른 교과그룹값 필터링
					var vsSpCd = util.Control.getValue(app, "cbbFrfSpCd");
					if(!ValueUtil.isNull(vsSpCd)){
						vsSpCd = "CC009SP" + vsSpCd;
					}else {
						var vsSaCd = util.Grid.getCellValue(app, "grdCcsOpenSub", "SA_CD");
						vsSpCd = "CC009SA" + vsSaCd
					}
			
					ExtSelectCtl.setInsBind("cbbFrfCuCd", "[contains(PATH, '"+ vsSpCd +"')]");
				};
				
				/**
				 * @desc [btnFrfSbCd]교과목명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnFrfSbCd = function(sender) {
					
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					
					if("CA00391" == vsSmtRcd || "CA00393" == vsSmtRcd){			
						doOnClickStdCcsPOpenSubPopup(sender);
					}else{
						// 교과과정검색팝업 호출
						doOnClickStdCcsPCurriPopup(sender);
					}
					
					
					
				};
				
				/**
				 * @desc [ipbFrfSbNm]교과목명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_IpbFrfSbNm = function(sender) {
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					
					if("CA00391" == vsSmtRcd || "CA00393" == vsSmtRcd){			
						doOnChangeStdCcsPOpenSubPopup(sender);
					}else{
						// 값변경시 교과과정검색팝업 호출
						doOnChangeStdCcsPCurriPopup(sender);
					}
							
					
				};
				
				/**
				 * @desc [btnFrfDclRcd]학문분야(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnFrfDclRcd = function(sender) {
					// 학문분야검색팝업 호출
					doOnClickStdCcsPDclExtendPopup(sender);
				};
				
				/**
				 * @desc [cbbFrfCmpDivRcd]이수구분 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_CbbFrfCmpDivRcd = function() {
					// 학문분야 초기화
					util.FreeForm.setValue(app, "frfCcsOpenSub", "DCL_RCD_NM", "");
					util.FreeForm.setValue(app, "frfCcsOpenSub", "DCL_RCD_CD", "");
					
					var vnIdx = util.Grid.getIndex(app, "grdCcsOpenSub");
					
					var vsCmpDivRcd = util.FreeForm.getValue(app, "frfCcsOpenSub", "CMP_DIV_RCD");
					
					// 교직전공[CA20121]. 교직교양[CA20122]
					if(ValueUtil.fixNull(vsCmpDivRcd) == "CA20121" || ValueUtil.fixNull(vsCmpDivRcd) == "CA20122"){
						
						// 평가방법 : 절대평가[CA21001]
						util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21001");
						util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21001", vnIdx);
						
						util.Control.setEnable(app, false, ["cbbFrfRelEstTypeRcd"]);
						util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "");
						util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "", vnIdx);
					}else {
						
						// 평가방법 : 상대평가[CA21002], 상대평가유형 : 상대평가[CD20901]
						util.FreeForm.setValue(app, "frfCcsOpenSub", "EVAL_METHOD_RCD", "CA21002");
						util.Grid.setCellValue(app, "grdCcsOpenSub", "EVAL_METHOD_RCD", "CA21002", vnIdx);
						util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901");
						util.Grid.setCellValue(app, "grdCcsOpenSub", "REL_EST_TYPE_RCD", "CD20901", vnIdx);
						util.Control.setEnable(app, true, ["cbbFrfRelEstTypeRcd"]);
					}
				};
			
				/**
				 * @desc [cbbFrfEvalMethodRcd]평가방법 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_CbbFrfEvalMethodRcd = function() {
					// 평가방법코드 : 상대평가[CA21002]
					var vsEvalMethodRcd = util.Control.getValue(app, "cbbFrfEvalMethodRcd");
					// 상대평가일경우만 상대평가유형 활성화
					if(ValueUtil.fixNull(vsEvalMethodRcd) == "CA21002"){
						util.Control.setEnable(app, true, ["cbbFrfRelEstTypeRcd"]);
					}else {
						util.Control.setEnable(app, false, ["cbbFrfRelEstTypeRcd"]);
						util.FreeForm.setValue(app, "frfCcsOpenSub", "REL_EST_TYPE_RCD", "");
					}
				};
				
				
				
				
				
				/**
				 * @desc 음수를  입력 할 수 없다.
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 2
				 */
				moPage.onValueChanged_checkIntegerDecimal = function(vpCtl) {
					
					ValidUtil.checkIntegerDecimal(vpCtl, 3, 1, true);
				};
				
				
				/**
				 * @desc 학점 음수 불가.
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 2
				 */
				moPage.onValueChanged_IpbFrfPnt = function() {
					page.onValueChanged_checkIntegerDecimal("ipbFrfPnt");
				};
				
				
				/**
				 * @desc 이론 음수 불가.
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 2
				 */
				moPage.onValueChanged_IpbFrfTheoTc = function() {
					page.onValueChanged_checkIntegerDecimal("ipbFrfTheoTc");
				};
				
				
				/**
				 * @desc 실습 음수 불가.
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 2
				 */
				moPage.onValueChanged_IpbFrfEpacTc = function() {
					page.onValueChanged_checkIntegerDecimal("ipbFrfEpacTc");
				};
				
				
				/**
				 * @desc 강의시수 음수 불가.
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 2
				 */
				moPage.onValueChanged_IpbFrfLectTimeCnt = function() {
					page.onValueChanged_checkIntegerDecimal("ipbFrfLectTimeCnt");
				};
				
				
				moPage.onValueChanged_IpbFrfTlsnReqCapa1 = function() {
					page.onValueChanged_checkIntegerDecimal("ipbFrfTlsnReqCapa1");
				};
				
				/**
				 * @desc 교과그룹목록 조회
				 * @param poCallBackFunc 콜백정의, 교과목코드
				 * @return void
				 * @author 박갑수 at 2016. 2. 1
				 */
				function doCuList(poCallBackFunc, psCuCd) {
					//strCommand: getSaCu 
					util.Submit.send(app, "subCuList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbCuCd"]);
							util.SelectCtl.selectItem(app, "cbbCuCd", 0);
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				
				
				moPage.onSetFocus_CbbFrfCuCd = function() {
					page.onValueChanged_CbbFrfSpCd();
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSbCatRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDayNightDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSaPostDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsEvalMethodRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsLectTypeRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRelEstTypeCdList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsLectEvalTypeRcd");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsReTlsnYnRcdList");
			dataSet_10.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsSbTypeRcdList");
			dataSet_11.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsRecCiiRcdList");
			dataSet_12.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			
			var dataSet_13 = new cpr.data.DataSet("dsSbDivRcdList");
			dataSet_13.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_13);
			
			var dataSet_14 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_14.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_14);
			
			var dataSet_15 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_15.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_15);
			
			var dataSet_16 = new cpr.data.DataSet("dsSpList");
			dataSet_16.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"}
				],
				"rows": []
			});
			app.register(dataSet_16);
			
			var dataSet_17 = new cpr.data.DataSet("dsCuList");
			dataSet_17.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"},
					{"name": "PATH"}
				],
				"rows": []
			});
			app.register(dataSet_17);
			
			var dataSet_18 = new cpr.data.DataSet("dsCcsOpenSub");
			dataSet_18.parseData({
				"info": "CCS_OPEN_SUB@SCH_YEAR_RCD,SMT_RCD,SA_CD,SA_OBJ_DIV_RCD,CU_CD,CU_OBJ_DIV_RCD,SB_CD,SB_OBJ_DIV_RCD,DIVCLS_CD",
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_CD_NM"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "CU_CD"},
					{"name": "CU_CD_NM"},
					{"name": "CU_OBJ_DIV_RCD"},
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "SB_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "SP_CD_NM"},
					{"name": "SP_OBJ_DIV_RCD"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "DIVCLS_SHORT_NM"},
					{"name": "LAN_DIV_RCD"},
					{"name": "USE_LAN_RCD"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "LECT_TIME_CNT"},
					{"name": "TLSN_REQ_CAPA1"},
					{"name": "TLSN_REQ_CAPA2"},
					{"name": "TLSN_REQ_CAPA3"},
					{"name": "TLSN_REQ_CAPA4"},
					{"name": "SB_DIV_RCD"},
					{"name": "SB_TYPE_RCD"},
					{"name": "SB_CAT_RCD"},
					{"name": "SB_LVL_RCD"},
					{"name": "EVAL_METHOD_RCD"},
					{"name": "REC_SCALE_RCD"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "LECT_TYPE_RCD"},
					{"name": "LECT_EVAL_TYPE_RCD"},
					{"name": "RE_TLSN_YN_RCD"},
					{"name": "SA_POST_DIV_RCD"},
					{"name": "REL_EST_TYPE_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "DCL_RCD_NM"},
					{"name": "TEAM_TEACH_YN"},
					{"name": "LECT_EVAL_SUM_XCP_YN"},
					{"name": "LECT_EVAL_XCP_YN"},
					{"name": "ORI_LECT_YN"},
					{"name": "EXP_YN"},
					{"name": "EXP_RSN"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_18);
			
			var dataSet_19 = new cpr.data.DataSet("dsFrfCcsOpenSub");
			dataSet_19.parseData({
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_CD_NM"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "CU_CD"},
					{"name": "CU_CD_NM"},
					{"name": "CU_OBJ_DIV_RCD"},
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "SB_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "SP_CD_NM"},
					{"name": "SP_OBJ_DIV_RCD"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "DIVCLS_SHORT_NM"},
					{"name": "LAN_DIV_RCD"},
					{"name": "USE_LAN_RCD"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "LECT_TIME_CNT"},
					{"name": "TLSN_REQ_CAPA1"},
					{"name": "TLSN_REQ_CAPA2"},
					{"name": "TLSN_REQ_CAPA3"},
					{"name": "TLSN_REQ_CAPA4"},
					{"name": "SB_DIV_RCD"},
					{"name": "SB_TYPE_RCD"},
					{"name": "SB_CAT_RCD"},
					{"name": "SB_LVL_RCD"},
					{"name": "EVAL_METHOD_RCD"},
					{"name": "REC_SCALE_RCD"},
					{"name": "CMP_DIV_RCD"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "LECT_TYPE_RCD"},
					{"name": "LECT_EVAL_TYPE_RCD"},
					{"name": "RE_TLSN_YN_RCD"},
					{"name": "SA_POST_DIV_RCD"},
					{"name": "REL_EST_TYPE_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "DCL_RCD_NM"},
					{"name": "TEAM_TEACH_YN"},
					{"name": "LECT_EVAL_SUM_XCP_YN"},
					{"name": "LECT_EVAL_XCP_YN"},
					{"name": "ORI_LECT_YN"},
					{"name": "EXP_YN"},
					{"name": "EXP_RSN"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_19);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strParamSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResPopup");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strFrfCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strFrfPnt",
						"dataType": "string"
					},
					{
						"name": "strFrfTheoTc",
						"dataType": "string"
					},
					{
						"name": "strFrfEpacTc",
						"dataType": "string"
					},
					{
						"name": "strFrfLectTimeCnt",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa1",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa2",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa3",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa4",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResDelChk");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strTimeSche",
						"dataType": "string"
					},
					{
						"name": "strLectSche",
						"dataType": "string"
					},
					{
						"name": "strRestApp",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsOpenSubFrf/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_12, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_13, false);
			submission_1.addResponseData(dataSet_11, false);
			submission_1.addResponseData(dataSet_10, false);
			submission_1.addResponseData(dataSet_9, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_14, false);
			submission_1.addResponseData(dataSet_15, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/StdCcsOpenSubFrf/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_18, false);
			submission_3.addResponseData(dataSet_16, false);
			submission_3.addResponseData(dataSet_17, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/ccs/StdCcsOpenSubFrfSub/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_18);
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataMap_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subDelChk");
			submission_5.action = "/ccs/StdCcsOpenSubFrfSub/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addRequestData(dataMap_3);
			submission_5.addResponseData(dataMap_5, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subCuList");
			submission_6.action = "/ccs/StdCcsOpenSubFrfSub/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_2);
			submission_6.addResponseData(dataSet_17, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSaNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-DB-SA_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "415px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "510px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "640px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSchYearRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSbNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_3, {
					"top": "30px",
					"left": "415px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSbNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "510px",
					"width": "130px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSbCd");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbCdClick == "function") {
					button_3.addEventListener("click", onBtnSbCdClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "640px",
					"width": "20px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSmtRcd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_4, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSbLvlRcd");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_5, {
					"top": "30px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSbLvlRcd");
				comboBox_3.bind("fieldLabel").toExpression("#optSbLvlRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbLvlRcd");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsSbLvlRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCmpDivRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_4.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_4){
					comboBox_4.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optCuCd");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_7, {
					"top": "5px",
					"left": "669px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbCuCd");
				comboBox_5.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuCd");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsCuList"), {
						"label": "OBJ_CD_NM",
						"value": "OBJ_CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "5px",
					"left": "764px",
					"width": "150px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-OPENSUBLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "215px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsOpenSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsOpenSub"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "100px"},
						{"width": "139px"},
						{"width": "80px"},
						{"width": "198px"},
						{"width": "67px"},
						{"width": "48px"},
						{"width": "62px"},
						{"width": "82px"},
						{"width": "45px"},
						{"width": "45px"},
						{"width": "45px"},
						{"width": "70px"},
						{"width": "90px"},
						{"width": "76px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "135px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "80px"},
						{"width": "70px"},
						{"width": "100px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "95px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "100px"},
						{"width": "90px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRUP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TIME_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DNDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RELEVALTYP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DCL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TYPE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_SCALE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TEAM_TEACH_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CANCLYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EXP_RSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CLASSROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EXPYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECEVALSUMYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECEVALTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBCATGR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA3");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSNREQCAPA4");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RE_TLSN_YN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ORGLECYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ISUCOURSDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 43},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 44},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 45},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 46},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPEN_SUB_REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 47},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DCL_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 48},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USE_LAN_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 49},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SA_POST_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 50},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_8 = new cpr.controls.Output();
										output_8.style.css({
											"text-align" : "center"
										});
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CU_CD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbCuCd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsCuList"), {
												"label": "OBJ_CD_NM",
												"value": "OBJ_CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("CU_CD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbSbLvlRcd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										comboBox_7.userAttr({"require": "Y"});
										(function(comboBox_7){
											comboBox_7.addItem(new cpr.controls.Item("선택", ""));
											comboBox_7.setItemSet(app.lookup("dsSbLvlRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SB_LVL_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_8.enabled = false;
										comboBox_8.hideButton = true;
										comboBox_8.userAttr({"require": "Y"});
										(function(comboBox_8){
											comboBox_8.addItem(new cpr.controls.Item("선택", ""));
											comboBox_8.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "LECT_TIME_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD";
									cell.control = (function(){
										var comboBox_9 = new cpr.controls.ComboBox("gdCbbDayNightDivRcd");
										comboBox_9.enabled = false;
										comboBox_9.hideButton = true;
										comboBox_9.userAttr({"require": "Y"});
										(function(comboBox_9){
											comboBox_9.addItem(new cpr.controls.Item("선택", ""));
											comboBox_9.setItemSet(app.lookup("dsDayNightDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_9);
										comboBox_9.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
										return comboBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA1";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "EVAL_METHOD_RCD";
									cell.control = (function(){
										var comboBox_10 = new cpr.controls.ComboBox("gdCbbEvalMethodRcd");
										comboBox_10.enabled = false;
										comboBox_10.hideButton = true;
										(function(comboBox_10){
											comboBox_10.setItemSet(app.lookup("dsEvalMethodRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_10);
										comboBox_10.bind("value").toDataColumn("EVAL_METHOD_RCD");
										return comboBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "REL_EST_TYPE_RCD";
									cell.control = (function(){
										var comboBox_11 = new cpr.controls.ComboBox("gdCbbRelEstTypeRcd");
										comboBox_11.enabled = false;
										comboBox_11.hideButton = true;
										(function(comboBox_11){
											comboBox_11.setItemSet(app.lookup("dsRelEstTypeCdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_11);
										comboBox_11.bind("value").toDataColumn("REL_EST_TYPE_RCD");
										return comboBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "LECT_TYPE_RCD";
									cell.control = (function(){
										var comboBox_12 = new cpr.controls.ComboBox("gdCbbLectTypeRcd");
										comboBox_12.enabled = false;
										comboBox_12.hideButton = true;
										comboBox_12.userAttr({"require": "Y"});
										(function(comboBox_12){
											comboBox_12.addItem(new cpr.controls.Item("선택", ""));
											comboBox_12.setItemSet(app.lookup("dsLectTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_12);
										comboBox_12.bind("value").toDataColumn("LECT_TYPE_RCD");
										return comboBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "REC_SCALE_RCD";
									cell.control = (function(){
										var comboBox_13 = new cpr.controls.ComboBox("gdCbbRecScaleRcd");
										comboBox_13.enabled = false;
										comboBox_13.hideButton = true;
										comboBox_13.userAttr({"require": "Y"});
										(function(comboBox_13){
											comboBox_13.addItem(new cpr.controls.Item("선택", ""));
											comboBox_13.setItemSet(app.lookup("dsRecCiiRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_13);
										comboBox_13.bind("value").toDataColumn("REC_SCALE_RCD");
										return comboBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "TEAM_TEACH_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "EXP_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "EXP_RSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_XCP_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_SUM_XCP_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_TYPE_RCD";
									cell.control = (function(){
										var comboBox_14 = new cpr.controls.ComboBox("gdCbbLectEvalTypeRcd");
										comboBox_14.enabled = false;
										comboBox_14.hideButton = true;
										(function(comboBox_14){
											comboBox_14.setItemSet(app.lookup("dsLectEvalTypeRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_14);
										comboBox_14.bind("value").toDataColumn("LECT_EVAL_TYPE_RCD");
										return comboBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "SB_DIV_RCD";
									cell.control = (function(){
										var comboBox_15 = new cpr.controls.ComboBox("gdCbbSbDivRcd");
										comboBox_15.enabled = false;
										comboBox_15.hideButton = true;
										(function(comboBox_15){
											comboBox_15.setItemSet(app.lookup("dsSbDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_15);
										comboBox_15.bind("value").toDataColumn("SB_DIV_RCD");
										return comboBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "SB_CAT_RCD";
									cell.control = (function(){
										var comboBox_16 = new cpr.controls.ComboBox("gdCbbSbCatRcd");
										comboBox_16.enabled = false;
										comboBox_16.hideButton = true;
										comboBox_16.userAttr({"require": "Y"});
										(function(comboBox_16){
											comboBox_16.addItem(new cpr.controls.Item("선택", ""));
											comboBox_16.setItemSet(app.lookup("dsSbCatRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_16);
										comboBox_16.bind("value").toDataColumn("SB_CAT_RCD");
										return comboBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA2";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA3";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA4";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_YN_RCD";
									cell.control = (function(){
										var comboBox_17 = new cpr.controls.ComboBox("gdCbbReTlsnYnRcd");
										comboBox_17.enabled = false;
										comboBox_17.hideButton = true;
										(function(comboBox_17){
											comboBox_17.setItemSet(app.lookup("dsReTlsnYnRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_17);
										comboBox_17.bind("value").toDataColumn("RE_TLSN_YN_RCD");
										return comboBox_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.columnName = "ORI_LECT_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.columnName = "SB_TYPE_RCD";
									cell.control = (function(){
										var comboBox_18 = new cpr.controls.ComboBox("gdCbbSbTypeRcd");
										comboBox_18.enabled = false;
										comboBox_18.hideButton = true;
										(function(comboBox_18){
											comboBox_18.setItemSet(app.lookup("dsSbTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_18);
										comboBox_18.bind("value").toDataColumn("SB_TYPE_RCD");
										return comboBox_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_19 = new cpr.controls.ComboBox("gdCbbSchYearRcd");
										comboBox_19.enabled = false;
										comboBox_19.hideButton = true;
										(function(comboBox_19){
											comboBox_19.setItemSet(app.lookup("dsSchYearRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_19);
										comboBox_19.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_20 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_20.enabled = false;
										comboBox_20.hideButton = true;
										(function(comboBox_20){
											comboBox_20.setItemSet(app.lookup("dsSmtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_20);
										comboBox_20.bind("value").toDataColumn("SMT_RCD");
										return comboBox_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.columnName = "SA_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.columnName = "SP_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.columnName = "CU_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 43},
								"configurator": function(cell){
									cell.columnName = "SB_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 44},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_SHORT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 45},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 46},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 47},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 48},
								"configurator": function(cell){
									cell.columnName = "USE_LAN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 49},
								"configurator": function(cell){
									cell.columnName = "SA_POST_DIV_RCD";
									cell.control = (function(){
										var comboBox_21 = new cpr.controls.ComboBox("gdCbbSaPostDivRcd");
										comboBox_21.enabled = false;
										comboBox_21.hideButton = true;
										(function(comboBox_21){
											comboBox_21.setItemSet(app.lookup("dsSaPostDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_21);
										comboBox_21.bind("value").toDataColumn("SA_POST_DIV_RCD");
										return comboBox_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 50},
								"configurator": function(cell){
									cell.columnName = "SP_CD";
									cell.control = (function(){
										var comboBox_22 = new cpr.controls.ComboBox("gdCbbSpCd");
										comboBox_22.enabled = false;
										comboBox_22.hideButton = true;
										(function(comboBox_22){
											comboBox_22.setItemSet(app.lookup("dsSpList"), {
												"label": "OBJ_CD_NM",
												"value": "OBJ_CD"
											});
										})(comboBox_22);
										comboBox_22.bind("value").toDataColumn("SP_CD");
										return comboBox_22;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCcsOpenSubSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCcsOpenSubSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "328px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfCcsOpenSub");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_9 = new cpr.controls.Output("optFrfSblvlRcd");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-GLS-SHYR");
					container.addChild(output_9, {
						"top": "30px",
						"left": "244px",
						"width": "110px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfSpCd");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-GLS-SP");
					container.addChild(output_10, {
						"top": "5px",
						"left": "1295px",
						"width": "110px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfCmpDivRcd");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
					container.addChild(output_11, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_23 = new cpr.controls.ComboBox("cbbFrfCmpDivRcd");
					comboBox_23.bind("fieldLabel").toExpression("#optFrfCmpDivRcd.value");
					comboBox_23.bind("value").toDataColumn("CMP_DIV_RCD");
					(function(comboBox_23){
						comboBox_23.setItemSet(app.lookup("dsCmpDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_23);
					if(typeof onCbbFrfCmpDivRcdSelectionChange == "function") {
						comboBox_23.addEventListener("selection-change", onCbbFrfCmpDivRcdSelectionChange);
					}
					container.addChild(comboBox_23, {
						"top": "30px",
						"left": "120px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_24 = new cpr.controls.ComboBox("cbbFrfSblvlRcd");
					comboBox_24.bind("fieldLabel").toExpression("#optFrfSblvlRcd.value");
					comboBox_24.bind("value").toDataColumn("SB_LVL_RCD");
					(function(comboBox_24){
						comboBox_24.setItemSet(app.lookup("dsSbLvlRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_24);
					container.addChild(comboBox_24, {
						"top": "30px",
						"left": "359px",
						"width": "115px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfSbDivRcd");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-SBDIV");
					container.addChild(output_12, {
						"top": "105px",
						"left": "245px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_25 = new cpr.controls.ComboBox("cbbFrfSbDivRcd");
					comboBox_25.bind("fieldLabel").toExpression("#optFrfSbDivRcd.value");
					comboBox_25.bind("value").toDataColumn("SB_DIV_RCD");
					(function(comboBox_25){
						comboBox_25.setItemSet(app.lookup("dsSbDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_25);
					container.addChild(comboBox_25, {
						"top": "105px",
						"left": "360px",
						"width": "115px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfDclRcdNm");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-GLS-DCL");
					container.addChild(output_13, {
						"top": "105px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfDclRcdNm");
					inputBox_3.readOnly = true;
					inputBox_3.maxLength = 100;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfDclRcdNm.value");
					inputBox_3.bind("value").toDataColumn("DCL_RCD_NM");
					container.addChild(inputBox_3, {
						"top": "105px",
						"left": "600px",
						"width": "335px",
						"height": "25px"
					});
					var button_4 = new cpr.controls.Button("btnFrfDclRcd");
					button_4.value = "";
					button_4.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfDclRcdClick == "function") {
						button_4.addEventListener("click", onBtnFrfDclRcdClick);
					}
					container.addChild(button_4, {
						"top": "105px",
						"left": "935px",
						"width": "20px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfLectTypeRcd");
					output_14.value = "";
					output_14.style.setClasses(["require"]);
					output_14.bind("value").toLanguage("UI-DB-LECT_TYPE_RCD_NM");
					container.addChild(output_14, {
						"top": "80px",
						"left": "965px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_26 = new cpr.controls.ComboBox("cbbFrfLectTypeRcd");
					comboBox_26.bind("fieldLabel").toExpression("#optFrfLectTypeRcd.value");
					comboBox_26.bind("value").toDataColumn("LECT_TYPE_RCD");
					(function(comboBox_26){
						comboBox_26.setItemSet(app.lookup("dsLectTypeRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_26);
					container.addChild(comboBox_26, {
						"top": "80px",
						"left": "1080px",
						"width": "128px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfSbTypeRcd");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-SBTYPE");
					container.addChild(output_15, {
						"top": "130px",
						"left": "1295px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_27 = new cpr.controls.ComboBox("cbbFrfSbTypeRcd");
					comboBox_27.visible = false;
					comboBox_27.bind("fieldLabel").toExpression("#optFrfSbTypeRcd.value");
					comboBox_27.bind("value").toDataColumn("SB_TYPE_RCD");
					(function(comboBox_27){
						comboBox_27.setItemSet(app.lookup("dsSbTypeRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_27);
					container.addChild(comboBox_27, {
						"top": "130px",
						"left": "1410px",
						"width": "115px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfSbCatRcd");
					output_16.value = "";
					output_16.style.setClasses(["require"]);
					output_16.bind("value").toLanguage("UI-SCR-SUBCATGR");
					container.addChild(output_16, {
						"top": "55px",
						"left": "965px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_28 = new cpr.controls.ComboBox("cbbFrfSbCatRcd");
					comboBox_28.bind("fieldLabel").toExpression("#optFrfSbCatRcd.value");
					comboBox_28.bind("value").toDataColumn("SB_CAT_RCD");
					(function(comboBox_28){
						comboBox_28.setItemSet(app.lookup("dsSbCatRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_28);
					container.addChild(comboBox_28, {
						"top": "55px",
						"left": "1080px",
						"width": "128px",
						"height": "25px"
					});
					var comboBox_29 = new cpr.controls.ComboBox("cbbFrfRecScaleRcd");
					comboBox_29.bind("fieldLabel").toExpression("#optFrfRecScaleRcd.value");
					comboBox_29.bind("value").toDataColumn("REC_SCALE_RCD");
					(function(comboBox_29){
						comboBox_29.setItemSet(app.lookup("dsRecCiiRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_29);
					container.addChild(comboBox_29, {
						"top": "80px",
						"left": "600px",
						"width": "115px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfRecScaleRcd");
					output_17.value = "";
					output_17.style.setClasses(["require"]);
					output_17.bind("value").toLanguage("UI-DB-REC_SCALE_RCD_NM");
					container.addChild(output_17, {
						"top": "80px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_30 = new cpr.controls.ComboBox("cbbFrfEvalMethodRcd");
					comboBox_30.bind("fieldLabel").toExpression("#optFrfEvalMethodRcd.value");
					comboBox_30.bind("value").toDataColumn("EVAL_METHOD_RCD");
					(function(comboBox_30){
						comboBox_30.setItemSet(app.lookup("dsEvalMethodRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_30);
					if(typeof onCbbFrfEvalMethodRcdSelectionChange == "function") {
						comboBox_30.addEventListener("selection-change", onCbbFrfEvalMethodRcdSelectionChange);
					}
					container.addChild(comboBox_30, {
						"top": "80px",
						"left": "120px",
						"width": "115px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfEvalMethodRcd");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
					container.addChild(output_18, {
						"top": "80px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfReTlsnYnRcd");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-DB-RE_TLSN_YN_RCD");
					container.addChild(output_19, {
						"top": "154px",
						"left": "1295px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_31 = new cpr.controls.ComboBox("cbbFrfReTlsnYnRcd");
					comboBox_31.visible = false;
					comboBox_31.bind("fieldLabel").toExpression("#optFrfReTlsnYnRcd.value");
					comboBox_31.bind("value").toDataColumn("RE_TLSN_YN_RCD");
					(function(comboBox_31){
						comboBox_31.setItemSet(app.lookup("dsReTlsnYnRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_31);
					container.addChild(comboBox_31, {
						"top": "154px",
						"left": "1410px",
						"width": "115px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfPnt");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-DB-PNT");
					container.addChild(output_20, {
						"top": "55px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfPnt");
					numberEditor_1.format = "999";
					numberEditor_1.bind("fieldLabel").toExpression("#optFrfPnt.value");
					numberEditor_1.bind("value").toDataColumn("PNT");
					if(typeof onIpbFrfPntValueChange == "function") {
						numberEditor_1.addEventListener("value-change", onIpbFrfPntValueChange);
					}
					container.addChild(numberEditor_1, {
						"top": "55px",
						"left": "120px",
						"width": "115px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfTheoTc");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-GLS-THEO");
					container.addChild(output_21, {
						"top": "55px",
						"left": "245px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfTheoTc");
					numberEditor_2.format = "999";
					numberEditor_2.bind("fieldLabel").toExpression("#optFrfTheoTc.value");
					numberEditor_2.bind("value").toDataColumn("THEO_TC");
					if(typeof onIpbFrfTheoTcValueChange == "function") {
						numberEditor_2.addEventListener("value-change", onIpbFrfTheoTcValueChange);
					}
					container.addChild(numberEditor_2, {
						"top": "55px",
						"left": "360px",
						"width": "115px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfEpacTc");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-GLS-PRAC");
					container.addChild(output_22, {
						"top": "55px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfEpacTc");
					numberEditor_3.format = "999";
					numberEditor_3.bind("fieldLabel").toExpression("#optFrfEpacTc.value");
					numberEditor_3.bind("value").toDataColumn("EPAC_TC");
					if(typeof onIpbFrfEpacTcValueChange == "function") {
						numberEditor_3.addEventListener("value-change", onIpbFrfEpacTcValueChange);
					}
					container.addChild(numberEditor_3, {
						"top": "55px",
						"left": "600px",
						"width": "110px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("ckbFrfTeamTeachYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "팀티칭여부";
					checkBox_1.bind("value").toDataColumn("TEAM_TEACH_YN");
					container.addChild(checkBox_1, {
						"top": "154px",
						"left": "5px",
						"width": "230px",
						"height": "25px"
					});
					var checkBox_2 = new cpr.controls.CheckBox("ckbFrfOriLectYn");
					checkBox_2.visible = false;
					checkBox_2.value = "";
					checkBox_2.trueValue = "Y";
					checkBox_2.falseValue = "";
					checkBox_2.text = "원서강의여부";
					checkBox_2.bind("value").toDataColumn("ORI_LECT_YN");
					container.addChild(checkBox_2, {
						"top": "178px",
						"left": "1295px",
						"width": "229px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfSbObjDIvRcd");
					inputBox_4.visible = false;
					inputBox_4.maxLength = 10;
					inputBox_4.bind("value").toDataColumn("SB_OBJ_DIV_RCD");
					container.addChild(inputBox_4, {
						"top": "30px",
						"left": "1295px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfDclRcd");
					inputBox_5.visible = false;
					inputBox_5.maxLength = 10;
					inputBox_5.bind("value").toDataColumn("DCL_RCD_CD");
					container.addChild(inputBox_5, {
						"top": "30px",
						"left": "1320px",
						"width": "20px",
						"height": "25px"
					});
					var comboBox_32 = new cpr.controls.ComboBox("cbbFrfSpCd");
					comboBox_32.visible = false;
					comboBox_32.bind("fieldLabel").toExpression("#optFrfSpCd.value");
					comboBox_32.bind("value").toDataColumn("SP_CD");
					(function(comboBox_32){
						comboBox_32.setItemSet(app.lookup("dsSpList"), {
							"label": "OBJ_CD_NM",
							"value": "OBJ_CD"
						});
					})(comboBox_32);
					if(typeof onCbbFrfSpCdSelectionChange == "function") {
						comboBox_32.addEventListener("selection-change", onCbbFrfSpCdSelectionChange);
					}
					container.addChild(comboBox_32, {
						"top": "5px",
						"left": "1410px",
						"width": "128px",
						"height": "25px"
					});
					var output_23 = new cpr.controls.Output("optFrfCuCd");
					output_23.value = "";
					output_23.style.setClasses(["require"]);
					output_23.bind("value").toLanguage("UI-SCR-SUBGRUP");
					container.addChild(output_23, {
						"top": "5px",
						"left": "244px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_33 = new cpr.controls.ComboBox("cbbFrfCuCd");
					comboBox_33.bind("fieldLabel").toExpression("#optFrfCuCd.value");
					comboBox_33.bind("value").toDataColumn("CU_CD");
					(function(comboBox_33){
						comboBox_33.setItemSet(app.lookup("dsCuList"), {
							"label": "OBJ_CD_NM",
							"value": "OBJ_CD"
						});
					})(comboBox_33);
					if(typeof onCbbFrfCuCdFocus == "function") {
						comboBox_33.addEventListener("focus", onCbbFrfCuCdFocus);
					}
					container.addChild(comboBox_33, {
						"top": "5px",
						"left": "359px",
						"width": "115px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("optFrfSbCd");
					output_24.value = "";
					output_24.style.setClasses(["require"]);
					output_24.bind("value").toLanguage("UI-DB-SB_CD");
					container.addChild(output_24, {
						"top": "5px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfSbCd");
					inputBox_6.enabled = false;
					inputBox_6.maxLength = 10;
					inputBox_6.bind("fieldLabel").toExpression("#optFrfSbCd.value");
					inputBox_6.bind("value").toDataColumn("SB_CD");
					container.addChild(inputBox_6, {
						"top": "5px",
						"left": "600px",
						"width": "110px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optFrfSbNm");
					output_25.value = "";
					output_25.style.setClasses(["require"]);
					output_25.bind("value").toLanguage("UI-DB-SB_CD_NM");
					container.addChild(output_25, {
						"top": "5px",
						"left": "720px",
						"width": "110px",
						"height": "25px"
					});
					var button_5 = new cpr.controls.Button("btnFrfSbCd");
					button_5.value = "";
					button_5.style.setClasses(["btn-pop-search"]);
					button_5.bind("value").toDataColumn("DIVCLS_SHORT_NM");
					if(typeof onBtnFrfSbCdClick == "function") {
						button_5.addEventListener("click", onBtnFrfSbCdClick);
					}
					container.addChild(button_5, {
						"top": "5px",
						"left": "934px",
						"width": "20px",
						"height": "25px"
					});
					var output_26 = new cpr.controls.Output("optFrfTlsnReqCapa1");
					output_26.value = "";
					output_26.style.setClasses(["require"]);
					output_26.bind("value").toLanguage("UI-DB-TLSN_REQ_CAPA1");
					container.addChild(output_26, {
						"top": "30px",
						"left": "965px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("ipbFrfTlsnReqCapa1");
					numberEditor_4.format = "999";
					numberEditor_4.bind("fieldLabel").toExpression("#optFrfTlsnReqCapa1.value");
					numberEditor_4.bind("value").toDataColumn("TLSN_REQ_CAPA1");
					if(typeof onIpbFrfTlsnReqCapa1ValueChange == "function") {
						numberEditor_4.addEventListener("value-change", onIpbFrfTlsnReqCapa1ValueChange);
					}
					container.addChild(numberEditor_4, {
						"top": "30px",
						"left": "1080px",
						"width": "128px",
						"height": "25px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfTlsnReqCapa2");
					numberEditor_5.visible = false;
					numberEditor_5.format = "999";
					numberEditor_5.bind("fieldLabel").toExpression("#optFrfTlsnReqCapa2.value");
					numberEditor_5.bind("value").toDataColumn("TLSN_REQ_CAPA2");
					container.addChild(numberEditor_5, {
						"top": "55px",
						"left": "1410px",
						"width": "115px",
						"height": "25px"
					});
					var output_27 = new cpr.controls.Output("optFrfTlsnReqCapa2");
					output_27.value = "";
					output_27.bind("value").toLanguage("UI-DB-TLSN_REQ_CAPA2");
					container.addChild(output_27, {
						"top": "55px",
						"left": "1295px",
						"width": "110px",
						"height": "25px"
					});
					var output_28 = new cpr.controls.Output("optFrfTlsnReqCapa3");
					output_28.value = "";
					output_28.bind("value").toLanguage("UI-DB-TLSN_REQ_CAPA3");
					container.addChild(output_28, {
						"top": "55px",
						"left": "1535px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_6 = new cpr.controls.NumberEditor("ipbFrfTlsnReqCapa3");
					numberEditor_6.visible = false;
					numberEditor_6.format = "999";
					numberEditor_6.bind("fieldLabel").toExpression("#optFrfTlsnReqCapa3.value");
					numberEditor_6.bind("value").toDataColumn("TLSN_REQ_CAPA3");
					container.addChild(numberEditor_6, {
						"top": "55px",
						"left": "1650px",
						"width": "110px",
						"height": "25px"
					});
					var output_29 = new cpr.controls.Output("optFrfTlsnReqCapa4");
					output_29.value = "";
					output_29.bind("value").toLanguage("UI-DB-TLSNREQCAPA4");
					container.addChild(output_29, {
						"top": "55px",
						"left": "1770px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_7 = new cpr.controls.NumberEditor("ipbFrfTlsnReqCapa4");
					numberEditor_7.visible = false;
					numberEditor_7.format = "999";
					numberEditor_7.bind("fieldLabel").toExpression("#optFrfTlsnReqCapa4.value");
					numberEditor_7.bind("value").toDataColumn("TLSN_REQ_CAPA4");
					container.addChild(numberEditor_7, {
						"top": "55px",
						"left": "1885px",
						"width": "120px",
						"height": "25px"
					});
					var output_30 = new cpr.controls.Output("optFrfLectTimeCnt");
					output_30.value = "";
					output_30.bind("value").toLanguage("UI-DB-LECT_TIME_CNT");
					container.addChild(output_30, {
						"top": "55px",
						"left": "720px",
						"width": "110px",
						"height": "25px"
					});
					var numberEditor_8 = new cpr.controls.NumberEditor("ipbFrfLectTimeCnt");
					numberEditor_8.format = "999.9";
					numberEditor_8.bind("fieldLabel").toExpression("#optFrfLectTimeCnt.value");
					numberEditor_8.bind("value").toDataColumn("LECT_TIME_CNT");
					if(typeof onIpbFrfLectTimeCntValueChange == "function") {
						numberEditor_8.addEventListener("value-change", onIpbFrfLectTimeCntValueChange);
					}
					container.addChild(numberEditor_8, {
						"top": "55px",
						"left": "835px",
						"width": "120px",
						"height": "25px"
					});
					var checkBox_3 = new cpr.controls.CheckBox("ckbFrfLectEvalXcpYn");
					checkBox_3.value = "";
					checkBox_3.trueValue = "Y";
					checkBox_3.falseValue = "";
					checkBox_3.text = "강의평가제외";
					checkBox_3.bind("value").toDataColumn("LECT_EVAL_XCP_YN");
					container.addChild(checkBox_3, {
						"top": "130px",
						"left": "5px",
						"width": "230px",
						"height": "25px"
					});
					var checkBox_4 = new cpr.controls.CheckBox("ckbFrfLectEvalSumXcpYn");
					checkBox_4.value = "";
					checkBox_4.trueValue = "Y";
					checkBox_4.falseValue = "";
					checkBox_4.text = "강의평가집계제외";
					checkBox_4.bind("value").toDataColumn("LECT_EVAL_SUM_XCP_YN");
					container.addChild(checkBox_4, {
						"top": "130px",
						"left": "245px",
						"width": "240px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfSbNm");
					inputBox_7.maxLength = 100;
					inputBox_7.bind("fieldLabel").toExpression("#optFrfSbNm.value");
					inputBox_7.bind("value").toDataColumn("SB_CD_NM");
					if(typeof onIpbFrfSbNmValueChange == "function") {
						inputBox_7.addEventListener("value-change", onIpbFrfSbNmValueChange);
					}
					container.addChild(inputBox_7, {
						"top": "5px",
						"left": "835px",
						"width": "100px",
						"height": "25px"
					});
					var output_31 = new cpr.controls.Output("optFrfSaCdNm");
					output_31.value = "";
					output_31.style.setClasses(["require"]);
					output_31.bind("value").toLanguage("UI-DB-SA_CD_NM");
					container.addChild(output_31, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfSaCdNm");
					inputBox_8.enabled = false;
					inputBox_8.maxLength = 100;
					inputBox_8.bind("fieldLabel").toExpression("#optFrfSaCdNm.value");
					inputBox_8.bind("value").toDataColumn("SA_CD_NM");
					container.addChild(inputBox_8, {
						"top": "5px",
						"left": "120px",
						"width": "115px",
						"height": "25px"
					});
					var output_32 = new cpr.controls.Output("optFrfDivclsCd");
					output_32.value = "";
					output_32.style.setClasses(["require"]);
					output_32.bind("value").toLanguage("UI-DB-DIVCLS_CD");
					container.addChild(output_32, {
						"top": "30px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfDivclsCd");
					inputBox_9.maxLength = 10;
					inputBox_9.imeMode = "inactive";
					inputBox_9.bind("fieldLabel").toExpression("#optFrfDivclsCd.value");
					inputBox_9.bind("value").toDataColumn("DIVCLS_CD");
					container.addChild(inputBox_9, {
						"top": "30px",
						"left": "600px",
						"width": "110px",
						"height": "25px"
					});
					var output_33 = new cpr.controls.Output("optFrfDivclsNm");
					output_33.value = "";
					output_33.style.setClasses(["require"]);
					output_33.bind("value").toLanguage("NLS-DLG-LBL-L043");
					container.addChild(output_33, {
						"top": "30px",
						"left": "720px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfDivclsNm");
					inputBox_10.maxLength = 200;
					inputBox_10.imeMode = "inactive";
					inputBox_10.bind("fieldLabel").toExpression("#optFrfDivclsNm.value");
					inputBox_10.bind("value").toDataColumn("DIVCLS_NM");
					container.addChild(inputBox_10, {
						"top": "30px",
						"left": "835px",
						"width": "120px",
						"height": "25px"
					});
					var output_34 = new cpr.controls.Output("optFrfDayNightDivRcd");
					output_34.value = "";
					output_34.style.setClasses(["require"]);
					output_34.bind("value").toLanguage("UI-DB-DAY_NIGHT_DIV_RCD_NM");
					container.addChild(output_34, {
						"top": "80px",
						"left": "720px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_34 = new cpr.controls.ComboBox("cbbDayNightDivRcd");
					comboBox_34.bind("fieldLabel").toExpression("#optFrfDayNightDivRcd.value");
					comboBox_34.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
					(function(comboBox_34){
						comboBox_34.setItemSet(app.lookup("dsDayNightDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_34);
					container.addChild(comboBox_34, {
						"top": "80px",
						"left": "835px",
						"width": "120px",
						"height": "25px"
					});
					var output_35 = new cpr.controls.Output("optFrfLectEvalTypeRcd");
					output_35.value = "";
					output_35.bind("value").toLanguage("UI-DB-EVALTYPE");
					container.addChild(output_35, {
						"top": "105px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_35 = new cpr.controls.ComboBox("cbbLectEvalTypeRcd");
					comboBox_35.bind("fieldLabel").toExpression("#optFrfLectEvalTypeRcd.value");
					comboBox_35.bind("value").toDataColumn("LECT_EVAL_TYPE_RCD");
					(function(comboBox_35){
						comboBox_35.setItemSet(app.lookup("dsLectEvalTypeRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_35);
					container.addChild(comboBox_35, {
						"top": "105px",
						"left": "120px",
						"width": "115px",
						"height": "25px"
					});
					var output_36 = new cpr.controls.Output("optFrfRelEstTypeRcd");
					output_36.value = "";
					output_36.bind("value").toLanguage("UI-SCR-RELEVALTYP");
					container.addChild(output_36, {
						"top": "80px",
						"left": "245px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_36 = new cpr.controls.ComboBox("cbbFrfRelEstTypeRcd");
					comboBox_36.bind("fieldLabel").toExpression("#optFrfRelEstTypeRcd.value");
					comboBox_36.bind("value").toDataColumn("REL_EST_TYPE_RCD");
					(function(comboBox_36){
						comboBox_36.setItemSet(app.lookup("dsRelEstTypeCdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_36);
					container.addChild(comboBox_36, {
						"top": "80px",
						"left": "360px",
						"width": "115px",
						"height": "25px"
					});
					var output_37 = new cpr.controls.Output("optFrfLectRoomNm");
					output_37.value = "";
					output_37.bind("value").toLanguage("UI-DB-CLASSROOM_NM");
					container.addChild(output_37, {
						"top": "130px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfLectRoomNm");
					inputBox_11.enabled = false;
					inputBox_11.maxLength = 100;
					inputBox_11.bind("fieldLabel").toExpression("#optFrfLectRoomNm.value");
					inputBox_11.bind("value").toDataColumn("LECT_ROOM_NM");
					container.addChild(inputBox_11, {
						"top": "130px",
						"left": "600px",
						"width": "355px",
						"height": "25px"
					});
					var checkBox_5 = new cpr.controls.CheckBox("ckbFrfExpYn");
					checkBox_5.enabled = false;
					checkBox_5.value = "";
					checkBox_5.trueValue = "Y";
					checkBox_5.falseValue = "";
					checkBox_5.text = "폐강여부";
					checkBox_5.bind("value").toDataColumn("EXP_YN");
					container.addChild(checkBox_5, {
						"top": "154px",
						"left": "245px",
						"width": "230px",
						"height": "25px"
					});
					var output_38 = new cpr.controls.Output("optFrfProfNm");
					output_38.value = "";
					output_38.bind("value").toLanguage("UI-DB-PROF_NM");
					container.addChild(output_38, {
						"top": "130px",
						"left": "965px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("ipbFrfProfNm");
					inputBox_12.enabled = false;
					inputBox_12.maxLength = 100;
					inputBox_12.style.css({
						"text-align" : "center"
					});
					inputBox_12.bind("fieldLabel").toExpression("#optFrfProfNm.value");
					inputBox_12.bind("value").toDataColumn("PROF_NM");
					container.addChild(inputBox_12, {
						"top": "130px",
						"left": "1080px",
						"width": "128px",
						"height": "25px"
					});
					var output_39 = new cpr.controls.Output("optFrfExpRsn");
					output_39.value = "";
					output_39.bind("value").toLanguage("UI-DB-WEEK_DIVCLS_CNT");
					container.addChild(output_39, {
						"top": "154px",
						"left": "485px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("ipbFrfExpRsn");
					inputBox_13.readOnly = true;
					inputBox_13.maxLength = 1000;
					inputBox_13.bind("fieldLabel").toExpression("#optFrfExpRsn.value");
					inputBox_13.bind("value").toDataColumn("EXP_RSN");
					container.addChild(inputBox_13, {
						"top": "154px",
						"left": "600px",
						"width": "608px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("ipbFrfCuObjDivRcd");
					inputBox_14.visible = false;
					inputBox_14.maxLength = 10;
					inputBox_14.bind("value").toDataColumn("CU_OBJ_DIV_RCD");
					container.addChild(inputBox_14, {
						"top": "30px",
						"left": "1345px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfSpObjDivRcd");
					inputBox_15.visible = false;
					inputBox_15.maxLength = 10;
					inputBox_15.bind("value").toDataColumn("SP_OBJ_DIV_RCD");
					container.addChild(inputBox_15, {
						"top": "30px",
						"left": "1370px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbFrfRefKey");
					inputBox_16.visible = false;
					inputBox_16.maxLength = 10;
					inputBox_16.bind("value").toDataColumn("REF_KEY");
					container.addChild(inputBox_16, {
						"top": "30px",
						"left": "1395px",
						"width": "20px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "388px",
					"left": "5px",
					"width": "1213px",
					"height": "180px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-OPNESUBDETAIL");
				container.addChild(userDefinedControl_3, {
					"top": "364px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnNew");
				button_6.value = "";
				button_6.style.setClasses(["btn-new"]);
				button_6.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_6.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_6, {
					"top": "364px",
					"left": "963px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnDel");
				button_7.value = "";
				button_7.style.setClasses(["btn-delete"]);
				button_7.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_7.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_7, {
					"top": "364px",
					"left": "1028px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnRestore");
				button_8.value = "";
				button_8.style.setClasses(["btn-restore"]);
				button_8.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_8.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_8, {
					"top": "364px",
					"left": "1093px",
					"width": "60px",
					"height": "25px"
				});
				var button_9 = new cpr.controls.Button("btnSave");
				button_9.value = "";
				button_9.style.setClasses(["btn-save"]);
				button_9.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_9.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_9, {
					"top": "364px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var button_10 = new cpr.controls.Button("btnCopy");
				button_10.value = "";
				button_10.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnCopyClick == "function") {
					button_10.addEventListener("click", onBtnCopyClick);
				}
				container.addChild(button_10, {
					"top": "364px",
					"left": "898px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "575px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "115px",
				"width": "120px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCcsPCurriPopup");
			cpr.core.App.load("app/ccs/impStdCcsPCurriPopup", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "680px",
				"left": "245px",
				"width": "120px",
				"height": "25px"
			});
			
			var embeddedApp_4 = new cpr.controls.EmbeddedApp("emaDclRcdExtend");
			cpr.core.App.load("app/ccs/impDclRcdExtend", function(app) {
				if(app){
					embeddedApp_4.app = app;
				}
			});
			container.addChild(embeddedApp_4, {
				"top": "680px",
				"left": "375px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "개설과목관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
