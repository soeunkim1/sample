/*
 * App URI: app/ccs/stdCcsCRestAppManager
 * Source Location: app/ccs/stdCcsCRestAppManager.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCRestAppManager", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCRestAppManager.xtm"/>
			
			/**
			 * 휴보강조회
			 * @class stdCcsCRestAppManager
			 * @author 박갑수 at 2016. 3. 7
			 */
			var stdCcsCRestAppManager = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA", "CC009OG"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"",
					iKeyEndDate		:	"/root/keyDateMap/BEF_DT",
					oObjDivRcd		:	"/root/reqKey/strSaObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsSaCdNm = util.Control.getValue(app, "ipbSaNm");
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsSaCdNm)){
							util.Header.clickSearch(app);
						}
					}
				}];
				
				// 교직원 검색
				 moPObject.moIdsForStdCmnPPrsnSearch = [
				{
					 controlId					: "btnProfObjNo",
					 istrStaffGrpAuth			: "",					
					 istrWkdtyAuth			: "true",				
					 iKeyDate					: "",	
					 iStaffNo					: "ipbProfNm",			
					 iStaffGrpRcd				: "",		
					 iStaffGrpRcdLock		: "", 			
					 iStaffSubGrpRcd		: "",	
					 iStaffSubGrpRcdLock	: "",				
					 iStatusRcd				: "",				
					 iRepNm					: "",				
					 iObjDivRcd				: "",
					 iObjCd						: "",				
					 iObjNm					: "",	
					 istrObjCdInList			: "",
					 iWkgrdRcd				: "",	
					  
					 oObjNo					: "/root/reqKey/strProfObjNo",
					 oStaffNo					: "",					
					 oRepNm					: "ipbProfNm",					
					 oBirthday					: "",					
					 oStatNm					: "",				
					 oStatRcd					: "",					
					 oOgNm					: "",				
					 oOgCd						: "",				
					 oPosNm					: "",				
					 oPosCd					: "",				
					 oWkgrdNm				: "",			
					 oWkgrdRcd				: "",				
					 oStaffGrpRcd				: "",					
					 oStaffSubGrpRcd		: "",				
					 oHoRcd					: "",					
					 oSsn						: "",					
					 oWkdtyRcd				: "",					
					 oWkdtyNm				: "",				
					 func                         : function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsSaCdNm = util.Control.getValue(app, "ipbSaNm");
						var vsProfNm = util.Control.getValue(app, "ipbProfNm");
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsSaCdNm) && !ValueUtil.isNull(vsProfNm)){
							util.Header.clickSearch(app);
						}
					 }
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onModelConstructDone_StdCcsCRestAppManager = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsRestApp"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 권한에따른 컨트롤 활성화 처리
					doVisibleCtlByAuth();
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbSkplcDt"]);
							
							// 권한에 따른 소속부서 default값 세팅 
							doSetCtlByAuth();
							
							// 개인권한일경우 바로조회
							if(moPageInfo.authRngRcd == "CC00104"){
								util.Header.clickSearch(app);
							}
						}
					}, true);
				};
				
				/**
				 * 권한에 따른 교수명 활성/비활성 처리
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 2. 16
				 */	
				function doVisibleCtlByAuth() {
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Control.setVisible(app, false, ["btnProfObjNo", "btnSaCd", "ipbSaNm", "lblSaNm"]);
						util.Control.setEnable(app, false, ["ipbProfNm", "cbbSchYearRcd", "cbbSmtRcd"]);
						
						util.Control.setValue(app, "ipbProfNm", moUserInfo.userNm);
						util.DataMap.setValue(app, "dmReqKey", "strProfObjNo", moUserInfo.id);
									
						util.Control.setStyleAttr(app, "lblSkplcDt", "left", "400");
						util.Control.setStyleAttr(app, "cbbSkplcDt", "left", "485");
						util.Control.setStyleAttr(app, "lblProfNm", "left", "595");
						util.Control.setStyleAttr(app, "ipbProfNm", "left", "690");
						
						util.Control.setStyleAttr(app, "lblSaNm", "left", "815");
						util.Control.setStyleAttr(app, "ipbSaNm", "left", "910");
					}
				};
				
				/**
				 * 권한에 따른 소속부서 default값 세팅 
				 * @param 
				 * @type void
				 * @author 박갑수 at 2016. 8. 9
				 */	
				function doSetCtlByAuth() {
					
					// 소속이하+지정부서이하권한[CC00101] 아닐경우 자신의 소속 Default 세팅 
					if (moPageInfo.authRngRcd == "CC00101") {
						
						util.DataMap.setValue(app, "dmReqKey", "strSaObjDivRcd", moUserInfo.asgnDeptDivRcd);
						util.DataMap.setValue(app, "dmReqKey", "strSaCd", moUserInfo.asgnDeptCd);
						util.Control.setValue(app, "ipbSaNm", moUserInfo.asgnDeptNm);
					}
				};
				
				/**
				 * @desc [btnSaCd]부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaNm]부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				 /**
				 * @desc [btnProfObjNo]교수명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onClick_BtnProfObjNo = function(sender) {
					// 교직원검색팝업 호출
					doOnClickStdCmnPPrsnSearch(sender);
				};
				
				/**
				 * @desc [ipbProfNm]교수명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onValueChanged_IpbProfNm = function(sender) {
					// 값변경시 교직원검색팝업 호출
					doOnChangeStdCmnPPrsnSearch(sender);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd"])){
							return false;
						}
					}else {
						// 조회조건 필수 체크
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaNm"])){
							return false;
						}
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 휴보강목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 7
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsRestApp");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnCancelSch]결보강계획서 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 7
				 */
				moPage.onClick_BtnCancelSch = function() {
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsRestApp"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					if(util.Grid.isModified(app, "grdCcsRestApp")){
						// '변경된 사항이 있습니다.\n변경 저장 혹은 취소 후  작업을 다시 수행 하십시오.'
						ComMsg.warn("M014");
						return false;
					}
					
					// 로우 선택 체크
					var vnSelectRowCnt = ExtInstance.getNodeListLength("/root/resList/rptCcsRestApp/row[child::DEL_CKB='Y']");
					var vaIdx = new Array;
					
					// 선택된로우가 있을경우 선택된로우 체크
					if(vnSelectRowCnt > 0){
						var vsIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsRestApp");
						vaIdx = vsIdx.split(",");
						
					// 선택된로우가 없을경우 포커싱된 로우 체크
					}else {
						vaIdx[0] = util.Grid.getIndex(app, "grdCcsRestApp");
					}
					
					// 휴보강키 In조건용
					var vsRestAppKey = "";
					
					for(var i=0; i<vaIdx.length; i++){
						var vnIdx = vaIdx[i];
						
						// 휴보강구분 [CL105]
						var vsSkplcDivRcd = util.Grid.getCellValue(app, "grdCcsRestApp", "SKPLC_DIV_RCD", vnIdx);
						
						// 휴보강구분이 공휴일[CL10503] 일경우 경고메시지
						if(ValueUtil.fixNull(vsSkplcDivRcd) == "CL10503"){
							// 공휴일은 출력할 수 없습니다.
							util.Msg.alert("NLS-CCS-EXT015");
							return false;
						}else {
							
							// 휴강 [CL10501] 일경우
							if(ValueUtil.fixNull(vsSkplcDivRcd) == "CL10501"){
								
								var vsRefKey = util.Grid.getCellValue(app, "grdCcsRestApp", "REF_KEY", vnIdx);
								var vsProfObjNo = util.Grid.getCellValue(app, "grdCcsRestApp", "PROF_OBJ_NO", vnIdx);
								var vsSkplcDt = util.Grid.getCellValue(app, "grdCcsRestApp", "SKPLC_DT", vnIdx);
								var vsStLttm = util.Grid.getCellValue(app, "grdCcsRestApp", "ST_LTTM", vnIdx);
								var vsEndLttm = util.Grid.getCellValue(app, "grdCcsRestApp", "END_LTTM", vnIdx);
												
								if(i == 0){
									vsRestAppKey = vsRestAppKey + "('" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + vsStLttm + vsEndLttm + "'";
								}else {
									vsRestAppKey = vsRestAppKey + ",'" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + vsStLttm + vsEndLttm + "'";
								}
								
								if(i == (vaIdx.length-1)){
									vsRestAppKey = vsRestAppKey + ")";
								}
								
							// 보강 [CL10502] 일경우
							}else {
								
								var vsRefKey = util.Grid.getCellValue(app, "grdCcsRestApp", "REF_KEY", vnIdx);
								var vsProfObjNo = util.Grid.getCellValue(app, "grdCcsRestApp", "PROF_OBJ_NO", vnIdx);
								var vsSkplcDt = util.Grid.getCellValue(app, "grdCcsRestApp", "SPLC_FRC_DT", vnIdx);
								var vsStLttm = util.Grid.getCellValue(app, "grdCcsRestApp", "SPLC_FRC_ST_LTTM", vnIdx);
								var vsEndLttm = util.Grid.getCellValue(app, "grdCcsRestApp", "SPLC_FRC_END_LTTM", vnIdx);
							
								if(i == 0){
									vsRestAppKey = vsRestAppKey + "('" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + vsStLttm + vsEndLttm + "'";
								}else {
									vsRestAppKey = vsRestAppKey + ",'" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + vsStLttm + vsEndLttm + "'";
								}
								
								if(i == (vaIdx.length-1)){
									vsRestAppKey = vsRestAppKey + ")";
								}
							} 
							
						}
					}
									
					var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					
					// 결 · 보강계 출력
					var voParam = {
							p_strLanDivRcd 			: msDefaultLocale	 			 // 언어키
						  ,	p_strKeyDate 			: util.DataMap.getValue(app, "dmKeyDateMap", "END_DT")	  	// 기준일
						  ,	p_strSchYearRcd		: vsSchYearRcd  				 // 학년도
						  ,	p_strSmtRcd 				: vsSmtRcd  						 // 학기
						  ,	p_strdiv 					: "Y"							 		 // 출력화면 외 화면에서 사용 (키조합 필요)
						  ,	p_strRestAppKey 		: vsRestAppKey					 // 휴보강키 In조건용
						  ,	p_strCheckAuthId 		: moUserInfo.id					 // 사용자ID
					};
							
					var voOzFormParam = {
							  TITLE : "결 · 보강계" 			//리포트타이틀
							, SUB_TITLE : "" 		//리포트서브타이틀		
							, FORM_TYPE : "flash"
					};	
							
					ReportUtil.fOzPopupOpen("결 · 보 강 계", "extCcsSRestSteadSchedule", voOzFormParam, voParam);
				};
				
				/**
				 * @desc [btnRsltSch]보강실시결과서 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 7. 7
				 */
				moPage.onClick_BtnRsltSch = function() {
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsRestApp"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					// 2. 변경사항저장여부 체크
					if(util.Grid.isModified(app, "grdCcsRestApp")){
						// '변경된 사항이 있습니다.\n변경 저장 혹은 취소 후  작업을 다시 수행 하십시오.'
						ComMsg.warn("M014");
						return false;
					}
					
					// 2. 로우 선택 체크
					var vnSelectRowCnt = ExtInstance.getNodeListLength("/root/resList/rptCcsRestApp/row[child::DEL_CKB='Y']");
					var vaIdx = new Array;
					
					// 선택된로우가 있을경우 선택된로우 체크
					if(vnSelectRowCnt > 0){
						var vsIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsRestApp");
						vaIdx = vsIdx.split(",");
						
					// 선택된로우가 없을경우 포커싱된 로우 체크
					}else {
						vaIdx[0] = util.Grid.getIndex(app, "grdCcsRestApp");
					}
					
					// 휴보강키 In조건용
					var vsRestAppKey = "";
					
					for(var i=0; i<vaIdx.length; i++){
						var vnIdx = vaIdx[i];
						
						// 휴보강구분 [CL105]
						var vsSkplcDivRcd = util.Grid.getCellValue(app, "grdCcsRestApp", "SKPLC_DIV_RCD", vnIdx);
						
						// 휴보강구분이 공휴일[CL10503] 일경우 경고메시지
						if(ValueUtil.fixNull(vsSkplcDivRcd) == "CL10503"){
							// 공휴일은 출력할 수 없습니다.
							util.Msg.alert("NLS-CCS-EXT015");
							return false;
						}else {
							
							// 휴강 [CL10501] 일경우
							if(ValueUtil.fixNull(vsSkplcDivRcd) == "CL10501"){
								
								var vsRefKey = util.Grid.getCellValue(app, "grdCcsRestApp", "REF_KEY", vnIdx);
								var vsProfObjNo = util.Grid.getCellValue(app, "grdCcsRestApp", "PROF_OBJ_NO", vnIdx);
								var vsSkplcDt = util.Grid.getCellValue(app, "grdCcsRestApp", "SKPLC_DT", vnIdx);
												
								if(i == 0){
									vsRestAppKey = vsRestAppKey + "('" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + "'";
								}else {
									vsRestAppKey = vsRestAppKey + ",'" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + "'";
								}
								
								if(i == (vaIdx.length-1)){
									vsRestAppKey = vsRestAppKey + ")";
								}
								
							// 보강 [CL10502] 일경우
							}else {
								
								var vsRefKey = util.Grid.getCellValue(app, "grdCcsRestApp", "REF_KEY", vnIdx);
								var vsProfObjNo = util.Grid.getCellValue(app, "grdCcsRestApp", "PROF_OBJ_NO", vnIdx);
								var vsSkplcDt = util.Grid.getCellValue(app, "grdCcsRestApp", "SPLC_FRC_DT", vnIdx);
								
								if(i == 0){
									vsRestAppKey = vsRestAppKey + "('" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + "'";
								}else {
									vsRestAppKey = vsRestAppKey + ",'" + vsRefKey + vsProfObjNo + vsSkplcDt.substring(0, 8) + "'";
								}
								
								if(i == (vaIdx.length-1)){
									vsRestAppKey = vsRestAppKey + ")";
								}
							} 
							
						}
					}
									
					var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					
					// 보강실시결과보고서 출력
					var voParam = {
							p_strLanDivRcd 			: msDefaultLocale	 			 // 언어키
						  ,	p_strKeyDate 			: util.DataMap.getValue(app, "dmKeyDateMap", "END_DT")	  	// 기준일
						  ,	p_strSchYearRcd		: vsSchYearRcd  				 // 학년도
						  ,	p_strSmtRcd 				: vsSmtRcd  						 // 학기
						  ,	p_strdiv 					: "Y"							 		 // 출력화면 외 화면에서 사용 (키조합 필요)
						  ,	p_strRestAppKey 		: vsRestAppKey					 // 휴보강키 In조건용
						  ,	p_strCheckAuthId 		: moUserInfo.id					 // 사용자ID
					};
							
					var voOzFormParam = {
							  TITLE : "보강실시결과보고서" //리포트타이틀
							, SUB_TITLE : "" 		//리포트서브타이틀		
							, FORM_TYPE : "flash"
					};	
							
					ReportUtil.fOzPopupOpen("보강실시결과보고서", "extCcsSRealRsltRpt", voOzFormParam, voParam);
				};
				
				/**
				 * @desc [rhCkbSelect]패널 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 16
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSkplcDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCcsRestApp");
			dataSet_4.parseData({
				"columns": [
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "SB_CD"},
					{"name": "SB_NM"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "PROF_NO"},
					{"name": "PROF_NM"},
					{"name": "SKPLC_DT"},
					{"name": "ST_LTTM"},
					{"name": "END_LTTM"},
					{"name": "SKPLC_DIV_RCD"},
					{"name": "SKPLC_RSN"},
					{"name": "REMARK"},
					{"name": "SPLC_FRC_DT"},
					{"name": "SPLC_FRC_ST_LTTM"},
					{"name": "SPLC_FRC_END_LTTM"},
					{"name": "ST_LTTM_NM"},
					{"name": "END_LTTM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSkplcDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strProfNm",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsRestAppManager/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/ccs/StdCcsRestAppManager/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optProfNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-PROF_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "815px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbProfNm");
				inputBox_1.bind("fieldLabel").toExpression("#optProfNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfNm");
				if(typeof onIpbProfNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbProfNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "910px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnProfObjNo");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnProfObjNoClick == "function") {
					button_2.addEventListener("click", onBtnProfObjNoClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1010px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSkplcDt");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-SKPLCDIVR");
				container.addChild(output_4, {
					"top": "5px",
					"left": "620px",
					"width": "80px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSaNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "5px",
					"left": "395px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "490px",
					"width": "100px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSaCd");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_3.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "590px",
					"width": "20px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSkplcDt");
				comboBox_3.enabled = false;
				comboBox_3.bind("fieldLabel").toExpression("#optSkplcDt.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSkplcDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsSkplcDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "705px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SKPLCLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "205px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsRestApp");
				grid_1.init({
					"dataSet": app.lookup("dsCcsRestApp"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "110px"},
						{"width": "80px"},
						{"width": "160px"},
						{"width": "67px"},
						{"width": "70px"},
						{"width": "74px"},
						{"width": "85px"},
						{"width": "60px"},
						{"width": "60px"},
						{"width": "80px"},
						{"width": "210px"},
						{"width": "91px"},
						{
							"width": "70px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SKPLC_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SKPLCDIVR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SKPLC_RSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROF_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SKPLC_DT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptSkplcDt");
										output_6.dataType = "date";
										output_6.format = "YYYY-MM-DD";
										output_6.style.css({
											"text-align" : "center"
										});
										output_6.bind("value").toDataColumn("SKPLC_DT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ST_LTTM_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "END_LTTM_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SKPLC_DIV_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbSkplcDivRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsSkplcDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("SKPLC_DIV_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SKPLC_RSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "SPLC_FRC_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "SPLC_FRC_ST_LTTM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SPLC_FRC_END_LTTM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "563px"
				});
				var button_4 = new cpr.controls.Button("btnCancelSch");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-GETPNTSCH");
				if(typeof onBtnCancelSchClick == "function") {
					button_4.addEventListener("click", onBtnCancelSchClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "948px",
					"width": "90px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRsltSch");
				button_5.value = "";
				button_5.bind("value").toLanguage("UI-SCR-GETPNTSCH");
				if(typeof onBtnRsltSchClick == "function") {
					button_5.addEventListener("click", onBtnRsltSchClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1043px",
					"width": "105px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPPrsnSearch");
			cpr.core.App.load("app/cmn/impStdCmnPPrsnSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "휴보강조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
