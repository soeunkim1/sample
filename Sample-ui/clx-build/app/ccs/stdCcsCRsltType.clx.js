/*
 * App URI: app/ccs/stdCcsCRsltType
 * Source Location: app/ccs/stdCcsCRsltType.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCRsltType", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsCRsltType.xtm"/>
			
			
			var stdCcsCRsltType = function() {
					
				
				var moPage = new Page();
				var moPObject = new PObject();
				
						
						
				
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					
					doHeaderOnLoad();
					
				};
				
				
				
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author 최영경 2016-01-18
				 */
				function doOnLoad() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptMain");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbTypeRcd"]);
							util.SelectCtl.selectItem(app, "cbbTypeRcd", 0);
							
						}
					}, true);
					
				};
				
				
				
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author 최영경 2016-01-18
				 */
				moPage.onClick_BtnSearch = function() {
					
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}		
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});		
				
				};
				
				
				
				
				/**
				 * @desc  강의평가유형목록 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdMain");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					}); 
				}
				
				
				/**
				 * @desc 강의평가유형목록 리피트 panel click event
				 *			 강의평가유형목록 리피트 row all check
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				
				
				
				/**
				 * @desc 신규 click event
				 *            강의평가유형목록 리피트 row 추가
				 * @return void
				 * @author 최영경 2016-01-18
				 */		
				moPage.onClick_BtnNew = function() {
					
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var voNewRow = util.Grid.insertRow(app, "grdMain", "rdIpbSerialNo");		
					
					var vsAnsTypeRcd 	= util.DataMap.getValue(app, "dmReqList", "strAnsTypeRcd");
					var vsLanDivRcdList 	=	 util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd");
					
					util.Grid.setCellValue(app, "grdMain"	, "ANS_TYPE_RCD"	, vsAnsTypeRcd		, voNewRow, false, true);
					util.Grid.setCellValue(app, "grdMain"	, "LAN_DIV_RCD"		, vsLanDivRcdList		, voNewRow, false, false);
					
				};
				
				
				
				/**
				 * @desc 삭제 click event
				 *            강의평가유형목록 리피트 index row 삭제 status 변경
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnDel = function() {
					util.Grid.deleteRow(app, "grdMain");
				};
				
				/**
				 * @desc 작업취소 click event
				 *            강의평가유형목록 리피트 index row restore
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdMain");
				};
				
				/**
				 * @desc 작업저장 click event
				 *            강의평가유형목록  리피트 변경내역 저장
				 * @return void
				 * @author 최영경 2016-01-18
				 */	
				moPage.onClick_BtnSave = function() {
					doSave();
					
				};
				
				
				/**
				 * @desc  강의평가유형목록  리피트 저장 submission 실행
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				function doSave() {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdMain"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdMain")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						
						if(pbSuccess){
							page.doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				}
				
				
				
				
				/**
				 * @desc  답변점수 음수입력을 하지 못하도록 한다.
				 * @return void
				 * @author 최영경 2016-01-18
				 */
				moPage.onValueChanged_RdIpbAnsScr = function() {
					
					ValidUtil.checkIntegerDecimal("rdIpbAnsScr", 3, 0, true);
					
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAnsTypeRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsGrxMst");
			dataSet_2.parseData({
				"info": "CCS_LECT_RSLT_TYPE@ANS_TYPE_RCD,SERIAL_NO,LAN_DIV_RCD",
				"columns": [
					{"name": "ANS_TYPE_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "LAN_DIV_RCD"},
					{"name": "ANS_CONT"},
					{"name": "ANS_SCR"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strAnsTypeRcd",
						"dataType": "string"
					},
					{
						"name": "strRoomNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsCRsltType/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsCRsltType/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/ccs/StdCcsCRsltType/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optBuild");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-DB-BD_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "155px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbTypeRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optBuild.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strAnsTypeRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsAnsTypeRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "164px",
					"width": "271px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grd");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-LECTROOMMNGLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdMain");
				grid_1.init({
					"dataSet": app.lookup("dsGrxMst"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "75px"},
						{"width": "942px"},
						{"width": "102px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-BD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_SHORT_NM");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.style.css({
											"text-align" : "center"
										});
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbSerialNo");
										numberEditor_1.readOnly = true;
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.style.css({
											"text-align" : "center"
										});
										numberEditor_1.bind("value").toDataColumn("SERIAL_NO");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ANS_CONT";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbLectRoomNm");
										inputBox_1.maxLength = 500;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("ANS_CONT");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ANS_SCR";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbAnsScr");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999";
										numberEditor_2.bind("value").toDataColumn("ANS_SCR");
										return numberEditor_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "563px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCcsCRoom";
	cpr.core.Platform.INSTANCE.register(app);
})();
