/*
 * App URI: app/ccs/stdCcsCTimeDay
 * Source Location: app/ccs/stdCcsCTimeDay.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsCTimeDay", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCcsCTimeDay.xtm"/>
			
			/**
			 * 일일단위 시간표관리
			 * @class stdCcsCTimeDay
			 * @author 박갑수 at 2016. 2. 23
			 */
			var stdCcsCTimeDay = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 개설과목검색팝업 호출
				moIdsForStdCcsPOpenSubPopup = [
				{
					 controlId					: "btnSbCd",			
					 iDivClsYn					: "",		
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",
					 iKeyDate             		: "/root/keyDateMap/ST_DT",
					 iSchYearRcd             : "cbbSchYearRcd",
					 iSmtRcd             		: "cbbSmtRcd",
					 iSaCd        				: "",			
					 iSaNm        				: "",		
					 iSaObjDivRcd       		: ["CC009SA"],		
					 iSbCd        				: "",			
					 iSbNm        				: "ipbSbNm",		
					 iCmpDivRcd        		: "",			
					 
					 oSpCd						: "",			
					 oSpNm					: "",			
					 oSbCd						: "/root/reqKey/strSbCd",			
					 oSbNm					: "ipbSbNm",
					 oSaCd						: "/root/reqKey/strSaCd",			
					 oSaNm					: "",			
					 oCuCd						: "/root/reqKey/strCuCd",		
					 oCuNm					: "",		
					 oSchYearRcd			: "",		
					 oSmtRcd					: "",	
					 oDivclsCd					: "",	
					 oDivclsNm				: "",	
					 oCmpDivRcd				: "",		
					 oPnt							: "",		
					 oTheoTc					: "",	
					 oEpacTc					: "",	
					 oSbDivRcd				: "",		
					 oSbTypeRcd				: "",		
					 oSaPostDivRcd			: "",		
					 oProfNo					: "",	
					 oProfNm					: "",			
					 oLectRoomNm			: "",		
					 oRefKey					: "",
					 oSbLvlRcd				: "/root/reqKey/strSbLvlRcd",
					 func : function(poParam) {
						// 분반목록 조회
						doDivclsList();
					 }
				 }];
				 
				 // 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onModelConstructDone_stdCcsCTimeDay = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsTimeDay"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbDivclsNm", "cbbProfNm"]);
							
							// 학년도 학기값 되돌리기위한 값
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
							util.Control.setFocus(app, "ipbSbNm");
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
					
					// 교과목 초기화
					util.Control.setValue(app, "ipbSbNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strSbCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", "");
					// 분반초기화
					doClearDivclsList();
					// 교수명 초기화
					doClearProfList();
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
					
					// 교과목 초기화
					util.Control.setValue(app, "ipbSbNm", "");
					util.DataMap.setValue(app, "dmReqKey", "strSbCd", "");
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", "");
					// 분반초기화
					doClearDivclsList();
					// 교수명 초기화
					doClearProfList();
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [ipbSbNm]교과목명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onValueChanged_IpbSbNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCcsTimeDay"])){
						return false;
					}
					
					// 값변경시 개설과목검색팝업 호출
					doOnChangeStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc [btnSaCd]교과목명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onClick_BtnSbCd = function(sender) {
					// 개설과목검색팝업 호출
					doOnClickStdCcsPOpenSubPopup(sender);
				};
				
				/**
				 * @desc 분반목록 조회
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 23
				 */
				function doDivclsList() {
					// 교수목록 초기화
					doClearProfList();
					//strCommand: divclsList 
					util.Submit.send(app, "subDivclsList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbDivclsNm");
							util.SelectCtl.selectItem(app, "cbbDivclsNm", 0);
						}
					});
				};
				
				/**
				 * @desc 분반목록 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 23
				 */
				function doClearDivclsList() {
					ExtInstance.deleteNode("/root/resList/divclsList/row");
					util.Control.redraw(app, "cbbDivclsNm");
					util.SelectCtl.selectItem(app, "cbbDivclsNm", 0);
				};
				
				/**
				 * @desc 교수목록 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 23
				 */
				function doClearProfList() {
					ExtInstance.deleteNode("/root/resList/profList/row");
					util.Control.redraw(app, "cbbProfNm");
					util.SelectCtl.selectItem(app, "cbbProfNm", 0);
				};
				
				/**
				 * @desc 분반명 onValueChanged 이벤트
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onValueChanged_CbbDivclsNm = function() {
					var vsDivclsCd = util.Control.getValue(app, "cbbDivclsNm");
					
					util.Control.setValue(app, "cbbProfNm", "");
					
					if(ValueUtil.isNull(vsDivclsCd)){
						// 교수목록 초기화
						// moPage.doClearProfList();
						return false;
					}
					
					// 참조키
					var vsRefKey = ExtInstance.getValue("/root/resList/divclsList/row", "REF_KEY" , "child::DIVCLS_CD='"+ vsDivclsCd +"'");
					util.DataMap.setValue(app, "dmReqKey", "strRefKey", vsRefKey);
					
					//strCommand: profList 
					util.Submit.send(app, "subProfList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbProfNm");
						}
					});
				};
				
				
			  /**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSbNm", "cbbDivclsNm"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 세부일정내역 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 23
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsTimeDay");
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
			
				
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsWdayRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSkplcDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCcsTimeDay");
			dataSet_5.parseData({
				"columns": [
					{"name": "LECT_DT"},
					{"name": "WDAY_RCD"},
					{"name": "PROF_NO"},
					{"name": "ST_TIME"},
					{"name": "LTTM"},
					{"name": "END_TIME"},
					{"name": "LECT_ROOM_CD"},
					{"name": "SKPLC_DIV_RCD"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "LTTM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsDivclsList");
			dataSet_6.parseData({
				"columns": [
					{"name": "DIVCLS_CD"},
					{"name": "SB_DIVCLS_CD_NM"},
					{"name": "REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsProfList");
			dataSet_7.parseData({
				"columns": [
					{"name": "PROF_NM"},
					{"name": "PROF_OBJ_NO"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strDivclsCd",
						"dataType": "string"
					},
					{
						"name": "strProfObjNo",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsTimeDay/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subDivclsList");
			submission_3.action = "/ccs/StdCcsTimeDay/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subProfList");
			submission_4.action = "/ccs/StdCcsTimeDay/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_7, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subList");
			submission_5.action = "/ccs/StdCcsTimeDay/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addRequestData(dataMap_3);
			submission_5.addResponseData(dataSet_5, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optProfNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-PROF_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "895px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbProfNm");
				comboBox_1.bind("fieldLabel").toExpression("#optProfNm.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProfObjNo");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsProfList"), {
						"label": "PROF_NM",
						"value": "PROF_OBJ_NO"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "990px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSchYearRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSmtRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_3.enabled = false;
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "275px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSbNm");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_4, {
					"top": "5px",
					"left": "375px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSbNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "470px",
					"width": "110px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSbCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbCdClick == "function") {
					button_2.addEventListener("click", onBtnSbCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "580px",
					"width": "20px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optDivclsNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-DB-SB_NM");
				container.addChild(output_5, {
					"top": "5px",
					"left": "610px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbDivclsNm");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optDivclsNm.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivclsCd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("선택", ""));
					comboBox_4.setItemSet(app.lookup("dsDivclsList"), {
						"label": "SB_DIVCLS_CD_NM",
						"value": "DIVCLS_CD"
					});
				})(comboBox_4);
				if(typeof onCbbDivclsNmSelectionChange == "function") {
					comboBox_4.addEventListener("selection-change", onCbbDivclsNmSelectionChange);
				}
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "705px",
					"width": "180px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-DTLSCHEDESC");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "245px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsTimeDay");
				grid_1.init({
					"dataSet": app.lookup("dsCcsTimeDay"),
					"columns": [
						{"width": "40px"},
						{"width": "110px"},
						{"width": "80px"},
						{"width": "70px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "137px"},
						{"width": "260px"},
						{"width": "95px"},
						{"width": "140px"},
						{
							"width": "110px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-WDAY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_TIME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_TIME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SKPLCDIVR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_CD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "LECT_DT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptLectDt");
										output_6.dataType = "date";
										output_6.format = "YYYY-MM-DD";
										output_6.style.css({
											"text-align" : "center"
										});
										output_6.bind("value").toDataColumn("LECT_DT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "WDAY_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbWdayRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										comboBox_5.style.css({
											"text-align" : "center"
										});
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsWdayRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("WDAY_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LTTM_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ST_TIME";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptStTime");
										output_7.style.css({
											"text-align" : "center"
										});
										output_7.bind("value").toDataColumn("ST_TIME");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "END_TIME";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptEndTime");
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("END_TIME");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SKPLC_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbSkplcDivRcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsSkplcDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SKPLC_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PROF_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCcsPOpenSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPOpenSubPopup", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "120px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "일일단위 시간표관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
