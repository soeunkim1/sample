/*
 * App URI: app/ccs/stdCcsPCurriPopup
 * Source Location: app/ccs/stdCcsPCurriPopup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsPCurriPopup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsPCurriPopup.xtm"/>
			
			/**
			 * 교과과정검색팝업
			 * @class stdCcsPCurriPopup
			 * @author 박갑수 at 2016. 2. 3
			 */
			var stdCcsPCurriPopup = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				 /*
				 * 팝업 내부사용 변수
				 * @member impStdCcsPCurriPopup
				 * @author 박갑수 at 2016. 2. 3
				 */
				var moStdCcsPCurriPopup = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false,
					// 선택가능 범위를 제한
					blnSaSearchUse			: "",
					strObjDivRcd					: "",
					strKeyDate						: "",
					strSaCd							: "",
					strSaNm						: "",
					strSpCd							: "",
					strSbCd							: "",
					strSbNm						: "",
					strCmpDIvRcd				: "",
					strCuCd						: "",
					
					// 선택열 결과 리턴
					Result : {
						ST_DT 						: "",
						END_DT 					: "",
						CU_OBJ_DIV_RCD 		: "",
						CU_CD 						: "",
						SB_CD 						: "",
						SB_CD_NM 				: "",
						SB_OBJ_DIV_RCD 		: "",
						SA_CD 						: "",
						SA_CD_NM 				: "",
						SA_OBJ_DIV_RCD 		: "",
						SP_CD 						: "",
						SP_OBJ_DIV_RCD 		: "",
						DCL_RCD_CD 			: "",
						DCL_RCD_NM 			: "",
						SB_LVL_RCD 			: "",
						EST_PRD_RCD 			: "",
						EST_PRD_NM 			: "",
						EVAL_METHOD_RCD 	: "",
						LECT_TYPE_RCD 		: "",
						SB_CAT_RCD 			: "",
						SB_DIV_RCD 				: "",
						SB_TYPE_RCD 			: "",
						CMP_DIV_RCD 			: "",
						CUR_DIV_RCD 			: "",
						REC_SCALE_RCD 		: "",
						DAY_DIVCLS_CNT 		: "",
						NIGHT_DIVCLS_CNT 	: "",
						LECT_TIME_CNT 		: "",
						PNT 							: "",
						THEO_TC 					: "",
						EPAC_TC 					: "",
						TLSN_REQ_CAPA1 	: "",
						TLSN_REQ_CAPA2 	: "",
						TLSN_REQ_CAPA3 	: "",
						TLSN_REQ_CAPA4 	: "",
						RE_TLSN_YN_RCD 	: "",
						MAND_SB_YN 			: "",
						LECT_EVAL_XCP_YN 			: "",
						LECT_EVAL_SUM_XCP_YN 	: "",
						PNT_INSTCH_YN 		: "",
						REF_KEY 					: ""
					}
				};
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/reqKey/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
						if(!ValueUtil.isNull(vsSaNm)){
							// 학사부서 입력시 이수과정목록, 교과그룹목록 GET
							doSpCuList(function(pbSuccess) {
								if (pbSuccess){						
									util.Header.clickSearch(app);
								}
							});
						}else {
							// 값 초기화
							util.Control.setValue(app, "cbbSpCd", "");
							util.Control.setValue(app, "cbbCuCd", "");
							util.Control.setValue(app, "ipbSbNm", "");
							util.DataMap.setValue(app, "dmReqKey", "strSbCd", "");
						}
					}
				}];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onModelConstructDone_StdCcsPCurriPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsCurCls"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 기준일자 조회하는 내부 팝업 호출을 위한 단위시스템코드 설정
					setUnitSystem("CCS");
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCcsPCurriPopup =  ExtPopUp.getParentVal("moStdCcsPCurriPopup");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCcsPCurriPopup) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCcsPCurriPopup [key] = voStdCcsPCurriPopup [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voStdCcsPCurriPopup.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doOnLoad() {
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbCmpDivRcd", "cbbSpCd", "cbbCuCd", "cbbSbLvlRcd", "cbbEstPrdRcd"]);
							
							// 파라미터 받아서 초기 검색조건 세팅.
							var voParam = moStdCcsPCurriPopup;
							
							// 교과목명
							if (!ValueUtil.isNull(voParam.strSbNm)) {
								util.Control.setValue(app, "ipbSbCdNm", voParam.strSbNm);
							}
							
							// 교과목코드
							if (!ValueUtil.isNull(voParam.strSbCd)) {
								util.DataMap.setValue(app, "dmReqKey", "strSbCd", voParam.strSbCd);
							}
							
							// 이수구분코드
							if (!ValueUtil.isNull(voParam.strCmpDivRcd)) {
								util.Control.setValue(app, "cbbCmpDivRcd", voParam.strCmpDivRcd);
							}
							
							// 객체구분코드
							if (!ValueUtil.isNull(voParam.strObjDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", voParam.strObjDivRcd);
							}
							
							// 기준일자
							if (!ValueUtil.isNull(voParam.strKeyDate)) {
								util.Control.setValue(app, "dipKeyDate", voParam.strKeyDate);
							}
							
							// 학사부서 검색가능여부
							if (voParam.blnSaSearchUse || !ValueUtil.isNull(voParam.strSaCd)) {
								
								// 학사부서코드
								if (!ValueUtil.isNull(voParam.strSaCd)) {
									util.DataMap.setValue(app, "dmReqKey", "strSaCd", voParam.strSaCd);
									util.Control.setValue(app, "ipbSaNm", voParam.strSaNm);
									/*
										학사부서코드를 설정하고
										해당 교과그룹을 가져온다.
									*/
									doSpCuList(function(pbSuccess) {
										if (pbSuccess){													
											
										}
									});
							
															
									// 학사부서코드가 입력되었을경우만 이수과정 교과그룹 GET
									// 이수과정
									if (!ValueUtil.isNull(voParam.strSpCd)) {
										util.Control.setValue(app, "cbbSpCd", voParam.strSpCd);
									}
									
									// 교과그룹
									if (!ValueUtil.isNull(voParam.strCuCd)) {
										util.Control.setValue(app, "cbbCuCd", voParam.strCuCd);
									}
								}
							}else {
								util.Control.setEnable(app, false, ["ipbSaNm", "btnSaCd"]);
							}
							
							// 검색조건이 입력되어 있는 경우 바로 검색 실행(돋보기버튼제외)
							if(!voParam.controlId.startsWith("btn")){
								var vsSbNm = util.Control.getValue(app, "ipbSbCdNm");
								var vsSaNm = util.Control.getValue(app, "ipbSaNm");
								if (!ValueUtil.isNull(vsSbNm) || !ValueUtil.isNull(vsSaNm)) {
									util.Header.clickSearch(app);
								}
							}
						}
					});
				};
				
				/**
				 * @desc [ipbSbCdNm]교과목명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onKeyDown_IpbSbCdNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSaCd]학사부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaNm]학사부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수체크 - 학사부서, 교과목명 중 한개는 입력되었는지 확인.
					if(!moPage.checkNotNullCtl()){
						return false;
					}
					
					// 교과과정목록 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 학사부서, 교과목명 중 한개는 입력되었는지 확인.
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.checkNotNullCtl = function() {
					var vbValid = true;
					
					// 학사부서명
					var vsSaNm = util.Control.getValue(app, "ipbSaNm");
					// 교과목명
					var vsSbCdNm = util.Control.getValue(app, "ipbSbCdNm");
					
					if(ValueUtil.isNull(vsSaNm) && ValueUtil.isNull(vsSbCdNm)){
						var vsMsgParam = ExtControl.getTextValue("lblSaNm") + ", " + ExtControl.getTextValue("lblSbCdNm");
						
						// "조회조건[@1] 중 하나는 반드시 입력해야 합니다." 메시지 표시
						util.Msg.alert("NLS-CMM-M016", [vsMsgParam]);
						
						vbValid = false;
						return vbValid;
					}
					
					return vbValid;
				};
				
				/**
				 * @desc 교과과정목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsCurCls");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [rptCcsCurCls]교과과정목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onDoubleClick_RptCcsCurCls = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				/**
				 * @desc [btnSearch]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doCloseOk(){
					var voResult = moStdCcsPCurriPopup.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsCurCls"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdCcsCurCls");
					
					voResult.ST_DT								= util.Grid.getCellValue(app, "grdCcsCurCls", "ST_DT", vnIdx);
					voResult.END_DT			    			= util.Grid.getCellValue(app, "grdCcsCurCls", "END_DT" , vnIdx);
					voResult.CU_OBJ_DIV_RCD 			= util.Grid.getCellValue(app, "grdCcsCurCls", "CU_OBJ_DIV_RCD" , vnIdx);
					voResult.CU_CD   							= util.Grid.getCellValue(app, "grdCcsCurCls", "CU_CD" , vnIdx);
					voResult.SB_CD      						= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_CD" , vnIdx);
					voResult.SB_CD_NM 						= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_CD_NM", vnIdx);
					voResult.SB_OBJ_DIV_RCD        	 	= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_OBJ_DIV_RCD", vnIdx);
					voResult.SA_CD 							= util.Grid.getCellValue(app, "grdCcsCurCls", "SA_CD", vnIdx);
					voResult.SA_CD_NM        				= util.Grid.getCellValue(app, "grdCcsCurCls", "SA_CD_NM", vnIdx);
					voResult.SA_OBJ_DIV_RCD				= util.Grid.getCellValue(app, "grdCcsCurCls", "SA_OBJ_DIV_RCD", vnIdx);
					voResult.SP_CD          			 		= util.Grid.getCellValue(app, "grdCcsCurCls", "SP_CD", vnIdx);
					voResult.SP_OBJ_DIV_RCD          	= util.Grid.getCellValue(app, "grdCcsCurCls", "SP_OBJ_DIV_RCD", vnIdx);
					voResult.DCL_RCD_CD          			= util.Grid.getCellValue(app, "grdCcsCurCls", "DCL_RCD_CD", vnIdx);
					voResult.DCL_RCD_NM					= util.Grid.getCellValue(app, "grdCcsCurCls", "DCL_RCD_NM", vnIdx);
					voResult.SB_LVL_RCD					= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_LVL_RCD" , vnIdx);
					voResult.EST_PRD_RCD 					= util.Grid.getCellValue(app, "grdCcsCurCls", "EST_PRD_RCD" , vnIdx);
					voResult.EST_PRD_NM   				= util.Grid.getCellValue(app, "grdCcsCurCls", "EST_PRD_NM" , vnIdx);
					voResult.EVAL_METHOD_RCD      	= util.Grid.getCellValue(app, "grdCcsCurCls", "EVAL_METHOD_RCD" , vnIdx);
					voResult.LECT_TYPE_RCD 				= util.Grid.getCellValue(app, "grdCcsCurCls", "LECT_TYPE_RCD", vnIdx);
					voResult.SB_CAT_RCD       			= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_CAT_RCD", vnIdx);
					voResult.SB_DIV_RCD 					= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_DIV_RCD", vnIdx);
					voResult.SB_TYPE_RCD            		= util.Grid.getCellValue(app, "grdCcsCurCls", "SB_TYPE_RCD", vnIdx);
					voResult.CMP_DIV_RCD					= util.Grid.getCellValue(app, "grdCcsCurCls", "CMP_DIV_RCD", vnIdx);
					voResult.CUR_DIV_RCD          			= util.Grid.getCellValue(app, "grdCcsCurCls", "CUR_DIV_RCD", vnIdx);
					voResult.REC_SCALE_RCD          	= util.Grid.getCellValue(app, "grdCcsCurCls", "REC_SCALE_RCD", vnIdx);
					voResult.DAY_DIVCLS_CNT          	= util.Grid.getCellValue(app, "grdCcsCurCls", "DAY_DIVCLS_CNT", vnIdx);
					voResult.NIGHT_DIVCLS_CNT			= util.Grid.getCellValue(app, "grdCcsCurCls", "NIGHT_DIVCLS_CNT", vnIdx);
					voResult.LECT_TIME_CNT				= util.Grid.getCellValue(app, "grdCcsCurCls", "LECT_TIME_CNT" , vnIdx);
					voResult.PNT 								= util.Grid.getCellValue(app, "grdCcsCurCls", "PNT" , vnIdx);
					voResult.THEO_TC 						= util.Grid.getCellValue(app, "grdCcsCurCls", "THEO_TC" , vnIdx);
					voResult.EPAC_TC   						= util.Grid.getCellValue(app, "grdCcsCurCls", "EPAC_TC" , vnIdx);
					voResult.TLSN_REQ_CAPA1      		= util.Grid.getCellValue(app, "grdCcsCurCls", "TLSN_REQ_CAPA1" , vnIdx);
					voResult.TLSN_REQ_CAPA2 			= util.Grid.getCellValue(app, "grdCcsCurCls", "TLSN_REQ_CAPA2", vnIdx);
					voResult.TLSN_REQ_CAPA3       		= util.Grid.getCellValue(app, "grdCcsCurCls", "TLSN_REQ_CAPA3", vnIdx);
					voResult.TLSN_REQ_CAPA4 			= util.Grid.getCellValue(app, "grdCcsCurCls", "TLSN_REQ_CAPA4", vnIdx);
					voResult.RE_TLSN_YN_RCD            = util.Grid.getCellValue(app, "grdCcsCurCls", "RE_TLSN_YN_RCD", vnIdx);
					voResult.MAND_SB_YN					= util.Grid.getCellValue(app, "grdCcsCurCls", "MAND_SB_YN", vnIdx);
					voResult.LECT_EVAL_XCP_YN      	= util.Grid.getCellValue(app, "grdCcsCurCls", "LECT_EVAL_XCP_YN", vnIdx);
					voResult.LECT_EVAL_SUM_XCP_YN  = util.Grid.getCellValue(app, "grdCcsCurCls", "LECT_EVAL_SUM_XCP_YN", vnIdx);
					voResult.PNT_INSTCH_YN          	= util.Grid.getCellValue(app, "grdCcsCurCls", "PNT_INSTCH_YN", vnIdx);
					voResult.REF_KEY							= util.Grid.getCellValue(app, "grdCcsCurCls", "REF_KEY", vnIdx);
					voResult.CU_CD_NM						= util.Grid.getCellValue(app, "grdCcsCurCls", "CU_CD_NM" , vnIdx);
			
					ExtPopUp.closeLayeredPopup("callbackStdCcsPCurriPopup", moStdCcsPCurriPopup);
				};
				
				/**
				 * @desc 이수과정, 교과그룹목록 조회
				 * @param poCallBackFunc 콜백정의, 교과목코드
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				function doSpCuList(poCallBackFunc, psCuCd) {
					//strCommand: getSaSpCu 
					util.Submit.send(app, "subSpCuList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbSpCd", "cbbCuCd"]);
							
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
			
				/**
				 * @desc [cbbSpCd]이수과정 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 3
				 */
				moPage.onValueChanged_CbbSpCd = function() {
					// 이수과정에따른 교과그룹값 필터링
					var vsSpCd = util.Control.getValue(app, "cbbSpCd");
					if(!ValueUtil.isNull(vsSpCd)){
						vsSpCd = "CC009SP" + vsSpCd;
					}
			
					ExtSelectCtl.setInsBind("cbbCuCd", "[contains(PATH, '"+ vsSpCd +"')]");
				};
				
				/**
				 * @desc [btnYearSmt]기준일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 25
				 */
				moPage.onClick_BtnYearSmt = function() {
					//기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDate","impSchYearSmt");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSbTypeRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSbDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSpList");
			dataSet_3.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCuList");
			dataSet_5.parseData({
				"columns": [
					{"name": "OBJ_CD_NM"},
					{"name": "OBJ_CD"},
					{"name": "PATH"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsEstPrdRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsCcsCurCls");
			dataSet_8.parseData({
				"info": "CCS_CUR_CLS@ST_DT,END_DT,CU_CD,CU_OBJ_DIV_RCD,SB_CD,SB_OBJ_DIV_RCD",
				"columns": [
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "CU_OBJ_DIV_RCD"},
					{"name": "CU_CD"},
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "SB_OBJ_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_CD_NM"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "SP_CD"},
					{"name": "SP_OBJ_DIV_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "DCL_RCD_NM"},
					{"name": "SB_LVL_RCD"},
					{"name": "EST_PRD_RCD"},
					{"name": "EST_PRD_NM"},
					{"name": "EVAL_METHOD_RCD"},
					{"name": "LECT_TYPE_RCD"},
					{"name": "SB_CAT_RCD"},
					{"name": "SB_DIV_RCD"},
					{"name": "SB_TYPE_RCD"},
					{"name": "CMP_DIV_RCD"},
					{"name": "CUR_DIV_RCD"},
					{"name": "REC_SCALE_RCD"},
					{"name": "DAY_DIVCLS_CNT"},
					{"name": "NIGHT_DIVCLS_CNT"},
					{"name": "LECT_TIME_CNT"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "TLSN_REQ_CAPA1"},
					{"name": "TLSN_REQ_CAPA2"},
					{"name": "TLSN_REQ_CAPA3"},
					{"name": "TLSN_REQ_CAPA4"},
					{"name": "RE_TLSN_YN_RCD"},
					{"name": "MAND_SB_YN"},
					{"name": "LECT_EVAL_XCP_YN"},
					{"name": "LECT_EVAL_SUM_XCP_YN"},
					{"name": "PNT_INSTCH_YN"},
					{"name": "REF_KEY"},
					{"name": "CU_CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSpCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strCuCd",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strEstPrdRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsCurriPopup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsCurriPopup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_8, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSpCuList");
			submission_3.action = "/ccs/StdCcsCurriPopup/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_3, false);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "405px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseOk");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_1.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_1, {
				"top": "375px",
				"left": "715px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseCancel");
			button_2.value = "";
			button_2.style.setClasses(["btn-commit"]);
			button_2.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_2.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_2, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-CURLIST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "220px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsCurCls");
				grid_1.init({
					"dataSet": app.lookup("dsCcsCurCls"),
					"columns": [
						{"width": "40px"},
						{"width": "100px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "55px"},
						{"width": "55px"},
						{"width": "55px"},
						{"width": "80px"},
						{"width": "90px"},
						{"width": "135px"},
						{"width": "90px"},
						{"width": "100px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "70px",
							"visible": false
						},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ESTPRDCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DCL_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-WEEK_DIVCLS_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NIGHT_DIVCLS_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBPRCSDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_SCALE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TYPE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TIME_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ESENOBJYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EXPYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECEVALSUMYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNTINSTCHYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RE_TLSN_YN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBCATGR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSN_REQ_CAPA3");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TLSNREQCAPA4");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ISUCOURSDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DCL_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRUP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ESTPRDNM");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CU_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbSbLvlRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsSbLvlRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("SB_LVL_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EST_PRD_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbEstPgdRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsEstPrdRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("EST_PRD_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SB_DIV_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbSbDivRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsSbDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("SB_DIV_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SB_TYPE_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbSbTypeRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsSbTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SB_TYPE_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "DAY_DIVCLS_CNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "NIGHT_DIVCLS_CNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "CUR_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "EVAL_METHOD_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REC_SCALE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptStDt");
										output_1.dataType = "date";
										output_1.format = "YYYY-MM-DD";
										output_1.bind("value").toDataColumn("ST_DT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptEndDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("END_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "LECT_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "LECT_TIME_CNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "MAND_SB_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_XCP_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "LECT_EVAL_SUM_XCP_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "PNT_INSTCH_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_YN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "SB_CAT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_CAPA4";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.columnName = "SA_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.columnName = "SP_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.columnName = "CU_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.columnName = "SB_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.columnName = "SP_CD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbSpCd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsSpList"), {
												"label": "OBJ_CD_NM",
												"value": "OBJ_CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SP_CD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.columnName = "CU_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.columnName = "EST_PRD_NM";
								}
							}
						]
					}
				});
				if(typeof onGrdCcsCurClsDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCcsCurClsDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "758px",
					"height": "238px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "97px",
				"left": "5px",
				"width": "770px",
				"height": "273px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "703px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSaNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-SA_CD_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "210px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "295px",
					"width": "95px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSaCd");
				button_4.value = "";
				button_4.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_4.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "390px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optCmpDivRcd");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_4, {
					"top": "5px",
					"left": "420px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_7 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_7.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_7.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_7){
					comboBox_7.addItem(new cpr.controls.Item("전체", ""));
					comboBox_7.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_7);
				container.addChild(comboBox_7, {
					"top": "5px",
					"left": "495px",
					"width": "90px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSbCdNm");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-DB-SB_CD_NM");
				container.addChild(output_5, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbCdNm");
				inputBox_2.maxLength = 10;
				inputBox_2.bind("fieldLabel").toExpression("#optSbCdNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbCdNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbSbCdNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "90px",
					"width": "110px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optSpCd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-SP");
				container.addChild(output_6, {
					"top": "41px",
					"left": "610px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_8 = new cpr.controls.ComboBox("cbbSpCd");
				comboBox_8.visible = false;
				comboBox_8.enabled = false;
				comboBox_8.bind("fieldLabel").toExpression("#optSpCd.value");
				comboBox_8.bind("value").toDataMap(app.lookup("dmReqKey"), "strSpCd");
				(function(comboBox_8){
					comboBox_8.addItem(new cpr.controls.Item("전체", ""));
					comboBox_8.setItemSet(app.lookup("dsSpList"), {
						"label": "OBJ_CD_NM",
						"value": "OBJ_CD"
					});
				})(comboBox_8);
				if(typeof onCbbSpCdSelectionChange == "function") {
					comboBox_8.addEventListener("selection-change", onCbbSpCdSelectionChange);
				}
				container.addChild(comboBox_8, {
					"top": "41px",
					"left": "705px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_9 = new cpr.controls.ComboBox("cbbCuCd");
				comboBox_9.bind("fieldLabel").toExpression("#optCuCd.value");
				comboBox_9.bind("value").toDataMap(app.lookup("dmReqKey"), "strCuCd");
				(function(comboBox_9){
					comboBox_9.addItem(new cpr.controls.Item("전체", ""));
					comboBox_9.setItemSet(app.lookup("dsCuList"), {
						"label": "OBJ_CD_NM",
						"value": "OBJ_CD"
					});
				})(comboBox_9);
				container.addChild(comboBox_9, {
					"top": "30px",
					"left": "295px",
					"width": "115px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optCuCd");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-SP");
				container.addChild(output_7, {
					"top": "30px",
					"left": "210px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_10 = new cpr.controls.ComboBox("cbbSbLvlRcd");
				comboBox_10.bind("fieldLabel").toExpression("#optSbLvlRcd.value");
				comboBox_10.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbLvlRcd");
				(function(comboBox_10){
					comboBox_10.setItemSet(app.lookup("dsSbLvlRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_10);
				container.addChild(comboBox_10, {
					"top": "30px",
					"left": "495px",
					"width": "90px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optSbLvlRcd");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_8, {
					"top": "30px",
					"left": "420px",
					"width": "70px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optEstPrdRcd");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_9, {
					"top": "30px",
					"left": "595px",
					"width": "70px",
					"height": "25px"
				});
				var comboBox_11 = new cpr.controls.ComboBox("cbbEstPrdRcd");
				comboBox_11.bind("fieldLabel").toExpression("#optEstPrdRcd.value");
				comboBox_11.bind("value").toDataMap(app.lookup("dmReqKey"), "strEstPrdRcd");
				(function(comboBox_11){
					comboBox_11.setItemSet(app.lookup("dsEstPrdRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_11);
				container.addChild(comboBox_11, {
					"top": "30px",
					"left": "670px",
					"width": "90px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optKeyDate");
				output_10.value = "";
				output_10.style.setClasses(["require"]);
				output_10.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_10, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDate");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnYearSmt");
				button_5.value = "";
				button_5.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_5.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "180px",
					"width": "16px",
					"height": "16px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "770px",
				"height": "57px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "35px",
				"left": "790px",
				"width": "325px",
				"height": "75px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "교과과정검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
