/*
 * App URI: app/ccs/stdCcsPOpenSubPopup
 * Source Location: app/ccs/stdCcsPOpenSubPopup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsPOpenSubPopup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsPOpenSubPopup.xtm"/>
			
			/**
			 * 개설과목검색팝업
			 * @class stdCcsPOpenSubPopup
			 * @author 박갑수 at 2016. 2. 11
			 */
			var stdCcsPOpenSubPopup = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 팝업 내부사용 변수
				var moStdCcsPOpenSubPopup = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false,
					// 선택가능 범위를 제한
					strDivClsYn					: "",
					strLanDivRcd					: "",
					strKeyDate						: "",
					strSchYearRcd				: "",
					strSmtRcd						: "",
					strSaCd							: "",
					strSaNm						: "",
					strSaObjDivRcd				: "",
					strSbCd							: "",
					strSbNm						: "",
					strCmpDivRcd				: "",
					// 선택열 결과 리턴
					Result : {
						SP_CD 						: "",
						SP_NM 					: "",
						SB_CD 						: "",
						SB_NM						: "",
						SA_CD 						: "",
						SA_NM 					: "",
						CU_CD 						: "",
						CU_NM 					: "",
						SCH_YEAR_RCD 		: "",
						SMT_RCD 				: "",
						DIVCLS_CD 				: "",
						DIVCLS_NM 				: "",
						CMP_DIV_RCD 			: "",
						PNT 							: "",
						THEO_TC 					: "",
						EPAC_TC 					: "",
						SB_DIV_RCD 				: "",
						SB_TYPE_RCD 			: "",
						SA_POST_DIV_RCD 	: "",
						PROF_NO 					: "",
						PROF_NM 				: "",
						LECT_ROOM_NM 		: "",
						REF_KEY 					: "",
						SB_LVL_RCD				: "",
						LECT_TIME_CNT		: "",
						SB_CAT_RCD			:"",
						LECT_TYPE_RCD		:"",
						REC_SCALE_RCD		:""
					}
				};
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/reqKey/strLanDivRcd",
					iKeyDate			:	"/root/reqKey/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strSaObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSaNm = util.DataMap.getValue(app, "dmReqKey", "strSaNm");
						if(!ValueUtil.isNull(vsSaNm)){
							util.Header.clickSearch(app);
						}
					}
				}];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onModelConstructDone_StdCcsPOpenSubPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsOpenSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//--화면오픈 시 분반명을 처음부터 보이지 않게 설정하여 진행하도록 한다.
					util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptDivclsNm");
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCcsPOpenSubPopup =  ExtPopUp.getParentVal("moStdCcsPOpenSubPopup");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCcsPOpenSubPopup) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCcsPOpenSubPopup [key] = voStdCcsPOpenSubPopup [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voStdCcsPOpenSubPopup.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doOnLoad() {
					
					var voParam = moStdCcsPOpenSubPopup;
							
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbCmpDivRcd"]);
							
							// 파라미터 받아서 초기 검색조건 세팅.
							
							// 분반여부
							if (!ValueUtil.isNull(voParam.strDivClsYn) && ValueUtil.fixNull(voParam.strDivClsYn) == "Y") {
								util.Control.setValue(app, "ckbDivclsYn", voParam.strDivClsYn);
								util.Control.setEnable(app, true, ["ckbDivclsYn"]);
							}else if(!ValueUtil.isNull(voParam.strDivClsYn) && ValueUtil.fixNull(voParam.strDivClsYn) == "N"){
								util.Control.setVisible(app, false, ["ckbDivclsYn"]);
							}else {
								//ExtControl.setEnable(false, ["ckbDivclsYn"]);
								//--비활성을 보이지 않도록 함.
								util.Control.setVisible(app, false, ["ckbDivclsYn"]);
							}
							
							// 교과목명
							if (!ValueUtil.isNull(voParam.strSbNm) || !ValueUtil.isNull(voParam.strSbCd)) {
								
								// 둘다 입력되었을경우 교과목명만 세팅
								if(!ValueUtil.isNull(voParam.strSbNm) && !ValueUtil.isNull(voParam.strSbCd)){
									util.Control.setValue(app, "ipbSbCdNm", voParam.strSbNm);
								}else {
									if(!ValueUtil.isNull(voParam.strSbNm)){
										util.Control.setValue(app, "ipbSbCdNm", voParam.strSbNm);
									}else if(!ValueUtil.isNull(voParam.strSbCd)){
										util.Control.setValue(app, "ipbSbCdNm", voParam.strSbCd);
									}
								}
							}
							
							// 이수구분코드
							if (!ValueUtil.isNull(voParam.strCmpDivRcd)) {
								
								var vsCmpDivRcd = "";
								
								// 배열로 입력되었을경우도 첫번째값만 사용
								if(voParam.strCmpDivRcd instanceof Array){
									  vsCmpDivRcd = voParam.strCmpDivRcd[0];
								}else {
									vsCmpDivRcd = voParam.strCmpDivRcd
								}
								
								util.DataMap.setValue(app, "dmReqKey", "strCmpDivRcd", vsCmpDivRcd);
							}
							
							// 학년도
							if (!ValueUtil.isNull(voParam.strSchYearRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", voParam.strSchYearRcd);
							}
							
							// 학기
							if (!ValueUtil.isNull(voParam.strSmtRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", voParam.strSmtRcd);
							}
							
							// 학사부서코드, 학사부서명
							if (!ValueUtil.isNull(voParam.strSaCd)) {
								util.DataMap.setValue(app, "dmReqKey", "strSaCd", voParam.strSaCd);
								util.Control.setValue(app, "ipbSaNm", voParam.strSaNm);
							}
							
							// 학사부서 객체구분코드
							if (!ValueUtil.isNull(voParam.strSaObjDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strSaObjDivRcd", voParam.strSaObjDivRcd);
							}
							
							// 언어키
							if (!ValueUtil.isNull(voParam.strLanDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", voParam.strLanDivRcd);
							}else {
								// 온로드시 시스템 Default 언어 세팅
								util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd"));
							}
							
							// 기준일자
							if (!ValueUtil.isNull(voParam.strKeyDate)) {
								util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
							}else {
								// 학기 시작일자
								var vsStDt = util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT");
								util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsStDt);
							}
			
							// 검색조건이 입력되어 있는 경우 바로 검색 실행(돋보기버튼제외)
							if(!voParam.controlId.startsWith("btn")){
								var vsSaNm = util.Control.getValue(app, "ipbSaNm");
								var vsSbCdNm = util.Control.getValue(app, "ipbSbCdNm");
								if (!ValueUtil.isNull(vsSaNm) || !ValueUtil.isNull(vsSbCdNm)) {
									util.Header.clickSearch(app);
								}
							}
						}
					});
				};
				
				/**
				 * @desc [btnSaCd]학사부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaNm]학사부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSbCdNm]교과목코드/명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onKeyDown_IpbSbCdNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수체크 - 학사부서, 교과목명 중 한개는 입력되었는지 확인.
					if(!moPage.checkNotNullCtl()){
						return false;
					}
					
					// 개설과목목목록 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 개설과목목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							// 분반 체크에 따른 컬럼 보이기 여부
							moPage.columnVisible();
			
							util.Control.redraw(app, "grdCcsOpenSub");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				 
				 /**
				 * @desc 분반 체크에 따른 컬럼 보이기 여부
				 * @param  
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.columnVisible = function() {
					// 분반여부
					var vsDivclsYn = util.Control.getValue(app, "ckbDivclsYn");
					// 분반코드, 분반명, 교수번호, 교수명, 강의실컬럼 보이기 여부 설정
					if(ValueUtil.isNull(vsDivclsYn)){
						util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptDivclsCd");
						util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptDivclsNm");
						util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptProfNo");
						util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptProfNm");
						util.Grid.hideColumn(app, "rptCcsOpenSub", "rdOptLectRoomNm");
					}else {
						util.Grid.showColumn(app, "rptCcsOpenSub", "rdOptDivclsCd", "70");
						util.Grid.showColumn(app, "rptCcsOpenSub", "rdOptDivclsNm", "43");
						util.Grid.showColumn(app, "rptCcsOpenSub", "rdOptProfNo", "70");
						util.Grid.showColumn(app, "rptCcsOpenSub", "rdOptProfNm", "100");
						util.Grid.showColumn(app, "rptCcsOpenSub", "rdOptLectRoomNm", "100");
					}
				};
				
				/**
				 * @desc 학사부서, 교과목명 중 한개는 입력되었는지 확인.
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 2. 24
				 */
				moPage.checkNotNullCtl = function() {
					var vbValid = true;
					
					// 학사부서명
					var vsSaNm = util.Control.getValue(app, "ipbSaNm");
					// 교과목코드/교과목명
					var vsSbCdNm = util.Control.getValue(app, "ipbSbCdNm");
					
					if(ValueUtil.isNull(vsSaNm) && ValueUtil.isNull(vsSbCdNm)){
						var vsMsgParam = ExtControl.getTextValue("lblSaNm") + ", " + ExtControl.getTextValue("lblSbCdNm");
						
						// "조회조건[@1] 중 하나는 반드시 입력해야 합니다." 메시지 표시
						util.Msg.alert("NLS-CMM-M016", [vsMsgParam]);
						
						vbValid = false;
						return vbValid;
					}
					
					return vbValid;
				};
				
				/**
				 * @desc [rptCcsOpenSub]개설과목목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onDoubleClick_RptCcsOpenSub = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnSearch]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				function doCloseOk(){
					var voResult = moStdCcsPOpenSubPopup.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsOpenSub"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdCcsOpenSub");
					
					voResult.SP_CD							= util.Grid.getCellValue(app, "grdCcsOpenSub", "SP_CD", vnIdx);
					voResult.SP_NM			    		= util.Grid.getCellValue(app, "grdCcsOpenSub", "SP_NM" , vnIdx);
					voResult.SB_CD 						= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_CD" , vnIdx);
					voResult.SB_NM   						= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_NM" , vnIdx);
					voResult.SA_CD			      			= util.Grid.getCellValue(app, "grdCcsOpenSub", "SA_CD" , vnIdx);
					voResult.SA_NM 						= util.Grid.getCellValue(app, "grdCcsOpenSub", "SA_NM", vnIdx);
					voResult.CU_CD        	 				= util.Grid.getCellValue(app, "grdCcsOpenSub", "CU_CD", vnIdx);
					voResult.SCH_YEAR_RCD 			= util.Grid.getCellValue(app, "grdCcsOpenSub", "SCH_YEAR_RCD", vnIdx);
					voResult.SMT_RCD        			= util.Grid.getCellValue(app, "grdCcsOpenSub", "SMT_RCD", vnIdx);
					voResult.DIVCLS_CD					= util.Grid.getCellValue(app, "grdCcsOpenSub", "DIVCLS_CD", vnIdx);
					voResult.DIVCLS_NM          		= util.Grid.getCellValue(app, "grdCcsOpenSub", "DIVCLS_NM", vnIdx);
					voResult.CMP_DIV_RCD          	= util.Grid.getCellValue(app, "grdCcsOpenSub", "CMP_DIV_RCD", vnIdx);
					voResult.PNT          					= util.Grid.getCellValue(app, "grdCcsOpenSub", "PNT", vnIdx);
					voResult.THEO_TC						= util.Grid.getCellValue(app, "grdCcsOpenSub", "THEO_TC", vnIdx);
					voResult.EPAC_TC						= util.Grid.getCellValue(app, "grdCcsOpenSub", "EPAC_TC" , vnIdx);
					voResult.SB_DIV_RCD 				= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_DIV_RCD" , vnIdx);
					voResult.SB_TYPE_RCD   			= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_TYPE_RCD" , vnIdx);
					voResult.SA_POST_DIV_RCD      	= util.Grid.getCellValue(app, "grdCcsOpenSub", "SA_POST_DIV_RCD" , vnIdx);
					voResult.PROF_NO 					= util.Grid.getCellValue(app, "grdCcsOpenSub", "PROF_NO", vnIdx);
					voResult.PROF_NM       				= util.Grid.getCellValue(app, "grdCcsOpenSub", "PROF_NM", vnIdx);
					voResult.LECT_ROOM_NM 			= util.Grid.getCellValue(app, "grdCcsOpenSub", "LECT_ROOM_NM", vnIdx);
					voResult.REF_KEY            			= util.Grid.getCellValue(app, "grdCcsOpenSub", "REF_KEY", vnIdx);
					voResult.SB_LVL_RCD            	= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_LVL_RCD", vnIdx);
					voResult.LECT_TIME_CNT          = util.Grid.getCellValue(app, "grdCcsOpenSub", "LECT_TIME_CNT", vnIdx);
					voResult.SB_CAT_RCD          		= util.Grid.getCellValue(app, "grdCcsOpenSub", "SB_CAT_RCD", vnIdx);
					voResult.LECT_TYPE_RCD          		= util.Grid.getCellValue(app, "grdCcsOpenSub", "LECT_TYPE_RCD", vnIdx);
					voResult.REC_SCALE_RCD          		= util.Grid.getCellValue(app, "grdCcsOpenSub", "REC_SCALE_RCD", vnIdx);
					
					
					
					
					ExtPopUp.closeLayeredPopup("callbackStdCcsPOpenSubPopup", moStdCcsPOpenSubPopup);
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 2. 11
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSbTypeRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSbDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCcsOpenSub");
			dataSet_4.parseData({
				"columns": [
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "SB_CD"},
					{"name": "SB_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "CU_CD"},
					{"name": "CU_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "SB_DIV_RCD"},
					{"name": "SB_TYPE_RCD"},
					{"name": "SA_POST_DIV_RCD"},
					{"name": "PROF_NO"},
					{"name": "PROF_NM"},
					{"name": "LECT_ROOM_NM"},
					{"name": "REF_KEY"},
					{"name": "SB_LVL_RCD"},
					{"name": "LECT_TIME_CNT"},
					{"name": "SB_CAT_RCD"},
					{"name": "LECT_TYPE_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strDivclsNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strDivClsYn",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsOpensubPopup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsOpensubPopup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "573px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSaNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "240px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optCmpDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "270px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "365px",
					"width": "110px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbDivclsYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "분반";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivClsYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "270px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSbCdNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-SB_CD_NM1");
				container.addChild(output_3, {
					"top": "30px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbCdNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optSbCdNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbCdNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbSbCdNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "110px",
					"width": "150px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "640px",
				"height": "57px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "405px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseOk");
			button_3.value = "";
			button_3.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_3.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_3, {
				"top": "375px",
				"left": "585px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_4 = new cpr.controls.Button("btnCloseCancel");
			button_4.value = "";
			button_4.style.setClasses(["btn-commit"]);
			button_4.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_4.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_4, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-OPENSUBLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "240px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsOpenSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsOpenSub"),
					"columns": [
						{"width": "40px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "73px"},
						{"width": "130px"},
						{"width": "43px"},
						{"width": "74px"},
						{"width": "60px"},
						{"width": "50px"},
						{"width": "50px"},
						{"width": "50px"},
						{"width": "90px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "100px"},
						{"width": "100px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "70px",
							"visible": false
						},
						{
							"width": "70px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{"width": "60px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DIVCLS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PROF");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCHD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SP_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SA_POST_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TIME_CNT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CU_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbSbLvlRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsSbLvlRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("SB_LVL_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SB_DIV_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbSbDivRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsSbDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("SB_DIV_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "PROF_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "CU_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SP_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "SA_POST_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "SB_TYPE_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbSbTypeRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SB_TYPE_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "LECT_TIME_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdCcsOpenSubDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCcsOpenSubDblclick);
				}
				container.addChild(grid_1, {
					"top": "24px",
					"left": "5px",
					"width": "628px",
					"height": "244px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "640px",
				"height": "273px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "개설과목검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
