/*
 * App URI: app/ccs/stdCcsPRoomPopup
 * Source Location: app/ccs/stdCcsPRoomPopup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsPRoomPopup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsPRoomPopup.xtm"/>
			
			/**
			 * 강의실검색(Popup)
			 * @class stdCcsPRoomPopup
			 * @author 박갑수 at 2016. 1. 19
			 */
			var stdCcsPRoomPopup = function() {
				var moPage = new Page();
			
				// 팝업 내부사용 변수
				var moStdCcsPRoomPopup = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false,
					// 선택가능 범위를 제한
					strLanDivRcd					: "",
					strBdCd							: "",
					strLectRoomNm				: "",
					strKeyDate						: "",
					strLectDate					: "",
					strStTime						: "",
					strEndTime					: "",
					strVacantRoomYn			: "",
					
					// 선택열 결과 리턴
					Result : {
						LECT_ROOM_CD		: "",
						BD_CD						: "",	
						LECT_ROOM_NM		: "",
						SPVS_DEPT_CD			: "",
						OBJ_DIV_RCD			: "",
						LECT_ROOM_SHORT_NM	: "",
						PRP_RCD					: "",
						LECT_USE_YN			: "",
						ACC_NOP					: "",
						FLR_CNT					: "",
						REMARK					: "",
						BD_NM						: ""
					}
				};
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onModelConstructDone_StdCcsPRoomPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsRoom"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCcsPRoomPopup =  ExtPopUp.getParentVal("moStdCcsPRoomPopup");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCcsPRoomPopup) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCcsPRoomPopup [key] = voStdCcsPRoomPopup [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voStdCcsPRoomPopup.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				function doOnLoad() {
					
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moStdCcsPRoomPopup;
					
					if (!ValueUtil.isNull(voParam.strBdCd)) {
						util.DataMap.setValue(app, "dmReqKey", "strBdCd", voParam.strBdCd);
					}
					
					if (!ValueUtil.isNull(voParam.strLectRoomNm)) {
						util.Control.setValue(app, "ipbLectRoomNm", voParam.strLectRoomNm);
					}
					
					if (!ValueUtil.isNull(voParam.strLanDivRcd)) {
						util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", voParam.strLanDivRcd);
					}
					
					if(!ValueUtil.isNull(voParam.strKeyDate)) {
						util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
					}
					
					if(!ValueUtil.isNull(voParam.strLectDate)) {
						util.DataMap.setValue(app, "dmReqKey", "strLectDate", voParam.strLectDate);
					}
					
					if(!ValueUtil.isNull(voParam.strStTime)) {
						util.DataMap.setValue(app, "dmReqKey", "strStTime", voParam.strStTime);
					}
					
					if(!ValueUtil.isNull(voParam.strEndTime)) {
						util.DataMap.setValue(app, "dmReqKey", "strEndTime", voParam.strEndTime);
					}
			
					if(!ValueUtil.isNull(voParam.strVacantRoomYn)) {
						util.DataMap.setValue(app, "dmReqKey", "strVacantRoomYn", voParam.strVacantRoomYn);
					}
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbBdCd"]);
							
							if (!ValueUtil.isNull(voParam.strBdCd)) {
								util.DataMap.setValue(app, "dmReqKey", "strBdCd", voParam.strBdCd);
							}
							
							// 검색조건이 입력되어 있는 경우 바로 검색 실행(돋보기버튼제외)
							if(!voParam.controlId.startsWith("btn")){
								if (voParam.strBdCd || voParam.strLectRoomNm) {
									util.Header.clickSearch(app);
								}
							}
						}
					});
					
				};
				
				/**
				 * @desc [IpbLectRoomNm]강의실명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onKeyDown_IpbLectRoomNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onClick_BtnSearch = function() {
			
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 강의실목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsRoom");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [rptCcsRoom]강의실목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onDoubleClick_RptCcsRoom = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				/**
				 * @desc [btnCloseOk]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 19
				 */
				function doCloseOk(){
					var voResult = moStdCcsPRoomPopup.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsRoom"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdCcsRoom");
					
					voResult.LECT_ROOM_CD				= util.Grid.getCellValue(app, "grdCcsRoom", "LECT_ROOM_CD", vnIdx);
					voResult.BD_CD			    				= util.Grid.getCellValue(app, "grdCcsRoom", "BD_CD" , vnIdx);
					voResult.LECT_ROOM_NM 				= util.Grid.getCellValue(app, "grdCcsRoom", "LECT_ROOM_NM" , vnIdx);
					voResult.SPVS_DEPT_CD   				= util.Grid.getCellValue(app, "grdCcsRoom", "SPVS_DEPT_CD" , vnIdx);
					voResult.OBJ_DIV_RCD      				= util.Grid.getCellValue(app, "grdCcsRoom", "OBJ_DIV_RCD" , vnIdx);
					voResult.LECT_ROOM_SHORT_NM 	= util.Grid.getCellValue(app, "grdCcsRoom", "LECT_ROOM_SHORT_NM", vnIdx);
					voResult.PRP_RCD         				= util.Grid.getCellValue(app, "grdCcsRoom", "PRP_RCD", vnIdx);
					voResult.LECT_USE_YN 					= util.Grid.getCellValue(app, "grdCcsRoom", "LECT_USE_YN", vnIdx);
					voResult.ACC_NOP            			= util.Grid.getCellValue(app, "grdCcsRoom", "ACC_NOP", vnIdx);
					voResult.FLR_CNT							= util.Grid.getCellValue(app, "grdCcsRoom", "FLR_CNT", vnIdx);
					voResult.REMARK          			 	= util.Grid.getCellValue(app, "grdCcsRoom", "REMARK", vnIdx);
					voResult.BD_NM          					= util.Grid.getCellValue(app, "grdCcsRoom", "BD_NM", vnIdx);
					
					ExtPopUp.closeLayeredPopup("callbackStdCcsPRoomPopup", moStdCcsPRoomPopup);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsBdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "BD_CD"},
					{"name": "BD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCcsRoom");
			dataSet_2.parseData({
				"columns": [
					{"name": "LECT_ROOM_CD"},
					{"name": "LECT_ROOM_NM"},
					{"name": "BD_CD"},
					{"name": "BD_NM"},
					{"name": "SPVS_DEPT_CD"},
					{"name": "SPVS_DEPT_NM"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "LECT_ROOM_SHORT_NM"},
					{"name": "PRP_RCD"},
					{"name": "PRP_NM"},
					{"name": "LECT_USE_YN"},
					{"name": "ACC_NOP"},
					{"name": "FLR_CNT"},
					{"name": "REMARK"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strBdCd",
						"dataType": "string"
					},
					{
						"name": "strLectRoomNm",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strLectDate",
						"dataType": "string"
					},
					{
						"name": "strStTime",
						"dataType": "string"
					},
					{
						"name": "strEndTime",
						"dataType": "string"
					},
					{
						"name": "strVacantRoomYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsRoomPopup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsRoomPopup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optLectRoomNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-PER_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "240px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbLectRoomNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optStudNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strLectRoomNm");
				if(typeof onIpbLectRoomNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbLectRoomNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "325px",
					"width": "200px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optBdCd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-BD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "645px",
					"width": "60px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbBdCd");
				comboBox_1.bind("fieldLabel").toExpression("#optStatus.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strBdCd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsBdList"), {
						"label": "BD_NM",
						"value": "BD_CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "140px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "710px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsRoom");
				grid_1.init({
					"dataSet": app.lookup("dsCcsRoom"),
					"columns": [
						{"width": "40px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "150px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "96px"},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-BD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ACC_NOP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CLSRMPRP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SPVSDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SPVS_DEPT_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_GBN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_ROOM_SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CLSRMPRPCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CLSRMUSEYN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-FLR_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "BD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ACC_NOP";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PRP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SPVS_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SPVS_DEPT_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "LECT_ROOM_SHORT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "BD_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PRP_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "LECT_USE_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "FLR_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							}
						]
					}
				});
				if(typeof onGrdCcsRoomDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCcsRoomDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "700px",
					"height": "263px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-CLSRMLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "220px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "710px",
				"height": "298px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseOk");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_2.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_2, {
				"top": "375px",
				"left": "655px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseCancel");
			button_3.value = "";
			button_3.style.setClasses(["btn-commit"]);
			button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_3.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_3, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "강의실검색(Popup)";
	cpr.core.Platform.INSTANCE.register(app);
})();
