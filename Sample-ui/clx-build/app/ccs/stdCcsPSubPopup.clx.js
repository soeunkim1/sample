/*
 * App URI: app/ccs/stdCcsPSubPopup
 * Source Location: app/ccs/stdCcsPSubPopup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/ccs/stdCcsPSubPopup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCcsPSubPopup.xtm"/>
			
			/**
			 * 교과목검색팝업
			 * @class stdCcsPSubPopup
			 * @author 박갑수 at 2016. 1. 26
			 */
			var stdCcsPSubPopup = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 팝업 내부사용 변수
				var moStdCcsPSubPopup = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false,
					// 선택가능 범위를 제한
					strEndYn						: "",
					strLanDivRcd					: "",
					strKeyDate						: "",
					strCmpDivRcd				: "",
					strSpvsDeptCd				: "",
					strObjDivRcd					: "",
					strSpvsDeptNm				: "",
					strSbCd							: "",
					strSbNm						: "",
					
					// 선택열 결과 리턴
					Result : {
						SB_CD 						: "",
						SB_NO 						: "",
						OBJ_DIV_RCD 			: "",
						ST_DT 						: "",
						END_DT 					: "",
						LAN_DIV_RCD 			: "",
						REF_KEY 					: "",
						SB_NM 					: "",
						SHORT_NM 				: "",
						SB_CAT_RCD 			: "",
						SB_DIV_RCD 				: "",
						PNT 							: "",
						THEO_TC 					: "",
						EPAC_TC 					: "",
						SPVS_COLG_CD 		: "",
						SPVS_DEPT_CD 		: "",
						SPVS_DEPT_NM 		: "",
						CMP_DIV_RCD 			: "",
						REC_SCALE_RCD 		: "",
						SB_TYPE_RCD 			: "",
						SB_LVL_RCD 			: "",
						EVAL_METHOD_RCD 	: "",
						LECT_TYPE_RCD 		: "",
						SB_SMRY 					: "",
						REG_FEE_XCP_YN 	: "",
						SB_AMT 					: "",
						CMP_DIV_RCD_NM 	: "",
						SB_CAT_RCD_NM 		: "",
						RE_TLSN_YN_RCD 	: ""
					}
				};
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSpvsDeptNm",
					iCd					:	"",
					iNm					:	"ipbSpvsDeptNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/reqKey/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strSpvsDeptCd",
					oCdNm				:	"ipbSpvsDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(poRtnValue){
						// 검색조건이 있을경우 조회
						var vsSpvsDeptNm = util.DataMap.getValue(app, "dmReqKey", "strSpvsDeptNm");
						if(!ValueUtil.isNull(vsSpvsDeptNm)){
							util.Header.clickSearch(app);
						}
					}
				}];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onModelConstructDone_StdCcsPSubPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCcsPSubPopup =  ExtPopUp.getParentVal("moStdCcsPSubPopup");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCcsPSubPopup) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCcsPSubPopup [key] = voStdCcsPSubPopup [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voStdCcsPSubPopup.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doOnLoad() {
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbCmpDivRcd"]);
							
							// 파라미터 받아서 초기 검색조건 세팅.
							var voParam = moStdCcsPSubPopup;
							
							// 교과목명
							if (!ValueUtil.isNull(voParam.strSbNm) || !ValueUtil.isNull(voParam.strSbCd)) {
								
								// 둘다 입력되었을경우 교과목명만 세팅
								if(!ValueUtil.isNull(voParam.strSbNm) && !ValueUtil.isNull(voParam.strSbCd)){
									util.Control.setValue(app, "ipbSbCdNm", voParam.strSbNm);
								}else {
									if(!ValueUtil.isNull(voParam.strSbNm)){
										util.Control.setValue(app, "ipbSbCdNm", voParam.strSbNm);
									}else if(!ValueUtil.isNull(voParam.strSbCd)){
										util.Control.setValue(app, "ipbSbCdNm", voParam.strSbCd);
									}
								}
							}
							
							// 이수구분코드
							if (!ValueUtil.isNull(voParam.strCmpDivRcd)) {
								
								var vsCmpDivRcd = "";
								
								// 배열로 입력되었을경우도 첫번째값만 사용
								if(voParam.strCmpDivRcd instanceof Array){
									  vsCmpDivRcd = voParam.strCmpDivRcd[0];
								}else {
									vsCmpDivRcd = voParam.strCmpDivRcd
								}
								
								util.DataMap.setValue(app, "dmReqKey", "strCmpDivRcd", vsCmpDivRcd);
							}
							
							// 객체구분코드
							if (!ValueUtil.isNull(voParam.strObjDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", voParam.strObjDivRcd);
							}
							
							// 언어키
							if (!ValueUtil.isNull(voParam.strLanDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", voParam.strLanDivRcd);
							}else {
								// 온로드시 시스템 Default 언어 세팅
								util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", util.DataMap.getValue(app, "dmResOnLoad", "strLanDivRcd"));
							}
							
							// 기준일자
							if (!ValueUtil.isNull(voParam.strKeyDate)) {
								util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
							}else {
								// 온로드시 시스템 Default 언어 세팅
								util.DataMap.setValue(app, "dmReqKey", "strKeyDate", "99991231");
							}
							
							// 폐기여부
							if (!ValueUtil.isNull(voParam.strEndYn) && ValueUtil.fixNull(voParam.strEndYn) == "Y") {
								util.Control.setValue(app, "ckbEndYn", voParam.strEndYn);
								util.Control.setEnable(app, false, ["ckbEndYn"]);
							}else {
								util.Control.setEnable(app, true, ["ckbEndYn"]);
							}
							
							// 주관부서코드, 주관부서명
							if (voParam.strSpvsDeptCd) {
								util.DataMap.setValue(app, "dmReqKey", "strSpvsDeptCd", voParam.strSpvsDeptCd);
								util.Control.setValue(app, "ipbSpvsDeptNm", voParam.strSpvsDeptNm);
							}
											
							// 검색조건이 입력되어 있는 경우 바로 검색 실행(돋보기버튼 제외)
							if(!voParam.controlId.startsWith("btn")){
								var vsSbNm = util.Control.getValue(app, "ipbSbCdNm");
								var vsSpvsDeptNm = util.Control.getValue(app, "ipbSpvsDeptNm");
								if (!ValueUtil.isNull(vsSbNm) || !ValueUtil.isNull(vsSpvsDeptNm)) {
									util.Header.clickSearch(app);
								}
							}
						}
					});
				};
				
				/**
				 * @desc [btnSpvsDeptNm]주관부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onClick_BtnSpvsDeptNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSpvsDeptNm]주관부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onValueChanged_IpbSpvsDeptNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSbCdNm]교과목코드/명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onKeyDown_IpbSbCdNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수체크 - 주관부서, 교과목명 중 한개는 입력되었는지 확인.
					if(!moPage.checkNotNullCtl()){
						return false;
					}
					
					// 교과목목록 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 교과목목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsSub");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc 주관부서, 교과목명 중 한개는 입력되었는지 확인.
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.checkNotNullCtl = function() {
					var vbValid = true;
					
					// 주관부서명
					var vsSpvsDeptNm = util.Control.getValue(app, "ipbSpvsDeptNm");
					// 교과목코드/교과목명
					var vsSbCdNm = util.Control.getValue(app, "ipbSbCdNm");
					
					if(ValueUtil.isNull(vsSpvsDeptNm) && ValueUtil.isNull(vsSbCdNm)){
						var vsMsgParam = ExtControl.getTextValue("lblSpvsDeptNm") + ", " + ExtControl.getTextValue("lblSbCdNm");
						
						// "조회조건[@1] 중 하나는 반드시 입력해야 합니다." 메시지 표시
						util.Msg.alert("NLS-CMM-M016", [vsMsgParam]);
						
						vbValid = false;
						return vbValid;
					}
					
					return vbValid;
				};
			
				/**
				 * @desc [rptCcsSub]교과목목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onDoubleClick_RptCcsSub = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				/**
				 * @desc [btnSearch]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 1. 28
				 */
				function doCloseOk(){
					var voResult = moStdCcsPSubPopup.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCcsSub"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdCcsSub");
					
					voResult.SB_CD							= util.Grid.getCellValue(app, "grdCcsSub", "SB_CD", vnIdx);
					voResult.SB_NM			    		= util.Grid.getCellValue(app, "grdCcsSub", "SB_NM" , vnIdx);
					voResult.ST_DT 						= util.Grid.getCellValue(app, "grdCcsSub", "ST_DT" , vnIdx);
					voResult.END_DT   					= util.Grid.getCellValue(app, "grdCcsSub", "END_DT" , vnIdx);
					voResult.SHORT_NM      			= util.Grid.getCellValue(app, "grdCcsSub", "SHORT_NM" , vnIdx);
					voResult.SPVS_DEPT_NM 			= util.Grid.getCellValue(app, "grdCcsSub", "SPVS_DEPT_NM", vnIdx);
					voResult.CMP_DIV_RCD        	 	= util.Grid.getCellValue(app, "grdCcsSub", "CMP_DIV_RCD", vnIdx);
					voResult.SB_LVL_RCD 				= util.Grid.getCellValue(app, "grdCcsSub", "SB_LVL_RCD", vnIdx);
					voResult.SB_CAT_RCD        		= util.Grid.getCellValue(app, "grdCcsSub", "SB_CAT_RCD", vnIdx);
					voResult.SB_DIV_RCD					= util.Grid.getCellValue(app, "grdCcsSub", "SB_DIV_RCD", vnIdx);
					voResult.PNT          			 		= util.Grid.getCellValue(app, "grdCcsSub", "PNT", vnIdx);
					voResult.THEO_TC          			= util.Grid.getCellValue(app, "grdCcsSub", "THEO_TC", vnIdx);
					voResult.EPAC_TC          			= util.Grid.getCellValue(app, "grdCcsSub", "EPAC_TC", vnIdx);
					voResult.REC_SCALE_RCD			= util.Grid.getCellValue(app, "grdCcsSub", "REC_SCALE_RCD", vnIdx);
					voResult.SB_TYPE_RCD				= util.Grid.getCellValue(app, "grdCcsSub", "SB_TYPE_RCD" , vnIdx);
					voResult.LECT_TYPE_RCD 			= util.Grid.getCellValue(app, "grdCcsSub", "LECT_TYPE_RCD" , vnIdx);
					voResult.EVAL_METHOD_RCD   	= util.Grid.getCellValue(app, "grdCcsSub", "EVAL_METHOD_RCD" , vnIdx);
					voResult.REG_FEE_XCP_YN      	= util.Grid.getCellValue(app, "grdCcsSub", "REG_FEE_XCP_YN" , vnIdx);
					voResult.SB_AMT 						= util.Grid.getCellValue(app, "grdCcsSub", "SB_AMT", vnIdx);
					voResult.RE_TLSN_YN_RCD       	= util.Grid.getCellValue(app, "grdCcsSub", "RE_TLSN_YN_RCD", vnIdx);
					voResult.OBJ_DIV_RCD 				= util.Grid.getCellValue(app, "grdCcsSub", "OBJ_DIV_RCD", vnIdx);
					voResult.LAN_DIV_RCD            	= util.Grid.getCellValue(app, "grdCcsSub", "LAN_DIV_RCD", vnIdx);
					voResult.REF_KEY						= util.Grid.getCellValue(app, "grdCcsSub", "REF_KEY", vnIdx);
					voResult.SPVS_DEPT_CD          	= util.Grid.getCellValue(app, "grdCcsSub", "SPVS_DEPT_CD", vnIdx);
					voResult.SPVS_COLG_CD          	= util.Grid.getCellValue(app, "grdCcsSub", "SPVS_COLG_CD", vnIdx);
					voResult.SB_SMRY          			= util.Grid.getCellValue(app, "grdCcsSub", "SB_SMRY", vnIdx);
					voResult.SB_NO							= util.Grid.getCellValue(app, "grdCcsSub", "SB_NO", vnIdx);
					voResult.CMP_DIV_RCD_NM		= util.Grid.getCellValue(app, "grdCcsSub", "CMP_DIV_RCD_NM" , vnIdx);
					voResult.SB_CAT_RCD_NM 		= util.Grid.getCellValue(app, "grdCcsSub", "SB_CAT_RCD_NM" , vnIdx);
					
					ExtPopUp.closeLayeredPopup("callbackStdCcsPSubPopup", moStdCcsPSubPopup);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCcsSub");
			dataSet_2.parseData({
				"info": "CCS_SUB@SB_CD,OBJ_DIV_RCD,ST_DT,END_DT",
				"columns": [
					{"name": "SB_CD"},
					{"name": "SB_NM"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "SHORT_NM"},
					{"name": "SPVS_DEPT_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "SB_LVL_RCD"},
					{"name": "SB_CAT_RCD"},
					{"name": "SB_DIV_RCD"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "REC_SCALE_RCD"},
					{"name": "SB_TYPE_RCD"},
					{"name": "LECT_TYPE_RCD"},
					{"name": "EVAL_METHOD_RCD"},
					{"name": "REG_FEE_XCP_YN"},
					{"name": "SB_AMT"},
					{"name": "RE_TLSN_YN_RCD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "SPVS_DEPT_CD"},
					{"name": "SPVS_COLG_CD"},
					{"name": "SB_SMRY"},
					{"name": "SB_NO"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "SB_CAT_RCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strEndYn",
						"dataType": "string"
					},
					{
						"name": "strSpvsDeptCd",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSpvsDeptNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/ccs/StdCcsSubPopup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/ccs/StdCcsSubPopup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "523px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSpvsDeptNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-MNMDEP");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSpvsDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optSpvsDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSpvsDeptNm");
				if(typeof onIpbSpvsDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSpvsDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSpvsDeptNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSpvsDeptNmClick == "function") {
					button_2.addEventListener("click", onBtnSpvsDeptNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "240px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optCmpDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "270px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "365px",
					"width": "100px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbEndYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "폐기과목포함";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "270px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSbCdNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-SB_CD_NM1");
				container.addChild(output_3, {
					"top": "30px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbCdNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optSbCdNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				if(typeof onIpbSbCdNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbSbCdNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "110px",
					"width": "150px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "590px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SUBLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "220px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsSub"),
					"columns": [
						{"width": "40px"},
						{"width": "145px"},
						{"width": "86px"},
						{"width": "190px"},
						{"width": "101px"},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-MNMDEP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CAT_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-GRDUNITCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-LECT_TYPE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REG_FEE_XCP_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RE_TLSN_YN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SPVS_DEPT_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SPVS_COL_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_SMRY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-HAKSU_NUM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBCATGR");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SPVS_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptStDt");
										output_4.dataType = "date";
										output_4.format = "YYYY-MM-DD";
										output_4.style.css({
											"text-align" : "center"
										});
										output_4.bind("value").toDataColumn("ST_DT");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptEndDt");
										output_5.dataType = "date";
										output_5.format = "YYYY-MM-DD";
										output_5.style.css({
											"text-align" : "center"
										});
										output_5.bind("value").toDataColumn("END_DT");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SHORT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SB_CAT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SB_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "REC_SCALE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "SB_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "LECT_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "EVAL_METHOD_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REG_FEE_XCP_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "SB_AMT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptSbAmt");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("SB_AMT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_YN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "SPVS_DEPT_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "SPVS_COLG_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "SB_SMRY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "SB_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "SB_CAT_RCD_NM";
								}
							}
						]
					}
				});
				if(typeof onGrdCcsSubDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCcsSubDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "578px",
					"height": "238px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "590px",
				"height": "273px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseCancel");
			button_3.value = "";
			button_3.style.setClasses(["btn-commit"]);
			button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_3.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_3, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_4 = new cpr.controls.Button("btnCloseOk");
			button_4.value = "";
			button_4.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_4.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_4, {
				"top": "375px",
				"left": "535px",
				"width": "60px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "405px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "교과목검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
