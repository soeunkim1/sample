/*
 * App URI: app/cgd/extCgdCRelEstBat
 * Source Location: app/cgd/extCgdCRelEstBat.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/extCgdCRelEstBat", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCgdCRelEstBat.xtm"/>
			
			/**
			 * 상대평가기준설정배치
			 * @class extCgdCRelEstBat
			 * @author 박갑수 at 2016. 5. 23
			 */
			var extCgdCRelEstBat = function() {
				var moPage = new Page();
				
				var moPObject = new PObject();
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnDeptNm",
					iCd					:	"",
					iNm					:	"ipbDeptNm",
					iObjDivRcd			:	["CC009OG", "CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strLanDivRcd",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strDeptCd",
					oCdNm				:	"ipbDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onModelConstructDone_ExtCgdCRelEstBat = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCcsOpenSub"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							
							util.DataMap.setValue(app, "dmReqKey", "strTcNot", "Y");
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbSbLvlRcd", "cbbCmpDivRcd", "ckbDclRcd", "cbbEvalMethodRcd", "cbbRelEstTypeRcd", "ckbTcNot"]);
							
							setStdCmnPObjSchObjInfo();
							
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnDeptNm]소속(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onClick_BtnDeptNm = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbDeptNm]소속 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCcsOpenSub"])){
						return false;
					}
					
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbTlsnReqCapa]수강인원 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onValueChanged_IpbTlsnReqCapa = function() {
					ValidUtil.checkIntegerDecimal("ipbTlsnReqCapa", 3, 0, true);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
				
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbDeptNm"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 개설과목 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCcsOpenSub");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnBatch]설정 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				moPage.onClick_BtnBatch = function() {
					// 평가방법
					var vsEvalMethodRcd = util.Control.getValue(app, "cbbEvalMethodRcd");
					var vsEvalMethodRcdNm = ExtInstance.getValue("/root/resOnLoad/evalMethodRcdList/row", "CD_NM" , "child::CD='"+vsEvalMethodRcd+"'");
					
					// 상대평가유형
					var vsRelEstTypeRcd = util.Control.getValue(app, "cbbRelEstTypeRcd");
					var vsRelEstTypeRcdNm = ExtInstance.getValue("/root/resOnLoad/relEstTypeCdList/row", "CD_NM" , "child::CD='"+vsRelEstTypeRcd+"'");
					
					// "개설과목의 평가방법 : @, 상대평가유형 : @으로 변경 하시겠습니까?" 메시지
					if(util.Msg.confirm("NLS-CRM-M088", [vsEvalMethodRcdNm, vsRelEstTypeRcdNm]) ){
						// 개설과목 평가방법,상대평가유형 배치처리
						doSave();
					}
				};
				
				/**
				 * @desc 개설과목 평가방법,상대평가유형 배치처리
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 23
				 */
				function doSave() {
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							// 조회
							doList(function(pbSuccess) {
								if (pbSuccess){
									var vsCnt = util.DataMap.getValue(app, "dmResList", "iCnt");
									// "@건 처리되었습니다." 메시지
									util.Msg.alert("NLS-INF-M055", [vsCnt]);
								}
							});
						}else {
							// "처리가 취소되었습니다." 헤더 메시지
							util.Msg.notify(app, "NLS.INF.M013");
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmpDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSbLvlRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsEvalMethodRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDclRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRelEstTypeCdList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsCcsOpenSub");
			dataSet_8.parseData({
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SA_CD_NM"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "CU_CD"},
					{"name": "CU_OBJ_DIV_RCD"},
					{"name": "SB_CD"},
					{"name": "SB_CD_NM"},
					{"name": "SB_OBJ_DIV_RCD"},
					{"name": "DIVCLS_CD"},
					{"name": "DIVCLS_NM"},
					{"name": "REF_KEY"},
					{"name": "PNT"},
					{"name": "THEO_TC"},
					{"name": "EPAC_TC"},
					{"name": "REC_SCALE_RCD_NM"},
					{"name": "LECT_TYPE_RCD"},
					{"name": "LECT_EVAL_TYPE_RCD"},
					{"name": "CMP_DIV_RCD"},
					{"name": "SB_LVL_RCD"},
					{"name": "DCL_RCD_CD"},
					{"name": "CU_CD_NM"},
					{"name": "DAY_NIGHT_DIV_RCD_NM"},
					{"name": "EVAL_METHOD_RCD"},
					{"name": "REL_EST_TYPE_RCD"},
					{"name": "TLSN_REQ_COUNT"},
					{"name": "DCL_RCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "iCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSbLvlRcd",
						"dataType": "string"
					},
					{
						"name": "strEvalMethodRelEstType",
						"dataType": "string"
					},
					{
						"name": "strDclRcd",
						"dataType": "string"
					},
					{
						"name": "strTlsnReqCapa",
						"dataType": "string"
					},
					{
						"name": "strEvalMethodRcd",
						"dataType": "string"
					},
					{
						"name": "strRelEstTypeRcd",
						"dataType": "string"
					},
					{
						"name": "strTcNot",
						"dataType": "string"
					},
					{
						"name": "strSbNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqDclRcd");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strDclRcd",
						"dataType": "string"
					},
					{
						"name": "strDclRcdNm",
						"dataType": "string"
					},
					{
						"name": "strDclRcdDiv",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmReqLectEvalTypeRcd");
			dataMap_6.parseData({
				"columns" : [{
					"name": "strLectEvalTypeRcdBat",
					"dataType": "string"
				}]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgd/ExtCgdRelEstBat/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cmn/StdCmnDateTime/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/cgd/ExtCgdRelEstBat/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataSet_8, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cgd/ExtCgdRelEstBat/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addRequestData(dataMap_4);
			submission_4.addResponseData(dataMap_2, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-OPNESUB");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnBatch");
				button_1.value = "";
				button_1.style.setClasses(["btn-commit"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnBatchClick == "function") {
					button_1.addEventListener("click", onBtnBatchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1088px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optEvalMethodRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "618px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbEvalMethodRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optEvalMethodRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEvalMethodRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsEvalMethodRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "723px",
					"width": "120px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCcsOpenSub");
				grid_1.init({
					"dataSet": app.lookup("dsCcsOpenSub"),
					"columns": [
						{"width": "40px"},
						{"width": "154px"},
						{"width": "150px"},
						{"width": "70px"},
						{"width": "140px"},
						{"width": "50px"},
						{"width": "67px"},
						{"width": "52px"},
						{"width": "40px"},
						{"width": "40px"},
						{"width": "40px"},
						{"width": "76px"},
						{"width": "67px"},
						{"width": "70px"},
						{"width": "87px"},
						{"width": "66px"},
						{"width": "221px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{"width": "100px"},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPNAM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-THEO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DAY_NIGHT_DIV_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PRAC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RELEVALTYP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_SCALE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_SCALE_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBGRPOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBOBJDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPEN_SUB_REF_KEY");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CU_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbCmpDivCd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsCmpDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("CMP_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SB_LVL_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbSbLvlRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsSbLvlRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("SB_LVL_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "THEO_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "EPAC_TC";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "TLSN_REQ_COUNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "EVAL_METHOD_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbEvalMethodRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsEvalMethodRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("EVAL_METHOD_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "REL_EST_TYPE_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbRelEstTypeRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsRelEstTypeCdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("REL_EST_TYPE_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "REC_SCALE_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "DCL_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "SA_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "CU_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "CU_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "SB_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "513px"
				});
				var output_2 = new cpr.controls.Output("optRelEstTypeRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-RELEVALTYP");
				container.addChild(output_2, {
					"top": "5px",
					"left": "853px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_6 = new cpr.controls.ComboBox("cbbRelEstTypeRcd");
				comboBox_6.bind("fieldLabel").toExpression("#optRelEstTypeRcd.value");
				comboBox_6.bind("value").toDataMap(app.lookup("dmReqKey"), "strRelEstTypeRcd");
				(function(comboBox_6){
					comboBox_6.setItemSet(app.lookup("dsRelEstTypeCdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_6);
				container.addChild(comboBox_6, {
					"top": "5px",
					"left": "958px",
					"width": "120px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "122px",
				"left": "5px",
				"width": "1225px",
				"height": "548px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_2 = new cpr.controls.Button("btnSearch");
				button_2.value = "";
				button_2.style.setClasses(["btn-search"]);
				button_2.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_2.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSchYearRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_3, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_7 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_7.enabled = false;
				comboBox_7.userAttr({"require": "Y"});
				comboBox_7.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_7.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_7){
					comboBox_7.addItem(new cpr.controls.Item("선택", ""));
					comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_7);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_7.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_7, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSmtRcd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_4, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_8 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_8.enabled = false;
				comboBox_8.userAttr({"require": "Y"});
				comboBox_8.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_8.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_8){
					comboBox_8.addItem(new cpr.controls.Item("선택", ""));
					comboBox_8.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_8);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_8.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_8, {
					"top": "5px",
					"left": "305px",
					"width": "100px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optDeptNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "5px",
					"left": "415px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "510px",
					"width": "120px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDeptNm");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_3.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "630px",
					"width": "20px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optCmpDivRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-DB-SUB_GBN_RCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_9 = new cpr.controls.ComboBox("cbbCmpDivRcd");
				comboBox_9.bind("fieldLabel").toExpression("#optCmpDivRcd.value");
				comboBox_9.bind("value").toDataMap(app.lookup("dmReqKey"), "strCmpDivRcd");
				(function(comboBox_9){
					comboBox_9.addItem(new cpr.controls.Item("전체", ""));
					comboBox_9.setItemSet(app.lookup("dsCmpDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_9);
				container.addChild(comboBox_9, {
					"top": "30px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("ipbTlsnReqCapa");
				numberEditor_1.format = "999";
				numberEditor_1.bind("fieldLabel").toExpression("#optTlsnReqCapa.value");
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strTlsnReqCapa");
				if(typeof onIpbTlsnReqCapaValueChange == "function") {
					numberEditor_1.addEventListener("value-change", onIpbTlsnReqCapaValueChange);
				}
				container.addChild(numberEditor_1, {
					"top": "30px",
					"left": "305px",
					"width": "65px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optTlsnReqCapa");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-COURSENUM");
				container.addChild(output_7, {
					"top": "30px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optUnder");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-LESSTHAN");
				container.addChild(output_8, {
					"top": "30px",
					"left": "370px",
					"width": "35px",
					"height": "25px"
				});
				var checkBoxGroup_1 = new cpr.controls.CheckBoxGroup("ckbDclRcd");
				checkBoxGroup_1.fixedWidth = false;
				checkBoxGroup_1.bind("fieldLabel").toExpression("#optDclRcd.value");
				checkBoxGroup_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDclRcd");
				(function(checkBoxGroup_1){
					checkBoxGroup_1.setItemSet(app.lookup("dsDclRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					})
				})(checkBoxGroup_1);
				container.addChild(checkBoxGroup_1, {
					"top": "55px",
					"left": "100px",
					"width": "755px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbLectEvalTypeRcdNull");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "평가방법및유형미설정강좌";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEvalMethodRelEstType");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "415px",
					"width": "235px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optSbLvlRcd");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_9, {
					"top": "5px",
					"left": "660px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_10 = new cpr.controls.ComboBox("cbbSbLvlRcd");
				comboBox_10.bind("fieldLabel").toExpression("#optSbLvlRcd.value");
				comboBox_10.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbLvlRcd");
				(function(comboBox_10){
					comboBox_10.setItemSet(app.lookup("dsSbLvlRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_10);
				container.addChild(comboBox_10, {
					"top": "5px",
					"left": "755px",
					"width": "100px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optDclRcd");
				output_10.value = "";
				output_10.bind("value").toLanguage("UI-GLS-DCL");
				container.addChild(output_10, {
					"top": "55px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbTcNot");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "0시수 제외";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strTcNot");
				container.addChild(checkBox_2, {
					"top": "30px",
					"left": "660px",
					"width": "195px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optSbNm");
				output_11.value = "";
				output_11.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_11, {
					"top": "5px",
					"left": "864px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_2.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbNm");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "958px",
					"width": "122px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "82px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "상대평가기준설정배치";
	cpr.core.Platform.INSTANCE.register(app);
})();
