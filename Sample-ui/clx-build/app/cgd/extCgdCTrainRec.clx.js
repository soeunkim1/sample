/*
 * App URI: app/cgd/extCgdCTrainRec
 * Source Location: app/cgd/extCgdCTrainRec.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/extCgdCTrainRec", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCgdCTrainRec.xtm"/>
			
			/**
			 * 해외연수성적입력
			 * @class extCgdCTrainRec
			 * @author 박갑수 at 2016. 5. 25
			 */
			var extCgdCTrainRec = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 교과목검색팝업 호출
				moPObject.moIdsForStdCcsPSubPopup = [
				{
					 controlId					: "btnSbCd",			
					 iEndYn						: "",						
					 iLanDivRcd				: "/root/resOnLoad/strLanDivRcd",					
					 iKeyDate					: "/root/keyDateMap/ST_DT",		
					 iSbCd						: "",			
					 iSbNm						: "ipbSbNm",
					 iCmpDivRcd				: "", 			
					 iSpvsDeptCd				: "",		
					 iSpvsDeptNm			: "",		
					 iObjDivRcd				: "",
					 oSbCd						: "ipbSbCd",			
					 oObjDivRcd				: "",
					 oStDt						: "",
					 oEndDt						: "",
					 oLanDivRcd				: "",
					 oRefKey					: "",
					 oSbNm					: "ipbSbNm",			
					 oShortNm					: "",			
					 oSbCatRcd				: "",			
					 oSbDivRcd				: "",			
					 oPnt							: "/root/reqKey/strPnt",
					 oTheoTc					: "",		
					 oEpacTc					: "",	
					 oSpvsColgCd			: "",			
					 oSpvsDeptCd			: "",			
					 oSpvsDeptNm			: "",		
					 oCmpDivRcd				: "/root/reqKey/strCmpDivRcd",			
					 oRecScaleRcd			: "",
					 oSbTypeRcd				: "",
					 oSbLvlRcd				: "",
					 oEvalMethodRcd		: "",
					 oLectTypeRcd			: "",
					 oSbSmry					: "",
					 oRegFeeXcpYn			: "",
					 oSbAmt					: "",
					 oCmpDivRcdNm		: "",
					 oSbCatRcdNm			: "",
					 oReTlsnYnRcd			: "",
					 func : function(poParam) {
					}
				 }];
				 
				 /**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onModelConstructDone_ExtCgdCTrainRec = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCgdRec"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"], ["grpSearch1"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbStSchYearRcd", "cbbStSmtRcd", "cbbEndSchYearRcd", "cbbEndSmtRcd", "cbbDspNatRcd",  "cbbSchYearRcd"]);
							
							// 컨트롤 Default 값 설정
							util.Control.setValue(app, "dipStDt", util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT"));
							util.Control.setValue(app, "dipEndDt", util.DataMap.getValue(app, "dmKeyDateMap", "END_DT"));
							
							util.Control.setValue(app, "cbbSchYearRcd", util.DataMap.getValue(app, "dmKeyDateMap", "YEAR"));
							util.Control.setValue(app, "cbbSmtRcd", "CA00380");		// 해외연수학기[CA00380]
							
							//ExtControl.setValue("cbbStSchYearRcd", ExtInstance.getValue("/root/keyDateMap/YEAR"));
							//ExtControl.setValue("cbbEndSchYearRcd", ExtInstance.getValue("/root/keyDateMap/YEAR"));
							
							//ExtControl.setValue("cbbStSmtRcd", ExtInstance.getValue("/root/keyDateMap/SMT"));
							//ExtControl.setValue("cbbEndSmtRcd", ExtInstance.getValue("/root/keyDateMap/SMT"));
							
							
							util.Control.setFocus(app, "dipStDt");
						}
					}, true);
				};
				
				/**
				 * @desc [dipStDt]시작일자 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_DipStDt = function() {
					if(!doCheckDate("ST_DT")){
						util.Control.setValue(app, "dipStDt", "");
					}
				};
				
				/**
				 * @desc [dipEndDt]종료일자 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_DipEndDt = function() {
					if(!doCheckDate("END_DT")){
						util.Control.setValue(app, "dipEndDt", "");
					}
				};
				
				/**
				 * @desc 시작일이 종료일보다 크거나 종료일이 시작일보다 작은지 검사
				 * @param psColNm		(필수) 날짜컬럼명
				 * @return boolean
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doCheckDate(psColNm){
					// 유효성 true or false
					var vbValid = true;
			
					// 시작일자
					var vsStDt = util.Control.getValue(app, "dipStDt").substring(0, 8);
					// 종료일자
					var vsEndDt = util.Control.getValue(app, "dipEndDt").substring(0, 8);
					
					// 시작일 유효성 체크
					if(psColNm == "ST_DT"){
						if(!ValueUtil.isNull(vsEndDt) && vsStDt > vsEndDt){
							// "시작일이 종료일 보다 클 수 없습니다." 메시지 출력
							util.Msg.alert("NLS-CSS-M063");
							vbValid = false;
							return vbValid;
						}
			
					// 종료일 유효성 체크
					} else if(psColNm == "END_DT"){
						if(!ValueUtil.isNull(vsStDt) && vsStDt > vsEndDt){
							util.Msg.alert("NLS-CSS-M064");
							vbValid = false;
							return vbValid;
						}
					}
					
					return vbValid;
				};
				
				/**
				 * @desc [cbbStSchYearRcd]파견시작학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_CbbStSchYearRcd = function() {
					// 학년도, 학기 유효성체크
					if(!doCheckYearSmt()){
						util.Control.setValue(app, "cbbStSchYearRcd", "");
					}
				};
				
				/**
				 * @desc [cbbStSmtRcd]파견시작학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_CbbStSmtRcd = function() {
					// 학년도, 학기 유효성체크
					if(!doCheckYearSmt()){
						util.Control.setValue(app, "cbbStSmtRcd", "");
					}
				};
				
				/**
				 * @desc [cbbEndSchYearRcd]파견종료학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_CbbEndSchYearRcd = function() {
					// 학년도, 학기 유효성체크
					if(!doCheckYearSmt()){
						util.Control.setValue(app, "cbbEndSchYearRcd", "");
					}
				};
				
				/**
				 * @desc [cbbEndSmtRcd]파견종료학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_CbbEndSmtRcd = function() {
					// 학년도, 학기 유효성체크
					if(!doCheckYearSmt()){
						util.Control.setValue(app, "cbbEndSmtRcd", "");
					}
				};
				
				/**
				 * @desc 시작학년도학기, 종료학년도학기 유효성 체크
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doCheckYearSmt(){
					// 유효성 true or false
					var vbValid = true;
					
					// 시작학년도
					var vsStYear = util.Control.getValue(app, "cbbStSchYearRcd").substring(5);
					// 종료학년도
					var vsEndYear = util.Control.getValue(app, "cbbEndSchYearRcd").substring(5);
					
					// 시작학기
					var vsStSmt = util.Control.getValue(app, "cbbStSmtRcd").substring(5);
					// 종료학기
					var vsEndSmt = util.Control.getValue(app, "cbbEndSmtRcd").substring(5);
					
					// 시작학년도 종료학년도가 입력되었을경우
					if(!ValueUtil.isNull(vsStYear) && !ValueUtil.isNull(vsEndYear)){
						// 시작학년도가 클경우
						if(Number(vsStYear) > Number(vsEndYear)){
							var vsStYearTitle = ExtControl.getTextValue("lblStSchYearRcd");
							var vsEndYearTitle = ExtControl.getTextValue("lblEndSchYearRcd");
							
							// "@은(는) @보다 클수 없습니다." 메시지
							util.Msg.alert("NLS-WRN-M052", [vsStYearTitle, vsEndYearTitle]);
							vbValid = false;
							return vbValid;
							
						}else if(Number(vsStYear) == Number(vsEndYear)){
							
							// 시작학기, 종료학기가 입력되었을경우
							if(!ValueUtil.isNull(vsStSmt) && !ValueUtil.isNull(vsEndSmt)){
								// 시작학기가 클경우
								if(Number(vsStSmt) > Number(vsEndSmt)){
									var vsStSmtTitle = ExtControl.getTextValue("lblStSmtRcd");
									var vsEndSmtTitle = ExtControl.getTextValue("lblEndSmtRcd");
									
									// "@은(는) @보다 클수 없습니다." 메시지
									util.Msg.alert("NLS-WRN-M052", [vsStSmtTitle, vsEndSmtTitle]);
									vbValid = false;
									return vbValid;
								}
							}
						}
					}
					
					return vbValid;
				};
				
				/**
				 * @desc [btnSbCd]해외연수 교과목(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onClick_BtnSbCd = function(sender) {
					// 교과목검색팝업 호출
					doOnClickStdCcsPSubPopup(sender);
				};
				
				/**
				 * @desc [ipbSbNm]해외연수 교과목 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_IpbSbNm = function(sender) {
					// 값변경시 교과목검색팝업 호출
					doOnChangeStdCcsPSubPopup(sender);
				};
			
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["dipStDt", "dipEndDt", "cbbSchYearRcd", "cbbSmtRcd", "ipbSbNm"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
			
				/**
				 * @desc 해외연수명단 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCgdRec");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onClick_BtnDel = function() {
					// 해당 리피트 delete
					util.Grid.deleteRow(app, "grdCgdRec");
				};
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onClick_BtnRestore = function() {
					// 해당 리피트 상태 초기화
					util.Grid.restoreRow(app, "grdCgdRec");
				};
			
				/**
				 * @desc [rdCbbGrdRcd]등급 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onValueChanged_RdCbbGrdRcd = function() {
					// 삭제상태일경우 Skip
					var vsUptStatus = util.Grid.getCellValue(app, "grdCgdRec", "UPT_STATUS");
					if(ValueUtil.fixNull(vsUptStatus) != "D"){
						
						util.DataMap.setValue(app, "dmReqSelRow", "strStudId", util.Grid.getCellValue(app, "grdCgdRec", "STUD_ID"));
						util.DataMap.setValue(app, "dmReqSelRow", "strPgmKey", util.Grid.getCellValue(app, "grdCgdRec", "PGM_KEY"));
						
						// 등급 변경시 기존 성적 데이터 체크
						doCgdRecChk(function(pbSuccess) {
							
							// 다른 해외연수프로그램에대한 기존성적이 존재할경우 Y
							var vsCgdRecYn = util.DataMap.getValue(app, "dmResList", "strCgdRecYn");
							
							if(ValueUtil.fixNull(vsCgdRecYn) == "Y"){
								
								// 이미 부여된 성적이 있습니다. 이전성적을 취소하고 다시 부여하시겠습니까?
								if(!util.Msg.confirm("NLS-CRM-M089") ){
									// 해당 리피트 상태 초기화
									util.Grid.restoreRow(app, "grdCgdRec");
									util.Grid.setCellValue(app, "grdCgdRec", "FLAG_GBN", "");
								}else {
									util.Grid.setCellValue(app, "grdCgdRec", "FLAG_GBN", "P");
								}
							}
						});
					}
				};
				
				/**
				 * @desc 기존 성적 데이터 체크
				 * @param poCallBackFunc 콜백정의
				 * @return voidㅈ3ㅈ
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doCgdRecChk(poCallBackFunc) {
					
					//strCommand: cgdRecChk 
					util.Submit.send(app, "subCgdRecChk", function(pbSuccess){
						if(pbSuccess){				
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				moPage.onClick_BtnSave = function() {
					doSave();
				};
				
				/**
				 * @desc 해외연수명단 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCgdRec"], "MSG")){
						return false;
					}
					
					// 저장조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSbNm"])){
						return false;
					}
					
					// 저장전 중복체크
					if(!doChkOverlap()){
						return false;
					}
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc 해외연수명단 중복체크
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 5. 25
				 */
				function doChkOverlap(){
					// 유효성 true or false
					var vbValid = true;
			
					var vnRowCnt = util.Grid.getRowCount(app, "grdCgdRec");
					
					for(var i=0; i<vnRowCnt; i++){
						var vnIdxOri = i+1;
						
						var vsStatus = util.Grid.getRowState(app, "grdCgdRec", vnIdxOri);
						// 변경상태가 있고 Delete가 아닐경우 체크
						if(!ValueUtil.isNull(vsStatus) && ValueUtil.fixNull(vsStatus) != "delete"){
							
							var vsStudIdOri = util.Grid.getCellValue(app, "grdCgdRec", "STUD_ID", vnIdxOri);
							var vsGrdRcdOri =  util.Grid.getCellValue(app, "grdCgdRec", "GRD_RCD", vnIdxOri);
							var vsFlagGbnOri = util.Grid.getCellValue(app, "grdCgdRec", "FLAG_GBN", vnIdxOri);
							
							for(var j=0; j<vnRowCnt; j++){
								var vnIdx = j+1;
								
								// 삭제일경우 제외
								var vsUptStatus = util.Grid.getCellValue(app, "grdCgdRec", "UPT_STATUS", vnIdx);
								if(ValueUtil.fixNull(vsUptStatus) == "D") continue;
								// 자기자신일경우 제외
								if(vnIdxOri == vnIdx) continue;
								
								var vsStudId =util.Grid.getCellValue(app, "grdCgdRec", "STUD_ID", vnIdx);
								var vsGrdRcd =util.Grid.getCellValue(app, "grdCgdRec", "GRD_RCD", vnIdx);
								var vsFlagGbn = util.Grid.getCellValue(app, "grdCgdRec", "FLAG_GBN", vnIdx);
								
								// 같은 학생일경우 등급이 두번 입력되었는지 비교
								if(vsStudIdOri == vsStudId && !ValueUtil.isNull(vsGrdRcdOri) && !ValueUtil.isNull(vsGrdRcd) && ValueUtil.fixNull(vsFlagGbnOri) != "P" && ValueUtil.fixNull(vsFlagGbn) != "P"){
									var vsRepNm = util.Grid.getCellValue(app, "grdCgdRec", "REP_NM", vnIdx);
									// @ 학생의 해외연수 성적은 한번만 입력 가능합니다.(@번째, @번째)\n데이터를 확인해 주십시오.
									util.Msg.alert("NLS-CGD-EXT001", [vsRepNm , vnIdxOri, vnIdx]);
									
									vbValid = false;
									return vbValid;
								}
							}
						}
					}
					
					return vbValid;
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsNatRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsGrdRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "REC_SCALE_RCD"},
					{"name": "GRD_NM"},
					{"name": "GRD_RCD"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCgdRec");
			dataSet_5.parseData({
				"info": "CGD_REC@PGM_KEY",
				"columns": [
					{"name": "SA_NM"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "CLASS_NM"},
					{"name": "PGM_NM"},
					{"name": "NAT_NM"},
					{"name": "STUD_ID"},
					{"name": "GRD_RCD"},
					{"name": "REF_KEY"},
					{"name": "PGM_KEY"},
					{"name": "REC_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "DIVCLS_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strCgdRecYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strStSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strStSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strEndSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strEndSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strAgencyNm",
						"dataType": "string"
					},
					{
						"name": "strDspNatRcd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSbCd",
						"dataType": "string"
					},
					{
						"name": "strSbCdNm",
						"dataType": "string"
					},
					{
						"name": "strCmpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strPgmKey",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgd/ExtCgdTrainRec/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cgd/ExtCgdTrainRec/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCgdRecChk");
			submission_3.action = "/cgd/ExtCgdTrainRec/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addRequestData(dataMap_5);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cgd/ExtCgdTrainRec/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_5);
			submission_4.addRequestData(dataMap_3);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStSchYearRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("NLS-DLG-LBL-L001");
				container.addChild(output_1, {
					"top": "5px",
					"left": "310px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbStSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.bind("fieldLabel").toExpression("#optStSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStSchYearRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbStSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbStSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "405px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optStSmtRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "515px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optEndSchYearRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("NLS-DLG-LBL-L001");
				container.addChild(output_3, {
					"top": "5px",
					"left": "720px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbEndSchYearRcd");
				comboBox_2.enabled = false;
				comboBox_2.bind("fieldLabel").toExpression("#optEndSchYearRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndSchYearRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbEndSchYearRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbEndSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "815px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optEndSmtRcd");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "925px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbEndSmtRcd");
				comboBox_3.enabled = false;
				comboBox_3.bind("fieldLabel").toExpression("#optEndSmtRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndSmtRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				if(typeof onCbbEndSmtRcdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbEndSmtRcdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "1020px",
					"width": "100px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optDspNatRcd");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_5, {
					"top": "30px",
					"left": "310px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbDspNatRcd");
				comboBox_4.enabled = false;
				comboBox_4.bind("fieldLabel").toExpression("#optDspNatRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strDspNatRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsNatRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "405px",
					"width": "100px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipEndDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndDt");
				if(typeof onDipEndDtValueChange == "function") {
					dateInput_1.addEventListener("value-change", onDipEndDtValueChange);
				}
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "205px",
					"width": "95px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optDtDiv");
				output_6.value = "~";
				container.addChild(output_6, {
					"top": "5px",
					"left": "190px",
					"width": "15px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipStDt");
				dateInput_2.userAttr({"require": "Y"});
				dateInput_2.bind("fieldLabel").toExpression("#optDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStDt");
				if(typeof onDipStDtValueChange == "function") {
					dateInput_2.addEventListener("value-change", onDipStDtValueChange);
				}
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "100px",
					"width": "90px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optDt");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-SCR-LSNTERM");
				container.addChild(output_7, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbStSmtRcd");
				comboBox_5.enabled = false;
				comboBox_5.bind("fieldLabel").toExpression("#optStSmtRcd.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strStSmtRcd");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				if(typeof onCbbStSmtRcdSelectionChange == "function") {
					comboBox_5.addEventListener("selection-change", onCbbStSmtRcdSelectionChange);
				}
				container.addChild(comboBox_5, {
					"top": "5px",
					"left": "610px",
					"width": "100px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optAgencyNm");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-LSNTERM");
				container.addChild(output_8, {
					"top": "30px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbAgencyNm");
				inputBox_1.maxLength = 100;
				inputBox_1.bind("fieldLabel").toExpression("#optAgencyNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strAgencyNm");
				container.addChild(inputBox_1, {
					"top": "30px",
					"left": "100px",
					"width": "200px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-OPNESUB");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCgdRec");
				grid_1.init({
					"dataSet": app.lookup("dsCgdRec"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "210px"},
						{"width": "89px"},
						{"width": "92px"},
						{"width": "60px"},
						{"width": "439px"},
						{"width": "150px"},
						{"width": "102px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CLASSZ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DAY_NIGHT_DIV_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-GRD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STUID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_GBN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_9 = new cpr.controls.Output();
										output_9.style.css({
											"text-align" : "center"
										});
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PGM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "NAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "GRD_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbGgdRcd");
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsGrdRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("GRD_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REC_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "END_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "PGM_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "FLAG_GBN";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "503px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1028px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1093px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "132px",
				"left": "5px",
				"width": "1225px",
				"height": "538px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCcsPSubPopup");
			cpr.core.App.load("app/ccs/impStdCcsPSubPopup", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container("grpSearch1");
			group_3.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var output_10 = new cpr.controls.Output("optSchYearRcd");
				output_10.value = "";
				output_10.style.setClasses(["require"]);
				output_10.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_10, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_7 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_7.userAttr({"require": "Y"});
				comboBox_7.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_7.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcd");
				(function(comboBox_7){
					comboBox_7.addItem(new cpr.controls.Item("선택", ""));
					comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_7);
				container.addChild(comboBox_7, {
					"top": "5px",
					"left": "100px",
					"width": "100px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optSmtRcd");
				output_11.value = "";
				output_11.style.setClasses(["require"]);
				output_11.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_11, {
					"top": "5px",
					"left": "210px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_8 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_8.userAttr({"require": "Y"});
				comboBox_8.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_8.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcd");
				(function(comboBox_8){
					comboBox_8.addItem(new cpr.controls.Item("해외연수(1학기)", "CA00380"));
					comboBox_8.addItem(new cpr.controls.Item("해외연수(2학기)", "CA00381"));
					comboBox_8.addItem(new cpr.controls.Item("선택", ""));
				})(comboBox_8);
				container.addChild(comboBox_8, {
					"top": "5px",
					"left": "305px",
					"width": "115px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optSbNm");
				output_12.value = "";
				output_12.style.setClasses(["require"]);
				output_12.bind("value").toLanguage("UI-DB-SB_NM");
				container.addChild(output_12, {
					"top": "5px",
					"left": "430px",
					"width": "110px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSbCd");
				button_5.value = "";
				button_5.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSbCdClick == "function") {
					button_5.addEventListener("click", onBtnSbCdClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "745px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSbCd");
				inputBox_2.enabled = false;
				inputBox_2.maxLength = 10;
				inputBox_2.style.css({
					"text-align" : "center"
				});
				inputBox_2.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "546px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbSbNm");
				inputBox_3.maxLength = 100;
				inputBox_3.userAttr({"require": "Y"});
				inputBox_3.bind("fieldLabel").toExpression("#optSbNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSbCdNm");
				if(typeof onIpbSbNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbSbNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "625px",
					"width": "120px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "해외연수성적입력";
	cpr.core.Platform.INSTANCE.register(app);
})();
