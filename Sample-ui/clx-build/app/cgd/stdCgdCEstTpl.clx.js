/*
 * App URI: app/cgd/stdCgdCEstTpl
 * Source Location: app/cgd/stdCgdCEstTpl.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/stdCgdCEstTpl", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCgdCEstTpl.xtm"/>
			
			/**
			 * 평가템플릿관리
			 * @class stdCgdCEstTpl
			 * @author 박갑수 at 2016. 3. 18
			 */
			var stdCgdCEstTpl = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 평가템플릿 검색
				moIdsForStdCgdPEstTplPopup = [
				{
					 controlId					: "btnEstTplNm",			
					 iEstTplCd					: "",			
					 iEstTplNm				: "ipbEstTplNm",			
					 oEstTplCd				: "/root/reqKey/strTopEstTplCd",			
					 oEstTplNm				: "ipbEstTplNm",			
					 oUestTplCd				: "",		
					 oRefKey					: "",			
					 func : function(poParam) {
						 // 검색조건이 있을경우 조회
						var vsEstTplNm = util.Control.getValue(app, "ipbEstTplNm");
						if(!ValueUtil.isNull(vsEstTplNm)){
							util.Header.clickSearch(app);
						}
					 }
				 }];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onModelConstructDone_StdCgdCEstTpl = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCgdEstTpl", "rptCgdEstFactor"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData", "grpDataDtl", "grpTree"]);
							
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							// 조회조건 평가템플릿명포커스
							util.Control.setFocus(app, "ipbEstTplNm");
						}
					}, true);
				};
				
				/**
				 * @desc [btnEstTplNm]평가템플릿명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnEstTplNm = function(sender) {
					// 평가템플릿검색 팝업 호출
					doOnClickStdCgdPEstTplPopup(sender);
				};
				
				/**
				 * @desc [ipbEstTplNm]평가템플릿명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_IpbEstTplNm = function(sender) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdCgdEstTpl", "grdCgdEstFactor"])){
						return false;
					}
			
					// 평가템플릿검색 팝업 호출
					doOnChangeStdCgdPEstTplPopup(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["ipbEstTplNm"])){
						return false;
					}
			
					// 조회
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 평가템플릿 목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doList(poCallBackFunc) {
					// 디테일 리피트 변경시 변경내역 체크 방지
					util.Control.redraw(app, "grdCgdEstFactor");
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCgdEstTpl");
							ExtTreeView.rebuild("trvCgdEstTpl");
							
							util.Tree.expandAllItems(app, "trvCgdEstTpl", true);
							
							// 마스터에 데이터가 없을 경우 디테일 입력 불가
							if(util.Grid.getRowCount(app, "grdCgdEstTpl") < 1){
								util.Control.setEnable(app, false,["grpDataDtl"]);
								util.Control.reset(app, "rptCgdEstFactor");
							}else{
								// 각 컨트롤 활성화 제어
								doMstRptStatus();
								doDtlRptStatus();
							}
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 마스터 데이터의 변경내역이 존재여부에 따른 디테일 활성/비활성
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doMstRptStatus(){
					if(util.Grid.isModified(app, "grdCgdEstTpl")){
						util.Control.setEnable(app, false, ["grpDataDtl"]);
					}else{
						util.Control.setEnable(app, true, ["grpDataDtl"]);
					}
				};
			
				/**
				 * @desc 디테일 데이터의 변경내역이 존재여부에 따른 마스터 활성/비활성
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doDtlRptStatus(){
					if(util.Grid.isModified(app, "grdCgdEstFactor")){
						util.Control.setEnable(app, false, ["grpData", "grpTree"]);
					}else{
						util.Control.setEnable(app, true, ["grpData", "grpTree"]);
					}
				};
				
				/**
				 * @desc [rhCkbSelect]패널 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/**
				 * @desc [rdIpbRflcRate]반영비율 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RdIpbRflcRate = function() {
					ValidUtil.checkIntegerDecimal("rdIpbRflcRate", 3, 0, true);
					
					// 반영비율의 합이 100을 초과하는지 검사
					if(!doChkRflcRate()){
						util.Grid.setCellValue(app, "grdCgdEstTpl", "RFLC_RATE", "");
					}
				};
				
				/**
				 * @desc 반영비율의 합이 100을 초과하는지 검사
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doChkRflcRate(){
					// 유효성 true or false
					var vbValid = true;
			
					var vnRowCnt = util.Grid.getRowCount(app, "grdCgdEstTpl");
					
					// 반영비율
					var vsRflcRate = util.Grid.getCellValue(app, "grdCgdEstTpl", "RFLC_RATE");
					if(ValueUtil.isNull(vsRflcRate)){
						return vbValid;
					}
					// 상위평가템플릿코드
					var vsUestTplCd = util.Grid.getCellValue(app, "grdCgdEstTpl", "UEST_TPL_CD");
						
					// 상위평가템플릿이 존재하지 않을경우 반영비율이 100 초과하는지 검사
					if(ValueUtil.isNull(vsUestTplCd)){
						if(ValueUtil.fixNull(util.Grid.getCellValue(app, "grdCgdEstTpl", "UPT_STATUS")) != "D"){
							
							if(100 < Number(vsRflcRate)){
								// "반영비율의 합이 100을 초과할 수 없습니다." 메시지 
								util.Msg.alert("NLS-CGD-M025");
								
								vbValid = false;
								return vbValid;
							}
						}
					// 상위평가템플릿이 존재하는경우 같은 상위평가템플릿의 반영비율이 100 초과하는지 검사
					}else {
						// 반영비율의 합
						var vnTotRflcRate = 0;
						
						for(var i=0; i<vnRowCnt; i++){
							var vnIdx = i+1;
							
							// 삭제일경우 제외
							var vsUptStatus = util.Grid.getCellValue(app, "grdCgdEstTpl", "UPT_STATUS", vnIdx);
							if(ValueUtil.fixNull(vsUptStatus) == "D") continue;
							
							var vsUestTplCdRow = util.Grid.getCellValue(app, "grdCgdEstTpl", "UEST_TPL_CD", vnIdx);
							
							if(vsUestTplCd == vsUestTplCdRow){
								// 반영비율
								var vsRflcRateRow = util.Grid.getCellValue(app, "grdCgdEstTpl", "RFLC_RATE", vnIdx);
								
								vnTotRflcRate = vnTotRflcRate + Number(vsRflcRateRow);
							}
						}
						
						if(100 < vnTotRflcRate){
							// "반영비율의 합이 100을 초과할 수 없습니다." 메시지 
							util.Msg.alert("NLS-CGD-M025");
							
							vbValid = false;
							return vbValid;
						}
					}
			
					return vbValid;
				};
				
				/**
				 * @desc [rdCbbUestTplCd]상위평가템플릿 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RdCbbUestTplCd = function() {
					// 반영비율의 합이 100을 초과하는지 검사
					if(!doChkRflcRate()){
						util.Grid.setCellValue(app, "grdCgdEstTpl", "UEST_TPL_CD", "");
					}
				};
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnNew = function() {
					// 신규로직
					doNew();
				};
				
				/**
				 * @desc 평가템플릿목록 신규
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doNew(psUestTplCd){
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdCgdEstTpl", "rdIpbEstTplCd");
					
					if(!ValueUtil.isNull(psUestTplCd)){
						util.Grid.setCellValue(app, "grdCgdEstTpl", "UEST_TPL_CD", psUestTplCd, vnIdx);
					}
					
					// 개인권한[CC00104] 
					if (moPageInfo.authRngRcd == "CC00104") {
						util.Grid.setCellValue(app, "grdCgdEstTpl", "APLY_LMT", moUserInfo.id, vnIdx);
					}
					
					// 마스터 데이터의 변경내역에 따른 디테일 활성/비활성
					doMstRptStatus();
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnDel = function() {
					// 삭제
					util.Grid.deleteRow(app, "grdCgdEstTpl");
					// 마스터 데이터의 변경내역에 따른 디테일 활성/비활성
					doMstRptStatus();
				};
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdCgdEstTpl");
					// 마스터 데이터의 변경내역에 따른 디테일 활성/비활성
					doMstRptStatus();
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnSave = function() {
					// 작업저장
					doSave();
				};
				
				/**
				 * @desc 평가템플릿목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCgdEstTpl"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check		
					if(!util.validate(app, "grdCgdEstTpl")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc [rptCgdEstTpl]평가템플릿목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onRowSelect_RptCgdEstTpl = function() {
					// 마스터 신규일경우 평가요소목록 초기화
					if(util.Grid.getRowState(app, "grdCgdEstTpl") == cpr.data.tabledata.RowState.INSERTED){
						util.Control.reset(app, "rptCgdEstFactor");
						return false;
					}
					
					// 트리아이템 포커스
					var vsEstTplCd = util.Grid.getCellValue(app, "grdCgdEstTpl", "EST_TPL_CD");
					ExtTreeView.findItemValue("trvCgdEstTpl", vsEstTplCd);
					
					// 평가요소목록 조회
					doListDtl();
				};
				
				/**
				 * @desc 평가요소목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doListDtl(poCallBackFunc) {
					
					// 참조키
					util.DataMap.setValue(app, "dmReqKey", "strEstTplCd", util.Grid.getCellValue(app, "grdCgdEstTpl", "EST_TPL_CD"));
					
					//strCommand: listFactor 
					util.Submit.send(app, "subListDtl", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCgdEstFactor");
							
							// 디테일 리피트 상태에 따른 마스터 활성화 제어
							doDtlRptStatus();
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [btnNewDtl]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnNewDtl = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdCgdEstFactor");
					
					// 평가템플릿코드 : 마스터목록
					var vsEstTplCd = util.DataMap.getValue(app, "dmReqKey", "strEstTplCd");
					util.Grid.setCellValue(app, "grdCgdEstFactor", "EST_TPL_CD", vsEstTplCd, vnIdx);
					
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doDtlRptStatus();
				};
				
				/**
				 * @desc [btnDelDtl]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnDelDtl = function() {
					// 삭제
					util.Grid.deleteRow(app, "grdCgdEstFactor");
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doDtlRptStatus();
				};
				
				/**
				 * @desc [btnRestoreDtl]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnRestoreDtl = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdCgdEstFactor");
					// 디테일 리피트 상태에 따른 마스터 활성화 제어
					doDtlRptStatus();
				};
				
				/**
				 * @desc [btnSaveDtl]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnSaveDtl = function() {
					// 작업저장
					doSaveDtl();
				};
				
				/**
				 * @desc 평가요소목록 변경사항 저장
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doSaveDtl() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCgdEstFactor"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check		
					if(!util.validate(app, "grdCgdEstFactor")) return false;
					
					//strCommand: saveFactor 
					util.Submit.send(app, "subSaveDtl", function(pbSuccess){
						if(pbSuccess){
							doListDtl(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc [rdIpbPscCiiDtl]만점기쥰 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RdIpbPscCiiDtl = function() {
					ValidUtil.checkIntegerDecimal("rdIpbPscCiiDtl", 3, 0, true);
				};
				
				/**
				 * @desc [rdIpbRflcRateDtl]반영비율 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RdIpbRflcRateDtl = function() {
					ValidUtil.checkIntegerDecimal("rdIpbRflcRateDtl", 3, 0, true);
					
					// 반영비율의 합이 100을 초과하는지 검사
					if(!doChkRflcRateDtl()){
						util.Grid.setCellValue(app, "grdCgdEstFactor", "RFLC_RATE", "");
					}
				};
				
				/**
				 * @desc 반영비율의 합이 100을 초과하는지 검사
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doChkRflcRateDtl(){
					// 유효성 true or false
					var vbValid = true;
			
					var vnRowCnt = util.Grid.getRowCount(app, "grdCgdEstFactor");
					
					// 반영비율
					var vsRflcRate = util.Grid.getCellValue(app, "grdCgdEstFactor", "RFLC_RATE");
					if(ValueUtil.isNull(vsRflcRate)){
						return vbValid;
					}
					
					// 반영비율의 합
					var vnTotRflcRate = 0;
					
					for(var i=0; i<vnRowCnt; i++){
						var vnIdx = i+1;
						
						// 삭제일경우 제외
						var vsUptStatus = util.Grid.getCellValue(app, "grdCgdEstFactor", "UPT_STATUS", vnIdx);
						if(ValueUtil.fixNull(vsUptStatus) == "D") continue;
						
						// 반영비율
						var vsRflcRateRow = util.Grid.getCellValue(app, "grdCgdEstFactor", "RFLC_RATE", vnIdx);
						vnTotRflcRate = vnTotRflcRate + Number(vsRflcRateRow);
					}
					
					if(100 < vnTotRflcRate){
						// "반영비율의 합이 100을 초과할 수 없습니다." 메시지 
						util.Msg.alert("NLS-CGD-M025");
						
						vbValid = false;
						return vbValid;
					}
			
					return vbValid;
				};
				
				/**
				 * @desc [rhCkbSelectDtl]패널 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onValueChanged_RhCkbSelectDtl = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelectDtl");
				};
				
				/**
				 * @desc [trvCgdEstTpl]템플릿구조 onSelectionChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onSelectionChanged_TrvCgdEstTpl = function() {
					var vsEstTplCd = util.Tree.getSelectedValue(app, "trvCgdEstTpl");
					
					// 평가템플릿코드에해당하는 항목에 선택
					ExtRepeat.selectRowByValues("rptCgdEstTpl", "EST_TPL_CD:"+vsEstTplCd, true);
				};
				
				/**
				 * @desc [trvCgdEstTpl]템플릿구조 onrbuttondown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 9
				 */
				moPage.onrbuttondown_TrvCgdEstTpl = function() {
					// 컨텍스트메뉴 열기
					doOpenContextMenu();
				};
				
				/**
				 * @desc 컨텍스트메뉴 열기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 9
				 */
				function doOpenContextMenu() {
					var vsEstTplCd = util.Tree.getSelectedValue(app, "trvCgdEstTpl");
					
					if( ValueUtil.isNull(vsEstTplCd) ) {
						// "라인을 선택하세요."	메시지
						util.Msg.alert("NLS-INF-M023");
						return false;
					}
					
					// 하위 평가템플릿 생성
					model.addMenuCtrl(1, NLS.CCS.CRTTMP, 	"doNew(" + vsEstTplCd + ")", 0, "javascript");
					
					var vsMouPos = model.getMousePos();
					var vaMouPos = vsMouPos.split(",");
					model.popMenu(vaMouPos[0] , vaMouPos[1] );
				};
				
				/**
				 * @desc [rdCbbUestTplCd]템플릿구조 onSetFocus 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 9
				 */
				moPage.onSetFocus_RdCbbUestTplCd = function() {
					var vsEstTplCd = util.Grid.getCellValue(app, "grdCgdEstTpl", "EST_TPL_CD");
					ExtControl.setAttr("rdCbbUestTplCd", "nodeset", "/root/resList/rptCgdEstTpl/row[child::EST_TPL_CD != '"+vsEstTplCd+"' and UPT_STATUS != 'N' and UPT_STATUS !=  'D']");
					util.Control.redraw(app, "rdCbbUestTplCd");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsEstMethodRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEstFactorRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsEstDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCgdEstFactor");
			dataSet_4.parseData({
				"info": "CGD_EST_FACTOR@EST_TPL_CD,SERIAL_NO",
				"columns": [
					{"name": "EST_TPL_CD"},
					{"name": "SERIAL_NO"},
					{"name": "EST_FACTOR_RCD"},
					{"name": "EST_METHOD_RCD"},
					{"name": "PSC_CII"},
					{"name": "RFLC_RATE"},
					{"name": "REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCgdEstTpl");
			dataSet_5.parseData({
				"info": "CGD_EST_TPL@EST_TPL_CD",
				"columns": [
					{"name": "EST_TPL_CD"},
					{"name": "EST_TPL_NM"},
					{"name": "UEST_TPL_CD"},
					{"name": "EST_DIV_RCD"},
					{"name": "RFLC_RATE"},
					{"name": "RE_EST_TYPE_RCD"},
					{"name": "BASE_TPL_YN"},
					{"name": "REF_KEY"},
					{"name": "APLY_LMT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strTopEstTplCd",
						"dataType": "string"
					},
					{
						"name": "strTopEstTplNm",
						"dataType": "string"
					},
					{
						"name": "strEstTplCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgd/StdCgdEstTpl/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cgd/StdCgdEstTpl/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cgd/StdCgdEstTpl/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_5);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "/cgd/StdCgdEstTpl/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_4, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "/cgd/StdCgdEstTpl/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_4);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optEstTplNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-DB-EST_TPL_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbEstTplNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optEstTplNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strTopEstTplNm");
				if(typeof onIpbEstTplNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbEstTplNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "125px",
					"width": "160px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnEstTplNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnEstTplNmClick == "function") {
					button_2.addEventListener("click", onBtnEstTplNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "285px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCgdPEstTplPopup");
			cpr.core.App.load("app/cgd/impStdCgdPEstTplPopup", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "5px",
				"width": "130px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "858px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "793px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnDel");
				button_5.value = "";
				button_5.style.setClasses(["btn-delete"]);
				button_5.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_5.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "728px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnNew");
				button_6.value = "";
				button_6.style.setClasses(["btn-new"]);
				button_6.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_6.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "663px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCgdEstTpl");
				grid_1.init({
					"dataSet": app.lookup("dsCgdEstTpl"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "180px"},
						{"width": "250px"},
						{"width": "250px"},
						{"width": "141px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-EST_TPL_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-EST_TPL_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-UPEVALUTPL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RFLC_RATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RE_EST_TYPE_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALUDIV");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.style.css({
											"text-align" : "center"
										});
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "EST_TPL_CD";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbEstTplCd");
										inputBox_2.maxLength = 50;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("EST_TPL_CD");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "EST_TPL_NM";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbEstTplNm");
										inputBox_3.maxLength = 50;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("EST_TPL_NM");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "UEST_TPL_CD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbUestTplCd");
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsCgdEstTpl"), {
												"label": "EST_TPL_NM",
												"value": "EST_TPL_CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("UEST_TPL_CD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "RFLC_RATE";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbRflcRate");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "990％";
										numberEditor_1.bind("value").toDataColumn("RFLC_RATE");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "RE_EST_TYPE_RCD";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbReEstTypeRcd");
										inputBox_4.maxLength = 10;
										inputBox_4.bind("value").toDataColumn("RE_EST_TYPE_RCD");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "APLY_LMT";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbAplyLmt");
										inputBox_5.maxLength = 10;
										inputBox_5.bind("value").toDataColumn("APLY_LMT");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "BASE_TPL_YN";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbBaseTplYn");
										inputBox_6.maxLength = 1;
										inputBox_6.bind("value").toDataColumn("BASE_TPL_YN");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbRefKey");
										inputBox_7.maxLength = 50;
										inputBox_7.bind("value").toDataColumn("REF_KEY");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "EST_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbEstDivRcd");
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsEstDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("EST_DIV_RCD");
										return comboBox_2;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCgdEstTplSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCgdEstTplSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "913px",
					"height": "253px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-EVALUTPLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "305px",
				"width": "925px",
				"height": "290px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-EVALUFCTORLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnNewDtl");
				button_7.value = "";
				button_7.style.setClasses(["btn-new"]);
				button_7.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewDtlClick == "function") {
					button_7.addEventListener("click", onBtnNewDtlClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "663px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnDelDtl");
				button_8.value = "";
				button_8.style.setClasses(["btn-delete"]);
				button_8.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelDtlClick == "function") {
					button_8.addEventListener("click", onBtnDelDtlClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "728px",
					"width": "60px",
					"height": "25px"
				});
				var button_9 = new cpr.controls.Button("btnRestoreDtl");
				button_9.value = "";
				button_9.style.setClasses(["btn-restore"]);
				button_9.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreDtlClick == "function") {
					button_9.addEventListener("click", onBtnRestoreDtlClick);
				}
				container.addChild(button_9, {
					"top": "5px",
					"left": "793px",
					"width": "60px",
					"height": "25px"
				});
				var button_10 = new cpr.controls.Button("btnSaveDtl");
				button_10.value = "";
				button_10.style.setClasses(["btn-save"]);
				button_10.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveDtlClick == "function") {
					button_10.addEventListener("click", onBtnSaveDtlClick);
				}
				container.addChild(button_10, {
					"top": "5px",
					"left": "858px",
					"width": "60px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCgdEstFactor");
				grid_2.init({
					"dataSet": app.lookup("dsCgdEstFactor"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "110px"},
						{"width": "220px"},
						{"width": "220px"},
						{"width": "135px"},
						{"width": "136px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-EST_FACTOR_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EVAL_METHOD_RCD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PSC_CII");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-RFLC_RATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EST_TPL_CD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "EST_FACTOR_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbEstFactorRcdDtl");
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsEstFactorRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("EST_FACTOR_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "EST_METHOD_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbEstMethodRcdDtl");
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsEstMethodRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("EST_METHOD_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PSC_CII";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbPscCiiDtl");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999";
										numberEditor_2.bind("value").toDataColumn("PSC_CII");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "RFLC_RATE";
									cell.control = (function(){
										var numberEditor_3 = new cpr.controls.NumberEditor("gdIpbRflcRateDtl");
										numberEditor_3.spinButton = false;
										numberEditor_3.format = "990％";
										numberEditor_3.bind("value").toDataColumn("RFLC_RATE");
										return numberEditor_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbRefKeyDtl");
										inputBox_8.maxLength = 50;
										inputBox_8.bind("value").toDataColumn("REF_KEY");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EST_TPL_CD";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbEstTplCdDtl");
										inputBox_9.maxLength = 50;
										inputBox_9.bind("value").toDataColumn("EST_TPL_CD");
										return inputBox_9;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "5px",
					"width": "913px",
					"height": "267px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "367px",
				"left": "305px",
				"width": "925px",
				"height": "303px"
			});
			
			var group_4 = new cpr.controls.Container("grpTree");
			// Layout
			var xYLayout_5 = new cpr.controls.layouts.XYLayout();
			group_4.setLayout(xYLayout_5);
			(function(container){
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-EVALUTPLSTRC");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "72px",
				"left": "5px",
				"width": "295px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
		}
	});
	app.title = "평가템플릿관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
