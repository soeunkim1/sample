/*
 * App URI: app/cgd/stdCgdCRecCnfmBat
 * Source Location: app/cgd/stdCgdCRecCnfmBat.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/stdCgdCRecCnfmBat", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCgdCRecCnfmBat.xtm"/>
			
			/**
			 * 성적확정
			 * @class stdCgdCRecCnfmBat
			 * @author 박갑수 at 2016. 3. 31
			 */
			var stdCgdCRecCnfmBat = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 학생검색팝업
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnStudId",
					iStudNo 					: "ipbStudId",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/keyDateMap/ST_DT", 
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					: "",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqKey/strStudId",
					oStudNo 					: "ipbStudId",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "ipbSaNm",
					oSaCd 						: "/root/reqKey/strSaCd",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsStudId = util.Control.getValue(app, "ipbStudId");
						var vsSaNm = util.Control.getValue(app, "ipbSaNm");
						// 검색조건있을경우 바로조회
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsStudId) && !ValueUtil.isNull(vsSaNm)){
							util.Control.setEnable(app, true, ["grpData"]);
						}
					}
				}];
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaCd",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA", "CC009OG"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"/root/keyDateMap/ST_DT",
					oObjDivRcd		:	"/root/reqKey/strObjDivRcd",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  function(){
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsSaNm = util.Control.getValue(app, "ipbSaNm");
						// 검색조건있을경우 바로조회
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsSaNm)){
							util.Control.setEnable(app, true, ["grpData"]);
						}
					}
				}];
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onModelConstructDone_StdCgdCRecCnfmBat = function() {
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd"]);
						}
					}, true);
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){				
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
			
				/**
				 * @desc [btnStudId]학번(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onClick_BtnStudId = function(sender) {
					// 학생검색팝업 호출
					doOnClickStdCsrPStSearch(sender);
				};
			
				/**
				 * @desc [ipbStudId]학번 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					// 값변경시 학생검색팝업 호출
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc [btnSaCd]부서명(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onClick_BtnSaCd = function(sender) {
					// 객체검색팝업 호출
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbSaNm]부서명 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					// 값변경시 객체검색팝업 호출
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnRecSet]성적확정 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				moPage.onClick_BtnRecSet = function() {
					
					// 조회조건 필수체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbSaNm"])){
						return false;
					}
					
					// 부서객체구분값이 없을경우(학생검색팝업을통해 부서를 세팅한경우) - 학사부서[CC009SA] 로 세팅
					var vsObjDivRcd = util.DataMap.getValue(app, "dmReqKey", "strObjDivRcd");
					if(ValueUtil.isNull(vsObjDivRcd)){
						util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", "CC009SA");
					}
					
					// 2016.4.1. 박갑수 - 동서울대 전체사용
					util.Control.setValue(app, "ckbTrans", "X");
					util.Control.setValue(app, "ckbGrade", "X");
					util.Control.setValue(app, "ckbWarn", "X");
					
					// 이관전 체크 : 성적이관포함, 석차계산포함, 학사경고체크
					doSaveChk(function(pbSuccess) {
						if (pbSuccess){
							// 작업저장
							doSave();
						}
					});
				};
				
				/**
				 * @desc 성적확정처리
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 16
				 */
				function doSave() {
					
					
					util.Control.setEnable(app, false, "grpData");
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							//처리되었습니다.
							util.Msg.alert("NLS-INF-M003");
							
							util.Control.setEnable(app, true, "grpData");
						}
					});
				}
				
				/**
				 * @desc  성적확정전 체크
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 31
				 */
				function doSaveChk(poCallBackFunc) {
					//strCommand: saveChk 
					util.Submit.send(app, "subSaveChk", function(pbSuccess){
						if(pbSuccess){
							
							// [@]가 있습니다. 삭제후 재생성 하시겠습니까?
							var vsMsg = "";
							
							// 1. 성적이관포함용
							// 1.1 성적 [CGD_REC] 존재하는지 확인
							var vsRecChk = util.DataMap.getValue(app, "dmResList", "recChk");
							if(ValueUtil.fixNull(vsRecChk) == "X"){
								
								if(ValueUtil.isNull(vsMsg)){
									vsMsg = vsMsg + NLS.NSCR.RECDATA
								}else {
									vsMsg = vsMsg + "," + NLS.NSCR.RECDATA
								}
							}
			
							// 1.2 성적 미 입력 내용이 있는지 확인
							var vsSavePreChk = util.DataMap.getValue(app, "dmResList", "savePreChk");
							if(ValueUtil.fixNull(vsSavePreChk) == "X"){
								
								if(ValueUtil.isNull(vsMsg)){
									vsMsg = vsMsg + NLS.NSCR.NRECDATA
								}else {
									vsMsg = vsMsg + "," + NLS.NSCR.NRECDATA
								}
							}
							
							// 2. 석차계산포함용
							var vsGrade = util.DataMap.getValue(app, "dmResList", "saveGrade");
							if(ValueUtil.fixNull(vsGrade) == "X"){
								
								if(ValueUtil.isNull(vsMsg)){
									vsMsg = vsMsg + NLS.NSCR.RANKDATA
								}else {
									vsMsg = vsMsg + "," + NLS.NSCR.RANKDATA
								}
							}
							
							// 3. 학사경고포함용
							var vsWarn = util.DataMap.getValue(app, "dmResList", "saveWarn");
							if(ValueUtil.fixNull(vsWarn) == "X"){
								
								if(ValueUtil.isNull(vsMsg)){
									vsMsg = vsMsg + NLS.NSCR.WARNDATA
								}else {
									vsMsg = vsMsg + "," + NLS.NSCR.WARNDATA
								}
							}
							
							// 재생성여부 확인
							if(!ValueUtil.isNull(vsMsg)){
								// 기존 [@]이(가) 있습니다. 삭제후 재생성 하시겠습니까?
								if(!util.Msg.confirm("NLS-CRM-M080", [vsMsg]) ){
									return false;
								}
							}
							
						}
						// 콜백함수실행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "recChk",
						"dataType": "string"
					},
					{
						"name": "savePreChk",
						"dataType": "string"
					},
					{
						"name": "saveGrade",
						"dataType": "string"
					},
					{
						"name": "saveWarn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strStYear",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strTrans",
						"dataType": "string"
					},
					{
						"name": "strGrade",
						"dataType": "string"
					},
					{
						"name": "strWarn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgd/StdCgdCRecCnfmBat/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/cgd/StdCgdCRecCnfmBat/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_1);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveChk");
			submission_3.action = "/cgd/StdCgdCRecCnfmBat/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataMap_1, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/cmn/StdCmnDateTime/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "100px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "240px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "335px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optStId");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_3, {
					"top": "5px",
					"left": "475px",
					"width": "90px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnStudId");
				button_1.value = "";
				button_1.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudIdClick == "function") {
					button_1.addEventListener("click", onBtnStudIdClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "678px",
					"width": "20px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optStYear");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_4, {
					"top": "30px",
					"left": "240px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbStYear");
				comboBox_3.bind("fieldLabel").toExpression("#optStYear.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strStYear");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("1학년", "1"));
					comboBox_3.addItem(new cpr.controls.Item("2학년", "2"));
					comboBox_3.addItem(new cpr.controls.Item("3학년", "3"));
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "335px",
					"width": "130px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSaNm");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_5, {
					"top": "30px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "30px",
					"left": "100px",
					"width": "110px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaCd");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaCdClick == "function") {
					button_2.addEventListener("click", onBtnSaCdClick);
				}
				container.addChild(button_2, {
					"top": "30px",
					"left": "210px",
					"width": "20px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbTrans");
				checkBox_1.visible = false;
				checkBox_1.value = "";
				checkBox_1.trueValue = "X";
				checkBox_1.falseValue = "";
				checkBox_1.text = "성적이관포함";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strTrans");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "475px",
					"width": "110px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbGrade");
				checkBox_2.visible = false;
				checkBox_2.value = "";
				checkBox_2.trueValue = "X";
				checkBox_2.falseValue = "";
				checkBox_2.text = "석차계산포함";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strGrade");
				container.addChild(checkBox_2, {
					"top": "30px",
					"left": "590px",
					"width": "110px",
					"height": "25px"
				});
				var checkBox_3 = new cpr.controls.CheckBox("ckbWarn");
				checkBox_3.visible = false;
				checkBox_3.value = "";
				checkBox_3.trueValue = "X";
				checkBox_3.falseValue = "";
				checkBox_3.text = "학사경고체크";
				checkBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strWarn");
				container.addChild(checkBox_3, {
					"top": "30px",
					"left": "705px",
					"width": "110px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudId");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optStId.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNm");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "569px",
					"width": "110px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_3 = new cpr.controls.Button("btnRecSet");
				button_3.value = "";
				button_3.style.setClasses(["btn-commit"]);
				button_3.bind("value").toLanguage("UI-SCR-RECCFRM");
				if(typeof onBtnRecSetClick == "function") {
					button_3.addEventListener("click", onBtnRecSetClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "552px",
					"width": "60px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optComment");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_6, {
					"top": "70px",
					"left": "400px",
					"width": "410px",
					"height": "30px"
				});
				var output_7 = new cpr.controls.Output("optComment1");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_7, {
					"top": "101px",
					"left": "400px",
					"width": "410px",
					"height": "30px"
				});
				var output_8 = new cpr.controls.Output("optComment2");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_8, {
					"top": "132px",
					"left": "400px",
					"width": "410px",
					"height": "30px"
				});
				var output_9 = new cpr.controls.Output("optComment3");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_9, {
					"top": "163px",
					"left": "400px",
					"width": "410px",
					"height": "30px"
				});
				var output_10 = new cpr.controls.Output("label2");
				output_10.value = "[성적확정] 시 10분 정도 소요가 됩니다.\n\n10분 이후 \"처리되었습니다.\" 메시지가 뜨지 않을 경우 \"전산정보센터\"로 문의주시기 바랍니다.\n\n성적확정 처리 진행 중에 다시 [성적확정]을 클릭 하시면 더 오랜 시간이 걸립니다.";
				container.addChild(output_10, {
					"top": "328px",
					"left": "200px",
					"width": "925px",
					"height": "125px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "573px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "성적확정";
	cpr.core.Platform.INSTANCE.register(app);
})();
