/*
 * App URI: app/cgd/stdCgdPEstTplPopup
 * Source Location: app/cgd/stdCgdPEstTplPopup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/stdCgdPEstTplPopup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCgdPEstTplPopup.xtm"/>
			
			/**
			 * 강의실검색(Popup)
			 * @class stdCgdPEstTplPopup
			 * @author 박갑수 at 2016. 3. 18
			 */
			var stdCgdPEstTplPopup = function() {
				var moPage = new Page();
				
				// 팝업 내부사용 변수
				var moStdCgdPEstTplPopup = {
					controlId 						: "",
					openedByChange			: false,
					skipOnChange				: false,
					// 선택가능 범위를 제한
					strEstTplCd					: "",
					strEstTplNm					: "",
					
					// 선택열 결과 리턴
					Result : {
						c				: "",	
						EST_TPL_NM			: "",	
						UEST_TPL_CD			: "",	
						REF_KEY					: ""
					}
				};
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onModelConstructDone_StdCgdPEstTplPopup = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCgdEstTpl"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 호출한 페이지에서 파라미터 받기.
					doParentGet();
			
					// 화면 온로드
					doOnLoad();
				};
				
				/**
				 * @desc 호출한 페이지에서 파라미터 받기
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCgdPEstTplPopup =  ExtPopUp.getParentVal("moStdCgdPEstTplPopup");
						
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCgdPEstTplPopup) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCgdPEstTplPopup [key] = voStdCgdPEstTplPopup [key];
						}
						
						// 팝업이 뜬후에는 false로 고침.
						voStdCgdPEstTplPopup.openedByChange = false;
					}
				};
				
				/**
				 * @desc 검색조건 및 코드값 세팅
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doOnLoad() {
					
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moStdCgdPEstTplPopup;
					
					if (!ValueUtil.isNull(voParam.strEstTplCd)) {
						util.Control.setValue(app, "ipbEstTplCd", voParam.strEstTplCd);
					}
					
					if (!ValueUtil.isNull(voParam.strEstTplNm)) {
						util.Control.setValue(app, "ipbEstTplNm", voParam.strEstTplNm);
					}
					
					// 검색조건이 입력되어 있는 경우 바로 검색 실행(돋보기버튼제외)
					if(!voParam.controlId.startsWith("btn")){
						if (voParam.strEstTplCd || voParam.strEstTplNm) {
							util.Header.clickSearch(app);
						}
					}
				};
				
				/**
				 * @desc [ipbEstTplCd]평가템플릿코드 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onKeyDown_IpbEstTplCd = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [ipbEstTplNm]평가템플릿명 onKeyDown 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onKeyDown_IpbEstTplNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수체크 - 평가항목코드, 평가항목명 중 한개는 입력되었는지 확인.
					if(!moPage.checkNotNullCtl()){
						return false;
					}
			
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc 평가템플릿코드, 평가템플릿명 중 한개는 입력되었는지 확인.
				 * @param 
				 * @return boolean
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.checkNotNullCtl = function() {
					var vbValid = true;
					
					// 학사부서명
					var vsEstTplCd = util.Control.getValue(app, "ipbEstTplCd");
					// 교과목코드/교과목명
					var vsEstTplNm = util.Control.getValue(app, "ipbEstTplNm");
					
					if(ValueUtil.isNull(vsEstTplCd) && ValueUtil.isNull(vsEstTplNm)){
						var vsMsgParam = ExtControl.getTextValue("lblEstTplCd") + ", " + ExtControl.getTextValue("lblEstTplNm");
						
						// "조회조건[@1] 중 하나는 반드시 입력해야 합니다." 메시지 표시
						util.Msg.alert("NLS-CMM-M016", [vsMsgParam]);
						
						vbValid = false;
						return vbValid;
					}
					
					return vbValid;
				};
				
				/**
				 * @desc 평가템플릿목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCgdEstTpl");	
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					});
				};
				
				/**
				 * @desc [rptCgdEstTpl]평가템플릿목록 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onDoubleClick_RptCgdEstTpl = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseOk]선택닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnCloseOk = function() {
					// 선택닫기 함수
					doCloseOk();
				};
				
				/**
				 * @desc [btnCloseCancel]화면닫기 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				moPage.onClick_BtnCloseCancel = function() {
					// 팝업 닫기
					app.close();
				};
				
				/**
				 * @desc 부모페이지 리턴
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 3. 18
				 */
				function doCloseOk(){
					var voResult = moStdCgdPEstTplPopup.Result;
					
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCgdEstTpl"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdCgdEstTpl");
					
					voResult.EST_TPL_CD			= util.Grid.getCellValue(app, "grdCgdEstTpl", "EST_TPL_CD", vnIdx);
					voResult.EST_TPL_NM			= util.Grid.getCellValue(app, "grdCgdEstTpl", "EST_TPL_NM" , vnIdx);
					voResult.UEST_TPL_CD 			= util.Grid.getCellValue(app, "grdCgdEstTpl", "UEST_TPL_CD" , vnIdx);
					voResult.REF_KEY          		= util.Grid.getCellValue(app, "grdCgdEstTpl", "REF_KEY", vnIdx);
					
					ExtPopUp.closeLayeredPopup("callbackStdCgdPEstTplPopup", moStdCgdPEstTplPopup);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCgdEstTpl");
			dataSet_1.parseData({
				"columns": [
					{"name": "EST_TPL_CD"},
					{"name": "EST_TPL_NM"},
					{"name": "UEST_TPL_CD"},
					{"name": "REF_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strEstTplCd",
						"dataType": "string"
					},
					{
						"name": "strEstTplNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cgd/StdCgdEstTplPopup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.style.setClasses(["btn-commit"]);
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "375px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseOk");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_2.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_2, {
				"top": "375px",
				"left": "575px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCgdEstTpl");
				grid_1.init({
					"dataSet": app.lookup("dsCgdEstTpl"),
					"columns": [
						{"width": "40px"},
						{"width": "280px"},
						{"width": "282px"},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EST_TPL_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EST_TPL_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-UPEVALUTPL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "EST_TPL_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "EST_TPL_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "UEST_TPL_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							}
						]
					}
				});
				if(typeof onGrdCgdEstTplDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCgdEstTplDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "618px",
					"height": "261px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-EVALUTPLST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "630px",
				"height": "298px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_1 = new cpr.controls.Output("optEstTplNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-EST_TPL_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "260px",
					"width": "110px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbEstTplCd");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optEstTplCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEstTplCd");
				if(typeof onIpbEstTplCdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbEstTplCdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "120px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optEstTplCd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-DB-EST_TPL_CD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "563px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbEstTplNm");
				inputBox_2.maxLength = 50;
				inputBox_2.bind("fieldLabel").toExpression("#optEstTplNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strEstTplNm");
				if(typeof onIpbEstTplNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbEstTplNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "130px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "630px",
				"height": "32px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "평가템플릿검색";
	cpr.core.Platform.INSTANCE.register(app);
})();
