/*
 * App URI: app/cgd/stdCgdSRecIqy
 * Source Location: app/cgd/stdCgdSRecIqy.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgd/stdCgdSRecIqy", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCgdSRecIqy.xtm"/>
			
			/**
			 * 금학기성적조회
			 * @class stdCgdSRecIqy
			 * @author 박갑수 at 2016. 4. 1
			 */
			var stdCgdSRecIqy = function() {
				var moPage = new Page();
				
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
				
				// 학생검색팝업
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnStudId",
					iStudNo 					: "ipbStudId",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/keyDateMap/ST_DT", 
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					: "",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqKey/strStudId",
					oStudNo 					: "ipbStudId",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
						var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
						var vsStudId = util.Control.getValue(app, "ipbStudId");
						// 검색조건있을경우 바로조회
						if(!ValueUtil.isNull(vsSchYearRcd) && !ValueUtil.isNull(vsSmtRcd) && !ValueUtil.isNull(vsStudId)){
							util.Header.clickSearch(app);
						}
					}
				}];
				
				// 성적평가요소검색
				moPage.moIdsForCgdEstFctorStudInfo = 
				{
					iStudId 		  : "",
					iTlsnRefKey : "",
					iKeyDate 	  : ""
				};
				
				// 학년도 학기를 원래데이터로 되돌리기위한 변수
				var msSchYearRcd = "";
				var msSmtRcd = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 학생정보 import 초기화
				 * @param 
				 * @return  void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onLoadImportDone_ImpStudInfo = function() {
					// 학생정보 import 초기화
					impStudInfo();
				};
				
				/**
				 * @desc onLoad 실행
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onModelConstructDone_StdCgdSRecIqy = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCgdRecInput"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd"]);
							// 개인권한[CC00104] : 
							if (moPageInfo.authRngRcd == "CC00104") {
								util.Control.setValue(app, "ipbStudId", moUserInfo.studNo);
								util.DataMap.setValue(app, "dmReqKey", "strStudId", moUserInfo.id);
								
								// 학생의 성적열람기간체크
								doStudentLoadOfScreen(function(pbSuccess) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if (pbSuccess){
										util.Control.setEnable(app, false, ["cbbSchYearRcd", "cbbSmtRcd", "ipbStudId"]);
										util.Control.setVisible(app, false, ["btnStudId", "btnSearch"]);
										
										// 바로조회
										util.Header.clickSearch(app);
									}
								});
							
							}else {
			//					// 관리자의 성적열람기간체크
			//					moPage.doAdminLoadOfScreen();
							}
						}
					}, true);
				};
				
				/**
				 * @desc 학생의 성적열람기간체크
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				function doStudentLoadOfScreen(poCallBackFunc) {
					
					//strCommand: doStudentLoadOfScreen 
					util.Submit.send(app, "subStudChk", function(pbSuccess){
						if(!pbSuccess){
							util.coverPage(app);
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					});
				};
				
				/**
				 * @desc 관리자의 성적열람기간체크
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				function doAdminLoadOfScreen(pnStep) {
					if(ValueUtil.isNull(pnStep)){
						pnStep = "0";
					}
					
					util.DataMap.setValue(app, "dmReqKey", "intStep", pnStep);
					
					//strCommand: doAdminLoadOfScreen 
					util.Submit.send(app, "subAdminChk", function(pbSuccess){
						if(pbSuccess){
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							
							if(!ValueUtil.isNull(vsMsg)){
								// @\n 무시하고 계속하시겠습니까?
								if(util.Msg.confirm("NLS-CRM-M027", [vsMsg])){
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									doAdminLoadOfScreen(vnStep);
								}
							}
							
						}else {
							util.coverPage(app);
						}
					});
				};
				
				/**
				 * @desc [cbbSchYearRcd]학년도 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("year");
				};
				
				/**
				 * @desc [cbbSmtRcd]학기 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					// 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
					doChangeYearSmt("smt");
				};
				
				/**
				 * @desc 학사력 체크 및 해당 학년도 학기에 해당하는 기준일자 조회
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				function doChangeYearSmt(psDiv) {
					//strCommand: date 
					util.Submit.send(app, "subDate", function(pbSuccess){
						if(pbSuccess){
							msSchYearRcd = util.DataMap.getValue(app, "dmKeyDateMap", "YEAR");
							msSmtRcd = util.DataMap.getValue(app, "dmKeyDateMap", "SMT");
							
						// Exception 발생시
						}else {
							if(psDiv == "year"){
								util.Control.setValue(app, "cbbSchYearRcd", msSchYearRcd);
							}else if(psDiv == "smt"){
								util.Control.setValue(app, "cbbSmtRcd", msSmtRcd);
							}
						}
					});
				};
				
				/**
				 * @desc [btnStudId]학번(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onClick_BtnStudId = function(sender) {
					// 학생검색팝업 호출
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc [ipbStudId]학번 onValueChanged 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					// 값변경시 학생검색팝업 호출
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc [btnSearch]조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "ipbStudId"])){
						return false;
					}
					
					//(IMPORT)학번전달
					var vsStudId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
					var vsKeyDate = util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT");
					
					// 학생정보imp 조회
					setImpStudInfo(vsStudId, vsKeyDate, null, function(pbSuccess) {
						if (pbSuccess){
							
							// 이미지 업로드 버튼 보이기 여부 설정
							setVisibleUploadStudImgBtn(false);
							
							// 조회
							doList(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
						}
					});
				};
				
				/**
				 * @desc 성적내역 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				function doList(poCallBackFunc) {
					
					// 성적내역 조회전 권한에따른 체크
					doChkList(function(pbSuccess) {
						
						if(pbSuccess){
						
							//strCommand: list 
							util.Submit.send(app, "subList", function(pbSuccess){
								if(pbSuccess){
									util.Control.redraw(app, "grdCgdRecInput");
									
									util.Control.redraw(app, ["optEstPnt", "optGetPnt", "optTotGp", "optAvgGp", "optPercentage"]);
									// 조회 후 콜백함수 수행
									if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
								}
							});
						}else{
							util.coverPage(app);
						}
					});
				};
				
				/**
				 * @desc 성적내역 조회전 권한에따른 체크
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				function doChkList(poCallBackFunc) {
					// 개인권한[CC00104] : 
					if (moPageInfo.authRngRcd == "CC00104") {
						/*************************************************************************************
						 * 강의평가확인여부 default값
						 * CD21201 = 전체조회(강의평가가 하나라도 안되있으면 금학기 성적조회 불가)
						 * CD21202 = 해당항목확인(강의평가가 된 과목만 금학기 성적 조회 가능) 
						 * CD21203 = 전체확인(강의평가 여부에 상관없이 다 조회 가능)
						 *************************************************************************************/
						
						var vsCdPrp1 = util.DataMap.getValue(app, "dmResOnLoad", "strCdPrp1");
						
						// 전체조회(강의평가가 하나라도 안되있으면 금학기 성적조회 불가)
						if(ValueUtil.fixNull(vsCdPrp1) == "CD21201"){
							
							//strCommand: checkLectEvaluation 
							util.Submit.send(app, "subLectEvalChk", function(pbSuccess){
								if(pbSuccess){
									var vsLectYn = util.DataMap.getValue(app, "dmResList", "resCheckLectEvalution");
									
									if(ValueUtil.fixNull(vsLectYn) == "N"){
										// 강의평가를 하지 않아 금학기 성적조회가 불가합니다.
										util.Msg.alert("NLS-CGD-M030");
										
										if (util.isFunc(poCallBackFunc)) poCallBackFunc(false); 
									}else {
										if (util.isFunc(poCallBackFunc)) poCallBackFunc(true);
									}
								}
							});
							
						// // 해당항목확인(강의평가가 된 과목만 금학기 성적 조회 가능): 서버단처리 , 전체확인(강의평가 여부에 상관없이 다 조회 가능)
						}else {
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(true);
						}
					}else {
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(true);
					}
				};
				
				/**
				 * @desc [rptCgdRecInput]성적내역 onDoubleClick 이벤트
				 * @param 
				 * @return void
				 * @author 박갑수 at 2016. 4. 1
				 */
				moPage.onDoubleClick_RptCgdRecInput = function() {
					// 개인권한이 아닐경우만 팝업 오픈
					if (moPageInfo.authRngRcd != "CC00104") {
						moIdsForCgdEstFctorStudInfo.iStudId 			= util.Grid.getCellValue(app, "grdCgdRecInput", "STUD_ID");
						moIdsForCgdEstFctorStudInfo.iTlsnRefKey 	= util.Grid.getCellValue(app, "grdCgdRecInput", "TLSN_REF_KEY");
						moIdsForCgdEstFctorStudInfo.iKeyDate 		= util.DataMap.getValue(app, "dmKeyDateMap", "ST_DT");
						
						ExtPopUp.openLayeredPopup("/xtm/cgd/extCgdPEstFctorStudInfo.xtm", 550, 280);
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCgdRecInput");
			dataSet_3.parseData({
				"columns": [
					{"name": "SB_CD"},
					{"name": "SB_NM"},
					{"name": "DIVCLS_CD"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "PNT"},
					{"name": "PROF_NM"},
					{"name": "SCR"},
					{"name": "GRD_RCD"},
					{"name": "GP"},
					{"name": "PER"},
					{"name": "RE_TLSN_SCH_YEAR_RCD"},
					{"name": "RE_TLSN_SMT_RCD"},
					{"name": "RE_SB_NM"},
					{"name": "GET_PNT"},
					{"name": "EST_PNT"},
					{"name": "IS_EXIST"},
					{"name": "TOT_GP"},
					{"name": "AVG_GP"},
					{"name": "REF_KEY"},
					{"name": "PCNT"},
					{"name": "DIVCLS_NM"},
					{"name": "TLSN_REF_KEY"},
					{"name": "RE_TLSN_SCH_YEAR_RCD_PRT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strCdPrp1",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strEstPnt",
						"dataType": "string"
					},
					{
						"name": "strAvgGp",
						"dataType": "string"
					},
					{
						"name": "strGetPnt",
						"dataType": "string"
					},
					{
						"name": "strPercentage",
						"dataType": "string"
					},
					{
						"name": "strTotGp",
						"dataType": "string"
					},
					{
						"name": "resCheckLectEvalution",
						"dataType": "string"
					},
					{
						"name": "strPcnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmKeyDateMap");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqKey");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "intStep",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgd/StdCgdSRecIqy/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subStudChk");
			submission_2.action = "/cgd/StdCgdSRecIqy/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_5);
			submission_2.addRequestData(dataMap_4);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subAdminChk");
			submission_3.action = "/cgd/StdCgdSRecIqy/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_5);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subList");
			submission_4.action = "/cgd/StdCgdSRecIqy/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_5);
			submission_4.addRequestData(dataMap_1);
			submission_4.addRequestData(dataMap_4);
			submission_4.addResponseData(dataSet_3, false);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subDate");
			submission_5.action = "/cmn/StdCmnDateTime/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_4);
			submission_5.addResponseData(dataMap_4, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subLectEvalChk");
			submission_6.action = "/cgd/StdCgdSRecIqy/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_5);
			submission_6.addRequestData(dataMap_4);
			submission_6.addResponseData(dataMap_3, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optStId");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "395px",
					"width": "70px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optStId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "470px",
					"width": "116px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudId");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudIdClick == "function") {
					button_2.addEventListener("click", onBtnStudIdClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "586px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSchYearRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.enabled = false;
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "YEAR");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSmtRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.enabled = false;
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmKeyDateMap"), "SMT");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("선택", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SKPLCLIST");
				container.addChild(userDefinedControl_2, {
					"top": "135px",
					"left": "5px",
					"width": "205px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCgdRecInput");
				grid_1.init({
					"dataSet": app.lookup("dsCgdRecInput"),
					"columns": [
						{"width": "40px"},
						{"width": "80px"},
						{"width": "145px"},
						{"width": "70px"},
						{"width": "90px"},
						{"width": "60px"},
						{"width": "100px"},
						{"width": "60px"},
						{"width": "60px"},
						{"width": "60px"},
						{"width": "110px"},
						{"width": "110px"},
						{"width": "220px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "70px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIVCLS_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SKPLCDIVR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_LTTM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROF_NM");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SB_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "DIVCLS_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROF_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCR";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "GRD_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "GP";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SCH_YEAR_RCD_PRT";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbReTlsnSchYearRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsSchYearRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("RE_TLSN_SCH_YEAR_RCD_PRT");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "RE_TLSN_SMT_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbReTlsnSmtRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsSmtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("RE_TLSN_SMT_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "RE_SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "GET_PNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "EST_PNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "TOT_GP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "AVG_GP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "IS_EXIST";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "PER";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "TLSN_REF_KEY";
								}
							}
						]
					}
				});
				if(typeof onGrdCgdRecInputDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdCgdRecInputDblclick);
				}
				container.addChild(grid_1, {
					"top": "160px",
					"left": "5px",
					"width": "1213px",
					"height": "406px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStudInfo");
				if(typeof onEmaStudInfoAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaStudInfoAppReady);
				}
				cpr.core.App.load("app/csr/impStudInf02", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "1213px",
					"height": "120px"
				});
				var output_4 = new cpr.controls.Output("optEstPnt");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_4, {
					"top": "570px",
					"left": "620px",
					"width": "65px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optGetPnt");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_5, {
					"top": "570px",
					"left": "735px",
					"width": "65px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optTotGp");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_6, {
					"top": "570px",
					"left": "850px",
					"width": "65px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optAvgGp");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_7, {
					"top": "570px",
					"left": "975px",
					"width": "65px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optPercentage");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_8, {
					"top": "570px",
					"left": "1100px",
					"width": "65px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optEstPnt");
				output_9.value = "";
				output_9.style.css({
					"text-align" : "right"
				});
				output_9.bind("value").toDataMap(app.lookup("dmResList"), "strEstPnt");
				container.addChild(output_9, {
					"top": "570px",
					"left": "690px",
					"width": "35px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optGetPnt");
				output_10.value = "";
				output_10.style.css({
					"text-align" : "right"
				});
				output_10.bind("value").toDataMap(app.lookup("dmResList"), "strGetPnt");
				container.addChild(output_10, {
					"top": "570px",
					"left": "805px",
					"width": "35px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optTotGp");
				output_11.value = "";
				output_11.style.css({
					"text-align" : "right"
				});
				output_11.bind("value").toDataMap(app.lookup("dmResList"), "strTotGp");
				container.addChild(output_11, {
					"top": "570px",
					"left": "920px",
					"width": "45px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optAvgGp");
				output_12.value = "";
				output_12.style.css({
					"text-align" : "right"
				});
				output_12.bind("value").toDataMap(app.lookup("dmResList"), "strAvgGp");
				container.addChild(output_12, {
					"top": "570px",
					"left": "1045px",
					"width": "45px",
					"height": "25px"
				});
				var output_13 = new cpr.controls.Output("optPercentage");
				output_13.value = "";
				output_13.style.css({
					"text-align" : "right"
				});
				output_13.bind("value").toDataMap(app.lookup("dmResList"), "strPcnt");
				container.addChild(output_13, {
					"top": "570px",
					"left": "1170px",
					"width": "45px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "금학기성적조회";
	cpr.core.Platform.INSTANCE.register(app);
})();
