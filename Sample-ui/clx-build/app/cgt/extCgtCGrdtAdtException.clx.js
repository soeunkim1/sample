/*
 * App URI: app/cgt/extCgtCGrdtAdtException
 * Source Location: app/cgt/extCgtCGrdtAdtException.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgt/extCgtCGrdtAdtException", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCgtCGrdtAdtException.xtm"/>
			
			
			var extCgtCGrdtAdtException = function() {
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009OG","CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "",
					oObjDivRcd 	: "/root/reqKey/strDeptObjDivRcd",
					oCd 		: "/root/reqKey/strDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: ""
				}
				];
				
				/* 
				 * 학생 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId     	: "btnStudNoPop",
					iStudNo       	: "ipbStudNo",
					iStudId       	: "",
					iStudNm       	: "",
					iKeyDate	  	: "",
					iObjDivRcd 		: "",
					iObjCd     	  	: "",
					iObjNm 			: "",
					iAuthYN		  	: "",
					oStudId       	: "/root/reqKey/strStudId",
					oStudNo       	: "ipbStudNo",
					oStudNm       	: "",
					oSsn          	: "",
					oStatNm 	  	: "",
					oStatRcd	  	: "",
					oProcRslt	  	: "",
					oProcRsltYear	: "",
					oSaCd         	: "",
					oSaNm         	: "",					
					oSpCd         	: "",
					oSpNm         	: "",
					oOgCd 		  	: "",
					oOgNm 		  	: "",
					func 		  	: ""
				}
				];
				
				// 학점 취득현황 팝업 필수정의사항
				moPage.moStudRecCmpPopup = {
					strStudId	  : "" ,
					strOpenPgmDiv : "XTM"
				};
				
				/**
				 * @desc Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 객체검색 Import onLoad
				 * @return void
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				};
				
				/**
				 * @desc 온로드
				 * @return void
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onModelConstructDone_ExtCgtCGrdtAdtException = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptAdtRslt","frfAdtRslt","rptScrngRslt"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch",["grpData"]);
					
					//졸업학년도학기 임포트
					doOnLoadImpCgtSch(function(pbSuccess){
						if(pbSuccess){
							//strCommand: onLoad 
							util.Submit.send(app, "subOnload", function(pbSuccess){
								util.Control.redraw(app, "cbbAdtRsltRcd");
							});	
						}
					});
					
				};
				
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				function doSetPopKeyDate() {
					var vsKeyDate = ExtInstance.getValue("instance('impExtCgtSch')/root/reqKey/strKeyDate").substr(0,8);
					moPObject.moIdsForStdCmnPObjSch[0].iKeyDate = vsKeyDate;
					moPObject.moIdsForStdCsrPStSearch[0].iKeyDate = vsKeyDate;
				};
				
				/**
				 * @desc 학과 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학과명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학번 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onClick_BtnStudNoPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 학번 검색 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 졸업학년도/졸업학기 변경시 학과, 학번 초기화
						- 2017.01.10 초기화로직 주석	
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				function doSetKeyDateYearSmtImp(){
			//		ExtControl.reset(["ipbDeptNm", "ipbStudNo"]);
			//		ExtInstance.setValue("/root/reqKey/strDeptCd", "");
			//		ExtInstance.setValue("/root/reqKey/strDeptObjDivRcd", "");
			//		ExtInstance.setValue("/root/reqKey/strStudId", "");
				};
				
				/**
				 * @desc 조회조건 수행
				 * @param
				 * @@return 
				 * @author Aeyoung Lee at 2016. 7. 8.
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc  졸업사정결과 목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdAdtRslt");
							
							// 확정데이터 존재여부
							var vsCgtCnfmYn = util.DataMap.getValue(app, "dmResList", "strCgtCnfmYn");
							
							if(vsCgtCnfmYn == "Y"){
								// 졸업확정절차(학위증서번호부여)전에만 수정가능합니다.
								util.Msg.alert("NLS-CGT-M032");
								util.Control.setEnable(app, false, ["frfAdtRslt","btnRestore","btnSave"]);	
							}else{
								util.Control.setEnable(app, true, ["frfAdtRslt","btnRestore","btnSave"]);	
							}	
							
							//moPage.doCompareFrfEnable();	
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc  졸업사정결과 목록 row select 이벤트
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				moPage.onRowSelect_RptAdtRslt = function() {
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptAdtRslt","frfAdtRslt");
					
					doCompareFrfEnable();
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				function doCompareFrfEnable() {
					
					var vnIdx = util.Grid.getIndex(app, "grdAdtRslt");
					
					// 마스터 로우 없을경우 프리폼 리셋
					var vsRowCnt = util.Grid.getRowCount(app, "grdAdtRslt");
					if( vsRowCnt <= 0 || !vnIdx){
						util.Control.reset(app, "frfAdtRslt");
					}	
					
					util.DataMap.setValue(app, "dmReqSubKey", "strSchYearRcd", util.Grid.getCellValue(app, "grdAdtRslt", "SCH_YEAR_RCD", vnIdx));
					util.DataMap.setValue(app, "dmReqSubKey", "strSmtRcd", util.Grid.getCellValue(app, "grdAdtRslt", "SMT_RCD", vnIdx));
					util.DataMap.setValue(app, "dmReqSubKey", "strStudId", util.Grid.getCellValue(app, "grdAdtRslt", "STUD_ID", vnIdx));
					
					// 기준별 사정결과 자료 조회 서브미션
					//strCommand: listBySub 
					util.Submit.send(app, "subListBySub", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdScrngRslt");
						}
					}); 
						
				};
				
				/**
				 * @desc  졸업사정결과 목록 성적상세 버튼 클릭 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				moPage.onClick_RdBtnPopup = function() {
					
					moStudRecCmpPopup.strStudId = util.Grid.getCellValue(app, "grdAdtRslt", "STUD_ID");
							
					var vsUrl = "../../inc/ccr/extCcrSStudRecCmpList.jsp";
					var vnWidth  = 800;
				    var vnHeight = 700;
				    var vnTop    = (window.screen.availHeight - vnHeight) / 2;
				    var vnLeft   = (window.screen.availWidth - vnWidth) / 2;
					
					 if (vnTop < 0) vnTop = 0;
				     if (vnLeft < 0) vnLeft = 0;
					
					var vsOption = "menubar=0,resizable=yes,scrollbars=yes,status=0,top="+vnTop+",left="+vnLeft+",width="+vnWidth+",height="+vnHeight;
					
					window.open(vsUrl, "extCcrSStudRecCmpList",  vsOption);
				};
				
				/**
				 * @desc  졸업사정결과 프리폼 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				moPage.onUpdate_FrfAdtRslt = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptAdtRslt", "frfAdtRslt");
				};
				
				/**
				 * @desc  작업취소 버튼 클릭이벤트
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdAdtRslt");
					
					// 로우가 없는 경우 rowSelect 이벤트가 일어나지 않으므로 이벤트 추가
					doCompareFrfEnable();
				};
				
				/**
				 * @desc  작업저장 버튼 클릭이벤트
				 * @return void
				 * @author Aeyoung Lee 2016. 7. 8.
				 */
				moPage.onClick_BtnSave = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdAdtRslt"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdAdtRslt")) return false;
					
					//모든 데이터를 체크하기 위해 변경
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
					
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListAdtRsltRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListDgrCrsDivRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListAssDivRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListCiiDivRcd");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListDgCd");
			dataSet_5.parseData({
				"columns": [
					{"name": "DG_CD"},
					{"name": "DG_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsAdtRslt");
			dataSet_6.parseData({
				"info": "EXT_CGT_ADT_RSLT@SCH_YEAR_RCD,SMT_RCD,STUD_ID,ENROLL_DIV_RCD,SP_DIV_RCD,SA_CD,SP_CD",
				"columns": [
					{"name": "CGT_EXD_YN"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "SA_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SP_DIV_RCD"},
					{"name": "ADT_RSLT_RCD"},
					{"name": "EXPT_RCOG_RSN"},
					{"name": "DGR_CD"},
					{"name": "REMARK"},
					{"name": "SUM_GET_PNT"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsFrfAdtRslt");
			dataSet_7.parseData({
				"columns": [
					{"name": "CGT_EXD_YN"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "SA_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SP_DIV_RCD"},
					{"name": "ADT_RSLT_RCD"},
					{"name": "EXPT_RCOG_RSN"},
					{"name": "DGR_CD"},
					{"name": "REMARK"},
					{"name": "SUM_GET_PNT"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsScrngRslt");
			dataSet_8.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "ADT_RSLT_RCD"},
					{"name": "DGR_CRS_DIV_RCD"},
					{"name": "ASS_DIV_RCD"},
					{"name": "CII_DIV_RCD"},
					{"name": "SCRNG_CII_VAL"},
					{"name": "SCRNG_CPR_VAL"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqSubKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strCgtCnfmYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strCgtDt",
						"dataType": "string"
					},
					{
						"name": "strAdtRsltRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnload");
			submission_1.action = "/cgt/ExtCgtGrdtAdtException/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_3);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cgt/ExtCgtGrdtAdtException/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_6, false);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListBySub");
			submission_3.action = "/cgt/ExtCgtGrdtAdtException/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_8, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cgt/ExtCgtGrdtAdtException/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addRequestData(dataSet_6);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/cgt/impExtCgtYearSmtDeptSch", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "440px",
					"height": "23px"
				});
				var output_1 = new cpr.controls.Output("optDeptNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_1, {
					"top": "5px",
					"left": "455px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "530px",
					"width": "140px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "670px",
					"width": "20px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optStudNo");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "900px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_2.maxLength = 50;
				inputBox_2.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "975px",
					"width": "110px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnStudNoPop");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudNoPopClick == "function") {
					button_3.addEventListener("click", onBtnStudNoPopClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1085px",
					"width": "20px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optAdtRsltRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-FINAL_RESULT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "700px",
					"width": "85px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbAdtRsltRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optAdtRsltRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strAdtRsltRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListAdtRsltRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "790px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-GRASRNRSLT");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdAdtRslt");
				grid_1.init({
					"dataSet": app.lookup("dsAdtRslt"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "72px"},
						{"width": "70px"},
						{"width": "43px"},
						{"width": "145px"},
						{"width": "128px"},
						{"width": "105px"},
						{"width": "75px"},
						{"width": "59px"},
						{"width": "116px"},
						{"width": "162px"},
						{"width": "110px"},
						{"width": "64px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CGT_POSTPONE_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRNG_RESULT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUMPNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DGRNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EXPTRGTRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQ_DESC");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptProcRsltYear");
										output_5.dataType = "number";
										output_5.format = "###";
										output_5.style.css({
											"text-align" : "center"
										});
										output_5.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CGT_EXD_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdChbCgtExdYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("CGT_EXD_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ADT_RSLT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbAdtRsltRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsListAdtRsltRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("ADT_RSLT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SUM_GET_PNT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptSumGetPnt");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("SUM_GET_PNT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DGR_CD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbDgrCd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsListDgCd"), {
												"label": "DG_NM",
												"value": "DG_CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("DGR_CD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "EXPT_RCOG_RSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var button_4 = new cpr.controls.Button("gdBtnCgdPop");
										button_4.bind("value").toDataColumn("word");
										return button_4;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdAdtRsltSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdAdtRsltSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "385px"
				});
				var button_5 = new cpr.controls.Button("btnRestore");
				button_5.value = "";
				button_5.style.setClasses(["btn-restore"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_5.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnSave");
				button_6.value = "";
				button_6.style.setClasses(["btn-save"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_6.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-SCRNGCII_CPR_LIST");
				container.addChild(userDefinedControl_3, {
					"top": "420px",
					"left": "527px",
					"width": "284px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdScrngRslt");
				grid_2.init({
					"dataSet": app.lookup("dsScrngRslt"),
					"columns": [
						{"width": "40px"},
						{"width": "124px"},
						{"width": "114px"},
						{"width": "118px"},
						{"width": "108px"},
						{"width": "88px"},
						{"width": "83px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DGPRCDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASS_DIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CIIDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PASSDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-STDVAL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CPRVAL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "DGR_CRS_DIV_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbDgrCrsDivRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListDgrCrsDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("DGR_CRS_DIV_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ASS_DIV_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbAssDivRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsListAssDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("ASS_DIV_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CII_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbCiiDivRcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsListCiiDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("CII_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ADT_RSLT_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbScrngAdtRsltRcd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsListAdtRsltRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("ADT_RSLT_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SCRNG_CII_VAL";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptScrngCilVal");
										output_7.dataType = "number";
										output_7.format = "s#,###";
										output_7.style.css({
											"text-align" : "right"
										});
										output_7.bind("value").toDataColumn("SCRNG_CII_VAL");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCRNG_CPR_VAL";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptScrngCprVal");
										output_8.dataType = "number";
										output_8.format = "s#,###";
										output_8.style.css({
											"text-align" : "right"
										});
										output_8.bind("value").toDataColumn("SCRNG_CPR_VAL");
										return output_8;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "445px",
					"left": "527px",
					"width": "688px",
					"height": "148px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfAdtRslt");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_9 = new cpr.controls.Output("optFrfProcRsltYear");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-GLS-SHYR");
					container.addChild(output_9, {
						"top": "56px",
						"left": "4px",
						"width": "110px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfDgrCd");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-SCR-DGRNM");
					container.addChild(output_10, {
						"top": "80px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfRemark");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_11, {
						"top": "105px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_3.maxLength = 200;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_3.bind("value").toDataColumn("REMARK");
					container.addChild(inputBox_3, {
						"top": "105px",
						"left": "119px",
						"width": "386px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfAdtRsltRcd");
					output_12.value = "";
					output_12.style.setClasses(["require"]);
					output_12.bind("value").toLanguage("UI-SCR-SCRNG_RESULT");
					container.addChild(output_12, {
						"top": "56px",
						"left": "260px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfAdtRsltRcd");
					comboBox_8.userAttr({"require": "Y"});
					comboBox_8.bind("fieldLabel").toExpression("#optFrfAdtRsltRcd.value");
					comboBox_8.bind("value").toDataColumn("ADT_RSLT_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsListAdtRsltRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "56px",
						"left": "375px",
						"width": "130px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfDgrCd");
					comboBox_9.userAttr({"require": "Y"});
					comboBox_9.bind("fieldLabel").toExpression("#optFrfDgrCd.value");
					comboBox_9.bind("value").toDataColumn("DGR_CD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsListDgCd"), {
							"label": "DG_NM",
							"value": "DG_CD"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"top": "81px",
						"left": "120px",
						"width": "175px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfStudId");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_13, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_4.enabled = false;
					inputBox_4.maxLength = 20;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_4.bind("value").toDataColumn("STUD_NO");
					container.addChild(inputBox_4, {
						"top": "5px",
						"left": "120px",
						"width": "130px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfRepNm");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-NAME");
					container.addChild(output_14, {
						"top": "31px",
						"left": "4px",
						"width": "110px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfSpNm");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-GLS-SP");
					container.addChild(output_15, {
						"top": "31px",
						"left": "260px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfRepNm");
					inputBox_5.enabled = false;
					inputBox_5.readOnly = true;
					inputBox_5.maxLength = 5;
					inputBox_5.bind("fieldLabel").toExpression("#optFrfRepNm.value");
					inputBox_5.bind("value").toDataColumn("REP_NM");
					container.addChild(inputBox_5, {
						"top": "31px",
						"left": "120px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfSpNm");
					inputBox_6.enabled = false;
					inputBox_6.readOnly = true;
					inputBox_6.maxLength = 5;
					inputBox_6.bind("fieldLabel").toExpression("#optFrfSpNm.value");
					inputBox_6.bind("value").toDataColumn("SP_NM");
					container.addChild(inputBox_6, {
						"top": "31px",
						"left": "375px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfProcRsltYear");
					inputBox_7.enabled = false;
					inputBox_7.readOnly = true;
					inputBox_7.bind("fieldLabel").toExpression("#optFrfProcRsltYear.value");
					inputBox_7.bind("value").toDataColumn("PROC_RSLT_YEAR");
					container.addChild(inputBox_7, {
						"top": "56px",
						"left": "120px",
						"width": "130px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfSaNm");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-GLS-ASGN");
					container.addChild(output_16, {
						"top": "5px",
						"left": "260px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfSaNm");
					inputBox_8.enabled = false;
					inputBox_8.readOnly = true;
					inputBox_8.maxLength = 5;
					inputBox_8.bind("fieldLabel").toExpression("#optFrfSaNm.value");
					inputBox_8.bind("value").toDataColumn("SA_NM");
					container.addChild(inputBox_8, {
						"top": "5px",
						"left": "375px",
						"width": "130px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfExptRcogRsn");
					output_17.value = "";
					output_17.style.setClasses(["require"]);
					output_17.bind("value").toLanguage("UI-SCR-EXPTRGTRSN");
					container.addChild(output_17, {
						"top": "130px",
						"left": "4px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfExptRcogRsn");
					inputBox_9.maxLength = 200;
					inputBox_9.userAttr({"require": "Y"});
					inputBox_9.bind("fieldLabel").toExpression("#optFrfExptRcogRsn.value");
					inputBox_9.bind("value").toDataColumn("EXPT_RCOG_RSN");
					container.addChild(inputBox_9, {
						"top": "130px",
						"left": "118px",
						"width": "387px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "420px",
					"left": "5px",
					"width": "515px",
					"height": "173px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "673px",
				"left": "10px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_3.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "673px",
				"left": "109px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "졸업사정예외처리";
	cpr.core.Platform.INSTANCE.register(app);
})();
