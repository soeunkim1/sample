/*
 * App URI: app/cgt/extCgtCGrdtAdtProc
 * Source Location: app/cgt/extCgtCGrdtAdtProc.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgt/extCgtCGrdtAdtProc", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCgtCGrdtAdtProc.xtm"/>
			
			
			var extCgtCGrdtAdtProc = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009OG", "CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "/root/resOnLoad/strKeyDate",
					oObjDivRcd 	: "ipbObjDivRcd",
					oCd 		: "ipbDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: ""
				}
				];
				
				/* 
				 * 학생 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId     	: "btnStudNoPop",
					iStudNo       	: "ipbStudNo",
					iStudId       	: "",
					iStudNm       	: "",
					iKeyDate	  	: "/root/resOnLoad/strKeyDate",
					iObjDivRcd 		: "",
					iObjCd     	  	: "",
					iObjNm 			: "",
					iAuthYN		  	: "",
					oStudId       	: "ipbStudId",
					oStudNo       	: "ipbStudNo",
					oStudNm       	: "",
					oSsn          	: "",
					oStatNm 	  	: "",
					oStatRcd	  	: "",
					oProcRslt	  	: "",
					oProcRsltYear	: "",
					oSaCd         	: "",
					oSaNm         	: "",					
					oSpCd         	: "",
					oSpNm         	: "",
					oOgCd 		  	: "",
					oOgNm 		  	: "",
					func 		  	: ""
				}
				];
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc  객체검색팝업 Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onModelConstructDone_ExtCgtCGrdtAdtProc = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptScrngErrRst");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearchExecCond", ["grpTmp"]);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
							
							// 졸업학년도 학기를 기본 설정
							util.Control.setValue(app, "cbbSchYear", util.DataMap.getValue(app, "dmResOnLoad", "strDefSchYearRcd"));
							util.Control.setValue(app, "cbbSmt", util.DataMap.getValue(app, "dmResOnLoad", "strDefSmtRcd"));
						}
					});
				};
				
				/**
				 * @desc 학년도 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onValueChanged_CbbSchYear = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학기 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onValueChanged_CbbSmt = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학년도학기 변경 이벤트 - 기준 시작일자, 종료일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-07
				 */
				function doChangeDate() {
					util.DataMap.setValue(app, "dmResOnLoad", "strKeyDate", "");
					
					//strCommand: getKeyDate 
					util.Submit.send(app, "subDate", function(){
						// 2017.01.09 소속 및 학생정보 클리어 주석처리 
						//ExtControl.reset(["ipbDeptNm","ipbDeptCd","ipbObjDivRcd", "ipbStudNo", "ipbStudId"]);	
					}); 
				};
				
				/**
				 * @desc 학사부서명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-06
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {	
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학사부서 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-06
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				
				/**
				 * @desc 학번 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-06
				 */
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 학생검색 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-06
				 */
				moPage.onClick_BtnStudNoPop = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 졸업사정 실행 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-07
				 */
				moPage.onClick_BtnSave = function(psStep) { 
					
					util.Msg.notify(app, "null");
					
					if(!util.validate(app, ["cbbSchYear", "cbbSmt", "ipbDeptNm", "ipbDeptCd", "ipbObjDivRcd"]))return 
					
					util.Control.setVisible(app, false, "grpData");
					
					// 2016.10.18 커버를 씌우기 위해 사전체크는 동기로 변경 
			//		// 사전체크
			//		ExtSubmission.sendEx("subPreCheck", "preCheck", function(pbSuccess){
			//			if(pbSuccess){
			//				// 졸업사정결과 데이터 유무 여부
			//				var vsCheckCgtAdtRslt = ExtInstance.getValue("/root/resList/strCheckCgtAdtRslt");
			//				if(vsCheckCgtAdtRslt == "Y"){
			//					//이미 졸업사정하였습니다. 재작업하시겠습니까?
			//					if (ComMsg.confirm(NLS.CGT.M029) == "1") {
			//						//기존에 작업한 예외처리자를 그대로 남겨놓겠습니까?
			//						if (ComMsg.confirm(NLS.CGT.M030) == "1") {
			//							ExtInstance.setValue("/root/reqKey/strExptProcAddYn", "Y");
			//						} else {
			//							ExtInstance.setValue("/root/reqKey/strExptProcAddYn", "N");
			//						}	
			//						
			//						//졸업사정 진행
			//						moPage.doSaveCgtAdtProc();
			//						
			//					} else {
			//						//취소하였습니다.
			//						Common.setMsgStatus(NLS.INF.M022);
			//					}	
			//				}else{
			//					//졸업사정 진행
			//					moPage.doSaveCgtAdtProc();
			//				}	
			//				
			//			}else Common.setMsgStatus(null);
			//			
			//			Common.removeCover();
			//		}); 
			
					// 배치전 커버페이지 적용
					util.coverPage(app);
					
					// 사전체크
					var vbSuccess = ExtSubmission.sendEx("subPreCheck", "preCheck");
					
					if(!vbSuccess){
						util.removeCover(app);
						return;
					}	
					
					// 졸업사정결과 데이터 유무 여부
					var vsCheckCgtAdtRslt = util.DataMap.getValue(app, "dmResList", "strCheckCgtAdtRslt");
					// 졸업확정 데이터 유무 여부(2017.01.11 추가)
					var vsCheckCgtGrdtStud = util.DataMap.getValue(app, "dmResList", "strCheckCgtGrdtStud");
					
					if(vsCheckCgtAdtRslt == "Y" || vsCheckCgtGrdtStud == "Y"){
						//이미 학위증서번호가 부여되었습니다. 학위증서번호 및 졸업석차를 삭제하고 재작업하시겠습니까?
						//이미 졸업사정하였습니다. 재작업하시겠습니까?
						if (util.Msg.confirm("NLS-CRM-vsCheckCgtGrdtStud == Y ?  NLS.CGT.M041 : NLS.CGT.M029" ) ) {
							//기존에 작업한 예외처리자를 그대로 남겨놓겠습니까?
							if (util.Msg.confirm("NLS-CGT-M030") ) {
								util.DataMap.setValue(app, "dmReqKey", "strExptProcAddYn", "Y");
							} else {
								util.DataMap.setValue(app, "dmReqKey", "strExptProcAddYn", "N");
							}	
							
							//졸업사정 진행
							doSaveCgtAdtProc();
							
						} else {
							//취소하였습니다.
							util.Msg.notify(app, "NLS.INF.M022");
							util.removeCover(app);
							return;
						}	
					}else{
						//졸업사정 진행
						doSaveCgtAdtProc();
					}	
				};
				
				/**
				 * @desc 졸업사정서브미션 호출 함수
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-17
				 */
				function doSaveCgtAdtProc() { 
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							var vnErrLength = util.DataSet.getRowCount(app, "dsRptScrngErrRst");
							
							if(vnErrLength > 0){
								//해당 졸업대상자에 대해 사정기준이 없는 경우가 있어 작업을 중단합니다./n사정기준오류 대상자 목록을 확인하세요.
								util.Msg.alert("NLS-CGT-M037");
								util.Control.redraw(app, "grdScrngErrRst");
								util.Control.setVisible(app, true, "grpData");
							}else{
								//처리건수
								var strProcCgtAdtRsltCnt = util.DataMap.getValue(app, "dmResList", "strProcCgtAdtRsltCnt");
								util.Msg.notify(app, "NLS.CGT.M031", [strProcCgtAdtRsltCnt]);
								util.Msg.alert("NLS-CGT-M031", [strProcCgtAdtRsltCnt]);
							}	
							
						}else{
							 util.Msg.notify(app, "null");
						}	
						
						util.removeCover(app);
					}); 	
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsScrngErrRst");
			dataSet_1.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "SA_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchYearList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP3"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strExptProcAddYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmBatchRslt");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "TARGET_CNT",
						"dataType": "string"
					},
					{
						"name": "PROC_CNT",
						"dataType": "string"
					},
					{
						"name": "PASS_CNT",
						"dataType": "string"
					},
					{
						"name": "FAIL_CNT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strCheckCgtAdtRslt",
						"dataType": "string"
					},
					{
						"name": "strCheckCgtGrdtStud",
						"dataType": "string"
					},
					{
						"name": "strProcCgtAdtRsltCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strDefSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strDefSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgt/ExtCgtGrdtAdtProc/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/cgt/ExtCgtGrdtAdtProc/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subPreCheck");
			submission_3.action = "/cgt/ExtCgtGrdtAdtProc/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cgt/ExtCgtGrdtAdtProc/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addRequestData(dataMap_4);
			submission_4.addResponseData(dataMap_2, false);
			submission_4.addResponseData(dataMap_3, false);
			submission_4.addResponseData(dataSet_1, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnSave");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-SCR-GRASRNEXEC");
			if(typeof onBtnSaveClick == "function") {
				button_1.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_1, {
				"top": "36px",
				"left": "1110px",
				"width": "120px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearchExecCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-GRADUYRS");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-GRASMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "260px",
					"width": "110px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "120px",
					"width": "130px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtList"), {
						"label": "CD_PRP3",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optDeptNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "515px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 100;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "620px",
					"width": "140px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "760px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "782px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbObjDivRcd");
				inputBox_3.visible = false;
				inputBox_3.userAttr({"require": "Y"});
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strObjDivRcd");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "788px",
					"width": "5px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optStudNo");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_4, {
					"top": "5px",
					"left": "795px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_4.maxLength = 50;
				inputBox_4.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_4.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "900px",
					"width": "140px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnStudNoPop");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudNoPopClick == "function") {
					button_3.addEventListener("click", onBtnStudNoPopClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1040px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbStudId");
				inputBox_5.visible = false;
				inputBox_5.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudId");
				container.addChild(inputBox_5, {
					"top": "5px",
					"left": "1062px",
					"width": "5px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "676px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_2.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "676px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			group_2.visible = false;
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-PRCRSTLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "375px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScrngErrRst");
				grid_1.init({
					"dataSet": app.lookup("dsScrngErrRst"),
					"columns": [
						{"width": "40px"},
						{"width": "98px"},
						{"width": "111px"},
						{"width": "165px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "543px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "579px"
			});
			
			var group_3 = new cpr.controls.Container("grpTmp");
			group_3.visible = false;
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
			})(group_3);
			container.addChild(group_3, {
				"top": "675px",
				"left": "245px",
				"width": "35px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
		}
	});
	app.title = "일괄졸업사정";
	cpr.core.Platform.INSTANCE.register(app);
})();
