/*
 * App URI: app/cgt/extCgtCGrdtRnkProc
 * Source Location: app/cgt/extCgtCGrdtRnkProc.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgt/extCgtCGrdtRnkProc", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCgtCGrdtRnkProc.xtm"/>
			
			
			var extCgtCGrdtRnkProc = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-07-21
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-21
				 */
				moPage.onModelConstructDone_ExtCgtCGrdtRnkProc = function() {
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
							
							// 졸업학년도 학기를 기본 설정
							util.Control.setValue(app, "cbbSchYear", util.DataMap.getValue(app, "dmResOnLoad", "strDefSchYearRcd"));
							util.Control.setValue(app, "cbbSmt", util.DataMap.getValue(app, "dmResOnLoad", "strDefSmtRcd"));
						}
					});
				};
				
				/**
				 * @desc 졸업석차부여 선정 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-07-21
				 */
				moPage.onClick_BtnSave = function(psStep) { 
					
					util.Msg.notify(app, "null");
					
					if(!util.validate(app, ["cbbSchYear", "cbbSmt"])) return;
					
					// 2016.10.18 커버를 씌우기 위해 사전체크는 동기로 변경 
			//		// 사전체크
			//		ExtSubmission.sendEx("subPreCheck", "preCheck", function(pbSuccess){
			//			if(pbSuccess){
			//				// 해당 학년도, 학기에 졸업석차부여 작업을 이미 처리했는지 확인
			//				var strCheckCgtRnk = ExtInstance.getValue("/root/resList/strCheckCgtRnk");
			//				if(strCheckCgtRnk  == "Y"){
			//					//이미 졸업석차부여한 자료가 존재합니다. 이전 자료가 삭제됩니다. 재작업하시겠습니까?
			//					if (ComMsg.confirm(NLS.CGT.M035) == "1") {
			//						//석차 부여
			//						moPage.doSaveCgtRnk();
			//					} else {
			//						//취소하였습니다.
			//						Common.setMsgStatus(NLS.INF.M022);
			//					}	
			//				}else{
			//					//석차 부여
			//					moPage.doSaveCgtRnk();
			//				}	
			//				
			//			}else Common.setMsgStatus(null);
			//			
			//			Common.removeCover();
			//		}); 
					
					// 배치전 커버페이지 적용
					util.coverPage(app);
					
					// 사전체크
					var vbSuccess = ExtSubmission.sendEx("subPreCheck", "preCheck");
					
					if(!vbSuccess){
						util.removeCover(app);
						return;
					}	
					
					// 해당 학년도, 학기에 졸업석차부여 작업을 이미 처리했는지 확인
					var strCheckCgtRnk = util.DataMap.getValue(app, "dmResList", "strCheckCgtRnk");
					if(strCheckCgtRnk  == "Y"){
						//이미 졸업석차부여한 자료가 존재합니다. 이전 자료가 삭제됩니다. 재작업하시겠습니까?
						if (util.Msg.confirm("NLS-CGT-M035") ) {
							//석차 부여
							doSaveCgtRnk();
						} else {
							//취소하였습니다.
							util.Msg.notify(app, "NLS.INF.M022");
							util.removeCover(app);
							return;
						}	
					}else{
						//석차 부여
						doSaveCgtRnk();
					}	
					
				};
				
				/**
				 * @desc 석차부여 호출 함수
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-17
				 */
				function doSaveCgtRnk() { 
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							//처리건수
							var strProcCnt = util.DataMap.getValue(app, "dmResList", "strProcCnt");
							
							// @명의 석차부여가 완료되었습니다.
							util.Msg.notify(app, "NLS.CGT.M036", [strProcCnt]);
							util.Msg.alert("NLS-CGT-M036", [strProcCnt]);
						}else{
							 util.Msg.notify(app, "null");
						}
						
						util.removeCover(app);
					}); 	
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP3"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strCheckCgtRnk",
						"dataType": "string"
					},
					{
						"name": "strProcCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strDefSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strDefSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgt/ExtCgtGrdtRnkProc/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subPreCheck");
			submission_2.action = "/cgt/ExtCgtGrdtRnkProc/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cgt/ExtCgtGrdtRnkProc/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnSave");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-SCR-GRASRNEXEC");
			if(typeof onBtnSaveClick == "function") {
				button_1.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_1, {
				"top": "36px",
				"left": "1110px",
				"width": "120px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearchExecCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-GRADUYRS");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-GRASMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "260px",
					"width": "110px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "120px",
					"width": "130px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtList"), {
						"label": "CD_PRP3",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "졸업석차부여";
	cpr.core.Platform.INSTANCE.register(app);
})();
