/*
 * App URI: app/cgt/stdCgtCGrdtStudMng
 * Source Location: app/cgt/stdCgtCGrdtStudMng.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cgt/stdCgtCGrdtStudMng", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCgtCGrdtStudMng.xtm"/>
			
			var stdCgtCGrdtStudMng = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				var msStudId = "";
				var msKeyDate = "";
				
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{
						controlId			:	"btnPopDgCdSearch",
						iCd					:	"",
						iNm					:	"ipbFrfDgNm",
						iObjDivRcd			:	["CC009DG"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"dipFrfGrdtDt",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"",
						oCd					:	"ipbFrfDgCd",
						oCdNm				:	"ipbFrfDgNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					: null
					}
				];
			
				/**
				 * @desc  서브페이지 임포트 온로드
				 * @return void
				 * @author Choi. In. Seong. 2016.03.04
			     */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				
				/**
				 * @desc  졸업정보 온로드
				 * @return void
				 * @author Choi. In. Seong. 2016.03.04
			     */
				moPage.onModelConstructDone_stdCgtCGrdtStudMng = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCsrEnroll", "frfCgtGrdtStud"]);
			
					// 부모멤버변수에담긴학번받음
					msStudId = moPage.parent.moParentObj.studId;
					msKeyDate = moPage.parent.moParentObj.keyDate;
					
					util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
					util.DataMap.setValue(app, "dmReqList", "strKeyDate", msKeyDate);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							// 컨트롤 초기화
							util.Control.redraw(app, ["rptCsrEnroll", "frfCgtGrdtStud", "cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfGrdtDivRcd", "cbbFrfTopDivRcd", "ckbGrdtStudY"]);
							
							if (ValueUtil.isNull(msStudId)) {
								return false;
								
							}else{
								doList(function(pbSuccess) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccess) {
										moPage.parentSendMsg("lblTitleRptCsrEnroll", NLS.INF.M024);
										//데이터가 없을시 졸업을 할 수 없는 상태이므로 컨트롤 막기
										if(util.Grid.getRowCount(app, "grdCsrEnroll") < 1){
											util.Control.setEnable(app, false, ["frfCgtGrdtStud", "btnDel", "btnSave", "btnSaveCancel", "ckbGrdtStudY"]);
											util.Control.redraw(app, ["btnDel", "btnSave", "btnSaveCancel", "ckbGrdtStudY"]);
										} else {
											//초기화면 컨트롤 활성/비활성
											doCheckEnable();
										}
									}
								});
							}
						}
					});
				}
			
				/**
				 * @desc 학적등록 등록상태에 따른 컨트롤 제어
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 4
				 */
				function doCheckEnable() {
					//등록정보의 등록상태중 등록이 있으면 졸업취소 비활성, 졸업정보만 별도처리 활성
					var vsEnrollEnroYN = util.DataMap.getValue(app, "dmReqList", "strEnrollEnroYN");
					if (vsEnrollEnroYN != "Y") {
						util.Control.setEnable(app, true, ["ckbGrdtStudY"]);
						util.Control.setEnable(app, false, ["btnSaveCancel"]);
					} else {
						util.Control.setEnable(app, false, ["ckbGrdtStudY"]);
						util.Control.setEnable(app, true, ["btnSaveCancel"]);
					}
					util.Control.redraw(app, ["ckbGrdtStudY", "btnSaveCancel"]);
					//졸업정보 화면 화면 clear 뒤 비활성, 삭제버튼 비활성
					util.Control.reset(app, ["frfCgtGrdtStud"]);
					util.Control.setEnable(app, false, ["frfCgtGrdtStud"]);
				};
				
				
				/**
				 * @desc 졸업정보 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 4
				 */
				function doList(poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["rptCsrEnroll", "frfCgtGrdtStud"]);
							util.Control.redraw(app, "lblRowCnt_rptCsrEnroll");
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 3. 4
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallBackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 3. 7
				 */
				function doSubSave(poCallBackFunc) {
					
					//신규일 경우 fiag insert 로 변경
					if( moPage.mbIsInsertRowFrf ){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCgtGrdtStud",cpr.data.tabledata.RowState.INSERTED,'1');
					}
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								// 저장 후 프리폼 초기화
								util.Control.redraw(app, ["frfCgtGrdtStud"]);
								
								var voCallBackSaveAfter = function(pbSuccessAfter) {
									//저장성공 메세지 출력
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessAfter) {
										moPage.parentSendMsg("lblTitleRptCsrEnroll",NLS.INF.M025);
										doCheckEnable();
									}
									if(util.isFunc(poCallBackFunc))	poCallbackFunc(poCallBackFunc);
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
							}
						}
					);
				};
				 
				/**
				 * @desc 작업저장 전 체크
				 * @param poCallBackFunc 콜백함수
				 * @return Boolean 체크 결과
				 * @author Choi In Seong 2016. 3. 7
				 */
				function doSaveCheck(poCallBackFunc) {
					
					var vsValue 	= util.DataMap.getValue(app, "dmReqList", "strEnrollEnroYN");
					var vsStudId	= util.FreeForm.getValue(app, "frfCgtGrdtStud", "STUD_ID");
					
					// 졸업정보만 별도처리 값이 없고 수정상태가 아니면 프리폼을 업데이트 상태로 만듬
					if(vsValue != "Y" && ValueUtil.fixNull(util.Grid.getRowState(app, "frfCgtGrdtStud",1))==""
						&& !moPage.mbIsInsertRowFrf && ValueUtil.fixNull(vsStudId) != ""){
							util.FreeForm.setValue(app, "frfCgtGrdtStud",AppConstants.CUD_COL_REF, "U");
							util.Grid.setRowState(app, "frfCgtGrdtStud",cpr.data.tabledata.RowState.UPDATED,'1');
					} else {
						// 데이터 변경사항 체크
						if(!util.Grid.isModified(app, ["frfCgtGrdtStud"], null)){
							moPage.parentSendMsg("lblTitleRptCsrEnroll",NLS.WRN.M007);
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(false);
							return false;
						}
					}
					
					//리피트 validation check
					if(!util.validate(app, "frfCgtGrdtStud")){
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(false);
						return false;
					}
					
					return true;
				};
			
				/**
				 * @desc 졸업정보 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				function doSubGrdtList() {
					//선택된 그리드에 해당되는 데이터 값 GET 
					var vsSpDivRcd 		= util.Grid.getCellValue(app, "grdCsrEnroll", "SP_DIV_RCD"); 			//학적등록구분코드
					var vsEnrollDivRcd	= util.Grid.getCellValue(app, "grdCsrEnroll", "ENROLL_DIV_RCD"); 	//이수과정구분코드
					var vsSaCd			= util.Grid.getCellValue(app, "grdCsrEnroll", "SA_CD"); 					//학사부서코드
					var vsSpCd			= util.Grid.getCellValue(app, "grdCsrEnroll", "SP_CD"); 					//이수과정코드
					
					util.DataMap.setValue(app, "dmReqList", "strSpDivRcd", vsSpDivRcd);
					util.DataMap.setValue(app, "dmReqList", "strEnrollDivRcd", vsEnrollDivRcd);
					util.DataMap.setValue(app, "dmReqList", "strSaCd", vsSaCd);
					util.DataMap.setValue(app, "dmReqList", "strSpCd", vsSpCd);
					
					//strCommand: grdtList 
					util.Submit.send(app, "subGrdtList", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, ["frfCgtGrdtStud"]);
							
							var vsRegStatRcd	= util.Grid.getCellValue(app, "grdCsrEnroll", "REG_STAT_RCD");
							var vsEnrollDivRcd  = util.Grid.getCellValue(app, "grdCsrEnroll", "ENROLL_DIV_RCD");
							var vsMainYn 		= util.DataMap.getValue(app, "dmResList", "strGrdtMainYN");
							var vnRowCnt		= util.DataMap.getValue(app, "dmResList", "rptGrdtCnt");
								
							if(vsEnrollDivRcd == "CT103EXTR" && vsMainYn != "Y"){ //추가과정이면서 주과정 졸업정보가 없을 경우 비활성화
								//졸업정보 화면 비활성 
								util.Control.setEnable(app, false, ["frfCgtGrdtStud"]);
							}else{
								//졸업정보 화면 활성 
								util.Control.setEnable(app, true, ["frfCgtGrdtStud"]);
								//값이 없으면 입력가능하게 만든다.
								if (vnRowCnt == "0") {
									doGrdtInsertRow();
								}else{
									moPage.mbIsInsertRowFrf = false;
								}
							}
						}
					});
				};
				
				/**
				 * @desc 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 3.7
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["frfCgtGrdtStud"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				function doGrdtInsertRow() {
					util.FreeForm.setValue(app, "frfCgtGrdtStud",AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCgtGrdtStud");
					
					//신규 초기값 셋팅
					var vsSpDivRcd    	= util.DataMap.getValue(app, "dmReqList", "strSpDivRcd");
					var vsEnrollDivRcd	= util.DataMap.getValue(app, "dmReqList", "strEnrollDivRcd");
					var vsSaCd         	= util.DataMap.getValue(app, "dmReqList", "strSaCd");
					var vsSpCd         	= util.DataMap.getValue(app, "dmReqList", "strSpCd");
					var vsYear 			= util.DataMap.getValue(app, "dmResOnLoad", "strInitYear");
					var vsSmt  			= util.DataMap.getValue(app, "dmResOnLoad", "strInitSmtRcd");
					
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "STUD_ID", msStudId);						//학생 오브젝트번호
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "SP_DIV_RCD", vsSpDivRcd);				//학적등록구분코드
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "ENROLL_DIV_RCD", vsEnrollDivRcd);	//이수과정구분코드
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "SA_CD", vsSaCd);								//학사부서코드
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "SP_CD", vsSpCd);								//이수과정코드
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "SCH_YEAR_RCD", vsYear);								//이수과정코드
					util.FreeForm.setValue(app, "frfCgtGrdtStud", "SMT_RCD", vsSmt);								//이수과정코드
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCgtGrdtStud",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrf = true;
				};
				 
				/**
				 * @desc 선택한 학적등록정보의 졸업정보를 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onRowSelect_RptCsrEnroll = function() {
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCsrEnroll"))){
						return;
					}
					
					// 수정 여부 체크
					if(util.Grid.isModified(app, ["frfCgtGrdtStud"], "CRM") ){
						return;
					}
					//삭제버튼 제어
					doDelBtnEnable();
			
					//리피트 포커스 변경시 프리폼 초기화
					util.Control.reset(app, ["frfCgtGrdtStud"]);
					
					//변경내역이 없거나, 변경내역이 있지만 통과하는 경우
					doSubGrdtList();
					
				};
				
				 
				/**
				 * @desc 졸업 취소
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onClick_BtnCancel = function() {
					if (util.Msg.confirm("NLS-CRM-M015", [NLS.CGT.M020])) {
						
						//strCommand: grdtWith 
						util.Submit.send(app, "subGrdtWith", function(pbSuccess) {
								if (pbSuccess) {
									var voCallBackSaveAfter = function(pbSuccessAfter) {
										//저장성공 메세지 출력
										// 조회 : "조회되었습니다." header 메세지 표시
										
										if(pbSuccessAfter) {
											moPage.parentSendMsg("lblTitleRptCsrEnroll",NLS.INF.M003);
											doCheckEnable();
										}
									};
									ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
								}
							}
						);
					}
				};
				
				/**
				 * @desc 졸업정보 삭제 버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onClick_BtnDel = function() {
					// 졸업정보 삭제는 추가과정 정보를 먼저 삭제하고 주과정에 대한 졸업정보를 삭제할 수 있도록 처리
					var vsGrdtExtrYN	= util.DataMap.getValue(app, "dmResList", "strGrdtExtrYN");
					var vsSpDivRcd		= util.DataMap.getValue(app, "dmReqList", "strSpDivRcd");
					var vsEnrollDivRcd	= util.DataMap.getValue(app, "dmReqList", "strEnrollDivRcd");
					if ((vsSpDivRcd == "CA10701" && vsEnrollDivRcd == "CT103MAIN")) { // 진공, 주과정등록일 경우
						if (vsGrdtExtrYN == "Y") {
							//추가정보를 삭제하라는 msg
							util.Msg.alert("NLS-CGT-M011");
							return false;
						}
					}
					
					//신규일 경우 삭제 불가 처리 
					if (moPage.mbIsInsertRowFrf) {
						//삭제할 데이터가 없습니다. 
						return;
					}else{
						//삭제
						util.Grid.deleteRow(app, "frfCgtGrdtStud");
						util.Control.setEnable(app, false, ["frfCgtGrdtStud"]);	
					}
				};
			
				/**
				 * @desc 학위코드 팝업 호출
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onClick_BtnPopDgCdSearch = function(sender) {
					// 졸업일자 체크
					var vsKeyDate = util.FreeForm.getValue(app, "frfCgtGrdtStud", "GRDT_DT");
					var vsTitle = ExtControl.getTextValue("lblFrfGrdtDt");
					if (ValueUtil.isNull(vsKeyDate)) {
						//졸업일자를 입력하여 주십시오.
						util.Msg.alert("NLS-CSR-M121",[vsTitle]);
						return;
					}
					
					doOnClickStdCmnPObjSch(sender);
				};
					
				/**
				 * @desc 학위코드 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onValueChanged_IpbFrfDgNm = function(sender) {
					// 졸업일자 체크
					var vsKeyDate = util.FreeForm.getValue(app, "frfCgtGrdtStud", "GRDT_DT");
					var vsTitle = ExtControl.getTextValue("lblFrfGrdtDt");
					if (ValueUtil.isNull(vsKeyDate)) {
						util.Control.setValue(app, "ipbFrfDgNm", "");
						util.Control.setValue(app, "ipbFrfDgCd", "");
						//졸업일자를 입력하여 주십시오.
						util.Msg.alert("NLS-CSR-M121",[vsTitle]);
						return;
					}
					
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 작업저장 버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onClick_BtnSave = function() {
					
					var vsValue = util.DataMap.getValue(app, "dmReqList", "strEnrollEnroYN");
					
					if(!doSaveCheck()) return;
					
					if(vsValue == "Y"){	//졸업정보만 저장할 경우
						doSubSave();
					}else{
						if(util.Msg.confirm("NLS-CRM-M032")){
							doSubSave();			
						}			
					}
				};
				
				/**
				 * @desc 졸업정보만 별도처리 체크시 삭제버튼 제어
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */
				moPage.onValueChanged_CkbGrdtStudY = function() {
					//삭제버튼 제어
					doDelBtnEnable();
				};
				
				/**
				 * @desc 등록정보와 졸업정보만 별도처리여부에 따른 삭제버튼 제어
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */	
				function doDelBtnEnable() {
					var vsRegStatRcd		= util.Grid.getCellValue(app, "grdCsrEnroll", "REG_STAT_RCD");			//학적등록상태
					var vsEnrollDivRcd		= util.Grid.getCellValue(app, "grdCsrEnroll", "ENROLL_DIV_RCD");			//학적등록구분
					var vsMainYn				= util.DataMap.getValue(app, "dmResList", "strGrdtMainYN");				//주과정 졸업정보 여부
					var vsExtrYn				= util.DataMap.getValue(app, "dmResList", "strGrdtExtrYN"); 				//추가과정 졸업정보 여부
					var vsEnrollEnroYn 	= util.DataMap.getValue(app, "dmReqList", "strEnrollEnroYN");				//졸업정보만 별도처리 여부
					
					if(vsRegStatRcd == "CT109ENRO"){	//등록상태
						if( (vsEnrollDivRcd == "CT103MAIN" && vsMainYn == "Y")	//주과정일 경우 주과정 졸업정보가 있을 경우 
							|| (vsEnrollDivRcd == "CT103EXTR" && vsExtrYn == "Y") ){ //추가과정일 경우 추가과정 졸업정보가 있을경우
								if(vsEnrollEnroYn == "Y"){ // 졸업정보만 별도처리 선택시만 삭제버튼 활성화
									util.Control.setEnable(app, true, ["btnDel"]);		//삭제버튼 활성화
								} else {
									util.Control.setEnable(app, false, ["btnDel"]);		//삭제버튼 비활성화
								}
							}else{
								util.Control.setEnable(app, false, ["btnDel"]);	//삭제버튼 비활성화
							}
					}else{
						util.Control.setEnable(app, false, ["btnDel"]); 	//삭제버튼 비활성화
					}
				}
				
				/**
				 * @desc 졸업일자 수정 시 학위코드 초기화
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 7
				 */	
				moPage.onValueChanged_DipFrfGrdtDt = function() {
					util.Control.setValue(app, "ipbFrfDgNm", "");
					util.Control.setValue(app, "ipbFrfDgCd", "");
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP2"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP3"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsGrdtDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsTopDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCsrEnroll");
			dataSet_5.parseData({
				"info": "CSR_ENROLL@STUD_ID,REG_STAT_RCD,ENROLL_DIV_RCD,SP_DIV_RCD,SCH_YEAR_RCD,SMT_RCD,SA_CD,SP_CD,PROC_DT",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "REG_STAT_RCD"},
					{"name": "REG_STAT_NM"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "ENROLL_DIV_NM"},
					{"name": "SP_DIV_RCD"},
					{"name": "SP_DIV_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "PROC_DT"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OG_CD"},
					{"name": "OG_NM"},
					{"name": "ENROLL_RSN_RCD"},
					{"name": "ENROLL_RSN_NM"},
					{"name": "ENROLL_CANCEL_RSN_RCD"},
					{"name": "ENROLL_CANCEL_RSN_NM"},
					{"name": "CUR_APLY_YEAR_RCD"},
					{"name": "CUR_APLY_YEAR_NM"},
					{"name": "REF_KEY"},
					{"name": "UREF_KEY"},
					{"name": "SHREG_ALT_KEY"},
					{"name": "PRI"},
					{"name": "CANCEL_DT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strInitSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strInitYear",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strEnrollDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strSpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSpCd",
						"dataType": "string"
					},
					{
						"name": "strEnrollEnroYN",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFrfCgtGrdtStud");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "ENROLL_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "SP_CD",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "GRDT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DGR_CD",
						"dataType": "string"
					},
					{
						"name": "DGR_NO",
						"dataType": "string"
					},
					{
						"name": "DGR_NO_NM",
						"dataType": "string"
					},
					{
						"name": "DEED_NO",
						"dataType": "string"
					},
					{
						"name": "GRDT_CNT",
						"dataType": "string"
					},
					{
						"name": "TOP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "RNK",
						"dataType": "string"
					},
					{
						"name": "GRDT_DT",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "DGR_NM",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strGrdtExtrYN",
						"dataType": "string"
					},
					{
						"name": "strGrdtMainYN",
						"dataType": "string"
					},
					{
						"name": "rptGrdtCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cgt/StdCgtCGrdtStudMng/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cgt/StdCgtCGrdtStudMng/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_5, false);
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cgt/StdCgtCGrdtStudMng/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_3);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subGrdtList");
			submission_4.action = "/cgt/StdCgtCGrdtStudMng/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataMap_3, false);
			submission_4.addResponseData(dataMap_4, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subGrdtWith");
			submission_5.action = "/cgt/StdCgtCGrdtStudMng/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_rptCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-GRADUINFO");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnDel");
				button_1.value = "";
				button_1.style.setClasses(["btn-delete"]);
				button_1.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_1.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_1, {
					"top": "278px",
					"left": "895px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaveCancel");
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-SCR-GRADUCANCL");
				if(typeof onBtnSaveCancelClick == "function") {
					button_2.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "278px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrEnroll");
				grid_1.init({
					"dataSet": app.lookup("dsCsrEnroll"),
					"columns": [
						{"width": "40px"},
						{"width": "130px"},
						{"width": "90px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "135px"},
						{"width": "163px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "148px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "150px"},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "91px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCREGDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-STAT_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SA");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-OG");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHRGNRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SUBPROCYRS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "이수과정구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROC_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "오브젝트ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "참조키";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "상위참조키";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "학적변동키";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "우선순위";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "학적등록취소일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "상태코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.text = "등록구분코드";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "ENROLL_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SMT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REG_STAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptStDt");
										output_1.dataType = "date";
										output_1.format = "YYYY-MM-DD";
										output_1.style.css({
											"text-align" : "center"
										});
										output_1.bind("value").toDataColumn("ST_DT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptEndDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.bind("value").toDataColumn("END_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "OG_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "ENROLL_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "ENROLL_CANCEL_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "CUR_APLY_YEAR_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "SP_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbStudId");
										inputBox_1.maxLength = 20;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("STUD_ID");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbRefKey");
										inputBox_2.maxLength = 50;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("REF_KEY");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "UREF_KEY";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbUrefKey");
										inputBox_3.maxLength = 50;
										inputBox_3.bind("value").toDataColumn("UREF_KEY");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SHREG_ALT_KEY";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbShregAltKey");
										inputBox_4.maxLength = 50;
										inputBox_4.bind("value").toDataColumn("SHREG_ALT_KEY");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "PRI";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbPri");
										inputBox_5.maxLength = 15;
										inputBox_5.bind("value").toDataColumn("PRI");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipCancelDt");
										dateInput_1.bind("value").toDataColumn("CANCEL_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "REG_STAT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "ENROLL_DIV_RCD";
								}
							}
						]
					}
				});
				if(typeof onGrdCsrEnrollSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCsrEnrollSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "243px"
				});
				var group_2 = new cpr.controls.Container("frfCgtGrdtStud");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_3 = new cpr.controls.Output("optFrfStudId");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-STUID");
					container.addChild(output_3, {
						"top": "5px",
						"left": "805px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_6.visible = false;
					inputBox_6.maxLength = 20;
					inputBox_6.userAttr({"require": "Y"});
					inputBox_6.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "STUD_ID");
					container.addChild(inputBox_6, {
						"top": "5px",
						"left": "910px",
						"width": "80px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfEnrollDivRcd");
					output_4.visible = false;
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-REGDIVISIONRCD");
					container.addChild(output_4, {
						"top": "30px",
						"left": "805px",
						"width": "100px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSpDivRcd");
					output_5.visible = false;
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-SCR-PRCSDIVCD");
					container.addChild(output_5, {
						"top": "55px",
						"left": "805px",
						"width": "100px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfSaCd");
					output_6.visible = false;
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-DB-SA_CD");
					container.addChild(output_6, {
						"top": "80px",
						"left": "805px",
						"width": "100px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfSpCd");
					output_7.visible = false;
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-DB-SP_CD");
					container.addChild(output_7, {
						"top": "105px",
						"left": "805px",
						"width": "100px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfSchYearRcd");
					output_8.value = "";
					output_8.style.setClasses(["require"]);
					output_8.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_8, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "110px",
						"width": "95px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfSmtRcd");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_9, {
						"top": "5px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "SMT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_PRP3",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "400px",
						"width": "70px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfGrdtDivRcd");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-SCR-GRADUDIV");
					container.addChild(output_10, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfGrdtDivRcd");
					comboBox_3.bind("fieldLabel").toExpression("#optFrfGrdtDivRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "GRDT_DIV_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsGrdtDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "30px",
						"left": "110px",
						"width": "85px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfDgCd");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-DB-DG_CD");
					container.addChild(output_11, {
						"top": "30px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfDgNo");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-DB-DG_NO");
					container.addChild(output_12, {
						"top": "55px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfDgNo");
					inputBox_7.maxLength = 30;
					inputBox_7.bind("fieldLabel").toExpression("#optFrfDgNo.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "DGR_NO");
					container.addChild(inputBox_7, {
						"top": "55px",
						"left": "400px",
						"width": "175px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfDgNoNm");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-DGRNO");
					container.addChild(output_13, {
						"top": "55px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfDgNoNm");
					inputBox_8.maxLength = 50;
					inputBox_8.bind("fieldLabel").toExpression("#optFrfDgNoNm.value");
					inputBox_8.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "DGR_NO_NM");
					container.addChild(inputBox_8, {
						"top": "55px",
						"left": "110px",
						"width": "175px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfDeedNo");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-DB-DEED_NO");
					container.addChild(output_14, {
						"top": "80px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfDeedNo");
					inputBox_9.maxLength = 30;
					inputBox_9.bind("fieldLabel").toExpression("#optFrfDeedNo.value");
					inputBox_9.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "DEED_NO");
					container.addChild(inputBox_9, {
						"top": "80px",
						"left": "110px",
						"width": "175px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfGrdtCnt");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-GRDT_CNT");
					container.addChild(output_15, {
						"top": "105px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfGrdtCnt");
					numberEditor_1.format = "999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optFrfGrdtCnt.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "GRDT_CNT");
					container.addChild(numberEditor_1, {
						"top": "105px",
						"left": "110px",
						"width": "90px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfTopDivRcd");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-DB-TOP_DIV_RCD");
					container.addChild(output_16, {
						"top": "80px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfTopDivRcd");
					comboBox_4.bind("fieldLabel").toExpression("#optFrfTopDivRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "TOP_DIV_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsTopDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "80px",
						"left": "400px",
						"width": "100px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfRnk");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-GLS-RNK");
					container.addChild(output_17, {
						"top": "105px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfRnk");
					numberEditor_2.format = "999,999,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optFrfRnk.value");
					numberEditor_2.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "RNK");
					container.addChild(numberEditor_2, {
						"top": "105px",
						"left": "400px",
						"width": "90px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfGrdtDt");
					output_18.value = "";
					output_18.style.setClasses(["require"]);
					output_18.bind("value").toLanguage("UI-DB-GRDT_DT");
					container.addChild(output_18, {
						"top": "130px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("dipFrfGrdtDt");
					dateInput_2.userAttr({"require": "Y"});
					dateInput_2.bind("fieldLabel").toExpression("#optFrfGrdtDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "GRDT_DT");
					if(typeof onDipFrfGrdtDtValueChange == "function") {
						dateInput_2.addEventListener("value-change", onDipFrfGrdtDtValueChange);
					}
					container.addChild(dateInput_2, {
						"top": "130px",
						"left": "110px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfDgNm");
					inputBox_10.maxLength = 30;
					inputBox_10.bind("fieldLabel").toExpression("#optFrfDgCd.value");
					inputBox_10.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "DGR_NM");
					if(typeof onIpbFrfDgNmValueChange == "function") {
						inputBox_10.addEventListener("value-change", onIpbFrfDgNmValueChange);
					}
					container.addChild(inputBox_10, {
						"top": "30px",
						"left": "400px",
						"width": "155px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfDgCd");
					inputBox_11.visible = false;
					inputBox_11.maxLength = 10;
					inputBox_11.bind("fieldLabel").toExpression("#optFrfDgCd.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "DGR_CD");
					container.addChild(inputBox_11, {
						"top": "30px",
						"left": "590px",
						"width": "20px",
						"height": "25px"
					});
					var button_4 = new cpr.controls.Button("btnPopDgCdSearch");
					button_4.value = "";
					button_4.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnPopDgCdSearchClick == "function") {
						button_4.addEventListener("click", onBtnPopDgCdSearchClick);
					}
					container.addChild(button_4, {
						"top": "30px",
						"left": "555px",
						"width": "20px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfEnrollDivRcd");
					output_19.visible = false;
					output_19.value = "";
					output_19.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "ENROLL_DIV_RCD");
					container.addChild(output_19, {
						"top": "30px",
						"left": "910px",
						"width": "95px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfSpDivRcd");
					output_20.visible = false;
					output_20.value = "";
					output_20.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "SP_DIV_RCD");
					container.addChild(output_20, {
						"top": "55px",
						"left": "910px",
						"width": "95px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfSaCd");
					output_21.visible = false;
					output_21.value = "";
					output_21.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "SA_CD");
					container.addChild(output_21, {
						"top": "80px",
						"left": "910px",
						"width": "95px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfSpCd");
					output_22.visible = false;
					output_22.value = "";
					output_22.bind("value").toDataMap(app.lookup("dmFrfCgtGrdtStud"), "SP_CD");
					container.addChild(output_22, {
						"top": "105px",
						"left": "910px",
						"width": "95px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "303px",
					"left": "5px",
					"width": "1015px",
					"height": "155px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbGrdtStudY");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "졸업정보만 별도처리";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strEnrollEnroYN");
				if(typeof onCkbGrdtStudYValueChange == "function") {
					checkBox_1.addEventListener("value-change", onCkbGrdtStudYValueChange);
				}
				container.addChild(checkBox_1, {
					"top": "278px",
					"left": "5px",
					"width": "165px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "455px",
				"left": "45px",
				"width": "50px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_2.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "454px",
				"left": "150px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCgtCGrdtStudMng";
	cpr.core.Platform.INSTANCE.register(app);
})();
