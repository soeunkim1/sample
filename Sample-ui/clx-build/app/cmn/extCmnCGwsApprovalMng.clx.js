/*
 * App URI: app/cmn/extCmnCGwsApprovalMng
 * Source Location: app/cmn/extCmnCGwsApprovalMng.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/extCmnCGwsApprovalMng", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCmnCGwsApprovalMng.xtm"/>
			
			
			var extCmnCGwsApprovalMng = function() {
				var moPage = new Page();
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc  onModelConstructDone  event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				moPage.onModelConstructDone_ExtCmnCGwsApprovalMng = function() {
					// 리피트 및 조회그룹 관련 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpDataMst", "grpDataDtl", "grpDataField"]);
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptMst", "rptDtl", "rptField"]);
					
					util.Header.clickSearch(app);
				};
				
				/**
				 * @desc  조회 버튼 click event 
				 * @return void
				 * @author jeong-ho, Jeong 6. 21.
				 */
				moPage.onClick_BtnSearch = function() {
					
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					doListMst(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc  조회 event 마스터 리피트 조회  	
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doListMst(poCallBackFunc) {
							
					//디테일 리피트 변경시 변경내역 체크 방지
					util.Control.redraw(app, "grdDtl");
					util.Control.redraw(app, "grdField");
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdMst");
							//마스터에 데이터가 없을 경우 디테일 입력 불가
							if(util.Grid.getRowCount(app, "grdMst") < 1){
								util.Control.setEnable(app, false, ["grpDataDtl", "grpDataField"]);
								util.Control.reset(app, "rptDtl");
								util.Control.reset(app, "rptField");
							}else{
								// 각 컨트롤 활성화 제어
								doMstRptStatus();
								doDtlRptStatus();
								doFieldRptStatus();
							}	
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}); 
				};
				
				/**
				 * @desc   마스터의 상태가 편집상태일 경우  디테일 disable
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doMstRptStatus(){
					if(util.Grid.isModified(app, "grdMst")){
						util.Control.setEnable(app, false, ["grpDataDtl", "grpDataField"]);
					}else{
						util.Control.setEnable(app, true, ["grpDataDtl", "grpDataField"]);
					}
				};
				
				/**
				 * @desc   디테일 상태가 편집상태일 경우 마스터 disable
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doDtlRptStatus(){
					if(util.Grid.isModified(app, "grdDtl")){
						util.Control.setEnable(app, false, ["grpDataMst", "grpDataField"]);
					}else{
						util.Control.setEnable(app, true, ["grpDataMst", "grpDataField"]);
					}
				};
				
				/**
				 * @desc   디테일 상태가 편집상태일 경우 마스터 disable
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doFieldRptStatus(){
					if(util.Grid.isModified(app, "grdField")){
						util.Control.setEnable(app, false, ["grpDataMst", "grpDataDtl"]);
					}else{
						util.Control.setEnable(app, true, ["grpDataMst", "grpDataDtl"]);
					}
				};
				
				/**
				 * @desc   마스터 rowselect event
				 *              디테일 조회
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				moPage.onRowSelect_RptMst = function() {
					doListMstRowSelectDtl();
				};
				
				/**
				 * @desc   마스터 rowselect event
				 *              디테일 조회
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doListMstRowSelectDtl() {
					if(util.Grid.getRowState(app, "grdMst") == cpr.data.tabledata.RowState.INSERTED){
						util.Control.reset(app, "rptDtl");
						util.Control.reset(app, "rptField");
						return false;
					}			
					doListDtl();
				};
				
				/**
				 * @desc   마스터 rowselect event
				 *              디테일 조회
				 * @param {String} 호출되는 상태값
				 *  						 신규, 삭제시에서 호출될 경우 디테일 재조회
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doListDtl(poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqKey", "strAprvFormCd", util.Grid.getCellValue(app, "grdMst", "CD"));
					//strCommand: listDtl 
					util.Submit.send(app, "subListDtl", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdDtl");
							
							//마스터에 데이터가 없을 경우 디테일 입력 불가
							if(util.Grid.getRowCount(app, "grdDtl") < 1){
								util.Control.setEnable(app, false, ["grpDataField"]);
								util.Control.reset(app, "rptField");
							}else{
								// 각 컨트롤 활성화 제어
								doMstRptStatus();
								doDtlRptStatus();
								doFieldRptStatus();
							}
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					});
				};
				
				/**
				 * @desc 리피트 UPDATE 이벤트
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				moPage.onUpdate_RptDtl = function() {
					doDtlRptStatus();
				};
				
				/**
				 * @desc 리피트 ROW SELECT 이벤트
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				moPage.onRowSelect_RptDtl = function() {
					doListMstRowSelectField();
				};
				
				/**
				 * @desc   마스터 rowselect event
				 *              디테일 조회
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doListMstRowSelectField() {
					if(util.Grid.getRowState(app, "grdDtl") == cpr.data.tabledata.RowState.INSERTED){
						util.Control.reset(app, "rptField");
						return false;
					}			
					doListField();
				};
				
				/**
				 * @desc   마스터 rowselect event
				 *              디테일 조회
				 * @param {String} 호출되는 상태값
				 *  						 신규, 삭제시에서 호출될 경우 디테일 재조회
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */
				function doListField(poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqKey", "strFieldCd", util.Grid.getCellValue(app, "grdDtl", "CD"));
					//strCommand: listField 
					util.Submit.send(app, "subListField", function(pbSuccess){
						if(pbSuccess){
							
							moPage.columnVisibleField();
							
							util.Control.redraw(app, "grdField");
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					});
				};
				
				moPage.columnVisibleField = function() {
					
					// 평정유형구분
					var vsCdPrp1 = util.Grid.getCellValue(app, "grdDtl", "CD_PRP1");
					
					// 첨부파일 = 03
					if (vsCdPrp1 == "03") {
						
						// 컬럼 보임/안보임
						util.Grid.showColumn(app, "rptField", "rdCbbFieldCdNm", "185");
						util.Grid.hideColumn(app, "rptField", "rdIpbFieldCdNm");
						
						// 헤더
						ExtControl.setAttr("rhBtnFieldCdNmCbb", "class", "rptHeaderReq");
						ExtControl.setAttr("rhBtnFieldCdNm", "class", "rptHeader");
						
						// 바디 css
						ExtControl.setAttr("rdCbbFieldCdNm", "class", "cbbRptReq");
						util.Control.setUserAttr(app, "rdCbbFieldCdNm", "require", "Y");
						
						ExtControl.setAttr("rdIpbFieldCdNm", "class", "ipbRpt");
						util.Control.setUserAttr(app, "rdIpbFieldCdNm", "require", "");
						
					} else {
						// 컬럼 보임/안보임
						util.Grid.showColumn(app, "rptField", "rdIpbFieldCdNm", "185");
						util.Grid.hideColumn(app, "rptField", "rdCbbFieldCdNm");
						
						// 헤더
						ExtControl.setAttr("rhBtnFieldCdNmCbb", "class", "rptHeader");
						ExtControl.setAttr("rhBtnFieldCdNm", "class", "rptHeaderReq");
						
						// 바디 css
						ExtControl.setAttr("rdCbbFieldCdNm", "class", "cbbRpt");
						util.Control.setUserAttr(app, "rdCbbFieldCdNm", "require", "");
						
						ExtControl.setAttr("rdIpbFieldCdNm", "class", "ipbRptReq");
						util.Control.setUserAttr(app, "rdIpbFieldCdNm", "require", "Y");
					}
				};
				
				/**
				 * @desc 신규 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */	
				moPage.onClick_BtnNew = function() {
					//해당 리피트의 편집 시작할 컬럼 지정
					var vnRowIndex = util.Grid.insertRow(app, "grdMst", "rdIpbCdPrp1");
					
					// 신규 row 기본값 세팅
					util.Grid.setCellValue(app, "grdMst", "LAN_DIV_RCD", util.getSystemLocale(), vnRowIndex);
					util.Grid.setCellValue(app, "grdMst", "CD_CLS", "CMN015", vnRowIndex);
					util.Grid.setCellValue(app, "grdMst", "EFFT_ST_DT", "19000101000000", vnRowIndex);
					util.Grid.setCellValue(app, "grdMst", "EFFT_END_DT", "99991231000000", vnRowIndex);
					
					// 마스터 리피터 상태에따른 디테일 제어
					doMstRptStatus();
				};
				
				/**
				 * @desc 삭제 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 21.
				 */	
				moPage.onClick_BtnDel = function() {
					var vnRptIdx = util.Grid.getIndex(app, "grdMst");
							
					//디테일 로우 건수 체크
					var vsIdxs =  util.Grid.getCheckOrSelectedRowIndex(app, "grdMst");
					
					var vsRptDtlLable = util.Grid.getTitle(app, "grdDtlDtl");
						
					if(!ValueUtil.isNull(vsIdxs)){
						
						var voIdx = vsIdxs.split(",");
					
						for( var i = 0 ; i < voIdx.length ; i++){;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMst");
			dataSet_1.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_PRP4"},
					{"name": "DTL_CNT"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "PRT_ORD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CD_CLS"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_PRP5"},
					{"name": "CD_PRP6"},
					{"name": "CD_PRP7"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDtl");
			dataSet_2.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CD_CLS"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "PRT_ORD"},
					{"name": "UCD"},
					{"name": "DTL_CNT"},
					{"name": "CD_NM"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsField");
			dataSet_3.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CD_CLS"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "PRT_ORD"},
					{"name": "UCD"},
					{"name": "CD_NM_TEMP"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strAprvFormCd",
						"dataType": "string"
					},
					{
						"name": "strFieldCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strPkValues",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListDtl");
			submission_2.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListField");
			submission_3.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_1);
			submission_4.addResponseData(dataMap_2, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveDtl");
			submission_5.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_2);
			submission_5.addResponseData(dataMap_2, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subSaveField");
			submission_6.action = "/cmn/ExtCmnGwsApprovalMng/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataSet_3);
			submission_6.addResponseData(dataMap_2, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpDataMst");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-EVALEMT");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMst");
				grid_1.init({
					"dataSet": app.lookup("dsMst"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "80px"},
						{"width": "130px"},
						{"width": "300px"},
						{"width": "112px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "145px"},
						{"width": "145px"},
						{"width": "75px"},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALEMTCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALEMTNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "디테일로우수";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CD_PRP1";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbCdPrp1");
										inputBox_1.maxLength = 100;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.style.css({
											"text-align" : "center"
										});
										inputBox_1.bind("value").toDataColumn("CD_PRP1");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CD_NM";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbEvalEmtNm");
										inputBox_2.maxLength = 200;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("CD_NM");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CD_PRP2";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbEvalEmtNm1");
										inputBox_3.maxLength = 100;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("CD_PRP2");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CD_PRP3";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbEvalEmtNm2");
										inputBox_4.maxLength = 100;
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("CD_PRP3");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CD_PRP7";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("checkbox2");
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("CD_PRP7");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CD_PRP4";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("checkbox1");
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("CD_PRP4");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CD_PRP5";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbEvalEmtNm7");
										inputBox_5.maxLength = 100;
										inputBox_5.bind("value").toDataColumn("CD_PRP5");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CD_PRP6";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbEvalEmtNm8");
										inputBox_6.maxLength = 100;
										inputBox_6.bind("value").toDataColumn("CD_PRP6");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbEvalEmtNm3");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "9,999,999,999";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.bind("value").toDataColumn("PRT_ORD");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DTL_CNT";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbDtlCnt");
										inputBox_7.bind("value").toDataColumn("DTL_CNT");
										return inputBox_7;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdMstSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdMstSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "207px"
				});
				var output_2 = new cpr.controls.Output("label1");
				output_2.value = "\u203b 기안 처리전 체크할 사항이 있는 경우 BF서비스명, BF메소드명을 입력하면 됩니다.";
				container.addChild(output_2, {
					"top": "5px",
					"left": "210px",
					"width": "650px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "242px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-EVALITEM");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdDtl");
				grid_2.init({
					"dataSet": app.lookup("dsDtl"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "80px"},
						{"width": "110px"},
						{"width": "90px"},
						{"width": "150px"},
						{"width": "80px"},
						{"width": "80px"},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "디테일로우수";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CD_PRP1";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbDtlCdPrp1");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("폼", "01"));
											comboBox_1.addItem(new cpr.controls.Item("리스트", "02"));
											comboBox_1.addItem(new cpr.controls.Item("첨부파일", "03"));
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("CD_PRP1");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CD_NM";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbDtlEvalItemNm2");
										inputBox_8.maxLength = 200;
										inputBox_8.userAttr({"require": "Y"});
										inputBox_8.bind("value").toDataColumn("CD_NM");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CD_PRP2";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbDtlEvalItemNm1");
										inputBox_9.maxLength = 100;
										inputBox_9.userAttr({"require": "Y"});
										inputBox_9.bind("value").toDataColumn("CD_PRP2");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CD_PRP3";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbDtlEvalItemNm");
										inputBox_10.maxLength = 100;
										inputBox_10.userAttr({"require": "Y"});
										inputBox_10.bind("value").toDataColumn("CD_PRP3");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CD_PRP4";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbEvalEmtNm6");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "9,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
										numberEditor_2.bind("value").toDataColumn("CD_PRP4");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.control = (function(){
										var numberEditor_3 = new cpr.controls.NumberEditor("gdIpbEvalEmtNm4");
										numberEditor_3.spinButton = false;
										numberEditor_3.format = "9,999,999,999";
										numberEditor_3.userAttr({"require": "Y"});
										numberEditor_3.bind("value").toDataColumn("PRT_ORD");
										return numberEditor_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "DTL_CNT";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbDtlDtlCnt");
										inputBox_11.bind("value").toDataColumn("DTL_CNT");
										return inputBox_11;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdDtlSelectionChange == "function") {
					grid_2.addEventListener("selection-change", onGrdDtlSelectionChange);
				}
				container.addChild(grid_2, {
					"top": "30px",
					"left": "5px",
					"width": "680px",
					"height": "320px"
				});
				var button_6 = new cpr.controls.Button("btnNewDtl");
				button_6.value = "";
				button_6.style.setClasses(["btn-new"]);
				button_6.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewDtlClick == "function") {
					button_6.addEventListener("click", onBtnNewDtlClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "430px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnDelDtl");
				button_7.value = "";
				button_7.style.setClasses(["btn-delete"]);
				button_7.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelDtlClick == "function") {
					button_7.addEventListener("click", onBtnDelDtlClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "495px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnRestoreDtl");
				button_8.value = "";
				button_8.style.setClasses(["btn-restore"]);
				button_8.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreDtlClick == "function") {
					button_8.addEventListener("click", onBtnRestoreDtlClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "560px",
					"width": "60px",
					"height": "25px"
				});
				var button_9 = new cpr.controls.Button("btnSaveDtl");
				button_9.value = "";
				button_9.style.setClasses(["btn-save"]);
				button_9.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveDtlClick == "function") {
					button_9.addEventListener("click", onBtnSaveDtlClick);
				}
				container.addChild(button_9, {
					"top": "5px",
					"left": "625px",
					"width": "60px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "319px",
				"left": "5px",
				"width": "690px",
				"height": "355px"
			});
			
			var group_4 = new cpr.controls.Container("grpDataField");
			// Layout
			var xYLayout_5 = new cpr.controls.layouts.XYLayout();
			group_4.setLayout(xYLayout_5);
			(function(container){
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-EVALITEM");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdField");
				grid_3.init({
					"dataSet": app.lookup("dsField"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "160px"},
						{"width": "185px"},
						{"width": "185px"},
						{"width": "80px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALITEMNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-EVALTYPEDIV");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CD_PRP1";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbFieldCdPrp1");
										inputBox_12.maxLength = 100;
										inputBox_12.userAttr({"require": "Y"});
										inputBox_12.bind("value").toDataColumn("CD_PRP1");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CD_NM";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbFieldCdNm");
										inputBox_13.maxLength = 200;
										inputBox_13.userAttr({"require": "Y"});
										inputBox_13.bind("value").toDataColumn("CD_NM");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CD_NM_TEMP";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbFieldCdNm");
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("파일순번", "01"));
											comboBox_2.addItem(new cpr.controls.Item("파일명", "02"));
											comboBox_2.addItem(new cpr.controls.Item("파일경로", "03"));
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("CD_NM_TEMP");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.control = (function(){
										var numberEditor_4 = new cpr.controls.NumberEditor("gdIpbEvalEmtNm5");
										numberEditor_4.spinButton = false;
										numberEditor_4.format = "9,999,999,999";
										numberEditor_4.userAttr({"require": "Y"});
										numberEditor_4.bind("value").toDataColumn("PRT_ORD");
										return numberEditor_4;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "30px",
					"left": "5px",
					"width": "520px",
					"height": "320px"
				});
				var button_10 = new cpr.controls.Button("btnNewField");
				button_10.value = "";
				button_10.style.setClasses(["btn-new"]);
				button_10.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewFieldClick == "function") {
					button_10.addEventListener("click", onBtnNewFieldClick);
				}
				container.addChild(button_10, {
					"top": "5px",
					"left": "270px",
					"width": "60px",
					"height": "25px"
				});
				var button_11 = new cpr.controls.Button("btnDelField");
				button_11.value = "";
				button_11.style.setClasses(["btn-delete"]);
				button_11.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelFieldClick == "function") {
					button_11.addEventListener("click", onBtnDelFieldClick);
				}
				container.addChild(button_11, {
					"top": "5px",
					"left": "335px",
					"width": "60px",
					"height": "25px"
				});
				var button_12 = new cpr.controls.Button("btnRestoreField");
				button_12.value = "";
				button_12.style.setClasses(["btn-restore"]);
				button_12.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreFieldClick == "function") {
					button_12.addEventListener("click", onBtnRestoreFieldClick);
				}
				container.addChild(button_12, {
					"top": "5px",
					"left": "400px",
					"width": "60px",
					"height": "25px"
				});
				var button_13 = new cpr.controls.Button("btnSaveField");
				button_13.value = "";
				button_13.style.setClasses(["btn-save"]);
				button_13.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveFieldClick == "function") {
					button_13.addEventListener("click", onBtnSaveFieldClick);
				}
				container.addChild(button_13, {
					"top": "5px",
					"left": "465px",
					"width": "60px",
					"height": "25px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "319px",
				"left": "700px",
				"width": "530px",
				"height": "355px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
		}
	});
	app.title = "extCmnCGwsApprovalMng";
	cpr.core.Platform.INSTANCE.register(app);
})();
