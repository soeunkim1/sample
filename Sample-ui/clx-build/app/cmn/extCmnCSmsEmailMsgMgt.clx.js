/*
 * App URI: app/cmn/extCmnCSmsEmailMsgMgt
 * Source Location: app/cmn/extCmnCSmsEmailMsgMgt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/extCmnCSmsEmailMsgMgt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCmnCSmsEmailMsgMgt.xtm"/>
			
			/**
			 * @desc   에디터에서 MOUSE OUT 이벤트 이후 호출할 이벤트 예시
			 * @param  {?} psEditorValue 에디터에 입력된 데이터
			 * @return void
			 * @author 최경민 2015.12.07
			 */
			function callBackOnChangeSmartEditor(psEditorValue){
				//에디터에서 마우스가 나왔을 경우 에디터의 내용을 프리폼 해당컬럼에 셋밸류한다.
				util.FreeForm.setValue(app, "frfExtCmnSndMgt", "SND_CONT", psEditorValue, true);
			} 
						
			var extCmnCSmsEmailMsgMgt = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
			
				
			
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author xxxx at 2016.02.02
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
			
							
				/**
				 * @desc 
				 * @return 
				 * @author xxxx 2016.02.02
				 */
				moPage.onModelConstructDone_extCmnCSmsEmailMsgMgt = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptExtCmnSndMgt", "frfExtCmnSndMgt");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
								ExtRepeat.refresh(["cbbSystemDivRcd", "cbbSmsDivCd", "frfExtCmnSndMgt"]);
								
									//프로그램ID로 모듈을 구분하여 공통이 아닌 모듈은 해당 모듈의 시스템만 검색할 수 있도록 제어
									var vsMenuId = moPageInfo.menuId.toUpperCase().substring(3, 6);
					
									if(vsMenuId != "CMN"){
										
										util.Control.setEnable(app, false, "cbbSystemDivRcd");
										ExtSelectCtl.setValue("cbbSystemDivRcd", "CB001" + vsMenuId);
									
									} else {
										util.SelectCtl.selectItem(app, "cbbSystemDivRcd", 0);
									}
											
								util.SelectCtl.selectItem(app, "cbbSmsDivCd", 1);
								
								if(vsMenuId == "CET"){
									util.Control.setEnable(app, false, "cbbSmsDivCd");
								}
								
								
									
								//moPage.onGetSndIdList();
								
											
						}
					});
				}
			
			   /**
				 * @desc
				 *
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onClick_BtnNew = function() {
					
					var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
					var vsSystemCd = ExtSelectCtl.getValue("cbbSystemDivRcd");
					
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정
					var vnIdx = util.Grid.insertRow(app, "grdExtCmnSndMgt");
					util.Grid.setCellValue(app, "grdExtCmnSndMgt", "SND_DIV_RCD", vsSmsDiv);
					util.Grid.setCellValue(app, "grdExtCmnSndMgt", "UNIT_SYSTEM_RCD", vsSystemCd);
				};
			
			   /**
				 * @desc
				 *
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onClick_BtnDel = function() {
					util.Grid.deleteRow(app, "grdExtCmnSndMgt");
					doCompareFrfEnable();
				};
			
			   /**
				 * @desc
				 *
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdExtCmnSndMgt");
					doCompareFrfEnable();
					
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCmnSndMgt", "frfExtCmnSndMgt");
								
					
				};
			
			   /**
				 * @desc
				 *
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onClick_BtnSave = function() {
					doSave();
				};
			
			   /**
				 * @desc
				 *
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onClick_BtnSearch = function() {
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					if(!util.validate(app, ["cbbSystemDivRcd","cbbSmsDivCd"])) return;
					
					
					doList(function(pbSuccess) {
							doCompareFrfEnable();
							// 조회 : "조회되었습니다." header 메세지 표시
							if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
						});
						
					//var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
					
					//SMS
					//if(vsSmsDiv == "CMN01301"){
					//	moPage.doList(function(pbSuccess) {
					//		moPage.doCompareFrfEnable();
					//		// 조회 : "조회되었습니다." header 메세지 표시
					//		if (pbSuccess) Common.setMsgStatus(NLS.INF.M024);
					//	});
					//}else{
					//	//뷰어 오픈 및 초기설정 이후 조회 실행
					//	callEditorSetPage("htmlEmailCont", false, moPageInfo.menuId, "callBackOnChangeSmartEditor", function(){
					//		
					//		moPage.doList(function(pbSuccess) {
					//			moPage.doCompareFrfEnable();
					//			// 조회 : "조회되었습니다." header 메세지 표시
					//			if (pbSuccess) Common.setMsgStatus(NLS.INF.M024);
					//		});
					//		
					//	});
					//}
				};
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2016.02.02
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdExtCmnSndMgt");
							
							var vnCnt = util.Grid.getRowCount(app, "grdExtCmnSndMgt");
							if(vnCnt < 1){
								util.Control.reset(app, "frfExtCmnSndMgt");					
							}
						
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2016.02.02
				 */
				function doSave() {
			
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, "grdExtCmnSndMgt", "MSG")){
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdExtCmnSndMgt")) return false;
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				}
			
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};	/**
				/**
				 * @desc 마스터 리피트 상태에 따른 프리폼 비활성화 제어
				 * @param
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				function doCompareFrfEnable() {
					
					var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
					
					if( (!util.Grid.getIndex(app, "grdExtCmnSndMgt"))
						|| util.Grid.getRowState(app, "grdExtCmnSndMgt") == cpr.data.tabledata.RowState.DELETED) {
						
						util.Control.setEnable(app, false, ["frfExtCmnSndMgt"]);	
						//EMail
							if(vsSmsDiv == "CMN01302"){
								callEditorSetEnableEditor("htmlEmailCont", false);
							}
						
					} else {
						
							util.Control.setEnable(app, true, ["frfExtCmnSndMgt"]);	
							
							//EMail
							if(vsSmsDiv == "CMN01302"){
								callEditorSetEnableEditor("htmlEmailCont", true);
								var vsCont =  util.Grid.getCellValue(app, "grdExtCmnSndMgt", "SND_CONT");
								
								callEditorSetEditorContent("htmlEmailCont", vsCont);
							}
						
					}
				}
			
				/**
				 * @desc 리피트 rowSelect event
				 * @param
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onRowSelect_RptExtCmnSndMgt = function() {
					
					// 리피트 현재 index get
					var vnIndex = util.Grid.getIndex(app, "grdExtCmnSndMgt");
					var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
					var vcFrfSndCtl = model.getControl("cbbFrfSndId");	
					var vsOrgRef = vcFrfSndCtl.setAttr("nodeset", "/root/resOnLoad/msgDivCdAllList/row[child:: UCD = '"+ ExtSelectCtl.getValue("cbbSystemDivRcd") +"']");
					vcFrfSndCtl.refresh();
							
					//리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCmnSndMgt", "frfExtCmnSndMgt", vnIndex);
					doCbbFrfSndIdChage();
					//프리폼 비활성화 제어
					doCompareFrfEnable();
					
					
				};
			
				/**
				 * @desc 프리폼 update event
				 * @param
				 * @return void
				 * @author xxxx 2016.02.02
				 */
				moPage.onUpdate_FrfExtCmnSndMgt = function() {
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptExtCmnSndMgt", "frfExtCmnSndMgt");
				};
			
				
				
				moPage.onValueChanged_CbbSystemDivRcd = function() {
					
				};
				
				
				moPage.onValueChanged_CbbSmsDivCd = function() {
					doChgSmsDivCdCtl();
				};
				
			
				function doChgSmsDivCdCtl(){
					
					var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
							
					//SMS
					if(vsSmsDiv == "CMN01301"){
						util.Control.setVisible(app, false, ["lblFrfEmail","ipbFrfEmail", "lblFrfSndPsn", "ipbFrfSndPsn", "htmlEmailCont"]);
						var domContent = model.window().document.getElementById("htmlEmailCont");
						domContent.style.display = "none";
					
						util.Control.setVisible(app, true, ["lblFrfSndTelNo","ipbFrfSndTelNo","txtFrfSndCont"]);
						
						util.Control.setEnable(app, true, "rdbFrfDiv");
						
					}else{
						util.Control.setVisible(app, true, ["lblFrfEmail","ipbFrfEmail", "lblFrfSndPsn", "ipbFrfSndPsn", "htmlEmailCont"]);
						var domContent = model.window().document.getElementById("htmlEmailCont");
						domContent.style.display = "inline";
						util.Control.setVisible(app, false, ["lblFrfSndTelNo","ipbFrfSndTelNo","txtFrfSndCont"]);
						util.Control.setEnable(app, false, "rdbFrfDiv");
						
						//뷰어 오픈 및 초기설정 이후 조회 실행
						callEditorSetPage("htmlEmailCont", false, moPageInfo.menuId, "callBackOnChangeSmartEditor", function(){
							
							
							
						});
				
					}
					
					//var vcFrfDiv = model.getControl("rdbFrfDiv");
					
					
					
				}
				
				
				moPage.onValueChanged_CbbFrfSndId = function() {
					
					var vnIdx = util.SelectCtl.getSelectedIndex(app, "cbbFrfSndId");
					
					var vsFrfSndIdLable = util.SelectCtl.getLabel(app, "cbbFrfSndId", vnIdx);
					
					util.Grid.setCellValue(app, "grdExtCmnSndMgt", "SND_NM", vsFrfSndIdLable);
					
					doCbbFrfSndIdChage();
					
				};
				
				function doCbbFrfSndIdChage(){
					
					util.DataMap.setValue(app, "dmReqList", "strSndIdNm", util.FreeForm.getValue(app, "frfExtCmnSndMgt", "SND_ID"));
								
							
					//strCommand: getSndNm 
					util.Submit.send(app, "subSndNm", function(pbSuccess){
								if(pbSuccess){			
									//ExtControl.rebuild("rdbFrfDiv");
									util.Control.redraw(app, "rdbFrfDiv");
									
								}
							});
					
				}
				
				
			
				
				
				
				
			//	moPage.onValueChanged_RdbFrfDiv = function() {
			//		var vcTxt = model.getControl("txtFrfSndCont");
			//		var vsDivValue = ExtControl.getValue("rdbFrfDiv");
			//		var vsTxtValue = vcTxt.getText();
			//		var vsInsertValue = vsTxtValue.insert(vcTxt.getCaretCtrl().getSelectionStart(), vsDivValue);
			//		ExtFreeForm.setValue("frfExtCmnSndMgt", "SND_CONT", vsInsertValue);
			//	};
				
				
				moPage.onValueChanged_RdbFrfDiv = function() {
					var vcTxt = model.getControl("txtFrfSndCont");
					var vsDivValue = util.Control.getValue(app, "rdbFrfDiv");
					var vsTxtValue = vcTxt.getText();
					var vsInsertValue = vsTxtValue.insert(vcTxt.getCaretCtrl().getSelectionStart(), vsDivValue);
					util.FreeForm.setValue(app, "frfExtCmnSndMgt", "SND_CONT", vsInsertValue);
				}
				
				
				moPage.onSetFocus_CbbSmsDivCd = function() {
						var vsSmsDiv = ExtSelectCtl.getValue("cbbSmsDivCd");
						
									
						//SMS
						if(vsSmsDiv == "CMN01302"){
						util.Control.setVisible(app, true, ["lblFrfEmail","ipbFrfEmail", "lblFrfSndPsn", "ipbFrfSndPsn", "htmlEmailCont"]);
							var domContent = model.window().document.getElementById("htmlEmailCont");
							domContent.style.display = "inline";
							util.Control.setVisible(app, false, ["lblFrfSndTelNo","ipbFrfSndTelNo","txtFrfSndCont"]);
							util.Control.setEnable(app, false, "rdbFrfDiv");
							
							//뷰어 오픈 및 초기설정 이후 조회 실행
							callEditorSetPage("htmlEmailCont", false, moPageInfo.menuId, "callBackOnChangeSmartEditor", function(){
								
								
								
							});
							
						}else{
							
					
						}
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSystemDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmsDivCdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSndDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsMsgDivCdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsMsgDivCdAllList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "UCD"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsExtCmnSndMgt");
			dataSet_7.parseData({
				"info": "EXT_CMN_SND_MGT@UNIT_SYSTEM_RCD,SND_DIV_RCD,SND_ID",
				"columns": [
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "SND_DIV_RCD"},
					{"name": "SND_ID"},
					{"name": "SND_TITLE"},
					{"name": "SND_CONT"},
					{"name": "EMAIL"},
					{"name": "SND_PSN"},
					{"name": "SND_TEL_NO"},
					{"name": "REMARK"},
					{"name": "SND_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsFrfExtCmnSndMgt");
			dataSet_8.parseData({
				"columns": [
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "SND_DIV_RCD"},
					{"name": "SND_ID"},
					{"name": "SND_TITLE"},
					{"name": "SND_CONT"},
					{"name": "EMAIL"},
					{"name": "SND_PSN"},
					{"name": "SND_TEL_NO"},
					{"name": "REMARK"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsListSndNm");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "COL"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strEmailDivCd",
						"dataType": "string"
					},
					{
						"name": "strSndId",
						"dataType": "string"
					},
					{
						"name": "strSndIdSub",
						"dataType": "string"
					},
					{
						"name": "strSndIdNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmMapSndNm");
			dataMap_2.parseData({
				"columns" : [{
					"name": "COL",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmTemp");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strRdbDiv",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/ExtCmnSmsEmailMsgMgt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/ExtCmnSmsEmailMsgMgt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			submission_2.addResponseData(dataSet_8, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/ExtCmnSmsEmailMsgMgt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSndIdList");
			submission_4.action = "/cmn/ExtCmnSmsEmailMsgMgt/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSndNm");
			submission_5.action = "/cmn/ExtCmnSmsEmailMsgMgt/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataSet_9, false);
			submission_5.addResponseData(dataMap_2, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSystemDivRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSystemDivRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSystemDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSystemDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSystemDivRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSystemDivRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmsDivCd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-SMSEMAILDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "130px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmsDivCd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmsDivCd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strEmailDivCd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmsDivCdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmsDivCdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmsDivCdSelectionChange);
				}
				if(typeof onCbbSmsDivCdFocus == "function") {
					comboBox_2.addEventListener("focus", onCbbSmsDivCdFocus);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "385px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SNDLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExtCmnSndMgt");
				grid_1.init({
					"dataSet": app.lookup("dsExtCmnSndMgt"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "169px"},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "106px",
							"visible": false
						},
						{
							"width": "210px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "30px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "30px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SND_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "발송ID";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "단위시스템코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "발송구분코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "발송제목";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "내용";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "이메일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "발송자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "발송전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "비고";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SND_NM";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbSndNm");
										inputBox_1.enabled = false;
										inputBox_1.maxLength = 10;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("SND_NM");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SND_ID";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbSndId");
										inputBox_2.maxLength = 10;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("SND_ID");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "UNIT_SYSTEM_RCD";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbUnitSystemRcd");
										inputBox_3.maxLength = 10;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("UNIT_SYSTEM_RCD");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SND_DIV_RCD";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbSndDivRcd");
										inputBox_4.maxLength = 10;
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("SND_DIV_RCD");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SND_TITLE";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbSndTitle");
										inputBox_5.maxLength = 100;
										inputBox_5.userAttr({"require": "Y"});
										inputBox_5.bind("value").toDataColumn("SND_TITLE");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SND_CONT";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbSndCont");
										inputBox_6.maxLength = 2000;
										inputBox_6.userAttr({"require": "Y"});
										inputBox_6.bind("value").toDataColumn("SND_CONT");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EMAIL";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbEmail");
										inputBox_7.maxLength = 100;
										inputBox_7.bind("value").toDataColumn("EMAIL");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SND_PSN";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbSndPsn");
										inputBox_8.maxLength = 50;
										inputBox_8.bind("value").toDataColumn("SND_PSN");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SND_TEL_NO";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbSndTelNo");
										inputBox_9.maxLength = 50;
										inputBox_9.bind("value").toDataColumn("SND_TEL_NO");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_10.maxLength = 1000;
										inputBox_10.bind("value").toDataColumn("REMARK");
										return inputBox_10;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdExtCmnSndMgtSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdExtCmnSndMgtSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "265px",
					"height": "565px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-SNDCONT");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "280px",
					"width": "150px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfExtCmnSndMgt");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_4 = new cpr.controls.Output("optFrfSndId");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-DB-SND_ID");
					container.addChild(output_4, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSndTitle");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-DB-SND-TITLE");
					container.addChild(output_5, {
						"top": "55px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfSndTitle");
					inputBox_11.maxLength = 100;
					inputBox_11.userAttr({"require": "Y"});
					inputBox_11.bind("fieldLabel").toExpression("#optSndTitle.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmRow"), "SND_TITLE");
					container.addChild(inputBox_11, {
						"top": "55px",
						"left": "110px",
						"width": "820px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfSndTelNo");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-SCR-TEL");
					container.addChild(output_6, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("ipbFrfSndTelNo");
					inputBox_12.maxLength = 50;
					inputBox_12.userAttr({"require": "Y"});
					inputBox_12.bind("fieldLabel").toExpression("#optFrfSndTelNo.value");
					inputBox_12.bind("value").toDataMap(app.lookup("dmRow"), "SND_TEL_NO");
					container.addChild(inputBox_12, {
						"top": "30px",
						"left": "110px",
						"width": "280px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfRemark");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_7, {
						"top": "535px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_13.maxLength = 1000;
					inputBox_13.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_13.bind("value").toDataMap(app.lookup("dmRow"), "REMARK");
					container.addChild(inputBox_13, {
						"top": "535px",
						"left": "110px",
						"width": "820px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfSndId");
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfSndId.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmRow"), "SND_ID");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsMsgDivCdAllList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					if(typeof onCbbFrfSndIdSelectionChange == "function") {
						comboBox_3.addEventListener("selection-change", onCbbFrfSndIdSelectionChange);
					}
					container.addChild(comboBox_3, {
						"top": "5px",
						"left": "110px",
						"width": "280px",
						"height": "25px"
					});
					var textArea_1 = new cpr.controls.TextArea("txtFrfSndCont");
					textArea_1.userAttr({"require": "Y"});
					textArea_1.bind("fieldLabel").toExpression("#optFrfSndCont.value");
					textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "SND_CONT");
					container.addChild(textArea_1, {
						"top": "105px",
						"left": "110px",
						"width": "820px",
						"height": "425px"
					});
					var output_8 = new cpr.controls.Output("optFrfSndPsn");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-SND_PSN");
					container.addChild(output_8, {
						"top": "30px",
						"left": "400px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("ipbFrfSndPsn");
					inputBox_14.maxLength = 50;
					inputBox_14.bind("fieldLabel").toExpression("#optFrfSndPsn.value");
					inputBox_14.bind("value").toDataMap(app.lookup("dmRow"), "SND_PSN");
					container.addChild(inputBox_14, {
						"top": "30px",
						"left": "505px",
						"width": "340px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfEmail");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-DB-EMAIL");
					container.addChild(output_9, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfEmail");
					inputBox_15.maxLength = 100;
					inputBox_15.userAttr({"require": "Y"});
					inputBox_15.bind("fieldLabel").toExpression("#optFrfEmail.value");
					inputBox_15.bind("value").toDataMap(app.lookup("dmRow"), "EMAIL");
					container.addChild(inputBox_15, {
						"top": "30px",
						"left": "110px",
						"width": "280px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfSndCont");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-SCR-SNDCONT");
					container.addChild(output_10, {
						"top": "105px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var hTMLObject_1 = new cpr.controls.HTMLObject("htmlEmailCont");
					container.addChild(hTMLObject_1, {
						"top": "106px",
						"left": "110px",
						"width": "819px",
						"height": "425px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "30px",
					"left": "280px",
					"width": "940px",
					"height": "565px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbFrfDiv");
				radioButton_1.bind("value").toDataMap(app.lookup("dmTemp"), "strRdbDiv");
				(function(radioButton_1){
					radioButton_1.setItemSet(app.lookup("dsListSndNm"), {
						"label": "CD_NM",
						"value": "COL"
					})
				})(radioButton_1);
				if(typeof onRdbFrfDivValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbFrfDivValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "110px",
					"left": "390px",
					"width": "818px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaCmnEditor");
			cpr.core.App.load("app/cmn/impStdCmnEditor", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "10px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "extCmnCSmsEmailMsgMgt";
	cpr.core.Platform.INSTANCE.register(app);
})();
