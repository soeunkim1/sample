/*
 * App URI: app/cmn/extCmnChartTemplate
 * Source Location: app/cmn/extCmnChartTemplate.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/extCmnChartTemplate", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCmnChartTemplate.xtm"/>
			
			
			var extCmnChartTemplate = function() {
				var moPage = new Page();
				
				
						
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
				
				moPage.onModelConstructDone_ExtCmnChartTemplate = function() {
					
					//1차원 bar X	
					var poChartBarX = {
						  TYPE : "barX" 											// 차트타입(barX, barY, line, pie)
						, IMP_ID : "impBarX" 									//임포트ID
						, AXIS_DATA : "SA_NM" 								//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : "PER" 								//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/barXChart/row" //인스턴스명
						, TITLE : "BAR-CHART-X" 							//차트 타이틀
						, AXIS_FORMATTER : "%" 							//데이터 포멧
						, BAR_WIDTH : 40										//바 넓이
					};
					
					ExtChart.draw(poChartBarX);
					
					//1차원 bar Y
					var poChartBarY = {
						  TYPE : "barY" 											// 차트타입(barX, barY, line, pie)
						, IMP_ID : "impBarY" 									//임포트ID
						, AXIS_DATA : "SA_NM" 								//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : "PER" 								//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/barXChart/row" //인스턴스명
						, TITLE : "BAR-CHART-Y" 							//차트 타이틀
						, AXIS_FORMATTER : "%" 							//데이터 포멧
						, BAR_WIDTH : 40										//바 넓이
					};
					
					ExtChart.draw(poChartBarY);
					
					//1차원 Line
					var poChartLine = {
						  TYPE : "line" 											// 차트타입(barX, barY, line, pie)
						, IMP_ID : "impLine" 									//임포트ID
						, AXIS_DATA : "SA_NM" 								//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : "PER" 								//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/barXChart/row" //인스턴스명
						, TITLE : "BAR-CHART-Line" 						//차트 타이틀
						, AXIS_FORMATTER : "%" 							//데이터 포멧
					};
					
					ExtChart.draw(poChartLine);
					
					//1차원 Pie
					var poChartPie = {
						  TYPE : "pie" 											// 차트타입(barX, barY, line, pie)
						, IMP_ID : "impPie" 									//임포트ID
						, AXIS_DATA : "SA_NM" 								//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : "PER" 								//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/barXChart/row" //인스턴스명
						, TITLE : "BAR-CHART-Pie" 						//차트 타이틀
						, AXIS_FORMATTER : "%" 							//데이터 포멧
					};
					
					ExtChart.draw(poChartPie);
					
					//2차원 Bar X
					var poChartDimBarX = {
						  TYPE : "barX" 																	//차트타입 (barX, barY, line)
						, IMP_ID : "impDimBarX" 														//임포트ID
						, AXIS_DATA : "MONTH" 													//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : ["MALE:남", "FEMALE:여", "TOTAL:전체"]  	//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/bar2Chart/row" 							//인스턴스명
						, TITLE : "BAR-CHART-DimBarX" 										//차트 타이틀
						, AXIS_FORMATTER : "건" 													//데이터 포멧
						, BAR_WIDTH : 20																//바 넓이
					};
					
					ExtChart.draw(poChartDimBarX);
					
					//2차원 Bar Y
					var poChartDimBarY = {
						  TYPE : "barY" 																	//차트타입 (barX, barY, line)
						, IMP_ID : "impDimBarY" 														//임포트ID
						, AXIS_DATA : "MONTH" 													//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : ["MALE:남", "FEMALE:여", "TOTAL:전체"]  	//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/bar2Chart/row" 							//인스턴스명
						, TITLE : "BAR-CHART-DimBarY" 										//차트 타이틀
						, AXIS_FORMATTER : "건" 													//데이터 포멧
						, BAR_WIDTH : 15																//바 넓이
					};
					
					ExtChart.draw(poChartDimBarY);
					
					//2차원 Bar Line
					var poChartDimLine = {
						  TYPE : "line" 																	//차트타입 (barX, barY, line)
						, IMP_ID : "impDimLine" 														//임포트ID
						, AXIS_DATA : "MONTH" 													//기준축 데이터명(인스턴스 노드)
						, SERIES_DATA : ["MALE:남", "FEMALE:여", "TOTAL:전체"]  	//차트 데이터명(인스턴스 노드)
						, INSTANCE : "/root/resList/bar2Chart/row" 							//인스턴스명
						, TITLE : "BAR-CHART-DimLine" 										//차트 타이틀
						, AXIS_FORMATTER : "건" 													//데이터 포멧
					};
					
					ExtChart.draw(poChartDimLine);
				
					
				};
				
				
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaBarX");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "45px",
				"left": "15px",
				"width": "285px",
				"height": "315px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaDimBarX");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "380px",
				"left": "15px",
				"width": "410px",
				"height": "295px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaDimBarY");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "380px",
				"left": "440px",
				"width": "395px",
				"height": "295px"
			});
			
			var embeddedApp_4 = new cpr.controls.EmbeddedApp("emaDimLine");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_4.app = app;
				}
			});
			container.addChild(embeddedApp_4, {
				"top": "380px",
				"left": "845px",
				"width": "380px",
				"height": "295px"
			});
			
			var embeddedApp_5 = new cpr.controls.EmbeddedApp("emaBarY");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_5.app = app;
				}
			});
			container.addChild(embeddedApp_5, {
				"top": "45px",
				"left": "320px",
				"width": "285px",
				"height": "320px"
			});
			
			var embeddedApp_6 = new cpr.controls.EmbeddedApp("emaLine");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_6.app = app;
				}
			});
			container.addChild(embeddedApp_6, {
				"top": "40px",
				"left": "620px",
				"width": "285px",
				"height": "320px"
			});
			
			var embeddedApp_7 = new cpr.controls.EmbeddedApp("emaPie");
			cpr.core.App.load("", function(app) {
				if(app){
					embeddedApp_7.app = app;
				}
			});
			container.addChild(embeddedApp_7, {
				"top": "45px",
				"left": "925px",
				"width": "285px",
				"height": "320px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCmnChartTemplate";
	cpr.core.Platform.INSTANCE.register(app);
})();
