/*
 * App URI: app/cmn/extCmnPSmsSend
 * Source Location: app/cmn/extCmnPSmsSend.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/extCmnPSmsSend", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCmnPSmsSend.xtm"/>
			
			
			var extCmnPSmsSend = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				var moExtCmnSender;
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
				/**
				 * @desc  ModelConstructDone onLoad
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				moPage.onModelConstructDone_ExtCmnPSmsSend = function() {
					
					moExtCmnSender =  ExtPopUp.getParentVal("moExtCmnSender");
					
					util.DataMap.setValue(app, "dmReqKey", "strEmailDivCd", moExtCmnSender.smsEmailDivCd);
					util.DataMap.setValue(app, "dmReqKey", "strSndId", moExtCmnSender.sndId);
					
					moPage.getSenderInfo();
					
				};
				
				/**
				 * @desc  부모창의 SMS 설정 정보로 보내는사람, 발송제목, 전송유형, 예약일, SMS 리피트 다이나믹 생성
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				moPage.getSenderInfo = function(){
					
					var vsRptId 							= moExtCmnSender.rptId;
					var vsPhoneNo 					= moExtCmnSender.phoneNo;
					var vsRepNm 					= moExtCmnSender.repNm;
					var vsSenderSms 				= moExtCmnSender.defSenderSms;			//보내는이(sms)
					var vsSendDivCharStr 			= moExtCmnSender.sendDivCharStr; 			//발송문구구분값
					var vsSendMsgContSms 		= moExtCmnSender.sendMsgContSms;		// SMS발송내용
					var vsTitleSms 					= moExtCmnSender.sendTitleSms;				// SMS발송제목
							
					doDynamicRptRender(moExtCmnSender);
					
					util.DataMap.setValue(app, "dmReqSmsKey", "strSenderSms", vsSenderSms);
					util.DataMap.setValue(app, "dmReqSmsKey", "strTitle", vsTitleSms);
					util.Control.setValue(app, "txtSmsCont", vsSendMsgContSms);
					util.Control.setValue(app, "rdbReservedFg", "0");
					util.Control.setVisible(app, false,["lblReservedDt", "dipReservedDt"]);
					util.Control.setValue(app, "ipbSendDivSms", vsSendDivCharStr);
					util.Control.redraw(app, ["ipbSenderSms","ipbSendTitle"]);
				};
				
				/**
				 * @desc  SMS 리피트 다이나믹 생성
				 * @param  moExtCmnSender
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				function doDynamicRptRender(moExtCmnSender){
					
					var dyRpt = new DynRepeat();
					dyRpt.init("rptSmsMst");
					//디테일 노드 정보
					var vaInsTemp = new Array();
					//헤더 text
					var vaHeaderText = new Array();
					
					var vsUptcols = "PHONE_NO:PHONE_NO,REP_NM:REP_NM,";
					
					for( var i = 0 ; i < moExtCmnSender.sendDivChar.length ; i++){
							
						var vcHeaderCtl  = ExtPopUp.getParentViewer().model.getControl(moExtCmnSender.sendDivChar[i]);
						var vsDtlId = ExtPopUp.getParentVal("ExtRepeat").getDetailColName(moExtCmnSender.sendDivChar[i]);
						var vsDtlNode = 	ExtPopUp.getParentVal("ExtRepeat").getRefByColId(vsDtlId);		
						
						vaHeaderText.push(vcHeaderCtl.textValue);
						vaInsTemp.push(vsDtlNode);
			//			var vsInsNode = "___" + Number(i+1);
			//			vaInsTemp.push(vsInsNode);
						vsUptcols += vsDtlNode + ":" + vsDtlNode + ","; 
								
					}
					vsUptcols = vsUptcols.substring(0, vsUptcols.length-1);
					model.getControl("rptSmsMst").dataSet.setKeyData("SMS", vsUptcols);	
					
					var vnLeft = 188;
					
					var vaHeader = new Array();
					var vaDtl = new Array();
					
					for( var i = 0 ; i < vaInsTemp.length ; i++){
					
						var voHeaderDynCtl  = new DynRepeatControl();
						voHeaderDynCtl.ID = "rh_" + vaInsTemp[i];
						voHeaderDynCtl.Class = "rptHeader";
						voHeaderDynCtl.Title	= vaHeaderText[i];
						voHeaderDynCtl.width	= 80;
						voHeaderDynCtl.height	= 25;
						voHeaderDynCtl.left	= vnLeft ; 
					
							
						var voDtlDynCtl  = new DynRepeatControl();
						voDtlDynCtl.Tag = "input";
						voDtlDynCtl.ID = "rd_" + vaInsTemp[i];
						voDtlDynCtl.Class = "ipbRpt";
						voDtlDynCtl.Ref = "/root/resList/rptSmsMst/row/" + vaInsTemp[i];
						
						
						voDtlDynCtl.width	= 80;
						voDtlDynCtl.height	= 23;
						voDtlDynCtl.left	=vnLeft;
						voDtlDynCtl.ReadOnly	="True";
							
			
						vnLeft += (voHeaderDynCtl.width -1 );
						vaHeader.push(voHeaderDynCtl);
						vaDtl.push(voDtlDynCtl);
					}
					
					dyRpt.setItem("header", vaHeader);
					dyRpt.setItem("detail", vaDtl);
					
					dyRpt.create();
					
					var vsIdxs = ExtPopUp.getParentVal("ExtRepeat").getSelIdxOrFRowIdx(moExtCmnSender.rptId);	
					var vaIdxs = vsIdxs.split(",");
			
					if(vaIdxs == null) {
						util.Control.setEnable(app, false, "btnSend");
						return false;
					}
					
					for(var i=0; i<vaIdxs.length; i++){
						
						
						var vsDtlId = ExtPopUp.getParentVal("ExtRepeat").getDetailColName(moExtCmnSender.phoneNo);
						var vsDtlRepNmId = ExtPopUp.getParentVal("ExtRepeat").getDetailColName(moExtCmnSender.repNm);
						var vsSmsNo  =  ExtPopUp.getParentVal("ExtRepeat").getValue(moExtCmnSender.rptId, vsDtlId,vaIdxs[i]);
						var vsRepNm  =  ExtPopUp.getParentVal("ExtRepeat").getValue(moExtCmnSender.rptId, vsDtlRepNmId,vaIdxs[i]);
						var vnIdx = util.Grid.insertRow(app, "grdSmsMst");
						
						util.Grid.setCellValue(app, "grdSmsMst", "PHONE_NO", vsSmsNo, vnIdx);
						util.Grid.setCellValue(app, "grdSmsMst", "REP_NM", vsRepNm, vnIdx);
						
						//for( var k = 0 ; k < moExtCmnSender.sendDivChar.length ; k++){
						for( var k = 0 ; k < vaInsTemp.length ; k++){	
							var vcHeaderCtl  = ExtPopUp.getParentViewer().model.getControl(moExtCmnSender.sendDivChar[k]);
							var vsDtlId = ExtPopUp.getParentVal("ExtRepeat").getDetailColName(moExtCmnSender.sendDivChar[k]);
							var vsDtlNode = 	ExtPopUp.getParentVal("ExtRepeat").getRefByColId(vsDtlId);		
							var vsDtlValue = ExtPopUp.getParentVal("ExtRepeat").getValue(moExtCmnSender.rptId, vsDtlNode, vaIdxs[i]);
							model.addNode("/root/resList/rptSmsMst/row["+vnIdx+"]", vaInsTemp[k], vsDtlValue, "element");
						}
						
						if(ValueUtil.isNull(vsSmsNo)){
							util.Msg.alert("NLS-ERR-EXT020", ["SMS"]);
							util.Control.setEnable(app, false, "btnSend");
							return false;
						}
					}
					
					
					
					util.Control.redraw(app, "grdSmsMst");
				}
				
				/**
				 * @desc  전송유형 ValueChanged event
				 * @param
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				moPage.onValueChanged_RdbReservedFg = function() {
					
					var vsReservedFg = util.Control.getValue(app, "rdbReservedFg");
							
					//예약전송
					if(vsReservedFg == "1"){
						util.Control.setVisible(app, true,["lblReservedDt", "dipReservedDt"]);
					//즉시전송	
					}else{
						util.Control.setVisible(app, false,["lblReservedDt", "dipReservedDt"]);
					}
				};
				
				/**
				 * @desc  SMS 발송
				 * @param
				 * @return void
				 * @author Park. ju wan 2016. 2. 11.
				 */
				moPage.onClick_BtnSend = function() {
					if (util.Grid.getRowCount(app, "grdSmsMst") < 1) return;
					
					var voCheckValid;
					var vsReservedFg = util.Control.getValue(app, "rdbReservedFg");
					//예약전송
					if(vsReservedFg == "1"){
						voCheckValid = ["ipbSenderSms", "ipbSendTitle", "txtSmsCont", "dipReservedDt"];
					//즉시전송	
					}else{
						voCheckValid = ["ipbSenderSms", "ipbSendTitle", "txtSmsCont"];
					}
					
					if(!util.validate(app, voCheckValid)) return false;	
					
					if(!util.Msg.confirm("NLS-CRM-M069") ) return;
								
					ExtRepeat.setCRUDAttr("rptSmsMst", "alltype", "true");
					
					//strCommand: smsSend 
					util.Submit.send(app, "subSmsSend", function(pbSuccess){
						if(pbSuccess){
							util.Msg.alert("NLS-CMM-M044", ["SMS"]);	
							
							if (ExtPopUp.getParentVal("moIdsForExtCmnSender").callBackfunc) {
								
								var vaIdxs = ExtPopUp.getParentVal("ExtRepeat").getSelIdxOrFRowIdx(moExtCmnSender.rptId);
								
								ExtPopUp.getParentVal("moIdsForExtCmnSender").callBackfunc(pbSuccess, moExtCmnSender.smsEmailDivCd, vaIdxs);
								
							}		
							app.close();
								
						}
					});
				};
				
				
				moPage.onClick_BtnClose = function() {
					app.close();
				};
				
				moPage.onClick_BtnDel = function() {
					var vcRpt = ExtControl.getControl("rptSmsMst");
					vcRpt.setRowStatus(vcRpt.getIndex(), "delete");
					vcRpt.deleteRow(vcRpt.getIndex(), vcRpt.getAttr("nodeset"));
					vcRpt.refresh();
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSendDivList");
			dataSet_1.parseData({
				"columns": [
					{"name": "COL"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmsMst");
			dataSet_2.parseData({
				"columns": [
					{"name": "PHONE_NO"},
					{"name": "REP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strEmailDiv",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strEmailDivCd",
						"dataType": "string"
					},
					{
						"name": "strSndId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmMst");
			dataMap_3.parseData({
				"columns" : [{
					"name": "row",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqSmsKey");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strSenderSms",
						"dataType": "string"
					},
					{
						"name": "strTitle",
						"dataType": "string"
					},
					{
						"name": "strReservedFg",
						"dataType": "string"
					},
					{
						"name": "strReservedDt",
						"dataType": "string"
					},
					{
						"name": "strSmsCont",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/ExtCmnSmsEmailSend/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSmsSend");
			submission_2.action = "/cmn/ExtCmnSmsEmailSend/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addRequestData(dataSet_2);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSms");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSendPhoneNo");
				output_1.value = "보내는사람";
				output_1.style.setClasses(["require"]);
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSenderSms");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSendPhoneNo.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqSmsKey"), "strSenderSms");
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "210px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optTitle");
				output_2.value = "발송제목";
				container.addChild(output_2, {
					"top": "5px",
					"left": "310px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSendTitle");
				inputBox_2.bind("fieldLabel").toExpression("#optTitle.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqSmsKey"), "strTitle");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "395px",
					"width": "295px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optReservedDt");
				output_3.value = "예약일";
				container.addChild(output_3, {
					"top": "30px",
					"left": "310px",
					"width": "80px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optReservedFg");
				output_4.value = "전송유형";
				output_4.style.setClasses(["require"]);
				container.addChild(output_4, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbReservedFg");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqSmsKey"), "strReservedFg");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("즉시전송", "0"));
					radioButton_1.addItem(new cpr.controls.Item("예약전송", "1"));
				})(radioButton_1);
				if(typeof onRdbReservedFgValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbReservedFgValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "30px",
					"left": "90px",
					"width": "210px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipReservedDt");
				dateInput_1.format = "YYYY-MM-DD HH:mm:ss";
				dateInput_1.bind("fieldLabel").toExpression("#optReservedDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqSmsKey"), "strReservedDt");
				container.addChild(dateInput_1, {
					"top": "30px",
					"left": "395px",
					"width": "295px",
					"height": "25px"
				});
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "60px",
					"left": "5px",
					"width": "150px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("");
				container.addChild(userDefinedControl_3, {
					"top": "60px",
					"left": "310px",
					"width": "150px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("txtSmsCont");
				textArea_1.userAttr({"require": "Y"});
				textArea_1.bind("fieldLabel").toExpression("#optTitleSmsCont.value");
				textArea_1.bind("value").toDataMap(app.lookup("dmReqSmsKey"), "strSmsCont");
				container.addChild(textArea_1, {
					"top": "129px",
					"left": "5px",
					"width": "295px",
					"height": "300px"
				});
				var grid_1 = new cpr.controls.Grid("grdSmsMst");
				grid_1.init({
					"dataSet": app.lookup("dsSmsMst"),
					"columns": [
						{"width": "95px"},
						{"width": "95px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "휴대폰번호";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "수신자명";
									cell.style.setClasses(["require"]);
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "PHONE_NO";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbSms");
										inputBox_3.bind("value").toDataColumn("PHONE_NO");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbRepNm");
										inputBox_4.bind("value").toDataColumn("REP_NM");
										return inputBox_4;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "85px",
					"left": "310px",
					"width": "380px",
					"height": "350px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbSendDivSms");
				inputBox_5.readOnly = true;
				inputBox_5.bind("value").toDataMap(app.lookup("dmResOnLoad"), "strEmailDiv");
				container.addChild(inputBox_5, {
					"top": "85px",
					"left": "5px",
					"width": "295px",
					"height": "45px"
				});
				var button_1 = new cpr.controls.Button("btnDel");
				button_1.visible = false;
				button_1.value = "";
				button_1.style.setClasses(["btn-delete"]);
				button_1.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_1.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_1, {
					"top": "59px",
					"left": "627px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "695px",
				"height": "440px"
			});
			
			var button_2 = new cpr.controls.Button("btnClose");
			button_2.value = "닫기";
			if(typeof onBtnCloseClick == "function") {
				button_2.addEventListener("click", onBtnCloseClick);
			}
			container.addChild(button_2, {
				"top": "480px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_3 = new cpr.controls.Button("btnSend");
			button_3.value = "발송";
			if(typeof onBtnSendClick == "function") {
				button_3.addEventListener("click", onBtnSendClick);
			}
			container.addChild(button_3, {
				"top": "480px",
				"left": "640px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "SMS 보내기";
	cpr.core.Platform.INSTANCE.register(app);
})();
