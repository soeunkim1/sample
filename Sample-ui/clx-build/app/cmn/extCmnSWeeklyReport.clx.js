/*
 * App URI: app/cmn/extCmnSWeeklyReport
 * Source Location: app/cmn/extCmnSWeeklyReport.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/extCmnSWeeklyReport", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCmnSWeeklyReport.xtm"/>
			
			
			var extCmnSWeeklyReport = function() {
				var moPage = new Page();
				var moPObject = new PObject();
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 15.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
				/**
				 * @desc  onModelConstructDone  event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 15.
				 */
				moPage.onModelConstructDone_extCmnSWeeklyReport = function() {
					
					// 리피트 및 조회그룹 관련 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCmnModBoard"]);
					
					//서브미션 실행 (두번째 인자가 'onLoad' 일 경우 서브미션 실패시 coverPage 실행)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbUnitSystemRcd"]);
							
							util.Control.setValue(app, "ipbKeyDate", util.DataMap.getValue(app, "dmResOnLoad", "strCutDt"));
							util.Control.setValue(app, "ipbUserNm", util.DataMap.getValue(app, "dmResOnLoad", "strUserNm"));
							util.Control.setValue(app, "ipbCnfmPsnNm", util.DataMap.getValue(app, "dmResOnLoad", "strCnfmPsnNm"));
						}
					}, true);
				};
				
				/**
				 * @desc  조회 버튼 click event 
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 15.
				 */
				moPage.onClick_BtnSearch = function() {
					
					// 필수체크
					if (!util.validate(app, ["ipbKeyDate"])) return false;
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				/**
				 * @desc  조회 submission 실행
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 15.
				 */
				function doList(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.reset(app, "frfCmnModBoard");
							doSetEnable(false);
							util.Control.redraw(app, ["optRptTxt4", "txtRptTxt1", "optRptTxt5", "txtRptTxt2", "optRptTxt8", "optRptTxt9", "optRptTxt7", "txtRptTxt10"]);
							ExtTreeView.rebuild("trvMst");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}); 
				};
				
				/**
				 * @desc  조회자명 keydown event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 15.
				 */
				moPage.onKeyDown_IpbUserNm = function(strKeyType, strKeyStatus) {
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc 트리메뉴 정보 저장 변수
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 25.
				 */
				moPage.moTrvMstInfo = {
					BF_SEL_VALUE : ""	// 이전에 선택된 트리뷰 값
				};
				
				/**
				 * @desc 트리메뉴 선택시 실행되는 함수
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */
				moPage.onSelectionChanged_TrvMst = function() {
					var vsSelValue = util.Tree.getSelectedValue(app, "trvMst");
					var vaSelValue = vsSelValue.split(",");
					var vnSelLength = vaSelValue.length;
					
					if(vnSelLength < 2){
						util.Control.reset(app, "frfCmnModBoard");
						doSetEnable(false);
						return false;
					}
					
					doListByCmnModBoard(vaSelValue[0], vaSelValue[1], function(pbSuccess) {
						if (pbSuccess) {
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
							
							// 이전탭 값 저장
							moPage.moTrvMstInfo.BF_SEL_VALUE = vsSelValue;
						}
					});
				};
				
				/**
				 * @desc 해당 컨트롤을 활성/비활성 제어한다.
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */
				function doSetEnable(pbEnable) {
					util.Control.setEnable(app, pbEnable, ["frfCmnModBoard", "btnRestore", "btnSave", "btnMenuOpen"]);
				};
				
				/**
				 * @desc 프로그램 변경요청 상세 submission 실행
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */
				function doListByCmnModBoard(psReqId, psSerialNo, poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqKey", "strReqId", psReqId);
					util.DataMap.setValue(app, "dmReqKey", "strSerialNo", psSerialNo);
					//strCommand: listByCmnModBoard 
					util.Submit.send(app, "subListByCmnModBoard", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "frfCmnModBoard");
							doSetEnable(true);
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}); 
				};
				
				/******************************************************************************************************
				 *  공통파일업로드 관련 설정사항 사용법
				 *
				 * 예시)
				 * var moIdsForStdCmnFileUtil = [{
				 *		controlId 					: "btnFileUpLoad",
				 *		iFileSerialNo 				: "rdOptFileSerialNo",
				 *		iFileSubPath 				:  model.getTitle(),
				 *		iTableName 				: "CMN_TMP_REG",
				 *		iIsDirectUpLoad			: null,
				 *     isFileSelectorOnly       : null,
				 *		iIsHideDelete 				: null,			
				 *		iIsDownloadOnly 		: null,
				 *		iFileExtFilter 				: null,
				 *		oFileSerailNo				: "rdOptFileSerialNo",
				 *		oTmpFilePath			: null,			//리피트일경우 null로 지정
				 *		oFileCnt					: null,		
				 *		oFileDataChanged		: null,
				 *		func							: function(poRtnFileInfo){
				 *											ex)
				 *											if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
																util.FreeForm.setValue(app, "frfCmnDevStd", "FILE_SERIAL_NO", "", true); 
																doSave();
															}
				 *										}
				 *	}];
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 			: 최초 이벤트의 버튼이나 그리드 id             						(필수)
				 *  	2. iFileSerialNo		: 파일순번                                										(선택) 
				 *  	3. iFileSubPath 		: 저장될 파일 폴더(appworks.properties에 정의된 폴더 경로)	(필수)	
				 *  	4. iTableName 		: 파일업로드에 사용될 업무단 테이블명								(필수)
				 *  	5. iIsHideDelete 		: 삭제버튼 숨기기 여부 													(선택)
				 *								  	  default : false;
				 *		6. iIsDownloadOnly	: 다운로드만 가능할지 여부(업로드X)									(선택)
				 *								      default : false;
				 *		7. iIsDirectUpLoad   : auto save기능을 사용하지 않고 파일업로드 팝업을 이용하여 업로드 후 업로드된 정보만 리턴받아 제어 할 경우 사용
				 *									  default : false;
				 *		8. isFileSelectorOnly : 파일 셀럭터를 이용하여 응용프로그램에서 탬프 파일 경로만 취득하여 제어할 경우경우 사용
				 *									  default : false;
				 *		9. iFileExtFilter		: 업로드가능 확장자(배열) 												(선택)
				 *								  	  ex)["jpg","png"]
				 *  	10. oFileSerailNo 		: 파일순번																		(필수)
				 *  	11. oFileCnt 			: 저장된 파일 갯수															(선택)
				 *									  (	func의 args 대체 가능 poRtnFileInfo.strFileCnt)
				 *									  리피트내 컬럼 지정시 updatable="False" 지정
				 *  	12. oTmpFilePath 	: 임시폴더파일경로															(선택)
				 *									  리피트일경우 null로 지정, TMP_FILE_PATH 데이터셋 생성됨
				 *									  
				 *		13.oFileDataChanged	: 파일업로드 변경 여부 판단											(필수)		
				 *									  (	func의 args 대체 가능 poRtnFileInfo.isFileDataChanged)
				 *
				 *  	14. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  args..
				 * 									  poRtnFileInfo.IS_FILE_CHG 			파일업로드 리피트 변경 여부
				 *															 FILE_CNT					업로드 파일 갯수
				 *															 TMP_FILE_PATH		임시파일경로
				 *									  						 FILE_SERAIL_NO		파일순번
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnFileUtil = [{
					controlId 					: "btnFileDown",
					iFileSerialNo 				: "optFrfFileSerialNo",
					iFileSubPath 				: "stdCmnCRepairBoard",
					iTableName 				: "CMN_MOD_BOARD",
					iIsDirectUpLoad			: null,
					isFileSelectorOnly       : null,
					iIsHideDelete 				: true,			
					iIsDownloadOnly 		: true,
					iFileExtFilter 				: null,
					oFileSerailNo				: null,
					oTmpFilePath			: null,			//리피트일경우 null로 지정
					oFileCnt					: null,
					oFileDataChanged		: null,
					func							: null
				}];
				
				/**
				 * @desc 다운로드 버튼 클릭시 실행
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */
				moPage.onClick_BtnFileDown = function(sender) {
					doOnClickStdCmnPFileUtil(sender);
				};
				
				/**
				 * @desc 작업저장 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */	
				moPage.onClick_BtnSave = function() {
					doSave();
				};
				
				/**
				 * @desc  리피트 저장 submission 실행
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 17.
				 */
				function doSave(poCallBackFunc) {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCmnModBoard"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "frfCmnModBoard")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbSuccessSub) {
								if (pbSuccessSub) {
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
									
									ExtTreeView.findItemValue("trvMst", moPage.moTrvMstInfo.BF_SEL_VALUE, "VALUE", true);
								}
							});
						}
					});
				};
				
				/**
				 * @desc 작업취소 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3 17.
				 */	
				moPage.onClick_BtnRestore = function() {
					var voFrf = model.getControl("frfCmnModBoard");
					var vsStatus = voFrf.getRowStatus(voFrf.getIndex());
					
					util.Grid.restoreRow(app, "frfCmnModBoard");
				};
				
				/**
				 * @desc 메뉴열기 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 18.
				 */	
				moPage.onClick_BtnMenuOpen = function() {
					// 메뉴열기 
					var vsMenuId 		= util.FreeForm.getValue(app, "frfCmnModBoard", "MENU_PGM_ID");
					var vsTopMenuId	= util.FreeForm.getValue(app, "frfCmnModBoard", "TOP_MENU_ID");
			
					Common.findMainWindow().doOpenAuthMenu(vsMenuId, vsTopMenuId);
				};
				
				/**
				 * @desc  확인자명 keydown event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 22.
				 */
				moPage.onKeyDown_IpbCnfmPsnNm = function(strKeyType, strKeyStatus) {
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc 프로그램관리 바로가기 click event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 3. 22.
				 */
				moPage.onClick_BtnPgmMenu = function() {
					Common.findMainWindow().doOpenAuthMenu("stdCmnCRegPgm", "000040");
				};
				
				/**
				 * @desc [전체펼침] 버튼 click event
				 * @return void
				 * @author xxxx 2016. 3. 28.
				 */
				moPage.onClick_BtnExpend = function() {
					util.Tree.expandAllItems(app, "trvMst", true);
				};
				
				/**
				 * @desc  기준일자 keydown event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 6. 8.
				 */
				moPage.onKeyDown_IpbKeyDate = function(strKeyType, strKeyStatus) {
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc  조치상태 value change event
				 * @return void
				 * @author jeong-ho, Jeong 2016. 8. 11.
				 */
				moPage.onValueChanged_CbbFrfActStatRcd = function() {
					var vsActStatRcd = util.FreeForm.getValue(app, "frfCmnModBoard", "ACT_STAT_RCD");
					var vsActDt = util.FreeForm.getValue(app, "frfCmnModBoard", "ACT_DT");
					var vsActPlanDt = util.FreeForm.getValue(app, "frfCmnModBoard", "ACT_PLAN_DT");
					
					// 접수 or 조치완료
					if("MGT0902" == vsActStatRcd
						|| "MGT0903" == vsActStatRcd){
						if(ValueUtil.isNull(vsActPlanDt)){
							util.FreeForm.setValue(app, "frfCmnModBoard", "ACT_PLAN_DT", util.DataMap.getValue(app, "dmResOnLoad", "strCutDt"));
						}
						
					// 설계자확인완료
					}else if("MGT0905" == vsActStatRcd){
						if(ValueUtil.isNull(vsActDt)){
							util.FreeForm.setValue(app, "frfCmnModBoard", "ACT_DT", util.DataMap.getValue(app, "dmResOnLoad", "strCutDt"));
						}
					}
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsRegDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsActStatRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsFrfMst");
			dataSet_4.parseData({
				"columns": [
					{"name": "RPT_TXT1"},
					{"name": "RPT_TXT2"},
					{"name": "RPT_TXT3"},
					{"name": "RPT_TXT4"},
					{"name": "RPT_TXT5"},
					{"name": "RPT_TXT6"},
					{"name": "RPT_TXT7"},
					{"name": "RPT_TXT8"},
					{"name": "RPT_TXT9"},
					{"name": "RPT_TXT10"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsTrvMst");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "UCD"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsFrfCmnModBoard");
			dataSet_6.parseData({
				"columns": [
					{"name": "REQ_ID"},
					{"name": "SERIAL_NO"},
					{"name": "MID_MENU"},
					{"name": "MENU_PGM_NM"},
					{"name": "MENU_PGM_ID"},
					{"name": "REG_DT"},
					{"name": "REGTNT_ID"},
					{"name": "REGTNT_NM"},
					{"name": "ERROR_CONT"},
					{"name": "ACT_STAT_RCD"},
					{"name": "ACT_STAT_NM"},
					{"name": "ACT_CONT"},
					{"name": "ACT_DT"},
					{"name": "ACT_PSN_NM"},
					{"name": "CNFM_PSN_NM"},
					{"name": "REG_DIV_RCD"},
					{"name": "REG_DIV_NM"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "FILE_CNT"},
					{"name": "TOP_MENU_ID"},
					{"name": "KEY_VALUE"},
					{"name": "ERROR_CONT_VIEW"},
					{"name": "ACT_PLAN_DT"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strCutDt",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					},
					{
						"name": "strCnfmPsnNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					},
					{
						"name": "strReqId",
						"dataType": "string"
					},
					{
						"name": "strSerialNo",
						"dataType": "string"
					},
					{
						"name": "strCnfmPsnNm",
						"dataType": "string"
					},
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/ExtCmnWeeklyReport/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/ExtCmnWeeklyReport/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListByCmnModBoard");
			submission_3.action = "/cmn/ExtCmnWeeklyReport/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cmn/ExtCmnWeeklyReport/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_6);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optRptTxt4");
				output_1.value = "";
				output_1.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT4");
				container.addChild(output_1, {
					"top": "30px",
					"left": "5px",
					"width": "330px",
					"height": "25px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdMst");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-SETTINFOLST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "245px",
					"height": "25px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdMst1");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SETTINFOLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "435px",
					"width": "285px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("txtRptTxt1");
				textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT1");
				container.addChild(textArea_1, {
					"top": "55px",
					"left": "6px",
					"width": "425px",
					"height": "230px"
				});
				var output_2 = new cpr.controls.Output("optRptTxt5");
				output_2.value = "";
				output_2.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT5");
				container.addChild(output_2, {
					"top": "290px",
					"left": "5px",
					"width": "425px",
					"height": "25px"
				});
				var textArea_2 = new cpr.controls.TextArea("txtRptTxt2");
				textArea_2.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT2");
				container.addChild(textArea_2, {
					"top": "315px",
					"left": "5px",
					"width": "425px",
					"height": "200px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "765px",
					"width": "200px",
					"height": "25px"
				});
				var group_2 = new cpr.controls.Container("frfCmnModBoard");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_3 = new cpr.controls.Output("optFrfActStatRcd");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-PRCSTATE");
					container.addChild(output_3, {
						"top": "280px",
						"left": "5px",
						"width": "85px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfActDt");
					output_4.value = "";
					output_4.bind("value").toLanguage("UI-DB-PROC_DT");
					container.addChild(output_4, {
						"top": "280px",
						"left": "235px",
						"width": "85px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipFrfActDt");
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfActDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmRow"), "ACT_DT");
					container.addChild(dateInput_1, {
						"top": "280px",
						"left": "325px",
						"width": "120px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfActPsnNm");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-DB-PROC_USER_ID");
					container.addChild(output_5, {
						"top": "540px",
						"left": "5px",
						"width": "85px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfActPsnNm");
					inputBox_1.maxLength = 50;
					inputBox_1.bind("fieldLabel").toExpression("#optActManpNm.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmRow"), "ACT_PSN_NM");
					container.addChild(inputBox_1, {
						"top": "540px",
						"left": "95px",
						"width": "120px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfCnfmPsnNm");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-SCR-USERCNFRM");
					container.addChild(output_6, {
						"top": "540px",
						"left": "235px",
						"width": "85px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfCnfmPsnNm");
					inputBox_2.maxLength = 50;
					inputBox_2.bind("fieldLabel").toExpression("#optCnfmManpNm.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmRow"), "CNFM_PSN_NM");
					container.addChild(inputBox_2, {
						"top": "540px",
						"left": "325px",
						"width": "120px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfFileSerialNo");
					output_7.visible = false;
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-SCR-ATCHFILE");
					container.addChild(output_7, {
						"top": "255px",
						"left": "5px",
						"width": "85px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfRegDivRcd");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-SCR-DIV");
					container.addChild(output_8, {
						"top": "5px",
						"left": "5px",
						"width": "85px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfActCont");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-SCR-PRCSLST");
					container.addChild(output_9, {
						"top": "330px",
						"left": "5px",
						"width": "85px",
						"height": "205px"
					});
					var output_10 = new cpr.controls.Output("optFrfErrorCont");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-GLS-REQZ");
					container.addChild(output_10, {
						"top": "30px",
						"left": "5px",
						"width": "85px",
						"height": "220px"
					});
					var output_11 = new cpr.controls.Output("optFrfRegtntNm");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-SCR-REGISTRANT");
					container.addChild(output_11, {
						"top": "5px",
						"left": "205px",
						"width": "85px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfRegDivRcd");
					comboBox_1.enabled = false;
					comboBox_1.hideButton = true;
					comboBox_1.bind("value").toDataMap(app.lookup("dmRow"), "REG_DIV_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsRegDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "95px",
						"width": "100px",
						"height": "150px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfActStatRcd");
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfActStatRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmRow"), "ACT_STAT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsActStatRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					if(typeof onCbbFrfActStatRcdSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCbbFrfActStatRcdSelectionChange);
					}
					container.addChild(comboBox_2, {
						"top": "280px",
						"left": "95px",
						"width": "130px",
						"height": "150px"
					});
					var textArea_3 = new cpr.controls.TextArea("txtFrfErrorCont");
					textArea_3.readOnly = true;
					textArea_3.maxLength = 1000;
					textArea_3.bind("value").toDataMap(app.lookup("dmRow"), "ERROR_CONT");
					container.addChild(textArea_3, {
						"top": "30px",
						"left": "95px",
						"width": "350px",
						"height": "220px"
					});
					var textArea_4 = new cpr.controls.TextArea("txtFrfActCont");
					textArea_4.maxLength = 1000;
					textArea_4.userAttr({"require": "Y"});
					textArea_4.bind("fieldLabel").toExpression("#optFrfActCont.value");
					textArea_4.bind("value").toDataMap(app.lookup("dmRow"), "ACT_CONT");
					container.addChild(textArea_4, {
						"top": "330px",
						"left": "95px",
						"width": "350px",
						"height": "205px"
					});
					var output_12 = new cpr.controls.Output("optFrfRegtntNm");
					output_12.value = "";
					output_12.bind("value").toDataMap(app.lookup("dmRow"), "REGTNT_NM");
					container.addChild(output_12, {
						"top": "5px",
						"left": "295px",
						"width": "150px",
						"height": "25px"
					});
					var button_1 = new cpr.controls.Button("btnFileDown");
					button_1.value = "";
					button_1.bind("value").toLanguage("UI-SCR-FILEDOWN");
					if(typeof onBtnFileDownClick == "function") {
						button_1.addEventListener("click", onBtnFileDownClick);
					}
					container.addChild(button_1, {
						"top": "255px",
						"left": "95px",
						"width": "70px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfFileCnt");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-FILEINFO");
					container.addChild(output_13, {
						"top": "255px",
						"left": "175px",
						"width": "100px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfFileCnt");
					output_14.value = "";
					output_14.bind("value").toDataMap(app.lookup("dmRow"), "FILE_CNT");
					container.addChild(output_14, {
						"top": "255px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfFileSerialNo");
					output_15.visible = false;
					output_15.value = "";
					output_15.bind("value").toDataMap(app.lookup("dmRow"), "FILE_SERIAL_NO");
					container.addChild(output_15, {
						"top": "255px",
						"left": "365px",
						"width": "80px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfActDt1");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-DB-PROC_DT");
					container.addChild(output_16, {
						"top": "305px",
						"left": "235px",
						"width": "85px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("dipFrfActDt1");
					dateInput_2.style.css({
						"text-align" : "center"
					});
					dateInput_2.bind("fieldLabel").toExpression("#optFrfActDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmRow"), "ACT_PLAN_DT");
					container.addChild(dateInput_2, {
						"top": "305px",
						"left": "325px",
						"width": "120px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfActStatRcd1");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-SCR-PRCSTATE");
					container.addChild(output_17, {
						"top": "305px",
						"left": "5px",
						"width": "85px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("inputbox1");
					inputBox_3.readOnly = true;
					inputBox_3.bind("value").toDataMap(app.lookup("dmRow"), "MENU_PGM_ID");
					container.addChild(inputBox_3, {
						"top": "305px",
						"left": "95px",
						"width": "130px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"left": "765px",
					"width": "455px",
					"height": "565px"
				});
				var button_2 = new cpr.controls.Button("btnSave");
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_2.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnMenuOpen");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-GLS-MENU");
				if(typeof onBtnMenuOpenClick == "function") {
					button_4.addEventListener("click", onBtnMenuOpenClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var output_18 = new cpr.controls.Output("optRptTxt9");
				output_18.value = "";
				output_18.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT9");
				container.addChild(output_18, {
					"top": "30px",
					"left": "435px",
					"width": "260px",
					"height": "25px"
				});
				var output_19 = new cpr.controls.Output("optRptTxt7");
				output_19.value = "";
				output_19.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT7");
				container.addChild(output_19, {
					"top": "30px",
					"left": "340px",
					"width": "90px",
					"height": "25px"
				});
				var output_20 = new cpr.controls.Output("optTitleRptMst2");
				output_20.value = "";
				output_20.bind("value").toLanguage("UI-SCR-SETTINFOLST");
				container.addChild(output_20, {
					"top": "5px",
					"left": "140px",
					"width": "290px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnPgmMenu");
				button_5.value = "";
				button_5.bind("value").toLanguage("UI-GLS-MENU");
				if(typeof onBtnPgmMenuClick == "function") {
					button_5.addEventListener("click", onBtnPgmMenuClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "610px",
					"width": "150px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnExpend");
				button_6.value = "전체펼침";
				if(typeof onBtnExpendClick == "function") {
					button_6.addEventListener("click", onBtnExpendClick);
				}
				container.addChild(button_6, {
					"top": "30px",
					"left": "700px",
					"width": "60px",
					"height": "25px"
				});
				var output_21 = new cpr.controls.Output("optTitleRptMst3");
				output_21.value = "";
				output_21.bind("value").toLanguage("UI-SCR-SETTINFOLST");
				container.addChild(output_21, {
					"top": "30px",
					"left": "175px",
					"width": "166px",
					"height": "25px"
				});
				var textArea_5 = new cpr.controls.TextArea("txtRptTxt10");
				textArea_5.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT10");
				container.addChild(textArea_5, {
					"top": "520px",
					"left": "5px",
					"width": "425px",
					"height": "75px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var group_3 = new cpr.controls.Container("grpSearch");
			group_3.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var button_7 = new cpr.controls.Button("btnSearch");
				button_7.value = "";
				button_7.style.setClasses(["btn-search"]);
				button_7.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_7.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_22 = new cpr.controls.Output("optKeyDate");
				output_22.value = "";
				output_22.style.setClasses(["require"]);
				output_22.bind("value").toLanguage("UI-SCR-SETTYEAR");
				container.addChild(output_22, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_3 = new cpr.controls.DateInput("ipbKeyDate");
				dateInput_3.userAttr({"require": "Y"});
				dateInput_3.style.css({
					"text-align" : "center"
				});
				dateInput_3.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDate");
				if(typeof onIpbKeyDateKeydown == "function") {
					dateInput_3.addEventListener("keydown", onIpbKeyDateKeydown);
				}
				container.addChild(dateInput_3, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_23 = new cpr.controls.Output("optUserNm");
				output_23.value = "";
				output_23.bind("value").toLanguage("UI-SCR-SETTYEAR");
				container.addChild(output_23, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbUserNm");
				inputBox_4.style.css({
					"text-align" : "center"
				});
				inputBox_4.bind("fieldLabel").toExpression("#optUserNm.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strUserNm");
				if(typeof onIpbUserNmKeydown == "function") {
					inputBox_4.addEventListener("keydown", onIpbUserNmKeydown);
				}
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "285px",
					"width": "70px",
					"height": "25px"
				});
				var output_24 = new cpr.controls.Output("optRptTxt8");
				output_24.value = "";
				output_24.bind("value").toDataMap(app.lookup("dmRow"), "RPT_TXT8");
				container.addChild(output_24, {
					"top": "5px",
					"left": "785px",
					"width": "370px",
					"height": "25px"
				});
				var output_25 = new cpr.controls.Output("optCnfmPsnNm");
				output_25.value = "";
				output_25.bind("value").toLanguage("UI-SCR-SETTYEAR");
				container.addChild(output_25, {
					"top": "5px",
					"left": "365px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbCnfmPsnNm");
				inputBox_5.style.css({
					"text-align" : "center"
				});
				inputBox_5.bind("fieldLabel").toExpression("#optCnfmPsnNm.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strCnfmPsnNm");
				if(typeof onIpbCnfmPsnNmKeydown == "function") {
					inputBox_5.addEventListener("keydown", onIpbCnfmPsnNmKeydown);
				}
				container.addChild(inputBox_5, {
					"top": "5px",
					"left": "450px",
					"width": "70px",
					"height": "25px"
				});
				var output_26 = new cpr.controls.Output("optUnitSystemRcd");
				output_26.value = "";
				output_26.bind("value").toLanguage("UI-SCR-UNITSYSTEM");
				container.addChild(output_26, {
					"top": "5px",
					"left": "530px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbUnitSystemRcd");
				comboBox_3.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strUnitSystemRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsUnitSystemRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "615px",
					"width": "130px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_4 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_4, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaFile");
			cpr.core.App.load("app/imp/impFileUtil", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "10px",
				"width": "100px",
				"height": "25px"
			});
			
			var output_27 = new cpr.controls.Output("label1");
			output_27.value = "\u203b 단위시스템 조건은 실적내역 조회시에만 사용됩니다.";
			container.addChild(output_27, {
				"top": "7px",
				"left": "525px",
				"width": "310px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCmnSWeeklyReport";
	cpr.core.Platform.INSTANCE.register(app);
})();
