/*
 * App URI: app/cmn/stdCmnCDataSetRole
 * Source Location: app/cmn/stdCmnCDataSetRole.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCDataSetRole", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			// 데이터셋목록 PK
			var msPkValues = "";
			
			/**
			 * @desc  조회버튼이벤트(데이터셋목록을 조회한다.)
			 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
			 * @return 데이터셋목록 조회
			 */
			function doList(poCallBackFunc) {
				util.Submit.send(app, "subList", "list", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnDataset");
																	
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc  doListMstRowSelectDtl(데이터셋목록 선택된 행을 통해 사용업무역할별목록을 조회한다.)  
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListMstRowSelectDtl(poCallBackFunc) {
				// 데이터셋목록 현재선택된 행
				var vnIdx = util.Grid.getIndex(app, "grdCmnDataset");
				
				// 데이터셋목록의 SQL_ID
				var vsSqlId = util.Grid.getCellValue(app, "grdCmnDataset", "SQL_ID", vnIdx);
				util.DataMap.setValue(app, "dmReqListOper", "strSqlId", vsSqlId);	
				// 데이터셋목록의 언어키
				var vsLanDivRcd = util.Grid.getCellValue(app, "grdCmnDataset", "LAN_DIV_RCD", vnIdx);
				util.DataMap.setValue(app, "dmReqListOper", "strLanDivRcd", vsLanDivRcd);	
				
				util.Submit.send(app, "subListRole", function(pbSuccess){
					if(pbSuccess){
						msPkValues = util.Grid.getRowPKColumnValues(app, "grdCmnDataset", vnIdx);
						
						util.Control.redraw(app, ["grdCmnDatasetRole", "grdNonCmnDatasetRole"]);
																	
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc  [미사용 업무역할] -> [사용업무역할] move 함수
			 * @return void
			 */
			function moveRoleUp(){
				// 미사용 업무역할 그리드 선택된 건 가져오기 
				var vsNonSelIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdNonCmnDatasetRole");
				
				var vsNonCmnRoleGrdNm = util.Grid.getTitle(app, "grdNonCmnDatasetRole"); 
				var vsCmnRoleGrdNm = util.Grid.getTitle(app, "grdCmnDatasetRole");
				
				if(String(vsNonSelIdx).isEmpty()){
					util.Msg.alert("NLS-INF-M045", [vsNonCmnRoleGrdNm]);
					return;
				}
				
				var vaIdxNon = null;
				if(String(vsNonSelIdx).indexOf(",") != -1){
					vaIdxNon = String(vsNonSelIdx).split(",");
				}else{
					vaIdxNon = new Array();
					vaIdxNon[0] = vsNonSelIdx;
				}
				
				for(var i = 0; i < vaIdxNon.length; i++){
					var vnIdx = vaIdxNon[i];
					
					// [사용 업무역할] 그리드의 새로운 행을 추가한다.
					var vnNewRowIdx = util.Grid.insertRow(app, "grdCmnDatasetRole");
					
					// [미사용 업무역할] 그리드에서 선택한 내역을 set한다.
					var vsRoleId = util.Grid.getCellValue(app, "grdNonCmnDatasetRole", "OPRT_ROLE_ID", vnIdx);		  // 업무역할ID
					var vsRoleNm = util.Grid.getCellValue(app, "grdNonCmnDatasetRole", "OPRT_ROLE_NM", vnIdx);	  // 업무역할명
					var vsLanDivRcd = util.Grid.getCellValue(app, "grdNonCmnDatasetRole", "LAN_DIV_RCD", vnIdx);      // 언어키
					var vsSqlId = util.Grid.getCellValue(app, "grdNonCmnDatasetRole", "SQL_ID", vnIdx);				         // SQL아이디
					
					util.Grid.setCellValue(app, "grdCmnDatasetRole", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnDatasetRole", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnDatasetRole", "LAN_DIV_RCD", vsLanDivRcd, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnDatasetRole", "SQL_ID", vsSqlId , vnNewRowIdx);
				}
				doSave();
			}
			
			/**
			 * @desc  [사용 업무역할] -> [미사용 업무역할] move 함수
			 * @return void
			 */
			function moveRoleDown(){
				// 사용 업무역할 그리드 선택된 건 가져오기 
				var vsSelIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnDatasetRole");
				
				var vsNonCmnRoleGrdNm = util.Grid.getTitle(app, "grdNonCmnDatasetRole"); 
				var vsCmnRoleGrdNm = util.Grid.getTitle(app, "grdCmnDatasetRole");
				
				if(String(vsSelIdx).isEmpty()){
					util.Msg.alert("NLS-INF-M045", [vsCmnRoleGrdNm]);
					return;
				}
				
				var vaIdx = null;
				if(String(vsSelIdx).indexOf(",") != -1){
					vaIdx = String(vsSelIdx).split(",");
				}else{
					vaIdx = new Array();
					vaIdx[0] = vsSelIdx;
				}
								
				for(var i = 0; i < vaIdx.length; i++){
					var vnIdx = vaIdx[i];
					var vnNewRowIdx = null;
					
					util.Grid.deleteRow(app, "grdCmnDatasetRole");
				}
				doSave();
			}
			
			/**
			 * @desc  [사용업무역할] 정보 저장한다.
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doSave(poCallBackFunc) {
				// 그리드 변경사항 체크(사용자 업무역할)
				if(!util.Grid.isModified(app, ["grdCmnDatasetRole"])){
					util.Msg.warn("M007");
					return false;
				}
				
				//그리드 validation check
				if(!util.validate(app, ["grdCmnDatasetRole"])) return false;
				
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList(function(pbListSuccess) {
							// 저장 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
							if(pbListSuccess){
								// 사용, 미사용 업무역할 리피트 clear처리 
								util.Control.reset(app, app, ["grdCmnDatasetRole", "grdNonCmnDatasetRole"]);			
								
								// 데이터셋목록 PK컬럼에 따른 로우 셀렉트
								if(msPkValues != ""){
									//TODO 수정
									util.Grid.selectRowByCondition(app, "grdCmnPgm", msPkValues);
								}
								util.Msg.alert("NLS-INF-M025");
							}
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbListSuccess);
						});
					}
				});
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				//서브미션 실행
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						//조회조건 콤보박스 언어키 redraw
						util.Control.redraw(app, "cbbLanDivRcd");
						//언어키 콤보박스 디폴트셋팅
						util.Control.setValue(app, app, "cbbLanDivRcd", util.getDefaultLocale(app));
						//조회조건 데이터셋명 포커스 처리
						util.Control.setFocus(app, "ipbDatasetNm");
					}
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				doList(function(pbSuccess){
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnDatasetSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnDataset = e.control;
				if(util.Grid.getIndex(app, "grdCmnDataset") == -1){
					return false;
				}
				
				doListMstRowSelectDtl();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnUpClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnUp = e.control;
				moveRoleUp();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDownClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDown = e.control;
				moveRoleDown();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsReqParamRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsColumnTypeList");
			dataSet_3.parseData({
				"columns": [{"name": "CD_PRP1"}],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnDataset");
			dataSet_4.parseData({
				"info": "CMN_DATASET@SQL_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "SQL_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "SQL_FILE_NM"},
					{"name": "DATASET_NM"},
					{"name": "STD_YN"},
					{"name": "REMARK"},
					{"name": "DTL_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnDatasetRole");
			dataSet_5.parseData({
				"info": "CMN_DATASET_OPER_GRP@OPRT_ROLE_ID,SQL_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "SQL_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsNonCmnDatasetRole");
			dataSet_6.parseData({
				"info": "CMN_DATASET_OPER_GRP@OPRT_ROLE_ID,SQL_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "SQL_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strDatasetNm",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqListOper");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSqlId",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnDataSetRole/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnDataSetRole/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListRole");
			submission_3.action = "/cmn/StdCmnDataSetRole/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_5, false);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cmn/StdCmnDataSetRole/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_5);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("NLS-DLG-BTN-B003");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDatasetNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-DATASET");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDatasetNm");
				inputBox_1.bind("fieldLabel").toExpression("#optDatasetNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDatasetNm");
				if(typeof onIpbDatasetNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbDatasetNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "160px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optLanDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-LANKEY");
				container.addChild(output_2, {
					"top": "5px",
					"left": "280px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbLanDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optLanDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strLanDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsLanDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "385px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-DATASETLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "215px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnDataset");
				grid_1.init({
					"dataSet": app.lookup("dsCmnDataset"),
					"columns": [
						{"width": "40px"},
						{"width": "210px"},
						{"width": "244px"},
						{"width": "105px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-DATASET");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "SQL_ID";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "DATASET_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SQL_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbLanDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsLanDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_2;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnDatasetSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnDatasetSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "615px",
					"height": "565px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnDatasetRole");
				grid_2.init({
					"dataSet": app.lookup("dsCmnDatasetRole"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "192px"},
						{"width": "308px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SQL_ID";
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "625px",
					"width": "595px",
					"height": "245px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-USEWRKROLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "625px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnUp");
				button_2.value = "";
				if(typeof onBtnUpClick == "function") {
					button_2.addEventListener("click", onBtnUpClick);
				}
				container.addChild(button_2, {
					"top": "285px",
					"left": "835px",
					"width": "25px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDown");
				button_3.value = "";
				if(typeof onBtnDownClick == "function") {
					button_3.addEventListener("click", onBtnDownClick);
				}
				container.addChild(button_3, {
					"top": "285px",
					"left": "980px",
					"width": "25px",
					"height": "25px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-NOUSERWRKRLST");
				container.addChild(userDefinedControl_4, {
					"top": "325px",
					"left": "625px",
					"width": "265px",
					"height": "25px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdNonCmnDatasetRole");
				grid_3.init({
					"dataSet": app.lookup("dsNonCmnDatasetRole"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "192px"},
						{"width": "308px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SQL_ID";
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "350px",
					"left": "625",
					"width": "595px",
					"height": "245px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
		}
	});
	app.title = "stdCmnCDataSetRole";
	cpr.core.Platform.INSTANCE.register(app);
})();
