/*
 * App URI: app/cmn/stdCmnCDomainMgt
 * Source Location: app/cmn/stdCmnCDomainMgt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCDomainMgt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = new ComUtil(app);
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				
			}//onBodyLoad()
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				// 데이터 변경상태 체크 메시지 
			    if(util.Grid.isModified(app, "grdMstList", "CRM")){
					return false;
				}
				doSearch();
			}//onBtnSearchClick()
			
			
			/**
			 * @desc doSearch event 화면 초기화
			 * @param psBtnId 버튼ID
			 */
			function doSearch(){
				
				util.Submit.send(app, "subList", function(pbSuccess){
					if (pbSuccess) {
						util.Control.redraw(app, "grdMstList");
							// 우측상단 메세지창에 메세지를 입력한다. "조회되었습니다. "
							util.Msg.notify(app, "NLS-INF-M024");
					}
				});
				
			}//doSearch()
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == 13){
					app.lookup("btnSearch").click();
				}
			}//onGrpSearchKeydown()
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				doSave()
			}//onGrid_ids_btn1Save()
			
			/**
			 * @desc doSave event 저장
			 * @return void
			 */
			function doSave(){
			
			   // 리피터 변경사항 체크
				if (!util.Grid.isModified(app, "grdMstList", "MSG")) {
					return false;
				}
				
				// 그리드 유효성 검증
				if (!util.validate(app, "grdMstList")) {
					return false;
				}
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doSearch();
					}
				});
			}//doSave()
			/*
			 * 사용자 정의 컨트롤에서 delete 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Delete(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
			//	var voRow =ExtRepeat.getIndex("rptMstList");
				var voRow = util.Grid.getIndex(app, "grdMstList");
				if (voRow == null) {
			//		ComMsg.alert(NLS.WRN.M008);
					util.Msg.alert("NLS-WRN-M008");
					return;
				}
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnNewFileClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnNewFile = e.control;
				doFileCreate();
			}//onBtnNewFileClick()
			
			/**
			 * @desc doFileCreate event 파일생성
			 */
			function doFileCreate(){
				
				util.Submit.send(app, "subFileDown", function(pbSuccess){
					if(pbSuccess){
						
					}
				});
				
			}//doFileCreate();
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMstList");
			dataSet_1.parseData({
				"info": "CMN_DB_DMN@SERIAL_NO",
				"columns": [
					{"name": "SERIAL_NO"},
					{"name": "DB_DMN_NM"},
					{"name": "DATA_TYPE_NM"},
					{"name": "UP_DB_DMN_NM"},
					{"name": "BASE_VAL"},
					{"name": "REMARK"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strDataTypeNm",
						"dataType": "string"
					},
					{
						"name": "strDbDmnNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFileInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/StdCmnDomainMgt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/cmn/StdCmnDomainMgt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_1);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subFileDown");
			submission_3.action = "/cmn/StdCmnDomainMgt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDataTypeNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-DATA_TYPR_NM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "320px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDataTypeNm");
				inputBox_1.bind("fieldLabel").toExpression("#optTableNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDataTypeNm");
				if(typeof onIpbDataTypeNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbDataTypeNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "425px",
					"width": "200px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optDbDmnNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-DMN_NM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDbDmnNm");
				inputBox_2.bind("fieldLabel").toExpression("#optTableNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strDbDmnNm");
				if(typeof onIpbDbDmnNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbDbDmnNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "110px",
					"width": "200px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNewFile");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW_FILE");
				if(typeof onBtnNewFileClick == "function") {
					button_2.addEventListener("click", onBtnNewFileClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "5px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpMstList");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-DMNLST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdMstList");
				grid_1.init({
					"dataSet": app.lookup("dsMstList"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "90px"},
						{"width": "250px"},
						{"width": "255px"},
						{"width": "160px"},
						{"width": "100px"},
						{"width": "371px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-DB_DMN_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "데이터타입명";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-UP_DB_DMN_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEFAULT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-COMMENT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbSaNmLang");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999,999,999,999,999";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.bind("value").toDataColumn("SERIAL_NO");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "DB_DMN_NM";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbDbDmnNm");
										inputBox_3.maxLength = 100;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("DB_DMN_NM");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "DATA_TYPE_NM";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbDataTypeNm");
										inputBox_4.maxLength = 100;
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("DATA_TYPE_NM");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "UP_DB_DMN_NM";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbUpDbDmnNm");
										inputBox_5.maxLength = 100;
										inputBox_5.bind("value").toDataColumn("UP_DB_DMN_NM");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "BASE_VAL";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbBaseVal");
										inputBox_6.maxLength = 50;
										inputBox_6.bind("value").toDataColumn("BASE_VAL");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_7.maxLength = 1000;
										inputBox_7.bind("value").toDataColumn("REMARK");
										return inputBox_7;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdMstListSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdMstListSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "515px"
				});
				var button_3 = new cpr.controls.Button("btnNew");
				button_3.value = "신규";
				button_3.style.setClasses(["btn-new"]);
				if(typeof onBtnNewClick == "function") {
					button_3.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnDel");
				button_4.value = "삭제";
				button_4.style.setClasses(["btn-delete"]);
				if(typeof onBtnDelClick == "function") {
					button_4.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRestore");
				button_5.value = "취소";
				button_5.style.setClasses(["btn-restore"]);
				if(typeof onBtnRestoreClick == "function") {
					button_5.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnSave");
				button_6.value = "저장";
				button_6.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_6.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "42px",
				"left": "5px",
				"width": "1225px",
				"height": "550px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
