/*
 * App URI: app/cmn/stdCmnCOptGrp
 * Source Location: app/cmn/stdCmnCOptGrp.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCOptGrp", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						util.SelectCtl.selectItem(app, "cbbGrpUsePlcRcd", 0);
					}
				}, true);
			}
			
			/**
			 * @desc 조회 event
			 * @param poCallBackFunc 조회 후 callback 함수
			 * @return void
			 */
			function doList(poCallBackFunc){
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnOptGrp");
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				});
			}
			
			/**
			 * @desc 저장 event
			 * @return void
			 */
			function doSave(){
				
				//그리드 변경사항 체크
				if(!util.Grid.isModified(app, "grdCmnOptGrp","MSG")){
					return false;
				}
				//그리드 유효성 검증
				if(!util.validate(app, "grdCmnOptGrp")){
					return false;
				}
				
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList(function(pbListSuccess){
							if (pbListSuccess){
								// MSG : 갱신된 데이터가 조회되었습니다. header 메시지 표시
								util.Msg.notify(app, "NLS-INF-M025");
							}
						}); 
					}
				});
				
			}
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Insert(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				
				//현재 insert된 row index
				var vnIdx = util.Grid.getIndex(app, "grdCmnOptGrp");
				//현재 조회조건(그릅사용처)의 value
				var vsValue = util.SelectCtl.getValue("cbbGrpUsePlcRcd");
				
				//선택된 조회조건이 있을 경우, 조회조건과 동일한 그리드 컬럼에 현재 조회조건의 value를 자동 셋팅.
				if(vsValue != "%"){
					util.Grid.setCellValue(app, "grdCmnOptGrp", "GRP_USE_PLC_RCD", vsValue, vnIdx);
				}
				
				// TODO eXbuilder5의 주석 >> 조회조건에 셋팅된 내역이 있으면(???), 동작은 신규시 사용여부 'Y'자동셋팅. 
				// 신규시 자동셋팅한다.(사용여부 ='Y')
				util.Grid.setCellValue(app, "grdCmnOptGrp", "USE_YN", "Y", vnIdx);
			}
			
			/*
			 * 사용자 정의 컨트롤에서 delete 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Delete(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				
				var vaCheckedIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnOptGrp");
				
				for(var i = 0 ; i < vaCheckedIdx.length ; i ++){
					var vsStdYn = util.Grid.getCellValue(app, "grdCmnOptGrp", "STD_YN", vaCheckedIdx[i]);
					var vsRowStatus = util.Grid.getRowState(app, "grdCmnOptGrp", vaCheckedIdx[i]);
				
					if(vsRowStatus != cpr.data.tabledata.RowState.INSERTED && vsStdYn == "Y"){
						util.Msg.notify(app, "NLS-CMM-M002");
						return false;
					}
				}
				
				util.Grid.deleteRow(app, "grdCmnOptGrp");
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				
				doSave();
			}
			
			
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				
				if(util.Grid.isModified(app, )){
						return false;
				}
				
				//조회 실행
				doList(function(pbSuccess){
					if (pbSuccess){ 
						// MSG : 조회되었습니다. header 메시지 표시
						util.Msg.notify(app, "NLS-INF-M024");
					}
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListCrsCalcPrcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "PRCD_CD"},
					{"name": "PRCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListLanDivRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListGrpUse");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnOptGrp");
			dataSet_4.parseData({
				"info": "CMN_OPT_GRP@OPT_GRP_CD,LAN_DIV_RCD",
				"columns": [
					{"name": "OPT_GRP_CD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "OPT_GRP_NM"},
					{"name": "GRP_USE_PLC_RCD"},
					{"name": "PRT_ORD"},
					{"name": "PRCD_CD"},
					{"name": "USE_YN"},
					{"name": "CD_DESC"},
					{"name": "STD_YN"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqCmd");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strCdCls",
						"dataType": "string"
					},
					{
						"name": "strGrpUsePlcRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnOptGrp/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnOptGrp/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnOptGrp/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_rptCmnOptGrp");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SELEGRPDEFLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnOptGrp");
				grid_1.init({
					"dataSet": app.lookup("dsCmnOptGrp"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "180px"},
						{"width": "104px"},
						{"width": "200px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "120px"},
						{"width": "100px"},
						{"width": "222px"},
						{"width": "96px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-OPT_GRP_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "언어구분";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-OPT_GRP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-GRPUSEPLC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PRT_ORD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TUITCALPRC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-MSG");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPT_GRP_CD";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbCd");
										inputBox_1.maxLength = 10;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.style.css({
											"text-align" : "center"
										});
										inputBox_1.bind("value").toDataColumn("OPT_GRP_CD");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbLanDivRcd");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
											comboBox_1.setItemSet(app.lookup("dsListLanDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "OPT_GRP_NM";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbCdNm");
										inputBox_2.maxLength = 100;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("OPT_GRP_NM");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GRP_USE_PLC_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbGrpUsePlcRcd");
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsListGrpUse"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("GRP_USE_PLC_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbPrtOgd");
										inputBox_3.maxLength = 10;
										inputBox_3.bind("value").toDataColumn("PRT_ORD");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PRCD_CD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbPrcdCd");
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsListCrsCalcPrcd"), {
												"label": "PRCD_NM",
												"value": "PRCD_CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("PRCD_CD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbUseYn");
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("USE_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CD_DESC";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbCdDesc");
										inputBox_4.maxLength = 100;
										inputBox_4.bind("value").toDataColumn("CD_DESC");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "STD_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdCkbStdYn");
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("STD_YN");
										return checkBox_2;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnOptGrpSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnOptGrpSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_5 = new cpr.controls.Button("btnSearch");
				button_5.value = "";
				button_5.style.setClasses(["btn-search"]);
				button_5.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_5.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optGrpUsePlcRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-GRPUSEPLC");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbGrpUsePlcRcd");
				comboBox_4.bind("fieldLabel").toExpression("#optOptGrpCd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqCmd"), "strGrpUsePlcRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", "%"));
					comboBox_4.setItemSet(app.lookup("dsListGrpUse"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "110px",
					"width": "120px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "선택그룹정의";
	cpr.core.Platform.INSTANCE.register(app);
})();
