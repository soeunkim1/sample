/*
 * App URI: app/cmn/stdCmnCOracleUserSource
 * Source Location: app/cmn/stdCmnCOracleUserSource.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCOracleUserSource", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = new ComUtil(app);
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
					util.Submit.send(app, "subOnLoad",function(pbSuccess){
						if(pbSuccess){
						  util.Control.redraw(app, ["cbbMenuDivList","cbbSystemdiv"]);
						  util.SelectCtl.selectItem(app, "cbbMenuDivList", 0);
						  util.SelectCtl.selectItem(app, "cbbSystemdiv", 0);
						}
					});
				
			}//onBodyLoad()
			
			function doSearch(){
				var vaUnitSystemRcd = "";
				var vnCnt = util.SelectCtl.getItemCount("cbbSystemdiv");
				var voInstRow = null;
				var voResMap = null;
				var voListParam = null;
				
				for (var i = 0; i < vnCnt; i++) {
					voInstRow = i+1;
					var vsUnitSystemRcd = util.SelectCtl.getValue(app, "cbbSystemdiv",voInstRow);
					if (i == (vnCnt - 2)) {
						vaUnitSystemRcd += vsUnitSystemRcd;
						break;
					}
					vaUnitSystemRcd += vsUnitSystemRcd + ",";
				}
				util.DataMap.setValue(app, "dmReqList", "arrUnitSystemRcd", vaUnitSystemRcd)
				doList();
			}
			
			function doList(){
				util.Submit.send(app, "subList",function(pbSuccess){
					if(pbSuccess) {
						util.Msg.notify(app, "NLS-INF-M024");
						util.Control.redraw(app, "grdResourceList");
					}
				});
			}
			
			function doListInfo(){
				util.Submit.send(app, "subListInfo",function(pbSuccess){
					if(pbSuccess) {
						util.Control.redraw(app, "txtResourceInfo");
					}
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				//필수항목을 검사합니다.
				if(!util.validate(app, ["cbbMenuDivList","cbbResourceCd"])){
					return false;
				}
				doSearch();
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCbbMenuDivListSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cbbMenuDivList = e.control;
				//메뉴구분에 따른 시스템구분 필터
				var vsMenuDivList = util.Control.getValue(app, "cbbMenuDivList");
				app.lookup("dsMenuSystemList").setFilter("UMENU_ID== '"+ vsMenuDivList +"'");
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdResourceListSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdResourceList = e.control;
				
				var vsResouceCd = util.DataMap.getValue(app, "dmReqList", "strResouceCd");
				var vnIndex = util.Grid.getIndex(app, "grdResourceList");
				if(vsResouceCd == "VW"){
					var vsText = util.DataSet.getValue(app, "dsResourceList", vnIndex, "TEXT");
					util.DataMap.setValue(app, "dmResList", "TEXT", vsText);
					util.Control.redraw(app, "txtResourceInfo");
				}else{
					var vsResourceNm = util.DataSet.getValue(app, "dsResourceList", vnIndex, "OBJECT_NAME");		
					var vsLastDdlTime = util.DataSet.getValue(app, "dsResourceList", vnIndex, "LAST_DDL_TIME");
					//util.DataMap.setValue를 사용하면 리소스명 인풋박스 value가 표시 됨
			//		util.DataMap.setValue("dmReqList", "strGrxResourceNm", vsResourceNm);
					util.Submit.addParameter("subListInfo", "strGrxResourceNm", vsResourceNm);
					util.DataMap.setValue(app, "dmReqList", "strLastDdlTime", vsLastDdlTime);
			
					doListInfo();
				}
			}//onGrdResourceListSelectionChange()
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == 13){
					app.lookup("btnSearch").click();
				}
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsResourceList");
			dataSet_1.parseData({
				"columns": [
					{"name": "OBJECT_NAME"},
					{"name": "CREATED"},
					{"name": "LAST_DDL_TIME"},
					{"name": "WRITER"},
					{"name": "DESCRIPT"},
					{"name": "TEXT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMenuDiv");
			dataSet_2.parseData({
				"columns": [
					{"name": "UMENU_ID"},
					{"name": "MENU_NM"},
					{"name": "MENU_ID"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsMenuSystemList");
			dataSet_3.parseData({
				"columns": [
					{"name": "UMENU_ID"},
					{"name": "MENU_NM"},
					{"name": "MENU_ID"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "UMENU_ID"},
					{"name": "MENU_NM"},
					{"name": "MENU_ID"},
					{"name": "UNIT_SYSTEM_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strLastDdlTime",
						"dataType": "string"
					},
					{
						"name": "strResourceNm",
						"dataType": "string"
					},
					{
						"name": "strMenuId",
						"dataType": "string"
					},
					{
						"name": "arrUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strGrxResourceNm",
						"dataType": "string"
					},
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strResouceCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "TEXT",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnOracleUserSource/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnOracleUserSource/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optResourceNm");
				output_1.value = "리소스명";
				container.addChild(output_1, {
					"top": "5px",
					"left": "740px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbResourceNm");
				inputBox_1.bind("fieldLabel").toExpression("#optTableNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strGrxResourceNm");
				if(typeof onIpbResourceNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbResourceNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "845px",
					"width": "200px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optMenuGbn");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-MENUDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbMenuDivList");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optMenuGbn.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strMenuId");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("선택", ""));
					comboBox_1.setItemSet(app.lookup("dsMenuDiv"), {
						"label": "MENU_NM",
						"value": "MENU_ID"
					});
				})(comboBox_1);
				if(typeof onCbbMenuDivListSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbMenuDivListSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSystemdiv");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
				container.addChild(output_3, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSystemdiv");
				comboBox_2.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", "%"));
					comboBox_2.setItemSet(app.lookup("dsMenuSystemList"), {
						"label": "MENU_NM",
						"value": "UNIT_SYSTEM_RCD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optResourceCd");
				output_4.value = "리소스구분";
				output_4.style.setClasses(["require"]);
				container.addChild(output_4, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbResourceCd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optResourceCd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strResouceCd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("선택", ""));
					comboBox_3.addItem(new cpr.controls.Item("PROCEDURE", "P"));
					comboBox_3.addItem(new cpr.controls.Item("FUNCTION", "F"));
					comboBox_3.addItem(new cpr.controls.Item("FUNCTION VIEW", "FV"));
					comboBox_3.addItem(new cpr.controls.Item("TYPE", "TP"));
					comboBox_3.addItem(new cpr.controls.Item("TYPE COLLECTION", "TC"));
					comboBox_3.addItem(new cpr.controls.Item("VIEW", "VW"));
					comboBox_3.addItem(new cpr.controls.Item("TRIGGER", "TR"));
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "600px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "5px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpResourceList");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdTableMain");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-TABLELIST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdResourceList");
				grid_1.init({
					"dataSet": app.lookup("dsResourceList"),
					"columns": [
						{"width": "40px"},
						{"width": "180px"},
						{"width": "203px"},
						{"width": "203px"},
						{"width": "203px"},
						{"width": "371px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "리소스명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CREATEDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "최종변경일시";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-WRITER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-EXPLAIN");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "OBJECT_NAME";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "CREATED";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LAST_DDL_TIME";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "WRITER";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DESCRIPT";
								}
							}
						]
					}
				});
				if(typeof onGrdResourceListSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdResourceListSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "200px"
				});
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-TABLELIST");
				container.addChild(userDefinedControl_2, {
					"top": "235px",
					"left": "5px",
					"width": "150px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("txtResourceInfo");
				textArea_1.bind("fieldLabel").toExpression("#optTitleTxtResource.value");
				textArea_1.bind("value").toDataMap(app.lookup("dmResList"), "TEXT");
				container.addChild(textArea_1, {
					"top": "260px",
					"left": "5px",
					"width": "1215px",
					"height": "285px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "42px",
				"left": "5px",
				"width": "1225px",
				"height": "550px"
			});
			
			var userDefinedControl_3 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_3, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
