/*
 * App URI: app/cmn/stdCmnCPgmUseAuth
 * Source Location: app/cmn/stdCmnCPgmUseAuth.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCPgmUseAuth", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsPgmDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsPgmTypeRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnPgm");
			dataSet_5.parseData({
				"info": "CMN_PGM@PGM_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "PGM_NM"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "PGM_DIV_RCD"},
					{"name": "CALL_PRCS"},
					{"name": "CALL_PAGE"},
					{"name": "RTRN_PAGE"},
					{"name": "PGM_TYPE_RCD"},
					{"name": "USE_YN"},
					{"name": "APLY_YN"},
					{"name": "PGM_CHARGER_ID"},
					{"name": "DEV_FINISH_YN"},
					{"name": "TEST_FINISH_YN"},
					{"name": "DEV_END_DT"},
					{"name": "DEV_PLAN_ST_DT"},
					{"name": "DEV_PLAN_END_DT"},
					{"name": "DEV_ST_DT"},
					{"name": "MAN_FINISH_YN"},
					{"name": "DEV_CHARGER_NM"},
					{"name": "DRAW_CHARGER_NM"},
					{"name": "AUTH_ETRST_YN"},
					{"name": "LOG_YN"},
					{"name": "FILE_SERIAL_NO"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmnPgmAuth");
			dataSet_6.parseData({
				"info": "CMN_PGM_AUTH@PGM_ID,LAN_DIV_RCD,CTRL_ID",
				"columns": [
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CTRL_ID"},
					{"name": "NON_SHOW_YN"},
					{"name": "READ_YN"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPgmNm",
						"dataType": "string"
					},
					{
						"name": "strPgmId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqListCmnPgmAuth");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strPgmId",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnPgmAuth/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnPgmAuth/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnPgmAuth/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_6);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListCmnPgmAuth");
			submission_4.action = "/cmn/StdCmnPgmAuth/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_6, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUnitSystemRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUnitSystemRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUnitSystemRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optLanDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-LANKEY");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbLanDivRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optLanDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strLanDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsLanDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optPgmId");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-PGM_ID");
				container.addChild(output_3, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbPgmId");
				inputBox_1.maxLength = 100;
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optPgmId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmId");
				if(typeof onIpbPgmIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbPgmIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "600px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optPgmNm");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-DB-PGM_NM");
				container.addChild(output_4, {
					"top": "5px",
					"left": "740px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbPgmNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optPgmNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmNm");
				if(typeof onIpbPgmNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbPgmNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "845px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-PGLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "신규";
				button_2.style.setClasses(["btn-new"]);
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "삭제";
				button_3.style.setClasses(["btn-delete"]);
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "취소";
				button_4.style.setClasses(["btn-restore"]);
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "저장";
				button_5.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnPgm");
				grid_1.init({
					"dataSet": app.lookup("dsCmnPgm"),
					"columns": [
						{"width": "40px"},
						{"width": "92px"},
						{"width": "133px"},
						{"width": "158px"},
						{"width": "99px"},
						{"width": "164px"},
						{"width": "69px"},
						{
							"width": "110px",
							"visible": false
						},
						{
							"width": "142px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "135px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PGM_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PGM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PGTYP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "호출페이지";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "사용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "언어키";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "프로그램구분코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "호출프로세스";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "리턴페이지";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "적용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "프로그램담당자ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "개발완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "테스트완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "개발종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "개발계획시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "개발계획종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "개발시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "메뉴얼완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "개발담당자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "설계담당자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.text = "권한사용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.text = "로그생성여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.text = "매뉴얼파일순번";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "UNIT_SYSTEM_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbUnitSystemRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsUnitSystemRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("UNIT_SYSTEM_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbPgmId");
										inputBox_3.enabled = false;
										inputBox_3.maxLength = 50;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("PGM_ID");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "PGM_NM";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbPgmNm");
										inputBox_4.enabled = false;
										inputBox_4.maxLength = 200;
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("PGM_NM");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PGM_TYPE_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbPgmTypeRcd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsPgmTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("PGM_TYPE_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CALL_PAGE";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbCallPage");
										inputBox_5.enabled = false;
										inputBox_5.maxLength = 100;
										inputBox_5.bind("value").toDataColumn("CALL_PAGE");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbUseYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("USE_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbLanDivRcd");
										comboBox_5.enabled = false;
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsLanDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PGM_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbPgmDivRcd");
										comboBox_6.enabled = false;
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsPgmDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("PGM_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CALL_PRCS";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbCallPrcs");
										inputBox_6.enabled = false;
										inputBox_6.maxLength = 100;
										inputBox_6.bind("value").toDataColumn("CALL_PRCS");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "RTRN_PAGE";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbRtrnPage");
										inputBox_7.enabled = false;
										inputBox_7.maxLength = 100;
										inputBox_7.bind("value").toDataColumn("RTRN_PAGE");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "APLY_YN";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbAplyYn");
										inputBox_8.enabled = false;
										inputBox_8.maxLength = 1;
										inputBox_8.bind("value").toDataColumn("APLY_YN");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "PGM_CHARGER_ID";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbPgmChargerId");
										inputBox_9.enabled = false;
										inputBox_9.maxLength = 50;
										inputBox_9.bind("value").toDataColumn("PGM_CHARGER_ID");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "DEV_FINISH_YN";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbDevFinishYn");
										inputBox_10.enabled = false;
										inputBox_10.maxLength = 1;
										inputBox_10.bind("value").toDataColumn("DEV_FINISH_YN");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "TEST_FINISH_YN";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbTestFinishYn");
										inputBox_11.enabled = false;
										inputBox_11.maxLength = 1;
										inputBox_11.bind("value").toDataColumn("TEST_FINISH_YN");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "DEV_END_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipDevEndDt");
										dateInput_1.enabled = false;
										dateInput_1.bind("value").toDataColumn("DEV_END_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipDevPlanStDt");
										dateInput_2.enabled = false;
										dateInput_2.bind("value").toDataColumn("DEV_PLAN_ST_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("gdDipDevPlanEndDt");
										dateInput_3.enabled = false;
										dateInput_3.bind("value").toDataColumn("DEV_PLAN_END_DT");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "DEV_ST_DT";
									cell.control = (function(){
										var dateInput_4 = new cpr.controls.DateInput("gdDipDevStDt");
										dateInput_4.enabled = false;
										dateInput_4.bind("value").toDataColumn("DEV_ST_DT");
										return dateInput_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "MAN_FINISH_YN";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbManFinishYn");
										inputBox_12.enabled = false;
										inputBox_12.maxLength = 1;
										inputBox_12.bind("value").toDataColumn("MAN_FINISH_YN");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "DEV_CHARGER_NM";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbDevChargerNm");
										inputBox_13.enabled = false;
										inputBox_13.maxLength = 50;
										inputBox_13.bind("value").toDataColumn("DEV_CHARGER_NM");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "DRAW_CHARGER_NM";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("gdIpbDrawChargerNm");
										inputBox_14.enabled = false;
										inputBox_14.maxLength = 50;
										inputBox_14.bind("value").toDataColumn("DRAW_CHARGER_NM");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "AUTH_ETRST_YN";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("gdIpbAuthEtrstYn");
										inputBox_15.enabled = false;
										inputBox_15.maxLength = 1;
										inputBox_15.bind("value").toDataColumn("AUTH_ETRST_YN");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "LOG_YN";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("gdIpbLogYn");
										inputBox_16.enabled = false;
										inputBox_16.maxLength = 1;
										inputBox_16.bind("value").toDataColumn("LOG_YN");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
									cell.control = (function(){
										var inputBox_17 = new cpr.controls.InputBox("gdIpbFileSerialNo");
										inputBox_17.enabled = false;
										inputBox_17.maxLength = 15;
										inputBox_17.bind("value").toDataColumn("FILE_SERIAL_NO");
										return inputBox_17;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnPgmSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnPgmSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "770px",
					"height": "565px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-PGTYPUSEAUTHLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "780px",
					"width": "295px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnPgmAuth");
				grid_2.init({
					"dataSet": app.lookup("dsCmnPgmAuth"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "166px"},
						{"width": "106px"},
						{"width": "73px"},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-CTRL_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-NON_SHOW_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-READ_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PGM_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CTRL_ID";
									cell.control = (function(){
										var inputBox_18 = new cpr.controls.InputBox("gdIpbCtrlIdDetail");
										inputBox_18.maxLength = 100;
										inputBox_18.userAttr({"require": "Y"});
										inputBox_18.bind("value").toDataColumn("CTRL_ID");
										return inputBox_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "NON_SHOW_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdCkbNonShowYnDetail");
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "Y";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("NON_SHOW_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "READ_YN";
									cell.control = (function(){
										var checkBox_3 = new cpr.controls.CheckBox("gdCkbReadYnDetail");
										checkBox_3.value = "";
										checkBox_3.trueValue = "Y";
										checkBox_3.falseValue = "";
										checkBox_3.text = "Y";
										checkBox_3.style.css({
											"text-align" : "center"
										});
										checkBox_3.bind("value").toDataColumn("READ_YN");
										return checkBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
									cell.control = (function(){
										var inputBox_19 = new cpr.controls.InputBox("gdIpbPgmIdDetail");
										inputBox_19.enabled = false;
										inputBox_19.maxLength = 50;
										inputBox_19.userAttr({"require": "Y"});
										inputBox_19.bind("value").toDataColumn("PGM_ID");
										return inputBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbLanDivRcdDetail");
										comboBox_7.enabled = false;
										comboBox_7.userAttr({"require": "Y"});
										(function(comboBox_7){
											comboBox_7.addItem(new cpr.controls.Item("선택", ""));
											comboBox_7.setItemSet(app.lookup("dsLanDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_7;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "780px",
					"width": "440px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
		}
	});
	app.title = "stdCmnCPgmUseAuth";
	cpr.core.Platform.INSTANCE.register(app);
})();
