/*
 * App URI: app/cmn/stdCmnCPrivRole
 * Source Location: app/cmn/stdCmnCPrivRole.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCPrivRole", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			/**
			 * @desc 사용자목록 조회 실행
			 * @param poCallBackFunc 콜백 함수
			 */
			function doList(poCallBackFunc) {
				util.Submit.send(app, "subList", function(pbSuccess) {
					if (pbSuccess) {
						util.Control.redraw(app, "grdCmnUseUser");
			
						//조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc 부서값이 입력되었는지를 판단한ㄷ,
			 * 			부서값이 없을 경우 사용자 ID, 사용자명 둘 중 하나라도 입력값이 없으면 false를 리턴한다.
			 */
			function checkInputDept() {
				var vbResult = false;
			
				if (ValueUtil.isNull(util.Control.getValue(app, "ipbDeptNm"))) {
					//사용자 ID, 사용자명 중 하나는 필수
					var vsUserId = util.Control.getValue(app, "ipbUserId");
					var vsUserNm = util.Control.getValue(app, "ipbUserNm");
			
					var vsLblbUserId = util.Control.getValue(app, "lblUserId");
					var vsLblbUserNm = util.Control.getValue(app, "lblUserNm");
			
					if (ValueUtil.isNull(vsUserId) && ValueUtil.isNull(vsUserNm)) {
						util.Msg.alert("NLS-CMM-M016", [vsLblbUserId + "," + vsLblbUserNm]);
					} else {
						vbResult = true;
					}
				} else {
					vbResult = true;
				}
			
				return vbResult;
			}
			
			/**
			 * @desc 사용,미사용업무역할목록 조회 실행
			 * @param poCallBackFunc 콜백함수
			 */
			function getRoleList(poCallBackFunc) {
				var vnIdx = util.Grid.getIndex(app, "grdCmnUseUser");
				if (vnIdx == -1) {
					return;
				}
			
				var vsUserId = util.Grid.getCellValue(app, "grdCmnUseUser", "USER_ID", vnIdx);
				util.DataMap.setValue(app, "dmReqListUsrOperGrp", "strUserId", vsUserId);
			
				util.Submit.send(app, "subListUsrOperGrp", function(pbSuccess) {
					if (pbSuccess) {
						util.Control.redraw(app, ["grdCmnUsrOperGrpUse", "grdCmnUsrOperGrpNoUse"]);
			
						copyUseRoleId();
			
						//조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			var maOriUseRoleId = [];
			
			/**
			 * @desc 첫 조회 시 기존 데이터 저장
			 */
			function copyUseRoleId() {
				maOriUseRoleId = new Array();
			
				var vnCnt = util.Grid.getRowCount(app, "grdCmnUsrOperGrpUse");
				if (vnCnt == 0) {
					return;
				}
			
				var vsRoleId = "";
				for (var i = 0; i < vnCnt; i++) {
					vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", i);
					maOriUseRoleId.push(vsRoleId);
				}
			}
			
			/**
			 * @desc 기존에 사용업무역할로 등록된 역할인지 체크한다.
			 * @param psOprtRoleId 업무역할 아이디
			 */
			function isOriginRole(psOprtRoleId) {
				var vbResult = false;
			
				var vnOriCnt = maOriUseRoleId.length;
				if (vnOriCnt > 0) {
					for (var i = 0; i < vnOriCnt; i++) {
						var vsOriOprtRoleId = maOriUseRoleId[i];
						if (vsOriOprtRoleId == psOprtRoleId) {
							vbResult = true;
							break;
						}
					}
				}
			
				return vbResult;
			}
			
			/**
			 * @desc 미사용업무역할을 사용업무역할로 등록
			 */
			function moveRoleUp() {
				var vsNoUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpNoUse");
			
				var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpNoUse");
				var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
			
				if (String(vsNoUseIdxs).isEmpty()) {
					util.Msg.alert("NLS-INF-M045");
					return;
				}
			
				var vaIdxsNoUse = null;
				if (String(vsNoUseIdxs).indexOf(",") != -1) {
					vaIdxsNoUse = String(vsNoUseIdxs).split(",");
				} else {
					vaIdxsNoUse = new Array();
					vaIdxsNoUse[0] = vsNoUseIdxs;
				}
			
				for (var i = 0; i < vaIdxsNoUse.length; i++) {
					var vnIdx = vaIdxsNoUse[i];
					var vnNewRowIdx = vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
			
					var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpNoUse", vnIdx);
			
					var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "OPRT_ROLE_ID", vnIdx);
					var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "OPRT_ROLE_NM", vnIdx);
					var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_TGT_RCD", vnIdx);
					var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_ID", vnIdx);
					var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "DIV_NM", vnIdx);
			
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
			
					util.Grid.deleteRow(app, "grdCmnUsrOperGrpNoUse");
			
					var vbIsOrigin = isOriginRole(vsRoleId);
			
					if (vbIsOrigin) {
						//처리가 취소되었습니다.
						util.Msg.alert("NLS-INF-M013");
						//TODO 변경
						//			model.getControl("rptCmnUsrOperGrpUse").setRowStatus(vnNewRowIdx, "open");
					} else {
						//@1을(를) 성공적으로 생성하였습니다.
						util.Msg.alert("NLS-INF-M012");
					}
				}
				util.Control.redraw(app, ["grdCmnUsrOperGrpUse", "grdCmnUsrOperNoUse"]);
			}
			
			/**
			 * @desc 사용업무역할을 미사용업무역할로 등록해제
			 */
			function moveRoleDown() {
				var vsUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUSrOperGrpUse");
			
				var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpNoUse");
				var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
			
				if (String(vsUseIdxs).isEmpty()) {
					util.Msg.alert("NLS-INF-M045");
					return;
				}
			
				var vaIdxsUse = null;
				if (String(vsUseIdxs).indexOf(",") != -1) {
					vaIdxsUse = String(vsUseIdxs).split(",");
				} else {
					vaIdxsUse = new Array();
					vaIdxsUse[0] = vsUseIdxs;
				}
			
				for (var i = 0; i < vaIdxsUse.length; i++) {
					var vnIdx = vaIdxsUse[i];
					var vnNewRowIdx = null;
			
					var vsUptStatus = util.Grid.getRowState(app, "grdCmnUserOperGrpUse", vnIdx);
			
					vnNewRowIdx = util.Grid.insertRow(app, "grdCMnUsrOperGrpNoUse");
			
					var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vnIdx);
					var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vnIdx);
					var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vnIdx);
					var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vnIdx);
					var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vnIdx);
			
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
			
					util.Grid.deleteRow(app, "grdCmnUsrOperGrpUse", vnIdx);
			
					var vbIsOrigin = isOriginRole(vsRoleId);
			
					if (!vbIsOrigin) {
						//TODO 변경
						//			model.getControl("rptCmnUsrOperGrpNoUse").setRowStatus(vnNewRowIdx, "open");
						//처리가 취소되었습니다.
						util.Msg.alert("NLS-INF-M013");
					} else {
						//삭제되었습니다.
						util.Msg.alert("NLS-INF-M008");
					}
				}
				util.Control.redraw(app, ["grdCmnUsrOpenGrpUse", "grdCmnUsrOperGrpNoUse"]);
			}
			
			/**
			 * @desc 미사용업무역할을 사용업무역할로 등록 후 바로 저장
			 */
			function moveRoleUpWithSave() {
				var vsNoUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpNoUse");
			
				var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpNoUse");
				var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
			
				if (String(vsNoUseIdxs).isEmpty()) {
					util.Msg.alert("NLS-INF-M045", [vsNoUstGrdNm]);
					return;
				}
			
				var vaIdxsNoUse = null;
				if (String(vsNoUseIdxs).indexOf(",") != -1) {
					vaIdxsNoUse = String(vsNoUseIdxs).split(",");
				} else {
					vaIdxsNoUse = new Array();
					vaIdxsNoUse[0] = vsNoUseIdxs;
				}
			
				for (var i = 0; i < vaIdxsNoUse.length; i++) {
					var vnIdx = vaIdxsNoUse[i];
					var vnNewRowIdx = vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
			
					var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpNoUse", vnIdx);
			
					var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "OPRT_ROLE_ID", vnIdx);
					var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "OPRT_ROLE_NM", vnIdx);
					var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_TGT_RCD", vnIdx);
					var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_ID", vnIdx);
					var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "DIV_NM", vnIdx);
			
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
				}
			
				//저장
				doSave();
			}
			
			/**
			 * @desc 사용업무역할을 미사용업무역할로 등록해제 후 바로 저장
			 */
			function moveRoleDownWithSave() {
				var vsUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUse");
			
				var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpNoUse");
				var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
			
				if (String(vsUseIdxs).isEmpty()) {
					util.Msg.alert("NLS-INF-M045", [vsUseGrdNm]);
					return;
				}
			
				var vaIdxsUse = null;
				if (String(vsUseIdxs).indexOf(",") != -1) {
					vaIdxsUse = String(vsUseIdxs).split(",");
				} else {
					vaIdxsUse = new Array();
					vaIdxsUse[0] = vsUseIdxs;
				}
			
				for (var i = 0; i < vaIdxsUse.length; i++) {
					var vnIdx = vaIdxsUse[i];
					var vnNewRowIdx = null;
			
					var vsUptStatus = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUse", vnIdx);
			
					util.Grid.deleteRow(app, "grdCmnUsrOperGrpUse", vnIdx);
				}
			
				//저장
				doSave();
			}
			
			/**
			 * @desc 저장 실행
			 */
			function doSave() {
				//그리드 변경사항 체크
				if (!util.Grid.isModified(app, "grdCmnUsrOperGrpUse", "MSG")) {
					return false;
				}
				//그리드 validation check
				if (!util.validate(app, "grdCmnUsrOperGrpUse")) return false;
				util.Submit.send(app, "subSave", function(pbSuccess) {
					if (pbSuccess) {
						getRoleList(function(pbListSuccess) {
							//갱신된 데이터가 조회되었습니다.
							if (pbListSuccess) util.Msg.alert("NLS-INF-M025");
						});
					}
				});
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad( /* cpr.events.CEvent */ e) {
				//서브미션 실행
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
						util.Control.redraw(app, "cbbUserDivRcd");
					}
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				//입력값 체크
				if (!checkInputDept()) return false;
			
				doList(function(pbSuccess) {
					//조회되었습니다
					if (pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown( /* cpr.events.CKeyboardEvent */ e) {
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if (e.keyCode == cpr.events.KeyCode.ENTER) {
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnUseUserSelectionChange( /* cpr.events.CSelectionEvent */ e) {
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnUseUser = e.control;
				getRoleList(function(pbSuccess) {
					//조회되었습니다
					if (pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * "△" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnUpClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnUp = e.control;
				moveRoleUpWithSave();
			}
			
			/*
			 * "▽" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDownClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDown = e.control;
				moveRoleDownWithSave();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSaveClick( /* cpr.events.CMouseEvent */ e) {
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSave = e.control;
				doSave();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsUserTgtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnUseUser");
			dataSet_3.parseData({
				"info": "CMN_USE_USER@USER_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "EMAIL"},
					{"name": "SSN"},
					{"name": "USER_DIV_RCD"},
					{"name": "PARTY_ID"},
					{"name": "ID"},
					{"name": "PWD"},
					{"name": "TMP_PWD"},
					{"name": "USER_NM"},
					{"name": "ASGN_DEPT_DIV_RCD"},
					{"name": "ASGN_DEPT_CD"},
					{"name": "USE_YN"},
					{"name": "SYSTEM_MGR_YN"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "REMARK"},
					{"name": "PWD_ERROR_CNT"},
					{"name": "PWD_CHG_DTHR"},
					{"name": "ASGN_DEPT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnUsrOperGrpUse");
			dataSet_4.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_TGT_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "DIV_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnUsrOperGrpNoUse");
			dataSet_5.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_TGT_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "DIV_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqListUsrOperGrp");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strUserId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnPrivRole/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnPrivRole/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnPrivRole/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListUsrOperGrp");
			submission_4.action = "/cmn/StdCmnPrivRole/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_4, false);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUserDivRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-USERDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUserDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUserDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUserDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optUserId");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-DB-USER_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbUserId");
				inputBox_1.maxLength = 50;
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optUserId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserId");
				if(typeof onIpbUserIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbUserIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optUserNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-USER_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbUserNm");
				inputBox_2.maxLength = 50;
				inputBox_2.bind("fieldLabel").toExpression("#optUserNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
				if(typeof onIpbUserNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbUserNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "600px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optDeptNm");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-DEPT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "740px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_3.maxLength = 100;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "845px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "975px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-USEWRKROLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "655px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.visible = false;
				button_3.enabled = false;
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUsrOperGrpUse");
				grid_1.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpUse"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "162px"},
						{"width": "211px"},
						{"width": "94px"},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "157px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-USETGT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_TGT_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIV_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "USER_TGT_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "655px",
					"width": "565px",
					"height": "220px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-USERLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnUseUser");
				grid_2.init({
					"dataSet": app.lookup("dsCmnUseUser"),
					"columns": [
						{"width": "40px"},
						{"width": "121px"},
						{"width": "136px"},
						{"width": "218px"},
						{"width": "101px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ID");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ID";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnUseUserSelectionChange == "function") {
					grid_2.addEventListener("selection-change", onGrdCmnUseUserSelectionChange);
				}
				container.addChild(grid_2, {
					"top": "30px",
					"left": "5px",
					"width": "630px",
					"height": "563px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnUsrOperGrpNoUse");
				grid_3.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpNoUse"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "162px"},
						{"width": "211px"},
						{"width": "95px"},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "116px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-USETGT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USE_TGT_DIV_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.style.css({
											"text-align" : "center"
										});
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIV_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "USER_TGT_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "310px",
					"left": "655px",
					"width": "565px",
					"height": "283px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-NOUSERWRKRLST");
				container.addChild(userDefinedControl_4, {
					"top": "285px",
					"left": "655px",
					"width": "265px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnDown");
				button_4.value = "";
				if(typeof onBtnDownClick == "function") {
					button_4.addEventListener("click", onBtnDownClick);
				}
				container.addChild(button_4, {
					"top": "255px",
					"left": "1025px",
					"width": "25px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnUp");
				button_5.value = "";
				if(typeof onBtnUpClick == "function") {
					button_5.addEventListener("click", onBtnUpClick);
				}
				container.addChild(button_5, {
					"top": "255px",
					"left": "845px",
					"width": "25px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
		}
	});
	app.title = "stdCmnCPrivRole";
	cpr.core.Platform.INSTANCE.register(app);
})();
