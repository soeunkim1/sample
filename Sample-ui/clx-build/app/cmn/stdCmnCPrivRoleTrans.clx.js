/*
 * App URI: app/cmn/stdCmnCPrivRoleTrans
 * Source Location: app/cmn/stdCmnCPrivRoleTrans.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCPrivRoleTrans", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			/**
			 * @desc 사용자 목록 조회 실행
			 * @param poCallBackFunc 콜백함수
			 */
			function doList(poCallBackFunc){
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUseUser");
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc 이관대상 사용자목록 조회 실행
			 * @param poCallBackFunc
			 */
			function doListTrans(poCallBackFunc){
				util.Submit.send(app, "subListTrans", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUseUserTrans");
						
						if(util.Grid.getRowCount(app, "grdCmnUseUserTrans") < 1){
							util.Control.reset(app, app, "grdCmnUsrOperGrpUseTrans");
						}
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc 부서 값이 입력되었는지를 판단한다.
			 * 			부서 값이 없을 경우 사용자 ID, 사용자명 둘 중 하나라도 입력 값이 없으면 false를 리턴한다.
			 */
			function checkInputDept(){
				var vbResult = false;
				
				if(ValueUtil.isNull(util.Control.getValue(app, "ipbDeptNm"))){
					//사용자 ID, 사용자명 중 하나는 필수
					var vsUserId = util.Control.getValue(app, "ipbUserId");
					var vsUserNm = util.Control.getValue(app, "ipbUserNm");
					
					var vsLblbUserId = util.Control.getValue(app, "lblUserId");
					var vsLblbUserNm = util.Control.getValue(app, "lblUserNm");
					
					if(ValueUtil.isNull(vsUserId) && ValueUtil.isNull(vsUserNm)){
						util.Msg.alert("NLS-CMM-M016", [vsLblbUserId + ", " + vsLblbUserNm]);
					}else{
						vbResult = true;
					}
				}else{
					vbResult = true;
				}
				return vbResult;
			}
			
			/**
			 * @desc 이관대상목록 조회조건 필수값 체크
			 */
			function checkInputTrans(){
				var vbResult = false;
				
				if(ValueUtil.isNull(util.Control.getValue(app, "ipbUserNmTrans"))){
					//사용자 ID, 사용자명 하나는 필수 
					var vsUserId = util.Control.getValue(app, "ipbUserIdTrans");
					var vsUserNm = util.Control.getValue(app, "ipbUserNmTrans");
					
					var vsLblbUsreId = util.Control.getValue(app, "lblUserIdTrans");
					var vsLblbUsreNm = util.Control.getValue(app, "lblUserNmTrans");
					
					if(ValueUtil.isNull(vsUserId) && ValueUtil.isNull(vsUserNm)){
			//			util.Msg.alert(util.Control.getValue("grdCmnUseUserTrans_title") + " " + "NLS-CMM-M016", [vsLblbUsreId + ", " + vsLblbUsreNm]);
						util.Msg.alert("NLS-CMM-M016", [vsLblbUsreId + ", " + vsLblbUsreNm]);
					}else{
						vbResult = true;
					}
				}else{
					vbResult = true;
				}
				return vbResult;
			}
			
			/**
			 * @desc 사용업무역할목록 조회 실행
			 * @param poCallBackFunc
			 */
			function getRoleList(poCallBackFunc){
				var vnIdx = util.Grid.getIndex(app, "grdCmnUseUser");
				if(vnIdx == null) return;
				
				var vsUsreId = util.Grid.getCellValue(app, "grdCmnUseUser", "USER_ID", vnIdx);
				util.DataMap.setValue(app, "dmReqListUsrOperGrp", "strUserId", vsUsreId);
				
				util.Submit.send(app, "subListUsrOperGrp", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUsrOperGrpUse");
						
						copyUseRoleId();
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc 이관대상사용업무역할목록 조회 실행
			 * @param poCallBackFunc
			 */
			function getRoleTransList(poCallBackFunc){
				var vnIdx = util.Grid.getIndex(app, "grdCmnUseUserTrans");
				if(vnIdx == null) return;
				
				var vsUserId = util.Grid.getCellValue(app, "grdCmnUseUserTrans", "USER_ID", vnIdx);
				util.DataMap.setValue(app, "dmReqListUsrOperGrpTrans", "strUserId", vsUserId);
				
				util.Submit.send(app, "subListUsrOperGrpTrans", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUsrOperGrpUseTrans");
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			var maOriUseRoleId = [];
			
			/**
			 * @desc 첫 조회 시 기존 데이터 저장
			 */
			function copyUseRoleId(){
				maOriUseRoleId = new Array();
				
				var vnCnt = util.Grid.getRowCount(app, "grdCmnUsrOperGrpUse");
				if(vnCnt == 0) return;
				
				var vsRoleId = "";
				for(var i = 0 ; i <vnCnt ; i++){
					vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", i);
					maOriUseRoleId.push(vsRoleId);
				}
			}
			
			/**
			 * @desc 기존에 사용업무역할로 등록된 역할인지 체크한다.
			 * @param psOprtRoleId 사용업무역할 아이디
			 */
			function isOriginRole(psOprtRoleId){
				var vbResult = false;
				
				var vnOriCnt = maOriUseRoleId.length;
				if(vnOriCnt > 0){
					for(var i = 0 ; i < vnOriCnt ; i++){
						var vsOriOprtRoleId = maOriUseRoleId[i];
						if(vsOriOprtRoleId == psOprtRoleId){
							vbResult = true;
							break;
						}
					}
				}
				return vbResult;
			}
			
			/**
			 * @desc 미사용업무역할을 사용업무역할로 등록
			 */
			function moveRoleUp(){
				var vsNoUserIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUserTrans");
				
				var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUseTrans");
				var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
				
				if(String(vsNoUserIdxs).isEmpty()){
					util.Msg.alert("NLS-INF-M045", [vsNoUstGrdNm]);
					return;
				}
				
				var vaIdxsNoUse = null;
				if(String(vsNoUserIdxs).indexOf(",") != -1){
					vaIdxsNoUse = vsNoUserIdxs.split(",");
				}else{
					vaIdxsNoUse = new Array();
					vaIdxsNoUse[0] = vsNoUserIdxs;
				}
				
				for(var i = 0 ; i < vaIdxsNoUse.length ; i++){
					var vnIdx = vaIdxsNoUse[i];
					var vnNewRowIdx = vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
					
					var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpUseTrans", vnIdx);
					
					var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_ID", vnIdx);
					var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_NM", vnIdx);
					var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_TGT_RCD", vnIdx);
					var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_ID", vnIdx);
					var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "DIV_NM", vnIdx);
					
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
					util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
					
					util.Grid.deleteRow(app, "grdCmnUsrOperGrpUseTrans", vnIdx);
					
					var vbIsOrigin = isOriginRole(vsRoleId);
					
					if(vbIsOrigin){
						//처리가 취소되었습니다
						util.Msg.alert("NLS-INF-M013");
						//TODO 수정
			//			util.Grid.setRowState("grdCmnUsrOperGrpUse", state, vnNewRowIdx);
					}else{
						//@1을(를) 성공적으로 생성하였습니다.
						util.Msg.alert("NLS-INF-M012", [vsUseGrdNm]);
					}
				}
				
				util.Control.redraw(app, "grdCmnUsrOperGrpUse");
				util.Control.redraw(app, "grdCmnUsrOperGrpUseTrans");
			}
			
			/**
			 * @desc 사용업무역할을 미사용업무역할로 등록해제
			 */
			 function moveRoleDown(){
			 	var vsUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUse");
			 	
			 	var vsNoUstGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUseTrans");
			 	var vsUseGrdNm = util.Grid.getTitle(app, "grdCmnUsrOperGrpUse");
			 	
			 	if(String(vsUseIdxs).isEmpty()){
			 		util.Msg.alert("M045", [vsUseGrdNm]);
			 		return;
			 	}
			 	
			 	var vaIdxsUse = null;
			 	if(String(vsUseIdxs).indexOf(",") != -1 ){
			 		vaIdxsUse = vsUseIdxs.split(",");
			 	}else{
			 		vaIdxsUse = new Array();
			 		vaIdxsUse[0] = vsUseIdxs;
			 	}
			 	
			 	for(var i = 0 ; i < vaIdxsUse.length ; i++){
			 		var vnIdx = vaIdxsUse[i];
			 		var vnNewRowIdx = null;
			 		
			 		var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpUse", vnIdx);
			 		
			 		vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
			 		
			 		var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vnIdx);
			 		var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vnIdx);
			 		var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vnIdx);
			 		var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vnIdx);
			 		var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vnIdx);
			 		
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_ID", vsRoleId, vsNoUstGrdNm);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_NM", vsRoleNm, vsNoUstGrdNm);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_TGT_RCD", vsUserTgtRcd, vsNoUstGrdNm);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_ID", vsUserId, vsNoUstGrdNm);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "DIV_NM", vsUserTgtNm, vsNoUstGrdNm);
			 		
			// 	util.Grid.setRowState("grdCmnUsrOperGrpUse", "delete", vnIdx);
					util.Grid.deleteRow(app, "grdCmnUsrOperGrpUse", vnIdx);
					
					var vbIsOrigin = isOriginRole(vsRoleId);
					
					if(!vbIsOrigin){
						//처리가 취소되었습니다.
						//TODO 수정
			//			model.getControl("rptCmnUsrOperGrpUseTrans").setRowStatus(vnNewRowIdx, "open");
						util.Msg.alert("NLS-INF-M013");
					}else{
						//삭제되었습니다.
						util.Msg.alert("NLS-INF-M008");
					}
			 	}
			 	
			 	util.Control.redraw(app, ["grdCmnUsrOperGrpUse", "grdCmnUsrOperGrpUserTrans"]);
			 } 
			 
			 /**
			  * @desc 사용업무역할 목록 -> 이관대상자 사용업무역할 목록 복사
			  */
			 function moveRoleDownWithSave(){
			 	var vaIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUse");
			
			// 	var vsIdx = util.Grid.getChkRowOrSelRowIdx("grdCmnUsrOperGrpUse");
			// 	var vaIdx = vsIdx.split(",");
			 	
			 	
			 	if(util.Grid.getRowCount(app, "grdCmnUseUserTrans") < 1 || util.Grid.getRowCount(app, "grdCmnUseUser") < 1) return;
			 	
			 	var vsExistRoleNm = "";
			 	
			 	for(var i = 0 ; i < vaIdx.length ; i++){
			 		var vnIdx = vaIdx[i];
			 		
			 		var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vnIdx);
			 		var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vnIdx);
			 		var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vnIdx);
			 		var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vnIdx);
			 		
			 		var isExistRoleId = util.DataSet.findRow(app, "dsCmnUsrOperGrpUseTrans", "OPRT_ROLE_ID == '" + vsRoleId + "'");
			 		
			 		if(!ValueUtil.isNull(isExistRoleId)){
			 			vsExistRoleNm += vsRoleNm + ",";
			 			continue;
			 		}
			 		
			 		var vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUseTrans");
			 		
			 		var vsUserId = util.Grid.getCellValue(app, "grdCmnUseUserTrans", "USER_ID");
			 		
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_ID", vsUserId, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUseTrans", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
			 	}
			 	
			 	if(!ValueUtil.isNull(vsExistRoleNm)){
			 		util.Msg.alert("NLS-CMM-M049", [vsExistRoleNm.substring(0, vsExistRoleNm.length - 2)]);
			 	}
			 	
			 	//저장
			 	//doSave();
			 }
			 
			/**
			 * @desc 이관대상 사용업무역할 목록 -> 사용업무역할목록
			 */
			 function moveRoleUpWithSave(){
			 	var vaIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUseTrans");
			 	
			// 	var vsIdx = util.Grid.getChkRowOrSelRowIdx("grdCmnUsrOperGrpUseTrans");
			// 	var vaIdx = vsIdx.split(",");
			 	
			 	if(util.Grid.getRowCount(app, "grdCmnUseUserTrans") < 1 || util.Grid.getRowCount(app, "grdCmnUseUser") < 1) return;
			 	
			 	var vsExisRoldNm = "";
			 	
			 	for(var i = 0 ; i < vaIdx.length ; i++){
			 		var vnIdx = vaIdx[i];
			 		
			 		var vsRoleId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_ID", vnIdx);
			 		var vsRoleNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "OPRT_ROLE_NM", vnIdx);
			 		var vsUserTgtRcd = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "USER_TGT_RCD", vnIdx);
			 		var vsUserTgtNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpUseTrans", "DIV_NM", vnIdx);
			 		
			 		var isExistRoleId = util.DataSet.findRow(app, "dsCmnUsrOperGrpUse", "OPRT_ROLE_ID == '" + vsRoleId + "'");
			 		
			 		if(!ValueUtil.isNull(isExistRoleId)){
			 			vsExisRoldNm += vsRoleNm + ",";
			 			continue;
			 		}
			 		
			 		var vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
			 		
			 		var vsUserId = util.Grid.getCellValue(app, "grdCmnUseUser", "USER_ID");
			 		
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsRoleId, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_NM", vsRoleNm, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", vsUserTgtRcd, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
			 		util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "DIV_NM", vsUserTgtNm, vnNewRowIdx);
			 	}
			 	
			 	if(!ValueUtil.isNull(vsExisRoldNm)){
			 		util.Msg.alert("NLS-CMM-M049", [vsExisRoldNm.substring(0, vsExisRoldNm.length - 2)]);
			 	}
			 }
			 
			 /**
			  * @desc 이관대상업무역할 저장실행
			  */
			 function doSave(){
			 	//그리드 변경사항 체크
			 	if(!util.Grid.isModified(app, "grdCmnUsrOperGrpUseTrans", "MSG")){
			 		return false;
			 	}
			
			 	//그리드 validation check
			 	if(!util.validate(app, "grdCmnUsrOperGrpUseTrans")) return false;
			 	
			 	util.Submit.send(app, "subSave", function(pbSuccess){
			 		if(pbSuccess){
			 			getRoleTransList(function(pbListSuccess){
					 		//갱신된 데이터가 조회되었습니다
					 		if(pbListSuccess) util.Msg.alert("NLS-INF-M025");
			 			});
			 		}
			 	});
			 }
			 
			 /**
			  * @desc 사용업무역할목록 저장
			  */
			function doSaveUse(){
				//그리드 변경사항 체크
				if(!util.Grid.isModified(app, "grdCmnUsrOperGrpUse", "MSG")){
					return false;
				}
				
				//그리드 validation check
				if(!util.validate(app, "grdCmnUsrOperGrpUse")) return false;
				
				util.Submit.send(app, "subSaveUse", function(pbSuccess){
					if(pbSuccess){
						getRoleList(function(pbListSuccess){
							//갱신된 데이터가 조회되었습니다
							if(pbListSuccess) util.Msg.alert("NLS-INF-M025");
						});
					}
				});
			}
			 
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, ["cbbUserDivRcd", "cbbUserDivRcdTrans"]);
					}
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				if(!checkInputDept()) return false;
				
				doList(function(pbSuccess){
					//조회되었습니다.
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnUseUserSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnUseUser = e.control;
				if(util.Grid.getIndex(app, "grdCmnUseUser") == -1){
					return false;
				}
				
				getRoleList(function(pbSuccess){
					//조회되었습니다
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchTransClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearchTrans = e.control;
				//입력값 체크
				if(!checkInputTrans()) return false;
				
				doListTrans(function(pbSuccess){
					//조회되었습니다
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpTransKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpTrans = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearchTrans = app.lookup("btnSearchTrans")
					btnSearchTrans.click();
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnUseUserTransSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnUseUserTrans = e.control;
				if(util.Grid.getIndex(app, "grdCmnUseUserTrans") == -1){
					return false;
				}
				
				getRoleTransList(function(pbSuccess){
					//조회되었습니다
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * "▽" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnUpClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnUp = e.control;
				moveRoleDownWithSave();
			}
			
			/*
			 * "△" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnUp1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnUp1 = e.control;
				moveRoleUpWithSave();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDelUseClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDelUse = e.control;
				util.Grid.deleteRow(app, "grdCmnUsrOperGrpUse");
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRestoreUseClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnRestoreUse = e.control;
				util.Grid.revertRowData(app, "grdCmnUsrOperGrpUse");
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSaveUseClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSaveUse = e.control;
				doSaveUse();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDelClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDel = e.control;
				util.Grid.deleteRow(app, "grdCmnUsrOperGrpUseTrans");
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRestoreClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnRestore = e.control;
				util.Grid.revertRowData(app, "grdCmnUsrOperGrpUseTrans");
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSaveClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSave = e.control;
				doSave();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsUserTgtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnUseUser");
			dataSet_3.parseData({
				"info": "CMN_USE_USER@USER_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "EMAIL"},
					{"name": "SSN"},
					{"name": "USER_DIV_RCD"},
					{"name": "PARTY_ID"},
					{"name": "ID"},
					{"name": "PWD"},
					{"name": "TMP_PWD"},
					{"name": "USER_NM"},
					{"name": "ASGN_DEPT_DIV_RCD"},
					{"name": "ASGN_DEPT_CD"},
					{"name": "USE_YN"},
					{"name": "SYSTEM_MGR_YN"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "REMARK"},
					{"name": "PWD_ERROR_CNT"},
					{"name": "PWD_CHG_DTHR"},
					{"name": "ASGN_DEPT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnUseUserTrans");
			dataSet_4.parseData({
				"info": "CMN_USE_USER@USER_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "EMAIL"},
					{"name": "SSN"},
					{"name": "USER_DIV_RCD"},
					{"name": "PARTY_ID"},
					{"name": "ID"},
					{"name": "PWD"},
					{"name": "TMP_PWD"},
					{"name": "USER_NM"},
					{"name": "ASGN_DEPT_DIV_RCD"},
					{"name": "ASGN_DEPT_CD"},
					{"name": "USE_YN"},
					{"name": "SYSTEM_MGR_YN"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "REMARK"},
					{"name": "PWD_ERROR_CNT"},
					{"name": "PWD_CHG_DTHR"},
					{"name": "ASGN_DEPT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnUsrOperGrpUse");
			dataSet_5.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_TGT_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "DIV_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmnUsrOperGrpUseTrans");
			dataSet_6.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_TGT_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "DIV_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqListTrans");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqListUsrOperGrpTrans");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strUserId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqListUsrOperGrp");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strUserId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListTrans");
			submission_3.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_6);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveUse");
			submission_5.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_5);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListUsrOperGrp");
			submission_6.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_4);
			submission_6.addResponseData(dataSet_5, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subListUsrOperGrpTrans");
			submission_7.action = "/cmn/StdCmnPrivRoleTrans/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_2);
			submission_7.addResponseData(dataSet_6, false);
			app.register(submission_7);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUserDivRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-USERDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUserDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUserDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUserDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optUserId");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-DB-USER_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbUserId");
				inputBox_1.maxLength = 50;
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optUserId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserId");
				if(typeof onIpbUserIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbUserIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optUserNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-USER_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbUserNm");
				inputBox_2.maxLength = 50;
				inputBox_2.bind("fieldLabel").toExpression("#optUserNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
				if(typeof onIpbUserNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbUserNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "600px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optDeptNm");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-DEPT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "740px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_3.maxLength = 100;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "845px",
					"width": "130px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "975px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-USEWRKROLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "655px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "310px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUsrOperGrpUse");
				grid_1.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpUse"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "200px"},
						{"width": "270px"},
						{
							"width": "94px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "157px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-USETGT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_TGT_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIV_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "USER_TGT_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "655px",
					"width": "565px",
					"height": "235px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-USERLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnUseUser");
				grid_2.init({
					"dataSet": app.lookup("dsCmnUseUser"),
					"columns": [
						{"width": "40px"},
						{"width": "121px"},
						{"width": "136px"},
						{"width": "218px"},
						{"width": "101px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ID");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ID";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnUseUserSelectionChange == "function") {
					grid_2.addEventListener("selection-change", onGrdCmnUseUserSelectionChange);
				}
				container.addChild(grid_2, {
					"top": "30px",
					"left": "5px",
					"width": "630px",
					"height": "235px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnUsrOperGrpUseTrans");
				grid_3.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpUseTrans"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "200px"},
						{"width": "270px"},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "116px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-USETGT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USE_TGT_DIV_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.style.css({
											"text-align" : "center"
										});
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DIV_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "USER_TGT_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "335px",
					"left": "655px",
					"width": "565px",
					"height": "258px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-NOUSERWRKRLST");
				container.addChild(userDefinedControl_4, {
					"top": "310px",
					"left": "655px",
					"width": "315px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnUp");
				button_4.value = "";
				if(typeof onBtnUpClick == "function") {
					button_4.addEventListener("click", onBtnUpClick);
				}
				container.addChild(button_4, {
					"top": "276px",
					"left": "830px",
					"width": "25px",
					"height": "25px"
				});
				var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdCmnUseUserTrans");
				grid_4.init({
					"dataSet": app.lookup("dsCmnUseUserTrans"),
					"columns": [
						{"width": "40px"},
						{"width": "121px"},
						{"width": "136px"},
						{"width": "218px"},
						{"width": "101px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ID");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ID";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnUseUserTransSelectionChange == "function") {
					grid_4.addEventListener("selection-change", onGrdCmnUseUserTransSelectionChange);
				}
				container.addChild(grid_4, {
					"top": "335px",
					"left": "5px",
					"width": "630px",
					"height": "258px"
				});
				var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
				userDefinedControl_5.bind("title").toLanguage("UI-SCR-USERLST");
				container.addChild(userDefinedControl_5, {
					"top": "276px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("grpTrans");
				group_3.style.setClasses(["search-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var button_5 = new cpr.controls.Button("btnSearchTrans");
					button_5.value = "";
					button_5.style.setClasses(["btn-search"]);
					button_5.bind("value").toLanguage("UI-SCR-SCH");
					if(typeof onBtnSearchTransClick == "function") {
						button_5.addEventListener("click", onBtnSearchTransClick);
					}
					container.addChild(button_5, {
						"top": "5px",
						"left": "565px",
						"width": "60px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optUserDivRcdTrans");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-SCR-USERDIV");
					container.addChild(output_7, {
						"top": "5px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbUserDivRcdTrans");
					comboBox_2.bind("fieldLabel").toExpression("#optUserDivRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmReqListTrans"), "strUserDivRcd");
					(function(comboBox_2){
						comboBox_2.addItem(new cpr.controls.Item("전체", ""));
						comboBox_2.setItemSet(app.lookup("dsUserDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "90px",
						"width": "80px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optUserIdTrans");
					output_8.value = "";
					output_8.style.setClasses(["require"]);
					output_8.bind("value").toLanguage("UI-DB-USER_ID");
					container.addChild(output_8, {
						"top": "5px",
						"left": "180px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbUserIdTrans");
					inputBox_4.maxLength = 50;
					inputBox_4.imeMode = "inactive";
					inputBox_4.bind("fieldLabel").toExpression("#optUserId.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmReqListTrans"), "strUserId");
					if(typeof onIpbUserIdTransKeydown == "function") {
						inputBox_4.addEventListener("keydown", onIpbUserIdTransKeydown);
					}
					container.addChild(inputBox_4, {
						"top": "5px",
						"left": "265px",
						"width": "100px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optUserNmTrans");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-DB-USER_NM");
					container.addChild(output_9, {
						"top": "5px",
						"left": "375px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbUserNmTrans");
					inputBox_5.maxLength = 50;
					inputBox_5.bind("fieldLabel").toExpression("#optUserNm.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmReqListTrans"), "strUserNm");
					if(typeof onIpbUserNmTransKeydown == "function") {
						inputBox_5.addEventListener("keydown", onIpbUserNmTransKeydown);
					}
					container.addChild(inputBox_5, {
						"top": "5px",
						"left": "460px",
						"width": "100px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "300px",
					"left": "5px",
					"width": "630px",
					"height": "32px"
				});
				var button_6 = new cpr.controls.Button("btnDel");
				button_6.value = "";
				button_6.style.setClasses(["btn-delete"]);
				button_6.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_6.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_6, {
					"top": "310px",
					"left": "1028px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnRestore");
				button_7.value = "";
				button_7.style.setClasses(["btn-restore"]);
				button_7.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_7.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_7, {
					"top": "310px",
					"left": "1093px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnDelUse");
				button_8.value = "";
				button_8.style.setClasses(["btn-delete"]);
				button_8.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelUseClick == "function") {
					button_8.addEventListener("click", onBtnDelUseClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "1028px",
					"width": "60px",
					"height": "25px"
				});
				var button_9 = new cpr.controls.Button("btnRestoreUse");
				button_9.value = "";
				button_9.style.setClasses(["btn-restore"]);
				button_9.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreUseClick == "function") {
					button_9.addEventListener("click", onBtnRestoreUseClick);
				}
				container.addChild(button_9, {
					"top": "5px",
					"left": "1093px",
					"width": "60px",
					"height": "25px"
				});
				var button_10 = new cpr.controls.Button("btnSaveUse");
				button_10.value = "";
				button_10.style.setClasses(["btn-save"]);
				button_10.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveUseClick == "function") {
					button_10.addEventListener("click", onBtnSaveUseClick);
				}
				container.addChild(button_10, {
					"top": "5px",
					"left": "1157px",
					"width": "60px",
					"height": "25px"
				});
				var button_11 = new cpr.controls.Button("btnUp1");
				button_11.value = "";
				if(typeof onBtnUp1Click == "function") {
					button_11.addEventListener("click", onBtnUp1Click);
				}
				container.addChild(button_11, {
					"top": "276px",
					"left": "1025px",
					"width": "25px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
			linker.userDefinedControl_5.ctrl = linker.grid_4;
		}
	});
	app.title = "stdCmnCPrivRoleTrans";
	cpr.core.Platform.INSTANCE.register(app);
})();
