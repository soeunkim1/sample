/*
 * App URI: app/cmn/stdCmnCProjectProgressRate
 * Source Location: app/cmn/stdCmnCProjectProgressRate.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCProjectProgressRate", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			/******************************************************************************************************
			*  단위시스템 중메뉴 조회 팝업 관련  
			*******************************************************************************************************/
			var moStdCmnProjectProgressRateMenuSch = [{
				iBaseDt : "",		     // 기준일자
				iBaseYoil : "",          // 기준요일
			 	iUnitSystemRcd : ""  // 단위시스템
			}];
			
			/**
			 * @desc 메뉴구분 콤보박스 변경 시 시스템구분 콤보박스에서 해당 메뉴구분의 하위메뉴만 표시한다.
			 * @param psTabDiv  각 탭마다 사용하기 때문에 콤보박스 탭구분자를 넘겨준다.
			 */
			function setSystemDivListByMenuDiv(psTabDiv){
				var vsMainId = "cbbMenuDivRcd" + psTabDiv;
				var vsSubId = "cbbSystemDivRcd" + psTabDiv;
				
				var vsMainValue = util.SelectCtl.getValue(vsMainId);
				
				//TODO 테스트
				util.SelectCtl.setInsBind(vsSubId, "CD_PRP5 == '" + vsMainValue + "'");
			}
			
			/**
			 * @desc doListProgress 첫번째 탭 진척현황을 조회한다.
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListProgress(poCallBackFunc){
				util.Submit.send(app, "subListProgress", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, ["grdProgress", "grdProgressDtl"]);
						
						//요약 컨트롤 리드로우
						util.Control.redraw(app, ["optPlanRate", "optCmplRate"]);
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc doListWeekRecord 두번째탭 주별실적목록 그리드를 동적으로 생성할 헤더 및 데이터를 조회한다.
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListWeekRecord(poCallBackFunc){
				util.Submit.send(app, "subListWeekRecord", function(pbSuccess){
					if(pbSuccess){
						// 주별실적목록 동적리피트를 그린다.
						doDynamicGridWeekRate("grdWeekRate");
						// 주별실적목록 상세 동적리피트를 그린다.
						doDynamicGridWeekRate("grdWeekRateDtl");
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				});
			}
			
			/**
			 * @desc  doListDevWork 세번째탭 개발현황 그리드를 동적으로 생성할 헤더 및 데이터를 조회한다.  
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListDevWork(poCallBackFunc) {
				util.Submit.send(app, "subListDevWork", function(pbSuccess){
					if(pbSuccess){
						// 개발현황 목록 동적리피트를 그린다.
						doDynamicRepeatDevWork();
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				}); 
			}
			
			/**
			 * @desc  doListDevCharger  네번째탭 개발상세현황 개발자별목록을 조회한다.  
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListDevCharger(poCallBackFunc) {
				util.Submit.send(app, "subListDevCharger", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdDevCharger");
			
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				}); 
			}
			
			/**
			 * @desc  doListDevChargerPgm  네번째탭 개발상세현황 개발자 금주차주일정목록을 조회한다.  
			 * @param {Function} poCallBackFunc 콜백정의
			 * @return void
			 */
			function doListDevChargerPgm(poCallBackFunc){
				// 개발자별 목록의 개발자명
				var vsDevChargerNm = util.Grid.getCellValue(app, "grdDevCharger", "DEV_CHARGER_NM");
				if(ValueUtil.fixNull(vsDevChargerNm) == ""){
					util.Control.reset(app, app, "grdDevChargerPgm");
					return false;
				}
				util.DataMap.setValue(app, "dmReqKeyDevChargerPgm", "strDevChargerNm", vsDevChargerNm);
				util.Submit.send(app, "subListDevChargerPgm", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdDevChargerPgm");
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				}); 
			}
			
			//삭제해야 하는 컬럼의 개수
			var vnDeleteColCnt = 0;
			var maDeleteWeekCol = new cpr.utils.ObjectMap();
			/**
			 * @desc  doDynamicGridWeekRate  두번째탭 주별현황 그리드를 동적으로 그린다.
			 * @param psRptId 그리드아이디 
			 * @return  void
			 */
			function doDynamicGridWeekRate(psGrdId){
				var vsGrdId = psGrdId;
				var vbDeletable = false;
			
				// 1. 컬럼 갯수를 가져온다.
				var vnLen = app.lookup("dsWeekRateHeader").getRowCount();
				
				// 2. 동적으로 추가한 컬럼을 삭제한다.
				for( var i = 0; i < vnLen ; i++){		
					// 2-1. 컬럼명
					var vsColumnName = util.DataSet.getValue(app, "dsWeekRateHeader", i, "DAY");
					var vsTopColumnName = util.DataSet.getValue(app, "dsWeekRateHeader", i, "YYMM");
					
					var vcGrdWeekRatePlanHeader = app.lookup("ghBtnPlan" + vsGrdId + vsTopColumnName + vsColumnName);
					var vcGrdWeekRateRsltHeader = app.lookup("ghBtnRslt" + vsGrdId + vsTopColumnName + vsColumnName);
					
					// 2-2. 최상위 헤더값이 있는지 확인
					if(vcGrdWeekRateRsltHeader && vcGrdWeekRatePlanHeader){
						vbDeletable = true;
					}else{
						vbDeletable = false;
					}
				}
				
				//2-3. 삭제 가능한 상태일때 뒤에서 부터 삭제
				if(vbDeletable == true){
					for(var j = maDeleteWeekCol.get(vsGrdId) ; j > 0 ; j--){
						app.lookup(vsGrdId).deleteColumn(j);
					}
					//ObjectMap 초기화
					maDeleteWeekCol.remove(vsGrdId);
				}
				
				// 3. 컬럼 갯수만큼 동적그리드를 생성한다.
				// 주별실적목록 생성(header, detail)
				doCreateGrdWeekRateDetailColumn(vsGrdId);
			
				// 4. 리피트를 다시 그린다.
				util.Control.redraw(app, vsGrdId);
			}
			
			/**
			 * @desc  doCreateGrdWeekRateDetailColumn  주별실적목록의 컬럼생성
			 * @param psGrdId                 그리드 아이디 
			 * @return void
			 */
			function doCreateGrdWeekRateDetailColumn(psGrdId){
				//1. 컬럼 추가하는 데 필요한 변수 선언
				var vnCellIdx = 7; //컬럼을 추가할 cellIndex (기준)
				var vnColCnt = 0; //YYMM의 일수(DAY) 개수
				var vnLen = app.lookup("dsWeekRateHeader").getRowCount(); //dsWeekRateHeader의 행 개수
				
				for(var i = 0 ; i < vnLen ; i++){
					var vsColNm = util.DataSet.getValue(app, "dsWeekRateHeader", i, "DAY"); //주 관련 일수
					var vsTopColNm = util.DataSet.getValue(app, "dsWeekRateHeader", i, "YYMM"); //최상위 컬럼명 (년, 월)
					var vsValue = null;	
					
					//3. 계획 및 설계 추가
					//계획 header (rowIndex : 2)
					addGrdCellConfig(2, vnCellIdx, 1, "ghBtnPlan" + psGrdId + vsTopColNm + vsColNm, "UI-GLS-DEV");
					//계획 detail (rowIndex : 0 --> null(헤더와 구분 위해서))
					vsValue = "PLAN_CNT" + (i+1);
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + psGrdId + vsTopColNm + vsColNm + vsValue, vsValue, "right");
					
					vnCellIdx++;
					
					//실적 header (rowIndex : 2)
					addGrdCellConfig(2, vnCellIdx, 1, "ghBtnRslt" + psGrdId + vsTopColNm + vsColNm, "UI-SCR-PERFORMANCE");
					//실적 detail (rowIndex : 0 --> null)
					vsValue = "CMPL_CNT" + (i+1);
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + psGrdId + vsTopColNm + vsColNm + vsValue, vsValue, "right");
					//개발 header와 실적 header (rowIndex : 2) 를 합침
					addGrdCellConfig(1, (vnCellIdx - 1), 2, "ghBtn" + psGrdId + vsTopColNm + vsColNm, vsColNm);
					
					vnColCnt++;
					
					var vnCnt = util.DataSet.findRow(app, "dsWeekRateHeader", "YYMM == '" + vsTopColNm + "'" , true).length;
					if(vnCnt == vnColCnt){
						addGrdCellConfig(0, (vnCellIdx - (vnColCnt * 2)) + 1, vnColCnt * 2, "ghBtnTop" + psGrdId + vsTopColNm, vsTopColNm);
						vnColCnt = 0;
						
						vnDeleteColCnt++;
					}
					
					vnCellIdx++;
				}
				//4. 컬럼 추가
				app.lookup(psGrdId).addColumn({
					columnLayout : vaColLayout,
					header : vaHdGrdCellConfig,
					detail : vaDtlGrdCellConfig
				});
				
				//5. 삭제 시 참조할 ObjectMap에 그리드 아이디와 삭제할 컬럼의 개수를 넣는다.
				maDeleteWeekCol.put(psGrdId, vnDeleteColCnt);
				
				//6. 초기화
				vaColLayout.length = 0;
				vaHdGrdCellConfig.length = 0;
				vaDtlGrdCellConfig.length = 0;
				vnDeleteColCnt = 0;
			}
			
			//addColumn 시 필요한 cellConfig를 저장할 변수
			var vaColLayout = [];
			var vaHdGrdCellConfig = [];
			var vaDtlGrdCellConfig = [];
			
			/**
			 * @desc addCoulmn 시 필요한 cellConfig(columnLayout, header, detail) 구성
			 * @param {number} pnRowIdx rowIndex 값
			 * @param {number} pnColIdx colIndex 값
			 * @param {number} pnColSpan colSpan 값
			 * @param {string} psCtrlId 컨트롤의 아이디
			 * @param {string} psValue 컨트롤의 값
			 * @param {boolean} psTextAlign 컨트롤의 text-align 스타일
			 */
			function addGrdCellConfig(pnRowIdx, pnColIdx, pnColSpan, psCtrlId, psValue, psTextAlign){
				//1. 헤더 및 디테일에 들어갈 컨트롤(아웃풋) 설정
				var vsTextAlign = "center";
				var vcOutput = 
					(function(){
						//1-1. 컨트롤 아이디
						var vcControl = new cpr.controls.Output(psCtrlId);
						//1-2. 컨트롤 바인딩 혹은 값
						if(ValueUtil.isNull(pnRowIdx) == false && psValue.substring(0, 2) == "UI"){
							vcControl.bind("value").toLanguage(psValue);				
						}else if(ValueUtil.isNull(pnRowIdx) == true){
							vcControl.bind("value").toDataColumn(psValue);
						}else{				
							vcControl.value =psValue; 
						}
						//1-3. 스타일
						if(psTextAlign != vsTextAlign){
							vsTextAlign = psTextAlign; 
						}
						vcControl.style.css({
							"text-align" : psTextAlign
						});				
						return vcControl;
				})();
				
				//2. cellConfig를 변수에 담음
				if(ValueUtil.isNull(pnRowIdx) == false){
					vaHdGrdCellConfig.push({
						rowIndex : pnRowIdx,
						colIndex : pnColIdx,
						colSpan : pnColSpan,
						control : vcOutput
					});
				}else{
					vaDtlGrdCellConfig.push({
						rowIndex : 0,
						colIndex : pnColIdx,
						colSpan : pnColSpan,
						columnName : psValue,
						control : vcOutput
					});
					vaColLayout.push({
						width : "35px"
					});
				}
			}
			
			/**
			 * @desc  doDynamicRepeatDevWork  세번째탭 개발현황 담당업무 리피트를 동적으로 그린다.
			 * @return  void
			 */
			function doDynamicRepeatDevWork(){				
				// 1. 컬럼 갯수를 가져온다.
				var vnLen = app.lookup("dsDevWorkHeader").getRowCount();
				var vbDeletable = false;
				
				// 2. 컬럼 갯수만큼 for문을 통해 동적리피트를 생성한다.
				for( var i = 0; i < vnLen ; i++){		
					// 2-1. 컬럼명
					var vsColumnName = util.DataSet.getValue(app, "dsDevWorkHeader", i, "MM");
					var vsTopColumnName = util.DataSet.getValue(app, "dsDevWorkHeader", i, "YYMM");
			
					// 2-2. 개발현황 담당업무목록  최상위 header
					var vcGrdDevWorkHeader = app.lookup("ghBtn" + vsColumnName);
					if(vcGrdDevWorkHeader){
						vbDeletable = true;
					}else{
						vbDeletable = false;
					}
				}
				
				//colIndex가 3번째인 컬럼을 지워야 하므로 +2 해줌
				if(vbDeletable == true){
					for(var j = maDeleteWeekCol.get("grdDevWork") + 2; j > 2 ; j--){
						app.lookup("grdDevWork").deleteColumn(j);
					}
					//ObjectMap 초기화
					maDeleteWeekCol.remove("grdDevWork");
				}
				
				doCreateRptWorkDevDetailColumn();
				
				// 3. 리피트를 다시 그린다.
				util.Control.redraw(app, "grdDevWork");
			}
			
			/**
			 * @desc  doCreateRptWorkDevDetailColumn  개발현황 담당업무목록의 컬럼생성
			 * @return void
			 */
			function doCreateRptWorkDevDetailColumn(){
				//1. 초기값 설정
				var vnCellIdx = 10; //컬럼을 추가할 cellIndex (기준)
				var vnCnt = app.lookup("dsDevWorkHeader").getRowCount(); //dsDevWorkHeader의 행 개수
				
				//2. 월별일정 컬럼 추가
				for(var i = 0 ; i < vnCnt ; i++){
					var vsColNm = util.DataSet.getValue(app, "dsDevWorkHeader", i, "MM");
					var vsDtlValue = null;
					
					// 계획 및 실적 추가
					// 계획 header (rowIndex : 2)
					addGrdCellConfig(2, vnCellIdx, 1, "ghBtnMonthPlan" + vsColNm, "UI-GLS-DEV");
					// 계획 detail (rowIndex : 0)
					vsDtlValue = "MONTH_PLAN_CNT"+ (i + 1);
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vsDtlValue, vsDtlValue, "right"); 
					
					vnCellIdx++;
					
					//실적 header (rowIndex : 2)
					addGrdCellConfig(2, vnCellIdx, 1, "ghBtnMonthRslt" + vsColNm, "UI-SCR-PERFORMANCE");
					// 실적 detail (rowIndex : 0 --> null)
					vsDtlValue = "MONTH_RSLT_CNT" + (i + 1);
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vsDtlValue, vsDtlValue, "right");
					// 개발 header와 실적 header 합침
					addGrdCellConfig(1, (vnCellIdx - 1), 2, "ghBtn" + vsColNm, vsColNm + util.Msg.getMsg("UI-DB-MM"));
					
					if(i == (vnCnt - 1)){
						addGrdCellConfig(0, 10, vnCnt * 2, "ghBtnTopMm", "UI-SCR-MONLY_SCH");
						vnDeleteColCnt++;
					}
					vnCellIdx++;
				}
				
				//3. 소계컬럼 초기값 설정
				// 최상위 헤더타이틀 배열
				var vaArrayTopHeader = [];
				vaArrayTopHeader = ["UI-SCR-DEV_TYPE_STATIS", "UI-SCR-INCO_TYPE_STATIS", "UI-SCR-WEEK_SCHE_TYPE_STATIS", "UI-SCR-WEEK_PERF_TYPE_STATIS"];
				//컬럼 ID 배열
				var vaArrayColId = [];
				vaArrayColId = ["DEV", "UNCMPL", "THIS_DEV", "THIS"];
				
				//4. 소계컬럼 추가
				for(var j = 0 ; j < vaArrayTopHeader.length ; j++){
					//입력, 조회, 출력, 일괄, 기타 header 와 detail
					addGrdCellConfig(2, vnCellIdx, 1, vaArrayColId[j] + "_INPUT", "UI-SCR-CRUD_PGM");
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vaArrayColId[j] + "_INPUT", vaArrayColId[j] + "_INPUT", "right");
					
					vnCellIdx++;
					
					addGrdCellConfig(2, vnCellIdx, 1, vaArrayColId[j] + "_SEARCH", "UI-SCR-SCH");
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vaArrayColId[j] + "_SEARCH", vaArrayColId[j] + "_SEARCH", "right");
					
					vnCellIdx++;
					
					addGrdCellConfig(2, vnCellIdx, 1, vaArrayColId[j] + "_OUTPUT", "UI-GLS-PRT");
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vaArrayColId[j] + "_OUTPUT", vaArrayColId[j] + "_OUTPUT", "right");
					
					vnCellIdx++;
					
					addGrdCellConfig(2, vnCellIdx, 1, vaArrayColId[j] + "_PLACE", "UI-SCR-BATCH_ALL");
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vaArrayColId[j] + "_PLACE", vaArrayColId[j] + "_PLACE", "right");
					
					vnCellIdx++;
					
					addGrdCellConfig(2, vnCellIdx, 1, vaArrayColId[j] + "_ETC", "UI-GLS-ETC");
					addGrdCellConfig(null, vnCellIdx, 1, "gdOpt" + vaArrayColId[j] + "_ETC", vaArrayColId[j] + "_ETC", "right");
					
					//두번째 헤더 
					addGrdCellConfig(1, (vnCellIdx - 4), 5, "ghBtnHeaderSum"+(j+1), "");
					// 첫번째 헤더
					addGrdCellConfig(0, (vnCellIdx - 4), 5, "ghBtnHeaderTopSum"+(j+1), vaArrayTopHeader[j]);
					vnDeleteColCnt++;
					
					vnCellIdx++;
				}
				
				//5. 월별일정 컬럼과 소계 컬럼 추가
				app.lookup("grdDevWork").addColumn({
					columnLayout : vaColLayout,
					header : vaHdGrdCellConfig,
					detail : vaDtlGrdCellConfig
				});
				
				//6. 삭제 시 참조할 ObjectMap에 그리드 아이디와 삭제할 컬럼의 개수를 넣는다.
				maDeleteWeekCol.put("grdDevWork", vnDeleteColCnt);
				
				//7. 초기화
				vaColLayout.length = 0;
				vaHdGrdCellConfig.length = 0;
				vaDtlGrdCellConfig.length = 0;
				vnDeleteColCnt = 0;
				
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				// 1. 리피트 초기 설정 -- 앱헤더에 설정
				// 2. 검색조건 초기 설정 -- 앱헤더에 설정
				// 3. 첫번째 탭 아이템 선택
				util.Tab.setSelectedTabItem(app, "tabMain", 1);
				
				// 4. 서브미션 실행 (실패시 cover page)
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, ["cbbMenuDivRcdProgress", "cbbSystemDivRcdProgress", "cbbMenuDivRcdWeek", "cbbSystemDivRcdWeek", "cbbDrawDevDivRcdWeek"]);
						util.Control.setValue(app, app, "cbbDrawDevDivRcdWeek", 10); //설계개발구분 : 설계
						
						//프로젝트 기준일자
						var vsProjectStDt = util.DataSet.getValue(app, "dsProjectPeriodList", 0, "CD_PRP1"); // 프로젝트시작일
						var vsProjectEndDt =  util.DataSet.getValue(app, "dsProjectPeriodList", 0, "CD_PRP2"); // 프로젝트종료일
						var vsBaseYoil = util.DataSet.getValue(app, "dsProjectPeriodList", 0, "CD_PRP3"); // 프로젝트 기준요일
						
						util.DataMap.setValue(app, "dmReqKey", "strProjectStDt", vsProjectStDt);
						util.DataMap.setValue(app, "dmReqKey", "strProjectEndDt", vsProjectEndDt);
						util.DataMap.setValue(app, "dmReqKey", "strBaseYoil", vsBaseYoil);
						
						var vsBaseDt = util.DataMap.getValue(app, "dmResOnLoad", "strCurDt");
						util.Control.setValue(app, app, "dipBaseDtProgress", vsBaseDt); // 첫번째탭 기준일자
						util.Control.setValue(app, app, "dipBaseDtWeek", vsBaseDt); 		// 두번째탭 기준일자
						util.Control.setValue(app, app, "dipBaseDtDevWork", vsBaseDt);  // 세번째탭 기준일자
						util.Control.setValue(app, app, "dipBaseDtDevDtl", vsBaseDt); 	 // 네번째탭 기준일자
					}
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchProgressKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearchProgress = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch1");
					btnSearch.click();
				}
			}
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearch1Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch1 = e.control;
				//필수 조회조건 체크
				if(!util.validate(app, "dipBaseDtProgress")){
					return false;
				}
				
				doListProgress(function(pbSuccess){
					//조회되었습니다.
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCbbMenuDivRcdProgressSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cbbMenuDivRcdProgress = e.control;
				setSystemDivListByMenuDiv("Progress");
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchWeekKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearchWeek = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				//필수 조회조건 체크
				if(!util.validate(app, ["cbbDrawDevDivRcdWekk", "dipBaseDtWeek"])){
					return false;
				}
				
				doListWeekRecord(function(pbSuccess){
					//조회되었습니다.
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchDevKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearchDev = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearchDev");
					btnSearch.click();
				}
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchDevClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearchDev = e.control;
				//필수 조회조건 체크
				if(!util.validate(app, "dipBaseDtDevWork")){
					return false;
				}
				
				doListDevWork(function(pbSuccess){
					//조회되었습니다
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearch2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch2 = e.control;
				//필수 조회조건 체크
				if(!util.validate(app, "dipBaseDtDevDtl")){
					return false;
				}
				
				doListDevCharger(function(pbSuccess){
					//조회되었습니다
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch2");
					btnSearch.click();
				}
			}
			
			/*
			 * 콤보 박스에서 selection-change 이벤트 발생 시 호출.
			 * ComboBox Item을 선택하여 선택된 값이 저장된 후에 발생하는 이벤트.
			 */
			function onCbbMenuDivRcdWeekSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.ComboBox
				 */
				var cbbMenuDivRcdWeek = e.control;
				setSystemDivListByMenuDiv("Week");
			}
			
			/*
			 * 인풋 박스에서 dblclick 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 더블 클릭할 때 발생하는 이벤트.
			 */
			function onGdIpbUnitSystemNmDtlDblclick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.InputBox
				 */
				var gdIpbUnitSystemNmDtl = e.control;
				// 진척현황목록DTL의 선택(포커스)된 인덱스를 가져온다.
				var vnIdx = util.Grid.getIndex(app, "grdProgressDtl");
				
				if(vnIdx == -1){
					// "선택된 데이터가 없습니다."
					util.Msg.warn("M008");
					return false;
				}
				
				var vsUnitSystemRcd = util.Grid.getCellValue(app, "grdProgressDtl", "UNIT_SYSTEM_RCD", vnIdx); // 단위시스템
				var vsBaseDt = util.Control.getValue(app, "dipBaseDtProgress"); // 기준일자
				var vsBaseYoil = util.DataMap.getValue(app, "dmReqKey", "strBaseYoil"); // 기준요일
				
				moStdCmnProjectProgressRateMenuSch[0].iBaseDt = vsBaseDt;
				moStdCmnProjectProgressRateMenuSch[0].iBaseYoil = vsBaseYoil;
				moStdCmnProjectProgressRateMenuSch[0].iUnitSystemRcd = vsUnitSystemRcd;
				
				util.Dialog.open(app, "app/cmn_old/cmnPProjectProgressRateMenu", 1125, 410, function(e){
					var dialog = e.control;
				}, moStdCmnProjectProgressRateMenuSch);
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsMenuDivList");
			dataSet_1.parseData({
				"columns": [
					{"name": "UMENU_ID"},
					{"name": "MENU_NM"},
					{"name": "MENU_ID"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMenuSystemList");
			dataSet_2.parseData({
				"columns": [
					{"name": "UMENU_ID"},
					{"name": "MENU_NM"},
					{"name": "MENU_ID"},
					{"name": "UNIT_SYSTEM_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsProjectPeriodList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsProgress");
			dataSet_4.parseData({
				"info": "CMN_LOG@TABLE_NAME,TRIGGER_NAME",
				"columns": [
					{"name": "SYS_DIV_NM"},
					{"name": "SYST_CNT"},
					{"name": "PGM_CNT"},
					{"name": "TOT_CNT"},
					{"name": "INPUT_CNT"},
					{"name": "PRT_CNT"},
					{"name": "QUERY_CNT"},
					{"name": "ETC_CNT"},
					{"name": "TOT_PLAN_DRAW_CNT"},
					{"name": "TOT_DRAW_CNT"},
					{"name": "DRAW_RATE"},
					{"name": "DRAW_RATE2"},
					{"name": "TOT_RPT_DRAW_CNT"},
					{"name": "TOT_NRPT_DRAW_CNT"},
					{"name": "TOT_PWEEK_DRAW_CNT"},
					{"name": "PWEEK_DRAW_RATE"},
					{"name": "TOT_PLAN_DEV_CNT"},
					{"name": "TOT_DEV_CNT"},
					{"name": "TOT_DEV_INPUT_CNT"},
					{"name": "TOT_DEV_ETC_CNT"},
					{"name": "DEV_RATE"},
					{"name": "TOT_PWEEK_DEV_CNT"},
					{"name": "PWEEK_DEV_RATE"},
					{"name": "BWEEK_PLAN_DRAW_CNT"},
					{"name": "BWEEK_DRAW_CNT"},
					{"name": "BWEEK_DRAW_RATE"},
					{"name": "PWEEK_DRAW_CNT"},
					{"name": "BWEEK_PLAN_DEV_CNT"},
					{"name": "BWEEK_DEV_CNT"},
					{"name": "BWEEK_DEV_RATE"},
					{"name": "PWEEK_DEV_CNT"},
					{"name": "DEV_PSN_TEST_PLAN_CNT"},
					{"name": "DEV_PSN_TEST_CMPL_CNT"},
					{"name": "DEV_PSN_TEST_RATE"},
					{"name": "DRAW_PSN_TEST_PLAN_CNT"},
					{"name": "DRAW_PSN_TEST_CMPL_CNT"},
					{"name": "DRAW_PSN_TEST_RATE"},
					{"name": "DEV_RATE2"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsProgressDtl");
			dataSet_5.parseData({
				"info": "CMN_LOG@TABLE_NAME,TRIGGER_NAME",
				"columns": [
					{"name": "SYS_DIV_NM"},
					{"name": "UNIT_SYSTEM_NM"},
					{"name": "PGM_CNT"},
					{"name": "TOT_CNT"},
					{"name": "INPUT_CNT"},
					{"name": "PRT_CNT"},
					{"name": "QUERY_CNT"},
					{"name": "ETC_CNT"},
					{"name": "TOT_PLAN_DRAW_CNT"},
					{"name": "TOT_DRAW_CNT"},
					{"name": "DRAW_RATE"},
					{"name": "DRAW_RATE2"},
					{"name": "TOT_RPT_DRAW_CNT"},
					{"name": "TOT_NRPT_DRAW_CNT"},
					{"name": "TOT_PWEEK_DRAW_CNT"},
					{"name": "PWEEK_DRAW_RATE"},
					{"name": "TOT_PLAN_DEV_CNT"},
					{"name": "TOT_DEV_CNT"},
					{"name": "TOT_DEV_INPUT_CNT"},
					{"name": "TOT_DEV_ETC_CNT"},
					{"name": "DEV_RATE"},
					{"name": "TOT_PWEEK_DEV_CNT"},
					{"name": "PWEEK_DEV_RATE"},
					{"name": "BWEEK_PLAN_DRAW_CNT"},
					{"name": "BWEEK_DRAW_CNT"},
					{"name": "BWEEK_DRAW_RATE"},
					{"name": "PWEEK_DRAW_CNT"},
					{"name": "BWEEK_PLAN_DEV_CNT"},
					{"name": "BWEEK_DEV_CNT"},
					{"name": "BWEEK_DEV_RATE"},
					{"name": "PWEEK_DEV_CNT"},
					{"name": "DEV_PSN_TEST_PLAN_CNT"},
					{"name": "DEV_PSN_TEST_CMPL_CNT"},
					{"name": "DEV_PSN_TEST_RATE"},
					{"name": "DRAW_PSN_TEST_PLAN_CNT"},
					{"name": "DRAW_PSN_TEST_CMPL_CNT"},
					{"name": "DRAW_PSN_TEST_RATE"},
					{"name": "DEV_RATE2"},
					{"name": "UNIT_SYSTEM_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsDevCharger");
			dataSet_6.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CHAG_JOB_NM"},
					{"name": "DEV_CHARGER_NM"},
					{"name": "PRT_ORD"},
					{"name": "DEV_CNT"},
					{"name": "CMPL_CNT"},
					{"name": "UNCMPL_CNT"},
					{"name": "LAST_SCHE_CNT"},
					{"name": "THIS_SCHE_CNT"},
					{"name": "NEXT_SCHE_CNT"},
					{"name": "REMARK"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsDevChargerPgm");
			dataSet_7.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "SCHEDULE"},
					{"name": "UNIT_SYSTEM_NM"},
					{"name": "UMENU_NM"},
					{"name": "PGM_NM"},
					{"name": "PGM_ID"},
					{"name": "DEV_PLAN_ST_DT"},
					{"name": "DEV_PLAN_END_DT"},
					{"name": "DEV_ST_DT"},
					{"name": "DEV_END_DT"},
					{"name": "DEV_TEST_END_DT"},
					{"name": "DRAW_TEST_END_DT"},
					{"name": "DRAW_CHARGER_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsWeekRateHeader");
			dataSet_8.parseData({
				"columns": [
					{"name": "YYMM"},
					{"name": "DAY"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsWeekRate");
			dataSet_9.parseData({
				"columns": [
					{"name": "SYS_DIV"},
					{"name": "SYS_CNT"},
					{"name": "TOT_ALL_CNT"},
					{"name": "TOT_CNT"},
					{"name": "TOT_PLAN_CNT"},
					{"name": "TOT_CMPL_CNT"},
					{"name": "RATE"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsWeekRateDtl");
			dataSet_10.parseData({
				"columns": [
					{"name": "SYS_DIV"},
					{"name": "UNIT_SYS_NM"},
					{"name": "TOT_ALL_CNT"},
					{"name": "TOT_CNT"},
					{"name": "TOT_PLAN_CNT"},
					{"name": "TOT_CMPL_CNT"},
					{"name": "RATE"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsDevWorkHeader");
			dataSet_11.parseData({
				"columns": [{"name": "MM"}],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsDevWork");
			dataSet_12.parseData({
				"info": "CMN_CONF_CODE@CD,LAN_DIV_RCD",
				"columns": [
					{"name": "CHAG_JOB_NM"},
					{"name": "DEV_CHARGER_NM"},
					{"name": "DEV_CNT"},
					{"name": "CMPL_CNT"},
					{"name": "UNCMPL_CNT"},
					{"name": "LAST_SCHE_CNT"},
					{"name": "THIS_SCHE_CNT"},
					{"name": "THIS_RESLT_CNT"},
					{"name": "NEXT_SCHE_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strCurDt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strBaseYoil",
						"dataType": "string"
					},
					{
						"name": "strProjectStDt",
						"dataType": "string"
					},
					{
						"name": "strProjectEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKeyProgress");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strMenuDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strBaseDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqKeyWeekRecord");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strMenuDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strDrawDevDiv",
						"dataType": "string"
					},
					{
						"name": "strBaseDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmKeyDevWork");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strBaseDt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmReqKeyDevDtl");
			dataMap_6.parseData({
				"columns" : [{
					"name": "strBaseDt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmReqKeyDevChargerPgm");
			dataMap_7.parseData({
				"columns" : [{
					"name": "strDevChargerNm",
					"dataType": "string"
				}]
			});
			app.register(dataMap_7);
			
			var dataMap_8 = new cpr.data.DataMap("dmResSummary");
			dataMap_8.parseData({
				"columns" : [
					{
						"name": "TOT_DRAW_CNT",
						"dataType": "string"
					},
					{
						"name": "TOT_DEV_CNT",
						"dataType": "string"
					},
					{
						"name": "TOT_PLAN_DRAW_CNT",
						"dataType": "string"
					},
					{
						"name": "TOT_CMPL_DRAW_CNT",
						"dataType": "string"
					},
					{
						"name": "TOT_PLAN_DEV_CNT",
						"dataType": "string"
					},
					{
						"name": "TOT_CMPL_DEV_CNT",
						"dataType": "string"
					},
					{
						"name": "PLAN_RATE",
						"dataType": "string"
					},
					{
						"name": "CMPL_RATE",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_8);
			
			var dataMap_9 = new cpr.data.DataMap("dmFileInfo");
			dataMap_9.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_9);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnProjectProgressRate/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListProgress");
			submission_2.action = "/cmn/StdCmnProjectProgressRate/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataSet_5, false);
			submission_2.addResponseData(dataMap_8, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListDevCharger");
			submission_3.action = "/cmn/StdCmnProjectProgressRate/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_6);
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDevChargerPgm");
			submission_4.action = "/cmn/StdCmnProjectProgressRate/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_7);
			submission_4.addRequestData(dataMap_6);
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_7, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListWeekRecord");
			submission_5.action = "/cmn/StdCmnProjectProgressRate/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_4);
			submission_5.addRequestData(dataMap_2);
			submission_5.addResponseData(dataSet_8, false);
			submission_5.addResponseData(dataSet_9, false);
			submission_5.addResponseData(dataSet_10, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListDevWork");
			submission_6.action = "/cmn/StdCmnProjectProgressRate/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_5);
			submission_6.addRequestData(dataMap_2);
			submission_6.addResponseData(dataSet_11, false);
			submission_6.addResponseData(dataSet_12, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subPjtDown");
			submission_7.action = "/cmn/StdCmnProjectProgressRate/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addResponseData(dataMap_9, false);
			app.register(submission_7);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tpcProgress";
					var group_2 = new cpr.controls.Container("grptpcProgress");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdProgress");
						grid_1.init({
							"dataSet": app.lookup("dsProgress"),
							"columns": [
								{"width": "166px"},
								{"width": "40px"},
								{"width": "58px"},
								{"width": "70px"},
								{"width": "69px"},
								{"width": "69px"},
								{"width": "157px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "312px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "78px"},
								{"width": "40px"},
								{"width": "69px"},
								{"width": "392px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "80px"},
								{"width": "40px"},
								{"width": "69px"},
								{"width": "128px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "128px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "137px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "59px"},
								{"width": "131px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "53px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TBNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LOGTBYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.text = "전체";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TRIGERNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "유형";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.text = "설계(누계)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.text = "개발(누계)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 26},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 27},
										"configurator": function(cell){
											cell.text = "설계(금주)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 28},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 29},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 30},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 31},
										"configurator": function(cell){
											cell.text = "개발(금주)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 32},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 33},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 34},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 35},
										"configurator": function(cell){
											cell.text = "단위테스트(개발자)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 36},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 37},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 38},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 39},
										"configurator": function(cell){
											cell.text = "단위테스트(설계자)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 40},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 41},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 42},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "_repeatindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SYST_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "TOT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "INPUT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "QUERY_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "ETC_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "TOT_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "DRAW_RATE2";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "TOT_PWEEK_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "PWEEK_DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_INPUT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_ETC_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.columnName = "DEV_RATE2";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.columnName = "TOT_PWEEK_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.columnName = "PWEEK_DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 27},
										"configurator": function(cell){
											cell.columnName = "BWEEK_PLAN_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 28},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 29},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 31},
										"configurator": function(cell){
											cell.columnName = "BWEEK_PLAN_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 32},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 33},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 35},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 36},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 37},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 39},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 40},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 41},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"top": "67px",
							"left": "5px",
							"width": "1200px",
							"height": "225px"
						});
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("UI-SCR-LOGTBLST");
						container.addChild(userDefinedControl_2, {
							"top": "42px",
							"left": "5px",
							"width": "235px",
							"height": "25px"
						});
						var grid_2 = new cpr.controls.Grid("grdProgressDtl");
						grid_2.init({
							"dataSet": app.lookup("dsProgressDtl"),
							"columns": [
								{"width": "212px"},
								{"width": "40px"},
								{"width": "58px"},
								{"width": "116px"},
								{"width": "69px"},
								{"width": "69px"},
								{"width": "157px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "312px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "78px"},
								{"width": "40px"},
								{"width": "69px"},
								{"width": "392px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "80px"},
								{"width": "40px"},
								{"width": "69px"},
								{"width": "128px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "128px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "50px"},
								{"width": "137px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "59px"},
								{"width": "131px"},
								{"width": "40px"},
								{"width": "40px"},
								{"width": "53px"},
								{"width": "104px"},
								{"width": "104px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TBNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LOGTBYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.text = "전체";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TRIGERNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "유형";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.text = "설계(누계)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.text = "개발(누계)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 26},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 27},
										"configurator": function(cell){
											cell.text = "설계(금주)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 28},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 29},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 30},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 31},
										"configurator": function(cell){
											cell.text = "개발(금주)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 32},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 33},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 34},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 35},
										"configurator": function(cell){
											cell.text = "단위테스트(개발자)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 36},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 37},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 38},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 39},
										"configurator": function(cell){
											cell.text = "단위테스트(설계자)";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 40},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 41},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 42},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 43},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 44},
										"configurator": function(cell){
											cell.text = "단위시스템코드";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "_repeatindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_NM";
											cell.control = (function(){
												var inputBox_1 = new cpr.controls.InputBox("gdIpbUnitSystemNmDtl");
												inputBox_1.readOnly = true;
												inputBox_1.bind("value").toDataColumn("UNIT_SYSTEM_NM");
												return inputBox_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "TOT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "INPUT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "QUERY_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "ETC_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "TOT_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "DRAW_RATE2";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "TOT_PWEEK_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "PWEEK_DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_INPUT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.columnName = "TOT_DEV_ETC_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.columnName = "DEV_RATE2";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.columnName = "TOT_PWEEK_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.columnName = "PWEEK_DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 27},
										"configurator": function(cell){
											cell.columnName = "BWEEK_PLAN_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 28},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DRAW_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 29},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DRAW_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 31},
										"configurator": function(cell){
											cell.columnName = "BWEEK_PLAN_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 32},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 33},
										"configurator": function(cell){
											cell.columnName = "BWEEK_DEV_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 35},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 36},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 37},
										"configurator": function(cell){
											cell.columnName = "DEV_PSN_TEST_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 39},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 40},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 41},
										"configurator": function(cell){
											cell.columnName = "DRAW_PSN_TEST_RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 43},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_RCD";
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "297px",
							"left": "5px",
							"width": "1200px",
							"height": "295px"
						});
						var output_1 = new cpr.controls.Output("optTxt");
						output_1.value = "\u203b 개발(누계): 입력 = 입력+조회+기타";
						container.addChild(output_1, {
							"top": "42px",
							"left": "878px",
							"width": "232px",
							"height": "25px"
						});
						var output_2 = new cpr.controls.Output("optPlanTxt");
						output_2.value = "전체공정률(계획:";
						container.addChild(output_2, {
							"top": "42px",
							"left": "130px",
							"width": "120px",
							"height": "25px"
						});
						var output_3 = new cpr.controls.Output("optPlanRate");
						output_3.value = "";
						output_3.bind("value").toDataMap(app.lookup("dmResSummary"), "PLAN_RATE");
						container.addChild(output_3, {
							"top": "42px",
							"left": "250px",
							"width": "40px",
							"height": "25px"
						});
						var output_4 = new cpr.controls.Output("optCmplTxt");
						output_4.value = "실적 :";
						container.addChild(output_4, {
							"top": "42px",
							"left": "290px",
							"width": "50px",
							"height": "25px"
						});
						var output_5 = new cpr.controls.Output("optCmplRate");
						output_5.value = "";
						output_5.bind("value").toDataMap(app.lookup("dmResSummary"), "CMPL_RATE");
						container.addChild(output_5, {
							"top": "42px",
							"left": "340px",
							"width": "40px",
							"height": "25px"
						});
						var output_6 = new cpr.controls.Output("optTxt2");
						output_6.value = ")";
						container.addChild(output_6, {
							"top": "42px",
							"left": "380px",
							"width": "10px",
							"height": "25px"
						});
						var output_7 = new cpr.controls.Output("optTxt3");
						output_7.value = "\u203b 설계(누계) 입력/출력 진척률 = (입력/출력)실적건수/(입력/출력)프로그램 본수";
						container.addChild(output_7, {
							"top": "42px",
							"left": "389px",
							"width": "490px",
							"height": "25px"
						});
						var group_3 = new cpr.controls.Container("grpSearchProgress");
						group_3.style.setClasses(["search-box"]);
						// Layout
						var xYLayout_3 = new cpr.controls.layouts.XYLayout();
						group_3.setLayout(xYLayout_3);
						(function(container){
							var button_1 = new cpr.controls.Button("btnSearch1");
							button_1.value = "";
							button_1.style.setClasses(["btn-search"]);
							button_1.bind("value").toLanguage("UI-SCR-SCH");
							if(typeof onBtnSearch1Click == "function") {
								button_1.addEventListener("click", onBtnSearch1Click);
							}
							container.addChild(button_1, {
								"top": "5px",
								"left": "1135px",
								"width": "60px",
								"height": "25px"
							});
							var output_8 = new cpr.controls.Output("optMenuDivRcdProgress");
							output_8.value = "구분";
							container.addChild(output_8, {
								"top": "5px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var output_9 = new cpr.controls.Output("optSystemDivRcdProgress");
							output_9.value = "시스템";
							container.addChild(output_9, {
								"top": "5px",
								"left": "220px",
								"width": "95px",
								"height": "25px"
							});
							var output_10 = new cpr.controls.Output("optBaseDtProgress");
							output_10.value = "기준일자";
							output_10.style.setClasses(["require"]);
							container.addChild(output_10, {
								"top": "5px",
								"left": "460px",
								"width": "100px",
								"height": "25px"
							});
							var dateInput_1 = new cpr.controls.DateInput("dipBaseDtProgress");
							dateInput_1.format = "YYYY-MM-DD";
							dateInput_1.userAttr({"require": "Y"});
							dateInput_1.bind("fieldLabel").toExpression("#optBaseDtProgress.value");
							dateInput_1.bind("value").toDataMap(app.lookup("dmReqKeyProgress"), "strBaseDt");
							container.addChild(dateInput_1, {
								"top": "5px",
								"left": "565px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_1 = new cpr.controls.ComboBox("cbbMenuDivRcdProgress");
							comboBox_1.bind("fieldLabel").toExpression("#optMenuDivRcd.value");
							comboBox_1.bind("value").toDataMap(app.lookup("dmReqKeyProgress"), "strMenuDivRcd");
							(function(comboBox_1){
								comboBox_1.addItem(new cpr.controls.Item("전체", ""));
								comboBox_1.setItemSet(app.lookup("dsMenuDivList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_1);
							if(typeof onCbbMenuDivRcdProgressSelectionChange == "function") {
								comboBox_1.addEventListener("selection-change", onCbbMenuDivRcdProgressSelectionChange);
							}
							container.addChild(comboBox_1, {
								"top": "5px",
								"left": "110px",
								"width": "100px",
								"height": "25px"
							});
							var comboBox_2 = new cpr.controls.ComboBox("cbbSystemDivRcdProgress");
							comboBox_2.bind("fieldLabel").toExpression("#optSystemDivRcd.value");
							comboBox_2.bind("value").toDataMap(app.lookup("dmReqKeyProgress"), "strUnitSystemRcd");
							(function(comboBox_2){
								comboBox_2.addItem(new cpr.controls.Item("전체", ""));
								comboBox_2.setItemSet(app.lookup("dsMenuSystemList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_2);
							container.addChild(comboBox_2, {
								"top": "5px",
								"left": "320px",
								"width": "130px",
								"height": "25px"
							});
						})(group_3);
						container.addChild(group_3, {
							"top": "5px",
							"left": "5px",
							"width": "1200px",
							"height": "32px"
						});
					})(group_2);
					tabItem_1.content = group_2;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tpcRecord";
					var group_4 = new cpr.controls.Container("grptpcRecord");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("");
						container.addChild(userDefinedControl_3, {
							"top": "42px",
							"left": "5px",
							"width": "235px",
							"height": "25px"
						});
						var output_11 = new cpr.controls.Output("optTxt1");
						output_11.value = "\u203b 주별 실적 기간은 지난주 토요일~금주 금요일까지입니다.";
						container.addChild(output_11, {
							"top": "42px",
							"left": "140px",
							"width": "335px",
							"height": "25px"
						});
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdWeekRate");
						grid_3.init({
							"dataSet": app.lookup("dsWeekRate"),
							"columns": [
								{"width": "419px"},
								{"width": "206px"},
								{"width": "40px"},
								{"width": "58px"},
								{"width": "110px"},
								{"width": "214px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "67px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TBNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LOGTBYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "전체";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TRIGERNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "_repeatindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SYS_DIV";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "TOT_ALL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "TOT_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_3, {
							"top": "67px",
							"left": "5px",
							"width": "1200px",
							"height": "225px"
						});
						var output_12 = new cpr.controls.Output("optTxt4");
						output_12.value = "\u203b 실적은 기준일자 이전에 종료된 것만 Count됩니다.";
						container.addChild(output_12, {
							"top": "42px",
							"left": "520px",
							"width": "350px",
							"height": "25px"
						});
						var grid_4 = new cpr.controls.Grid("grdWeekRateDtl");
						grid_4.init({
							"dataSet": app.lookup("dsWeekRateDtl"),
							"columns": [
								{"width": "419px"},
								{"width": "206px"},
								{"width": "40px"},
								{"width": "58px"},
								{"width": "110px"},
								{"width": "214px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "67px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TBNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LOGTBYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "전체";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TRIGERNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-STAT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "_repeatindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SYS_DIV";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "TOT_ALL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "TOT_PLAN_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "TOT_CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "RATE";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_4, {
							"top": "297px",
							"left": "5px",
							"width": "1200px",
							"height": "294px"
						});
						var group_5 = new cpr.controls.Container("grpSearchWeek");
						group_5.style.setClasses(["search-box"]);
						// Layout
						var xYLayout_4 = new cpr.controls.layouts.XYLayout();
						group_5.setLayout(xYLayout_4);
						(function(container){
							var button_2 = new cpr.controls.Button("btnSearch");
							button_2.value = "";
							button_2.style.setClasses(["btn-search"]);
							button_2.bind("value").toLanguage("UI-SCR-SCH");
							if(typeof onBtnSearchClick == "function") {
								button_2.addEventListener("click", onBtnSearchClick);
							}
							container.addChild(button_2, {
								"top": "5px",
								"left": "1135px",
								"width": "60px",
								"height": "25px"
							});
							var output_13 = new cpr.controls.Output("optMenuDivRcdWeek");
							output_13.value = "구분";
							container.addChild(output_13, {
								"top": "5px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var output_14 = new cpr.controls.Output("optSystemDivRcdWeek");
							output_14.value = "시스템";
							container.addChild(output_14, {
								"top": "5px",
								"left": "220px",
								"width": "95px",
								"height": "25px"
							});
							var output_15 = new cpr.controls.Output("optBaseDtWeek");
							output_15.value = "기준일자";
							output_15.style.setClasses(["require"]);
							container.addChild(output_15, {
								"top": "5px",
								"left": "660px",
								"width": "100px",
								"height": "25px"
							});
							var dateInput_2 = new cpr.controls.DateInput("dipBaseDtWeek");
							dateInput_2.format = "YYYY-MM-DD";
							dateInput_2.userAttr({"require": "Y"});
							dateInput_2.bind("fieldLabel").toExpression("#optBaseDtWeek.value");
							dateInput_2.bind("value").toDataMap(app.lookup("dmReqKeyWeekRecord"), "strBaseDt");
							container.addChild(dateInput_2, {
								"top": "5px",
								"left": "765px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_3 = new cpr.controls.ComboBox("cbbMenuDivRcdWeek");
							comboBox_3.bind("fieldLabel").toExpression("#optMenuDivRcdWeek.value");
							comboBox_3.bind("value").toDataMap(app.lookup("dmReqKeyWeekRecord"), "strMenuDivRcd");
							(function(comboBox_3){
								comboBox_3.addItem(new cpr.controls.Item("전체", ""));
								comboBox_3.setItemSet(app.lookup("dsMenuDivList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_3);
							if(typeof onCbbMenuDivRcdWeekSelectionChange == "function") {
								comboBox_3.addEventListener("selection-change", onCbbMenuDivRcdWeekSelectionChange);
							}
							container.addChild(comboBox_3, {
								"top": "5px",
								"left": "110px",
								"width": "100px",
								"height": "25px"
							});
							var comboBox_4 = new cpr.controls.ComboBox("cbbSystemDivRcdWeek");
							comboBox_4.bind("fieldLabel").toExpression("#optSystemDivRcdWeek.value");
							comboBox_4.bind("value").toDataMap(app.lookup("dmReqKeyWeekRecord"), "strUnitSystemRcd");
							(function(comboBox_4){
								comboBox_4.addItem(new cpr.controls.Item("전체", ""));
								comboBox_4.setItemSet(app.lookup("dsMenuSystemList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_4);
							container.addChild(comboBox_4, {
								"top": "5px",
								"left": "320px",
								"width": "130px",
								"height": "25px"
							});
							var output_16 = new cpr.controls.Output("optDrawDevDivRcdWeek");
							output_16.value = "설계/개발";
							output_16.style.setClasses(["require"]);
							container.addChild(output_16, {
								"top": "5px",
								"left": "460px",
								"width": "100px",
								"height": "25px"
							});
							var comboBox_5 = new cpr.controls.ComboBox("cbbDrawDevDivRcdWeek");
							comboBox_5.userAttr({"require": "Y"});
							comboBox_5.bind("fieldLabel").toExpression("#optDrawDevDivRcdWeek.value");
							comboBox_5.bind("value").toDataMap(app.lookup("dmReqKeyWeekRecord"), "strDrawDevDiv");
							(function(comboBox_5){
								comboBox_5.addItem(new cpr.controls.Item("설계", "10"));
								comboBox_5.addItem(new cpr.controls.Item("개발", "20"));
							})(comboBox_5);
							container.addChild(comboBox_5, {
								"top": "5px",
								"left": "565px",
								"width": "85px",
								"height": "150px"
							});
						})(group_5);
						container.addChild(group_5, {
							"top": "5px",
							"left": "5px",
							"width": "1200px",
							"height": "32px"
						});
					})(group_4);
					tabItem_2.content = group_4;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tpcDev";
					var group_6 = new cpr.controls.Container("grptpcDev");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_6.setLayout(formLayout_3);
					(function(container){
						var group_7 = new cpr.controls.Container("grpSearchDev");
						group_7.style.setClasses(["search-box"]);
						// Layout
						var xYLayout_5 = new cpr.controls.layouts.XYLayout();
						group_7.setLayout(xYLayout_5);
						(function(container){
							var button_3 = new cpr.controls.Button("btnSearchDev");
							button_3.value = "";
							button_3.style.setClasses(["btn-search"]);
							button_3.bind("value").toLanguage("UI-SCR-SCH");
							if(typeof onBtnSearchDevClick == "function") {
								button_3.addEventListener("click", onBtnSearchDevClick);
							}
							container.addChild(button_3, {
								"top": "5px",
								"left": "1135px",
								"width": "60px",
								"height": "25px"
							});
							var output_17 = new cpr.controls.Output("optBaseDtDevWork");
							output_17.value = "기준일자";
							output_17.style.setClasses(["require"]);
							container.addChild(output_17, {
								"top": "5px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var dateInput_3 = new cpr.controls.DateInput("dipBaseDtDevWork");
							dateInput_3.format = "YYYY-MM-DD";
							dateInput_3.userAttr({"require": "Y"});
							dateInput_3.bind("fieldLabel").toExpression("#optBaseDtDevWork.value");
							dateInput_3.bind("value").toDataMap(app.lookup("dmKeyDevWork"), "strBaseDt");
							container.addChild(dateInput_3, {
								"top": "5px",
								"left": "110px",
								"width": "110px",
								"height": "25px"
							});
						})(group_7);
						container.addChild(group_7, {
							"top": "5px",
							"left": "5px",
							"width": "1200px",
							"height": "32px"
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("");
						container.addChild(userDefinedControl_4, {
							"top": "42px",
							"left": "5px",
							"width": "255px",
							"height": "25px"
						});
						var grid_5 = linker.grid_5 = new cpr.controls.Grid("grdDevWork");
						grid_5.init({
							"dataSet": app.lookup("dsDevWork"),
							"columns": [
								{"width": "323px"},
								{"width": "323px"},
								{"width": "40px"},
								{"width": "185px"},
								{"width": "100px"},
								{"width": "153px"},
								{"width": "153px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "55px"},
								{"width": "202px"},
								{"width": "202px"},
								{"width": "55px"},
								{"width": "50px"},
								{"width": "50px"},
								{"width": "50px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-NO");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TOTAL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "개발본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.text = "대상";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.text = "완료";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.text = "미완성";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.text = "일정본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.text = "";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.text = "지연";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.text = "금주";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.text = "실적";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.text = "차주";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnName = "_repeatindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "CHAG_JOB_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "UNCMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "LAST_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "THIS_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "THIS_RESLT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "NEXT_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						if(typeof onGrdDevWorkSelectionChange == "function") {
							grid_5.addEventListener("selection-change", onGrdDevWorkSelectionChange);
						}
						container.addChild(grid_5, {
							"top": "67px",
							"left": "5px",
							"width": "1200px",
							"height": "524px"
						});
					})(group_6);
					tabItem_3.content = group_6;
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				
				var tabItem_4 = (function(tabFolder){
					var tabItem_4 = new cpr.controls.TabItem();
					tabItem_4.text = "tab1";
					tabItem_4.name = "tpcDevDtl";
					var group_8 = new cpr.controls.Container("grptpcDevDtl");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "0px";
					formLayout_4.verticalSpacing = "0px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_8.setLayout(formLayout_4);
					(function(container){
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
						userDefinedControl_5.bind("title").toLanguage("");
						container.addChild(userDefinedControl_5, {
							"top": "42px",
							"left": "5px",
							"width": "255px",
							"height": "25px"
						});
						var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
						userDefinedControl_6.bind("title").toLanguage("UI-SCR-UNITSYSTEM");
						container.addChild(userDefinedControl_6, {
							"top": "392px",
							"left": "5px",
							"width": "335px",
							"height": "25px"
						});
						var grid_6 = linker.grid_6 = new cpr.controls.Grid("grdDevChargerPgm");
						grid_6.init({
							"dataSet": app.lookup("dsDevChargerPgm"),
							"columns": [
								{"width": "40px"},
								{"width": "55px"},
								{"width": "81px"},
								{"width": "90px"},
								{"width": "102px"},
								{"width": "124px"},
								{"width": "106px"},
								{"width": "105px"},
								{"width": "87px"},
								{"width": "89px"},
								{"width": "131px"},
								{"width": "130px"},
								{"width": "67px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-NO");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TOTAL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-MNAWRTCMITYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.text = "프로그램ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "프로그램명";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "개발예정시작일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.text = "개발예정종료일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.text = "개발시작일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.text = "개발종료일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.text = "개발자테스트종료일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.text = "설계자테스트종료일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.text = "설계자명";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "SCHEDULE";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "UMENU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "PGM_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "PGM_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "DEV_PLAN_ST_DT";
											cell.control = (function(){
												var output_18 = new cpr.controls.Output("gdOptDevPlanStDt");
												output_18.dataType = "date";
												output_18.format = "YYYY-MM-DD";
												output_18.style.css({
													"text-align" : "center"
												});
												output_18.bind("value").toDataColumn("DEV_PLAN_ST_DT");
												return output_18;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "DEV_PLAN_END_DT";
											cell.control = (function(){
												var output_19 = new cpr.controls.Output("gdOptDevPlanEndDt");
												output_19.dataType = "date";
												output_19.format = "YYYY-MM-DD";
												output_19.style.css({
													"text-align" : "center"
												});
												output_19.bind("value").toDataColumn("DEV_PLAN_END_DT");
												return output_19;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "DEV_ST_DT";
											cell.control = (function(){
												var output_20 = new cpr.controls.Output("gdOptDevStDt");
												output_20.dataType = "date";
												output_20.format = "YYYY-MM-DD";
												output_20.style.css({
													"text-align" : "center"
												});
												output_20.bind("value").toDataColumn("DEV_ST_DT");
												return output_20;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "DEV_END_DT";
											cell.control = (function(){
												var output_21 = new cpr.controls.Output("gdOptDevEndDt");
												output_21.dataType = "date";
												output_21.format = "YYYY-MM-DD";
												output_21.style.css({
													"text-align" : "center"
												});
												output_21.bind("value").toDataColumn("DEV_END_DT");
												return output_21;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "DEV_TEST_END_DT";
											cell.control = (function(){
												var output_22 = new cpr.controls.Output("gdOptDevTestEndDt");
												output_22.dataType = "date";
												output_22.format = "YYYY-MM-DD";
												output_22.style.css({
													"text-align" : "center"
												});
												output_22.bind("value").toDataColumn("DEV_TEST_END_DT");
												return output_22;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "DRAW_TEST_END_DT";
											cell.control = (function(){
												var output_23 = new cpr.controls.Output("gdOptDrawTestEndDt");
												output_23.dataType = "date";
												output_23.format = "YYYY-MM-DD";
												output_23.style.css({
													"text-align" : "center"
												});
												output_23.bind("value").toDataColumn("DRAW_TEST_END_DT");
												return output_23;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "DRAW_CHARGER_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_6, {
							"top": "417px",
							"left": "5px",
							"width": "1200px",
							"height": "175px"
						});
						var grid_7 = linker.grid_7 = new cpr.controls.Grid("grdDevCharger");
						grid_7.init({
							"dataSet": app.lookup("dsDevCharger"),
							"columns": [
								{"width": "40px"},
								{"width": "229px"},
								{"width": "102px"},
								{"width": "76px"},
								{"width": "75px"},
								{"width": "89px"},
								{"width": "89px"},
								{"width": "100px"},
								{"width": "101px"},
								{"width": "290px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-NO");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TOTAL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-MNAWRTCMITYN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.text = "완료본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "미완료본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "지난일정본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.text = "금주일정본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.text = "차주일정본수";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.text = "비고";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "CHAG_JOB_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "DEV_CHARGER_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "DEV_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "CMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "UNCMPL_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "LAST_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "THIS_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "NEXT_SCHE_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "REMARK";
										}
									}
								]
							}
						});
						if(typeof onGrdDevChargerSelectionChange == "function") {
							grid_7.addEventListener("selection-change", onGrdDevChargerSelectionChange);
						}
						container.addChild(grid_7, {
							"top": "67px",
							"left": "5px",
							"width": "1200px",
							"height": "320px"
						});
						var group_9 = new cpr.controls.Container("grpSearch2");
						group_9.style.setClasses(["search-box"]);
						// Layout
						var xYLayout_6 = new cpr.controls.layouts.XYLayout();
						group_9.setLayout(xYLayout_6);
						(function(container){
							var button_4 = new cpr.controls.Button("btnSearch2");
							button_4.value = "";
							button_4.style.setClasses(["btn-search"]);
							button_4.bind("value").toLanguage("UI-SCR-SCH");
							if(typeof onBtnSearch2Click == "function") {
								button_4.addEventListener("click", onBtnSearch2Click);
							}
							container.addChild(button_4, {
								"top": "5px",
								"left": "1135px",
								"width": "60px",
								"height": "25px"
							});
							var output_24 = new cpr.controls.Output("optBaseDtDevDtl");
							output_24.value = "기준일자";
							output_24.style.setClasses(["require"]);
							container.addChild(output_24, {
								"top": "5px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var dateInput_4 = new cpr.controls.DateInput("dipBaseDtDevDtl");
							dateInput_4.format = "YYYY-MM-DD";
							dateInput_4.userAttr({"require": "Y"});
							dateInput_4.bind("fieldLabel").toExpression("#optBaseDtDevDtl.value");
							dateInput_4.bind("value").toDataMap(app.lookup("dmReqKeyDevDtl"), "strBaseDt");
							container.addChild(dateInput_4, {
								"top": "5px",
								"left": "110px",
								"width": "110px",
								"height": "25px"
							});
						})(group_9);
						container.addChild(group_9, {
							"top": "5px",
							"left": "5px",
							"width": "1200px",
							"height": "32px"
						});
						var button_5 = new cpr.controls.Button("btnPrjUpLoad");
						button_5.value = "";
						if(typeof onBtnPrjUpLoadClick == "function") {
							button_5.addEventListener("click", onBtnPrjUpLoadClick);
						}
						container.addChild(button_5, {
							"top": "582px",
							"left": "1204px",
							"width": "10px",
							"height": "10px"
						});
					})(group_8);
					tabItem_4.content = group_8;
					return tabItem_4;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_4);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "35px",
					"left": "5px",
					"width": "1215px",
					"height": "597px"
				});
				var button_6 = new cpr.controls.Button("tabBtnProgress");
				button_6.value = "진척현황";
				if(typeof onTabBtnProgressClick == "function") {
					button_6.addEventListener("click", onTabBtnProgressClick);
				}
				container.addChild(button_6, {
					"top": "8px",
					"left": "5px",
					"width": "115px",
					"height": "28px"
				});
				var button_7 = new cpr.controls.Button("tabBtnRecord");
				button_7.value = "주별실적현황";
				if(typeof onTabBtnRecordClick == "function") {
					button_7.addEventListener("click", onTabBtnRecordClick);
				}
				container.addChild(button_7, {
					"top": "8px",
					"left": "121px",
					"width": "100px",
					"height": "28px"
				});
				var button_8 = new cpr.controls.Button("tabBtnDev");
				button_8.value = "개발현황";
				if(typeof onTabBtnDevClick == "function") {
					button_8.addEventListener("click", onTabBtnDevClick);
				}
				container.addChild(button_8, {
					"top": "8px",
					"left": "222px",
					"width": "100px",
					"height": "28px"
				});
				var button_9 = new cpr.controls.Button("tabBtnDevDtl");
				button_9.value = "개발상세현황";
				if(typeof onTabBtnDevDtlClick == "function") {
					button_9.addEventListener("click", onTabBtnDevDtlClick);
				}
				container.addChild(button_9, {
					"top": "8px",
					"left": "323px",
					"width": "100px",
					"height": "28px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "640px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_3;
			linker.userDefinedControl_4.ctrl = linker.grid_5;
			linker.userDefinedControl_5.ctrl = linker.grid_7;
			linker.userDefinedControl_6.ctrl = linker.grid_6;
		}
	});
	app.title = "stdCmnCProjectProgressRate";
	cpr.core.Platform.INSTANCE.register(app);
})();
