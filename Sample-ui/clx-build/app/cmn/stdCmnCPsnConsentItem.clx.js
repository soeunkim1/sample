/*
 * App URI: app/cmn/stdCmnCPsnConsentItem
 * Source Location: app/cmn/stdCmnCPsnConsentItem.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCPsnConsentItem", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsItemDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsConsentDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsItem");
			dataSet_4.parseData({
				"info": "CMN_PSN_CONSENT_ITEM@USER_DIV_RCD,ITEM_DIV_RCD,ITEM_NO",
				"columns": [
					{"name": "USER_DIV_RCD"},
					{"name": "ITEM_DIV_RCD"},
					{"name": "ITEM_NO"},
					{"name": "ITEM_NM"},
					{"name": "COLLECT_CONT"},
					{"name": "CONSENT_DIV_RCD"},
					{"name": "USE_YN"},
					{"name": "MAND_YN"},
					{"name": "PRT_ORD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsFrfItem");
			dataSet_5.parseData({
				"columns": [
					{"name": "USER_DIV_RCD"},
					{"name": "ITEM_DIV_RCD"},
					{"name": "ITEM_NO"},
					{"name": "ITEM_NM"},
					{"name": "COLLECT_CONT"},
					{"name": "CONSENT_DIV_RCD"},
					{"name": "USE_YN"},
					{"name": "MAND_YN"},
					{"name": "PRT_ORD"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					},
					{
						"name": "strItemNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnPsnConsentItem/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnPsnConsentItem/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnPsnConsentItem/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUserDivRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-TGTDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUserDivRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optUserDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserDivRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsUserDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optItemNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-ITEM_NM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbItemNm");
				inputBox_1.bind("fieldLabel").toExpression("#optItemNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strItemNm");
				if(typeof onIpbItemNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbItemNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "355px",
					"width": "250px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdItem");
				grid_1.init({
					"dataSet": app.lookup("dsItem"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "87px"},
						{"width": "122px"},
						{"width": "141px"},
						{"width": "45px"},
						{"width": "42px"},
						{"width": "69px"},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-TGTDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-ITEMDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-ITEM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-MAND");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-USE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PRT_ORD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "동의구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "항목번호";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "수집내용";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbUserDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsUserDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("USER_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ITEM_DIV_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbItemDivRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsItemDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("ITEM_DIV_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ITEM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "MAND_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbMandYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("MAND_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdCkbUseYn");
										checkBox_2.enabled = false;
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("USE_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CONSENT_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "ITEM_NO";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbItemNo");
										inputBox_2.enabled = false;
										inputBox_2.maxLength = 15;
										inputBox_2.bind("value").toDataColumn("ITEM_NO");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "COLLECT_CONT";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbCollectCont");
										inputBox_3.enabled = false;
										inputBox_3.maxLength = 2000;
										inputBox_3.bind("value").toDataColumn("COLLECT_CONT");
										return inputBox_3;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdItemSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdItemSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "600px",
					"height": "565px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfItem");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_4 = new cpr.controls.Output("optFrfItemDivRcd");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-ITEMDIV");
					container.addChild(output_4, {
						"top": "55px",
						"left": "5px",
						"width": "60px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfItemDivRcd");
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optItemDivRcd.value");
					comboBox_4.bind("value").toDataColumn("ITEM_DIV_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsItemDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "55px",
						"left": "70px",
						"width": "350px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfItemNo");
					inputBox_4.visible = false;
					inputBox_4.maxLength = 15;
					inputBox_4.bind("value").toDataColumn("ITEM_NO");
					container.addChild(inputBox_4, {
						"top": "55px",
						"left": "430px",
						"width": "40px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfItemNm");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-DB-ITEM_NM");
					container.addChild(output_5, {
						"top": "5px",
						"left": "5px",
						"width": "60px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfItemNm");
					inputBox_5.maxLength = 100;
					inputBox_5.bind("fieldLabel").toExpression("#optItemNm.value");
					inputBox_5.bind("value").toDataColumn("ITEM_NM");
					container.addChild(inputBox_5, {
						"top": "5px",
						"left": "70px",
						"width": "530px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfCollectCont");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-SCR-COLLECTCONT");
					container.addChild(output_6, {
						"top": "80px",
						"left": "5px",
						"width": "60px",
						"height": "470px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfCollectCont");
					inputBox_6.visible = false;
					inputBox_6.maxLength = 2000;
					inputBox_6.bind("value").toDataColumn("COLLECT_CONT");
					container.addChild(inputBox_6, {
						"top": "55px",
						"left": "475px",
						"width": "40px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfConsentDivRcd");
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-SCR-CONSENTDIV");
					container.addChild(output_7, {
						"top": "30px",
						"left": "5px",
						"width": "60px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfConsentDivRcd");
					comboBox_5.bind("fieldLabel").toExpression("#optConsentDivRcd.value");
					comboBox_5.bind("value").toDataColumn("CONSENT_DIV_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsConsentDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "30px",
						"left": "70px",
						"width": "100px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfUseYn");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-USE_YN");
					container.addChild(output_8, {
						"top": "30px",
						"left": "305px",
						"width": "60px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfMandYn");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-DB-MAND_YN");
					container.addChild(output_9, {
						"top": "30px",
						"left": "180px",
						"width": "60px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfPrtOrd");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-DB-PRT_ORD");
					container.addChild(output_10, {
						"top": "30px",
						"left": "430px",
						"width": "60px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfPrtOrd");
					numberEditor_1.format = "99999";
					numberEditor_1.bind("fieldLabel").toExpression("#optPrtOrd.value");
					numberEditor_1.bind("value").toDataColumn("PRT_ORD");
					container.addChild(numberEditor_1, {
						"top": "30px",
						"left": "495px",
						"width": "80px",
						"height": "25px"
					});
					var checkBox_3 = new cpr.controls.CheckBox("ckbFrfMandYn");
					checkBox_3.value = "";
					checkBox_3.trueValue = "Y";
					checkBox_3.falseValue = "";
					checkBox_3.text = "";
					checkBox_3.style.css({
						"text-align" : "center"
					});
					checkBox_3.bind("fieldLabel").toExpression("#optFrfMandYn.value");
					checkBox_3.bind("value").toDataColumn("MAND_YN");
					container.addChild(checkBox_3, {
						"top": "30px",
						"left": "245px",
						"width": "50px",
						"height": "25px"
					});
					var checkBox_4 = new cpr.controls.CheckBox("ckbFrfUseYn");
					checkBox_4.value = "";
					checkBox_4.trueValue = "Y";
					checkBox_4.falseValue = "";
					checkBox_4.text = "";
					checkBox_4.style.css({
						"text-align" : "center"
					});
					checkBox_4.bind("fieldLabel").toExpression("#optFrfUseYn.value");
					checkBox_4.bind("value").toDataColumn("USE_YN");
					container.addChild(checkBox_4, {
						"top": "30px",
						"left": "370px",
						"width": "50px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfUserDivRcd");
					inputBox_7.visible = false;
					inputBox_7.bind("value").toDataColumn("USER_DIV_RCD");
					container.addChild(inputBox_7, {
						"top": "55px",
						"left": "520px",
						"width": "40px",
						"height": "25px"
					});
					var textArea_1 = new cpr.controls.TextArea("txtFrfContent");
					textArea_1.bind("value").toDataColumn("COLLECT_CONT");
					container.addChild(textArea_1, {
						"top": "80px",
						"left": "70px",
						"width": "530px",
						"height": "470px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "30px",
					"left": "615px",
					"width": "605px",
					"height": "565px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-PSNCONSENTITEM");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-COLLECTCONT");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "615px",
					"width": "150px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnTestApply");
				button_6.visible = false;
				button_6.value = "팝업 테스트";
				if(typeof onBtnTestApplyClick == "function") {
					button_6.addEventListener("click", onBtnTestApplyClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "855px",
					"width": "100px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaCmnEditor");
			cpr.core.App.load("app/cmn/impStdCmnEditor", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "665px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCmnCPsnConsentItem";
	cpr.core.Platform.INSTANCE.register(app);
})();
