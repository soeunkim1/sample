/*
 * App URI: app/cmn/stdCmnCRegPgm
 * Source Location: app/cmn/stdCmnCRegPgm.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCRegPgm", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					
					if(pbSuccess){
						util.SelectCtl.setValue(app, "cbbLanDivRcd", util.getDefaultLocale(app));
						util.Control.setFocus(app, "ipbPgmNm");
					}
				});
				
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				
				if(util.Grid.isModified(app, "grdCmnPgm", "CRM")){
					return false;
				}
				
				doList(function(pbSuccess){
					if (pbSuccess){ 
						util.Msg.notify(app, "NLS-INF-M024") ;
					}
				});
				
			}
			
			/**
			 * @desc 조회 서브미션 실행
			 * @param 
			 * @return 
			 * @author
			 */
			function doList(poCallBackFunc) {
			
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess){
						var vnCnt = util.Grid.getRowCount(app, "grdCmnPgm");
						util.Control.redraw(app, ["grdCmnPgm"]);
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				});
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Insert(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				
				util.Control.setFocus(app, "ipbFrfPgmId");
				
				//조회조건의 값
				var vsUnitSystemRcd = util.DataMap.getValue(app, "dmReqList", "strUnitSystemRcd");
				var vsLanDivRcd = util.DataMap.getValue(app, "dmReqList", "strLanDivRcd");
				
				util.Grid.setCellValue(app, "grdCmnPgm", "UNIT_SYSTEM_RCD", vsUnitSystemRcd);
				util.Grid.setCellValue(app, "grdCmnPgm", "LAN_DIV_RCD", vsLanDivRcd);
				
				util.Grid.setCellValue(app, "grdCmnPgm", "USE_YN", "Y");
				util.Grid.setCellValue(app, "grdCmnPgm", "APLY_YN", "Y");
				util.Grid.setCellValue(app, "grdCmnPgm", "PGM_DIV_RCD", "CB00402");
				util.Grid.setCellValue(app, "grdCmnPgm", "PGM_TYPE_RCD", "CB00301");
				
			}
			
			
			function doSave() {
			
				//그리드 변경사항 체크
				if(!util.Grid.isModified(app, "grdCmnPgm","MSG")){
					return false;
				}
				
				//그리드 유효성 검증
				if(!util.validate(app, "grdCmnPgm")){
					return false;
				}
			
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess){
						doList(function(pbListSuccess){
							if (pbListSuccess) util.Msg.notify(app, "NLS-INF-M025");
						}); 
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				doSave();
			}
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnFileUpLoadClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnFileUpLoad = e.control;
				util.FileUtil.getFileName(".xls , .xlsx", function(paFiles){
					
					var voSubPgmSave = app.lookup("subPgmSave");
					
					util.Submit.addFileParameter(app, "subPgmSave", paFiles);
					
					util.Submit.send(app, "subPgmSave", function(pbSuccess){
						
						if(pbSuccess){
							doList();
						}
					});
				}, 1);
			}
			
			/*
			 * 사용자 정의 컨트롤에서 idrCommonEvent 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1IdrCommonEvent(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				util.Control.redraw(app, "frfCmnPgm");
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsPgmDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsPgmTypeRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsProcRateRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsPgmDtlTypeRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmnPgm");
			dataSet_7.parseData({
				"info": "CMN_PGM@PGM_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "PGM_NM"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "PGM_DIV_RCD"},
					{"name": "CALL_PRCS"},
					{"name": "CALL_PAGE"},
					{"name": "RTRN_PAGE"},
					{"name": "PGM_TYPE_RCD"},
					{"name": "USE_YN"},
					{"name": "APLY_YN"},
					{"name": "PGM_CHARGER_ID"},
					{"name": "DEV_FINISH_YN"},
					{"name": "TEST_FINISH_YN"},
					{"name": "DEV_END_DT"},
					{"name": "DEV_PLAN_ST_DT"},
					{"name": "DEV_PLAN_END_DT"},
					{"name": "DEV_ST_DT"},
					{"name": "MAN_FINISH_YN"},
					{"name": "DEV_CHARGER_NM"},
					{"name": "DRAW_CHARGER_NM"},
					{"name": "AUTH_USE_YN"},
					{"name": "LOG_YN"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "DRAW_ST_DT"},
					{"name": "DRAW_END_DT"},
					{"name": "DRAW_PLAN_ST_DT"},
					{"name": "DRAW_PLAN_END_DT"},
					{"name": "DRAW_DAYCNT"},
					{"name": "DEV_DAYCNT"},
					{"name": "DRAW_RATE"},
					{"name": "DRAW_DESC"},
					{"name": "DEV_RATE"},
					{"name": "DEV_DESC"},
					{"name": "DRAW_TGT_YN"},
					{"name": "REQ_MATT_ID"},
					{"name": "DEV_TEST_ST_DT"},
					{"name": "DEV_TEST_END_DT"},
					{"name": "DEV_TEST_PLAN_ST_DT"},
					{"name": "DEV_TEST_PLAN_END_DT"},
					{"name": "DRAW_TEST_ST_DT"},
					{"name": "DRAW_TEST_END_DT"},
					{"name": "DRAW_TEST_PLAN_ST_DT"},
					{"name": "DRAW_TEST_PLAN_END_DT"},
					{"name": "ADD_DT"},
					{"name": "DEL_DT"},
					{"name": "ADD_DEL_DESC"},
					{"name": "STUD_DVRS"},
					{"name": "PROF_DVRS"},
					{"name": "PRT_ORD"},
					{"name": "PGM_DTL_TYPE_RCD"},
					{"name": "RESIZE_YN"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsFrfCmnPgm");
			dataSet_8.parseData({
				"info": "CMN_PGM@PGM_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "PGM_NM"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "PGM_DIV_RCD"},
					{"name": "CALL_PRCS"},
					{"name": "CALL_PAGE"},
					{"name": "RTRN_PAGE"},
					{"name": "PGM_TYPE_RCD"},
					{"name": "USE_YN"},
					{"name": "APLY_YN"},
					{"name": "PGM_CHARGER_ID"},
					{"name": "DEV_FINISH_YN"},
					{"name": "TEST_FINISH_YN"},
					{"name": "DEV_END_DT"},
					{"name": "DEV_PLAN_ST_DT"},
					{"name": "DEV_PLAN_END_DT"},
					{"name": "DEV_ST_DT"},
					{"name": "MAN_FINISH_YN"},
					{"name": "DEV_CHARGER_NM"},
					{"name": "DRAW_CHARGER_NM"},
					{"name": "AUTH_USE_YN"},
					{"name": "LOG_YN"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "DRAW_ST_DT"},
					{"name": "DRAW_END_DT"},
					{"name": "DRAW_PLAN_ST_DT"},
					{"name": "DRAW_PLAN_END_DT"},
					{"name": "DRAW_DAYCNT"},
					{"name": "DEV_DAYCNT"},
					{"name": "DRAW_RATE"},
					{"name": "DRAW_DESC"},
					{"name": "DEV_RATE"},
					{"name": "DEV_DESC"},
					{"name": "DRAW_TGT_YN"},
					{"name": "REQ_MATT_ID"},
					{"name": "DEV_TEST_ST_DT"},
					{"name": "DEV_TEST_END_DT"},
					{"name": "DEV_TEST_PLAN_ST_DT"},
					{"name": "DEV_TEST_PLAN_END_DT"},
					{"name": "DRAW_TEST_ST_DT"},
					{"name": "DRAW_TEST_END_DT"},
					{"name": "DRAW_TEST_PLAN_ST_DT"},
					{"name": "DRAW_TEST_PLAN_END_DT"},
					{"name": "ADD_DT"},
					{"name": "DEL_DT"},
					{"name": "ADD_DEL_DESC"},
					{"name": "STUD_DVRS"},
					{"name": "PROF_DVRS"},
					{"name": "PRT_ORD"},
					{"name": "PGM_DTL_TYPE_RCD"},
					{"name": "RESIZE_YN"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPgmId",
						"dataType": "string"
					},
					{
						"name": "strPgmNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnPgm/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnPgm/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnPgm/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subPgmSave");
			submission_4.action = "/cmn/StdCmnPgm/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUnitSystemRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUnitSystemRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUnitSystemRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optLanDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-LANKEY");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbLanDivRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optLanDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strLanDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsLanDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optPgmId");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-PGM_ID");
				container.addChild(output_3, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbPgmId");
				inputBox_1.maxLength = 100;
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optPgmId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmId");
				if(typeof onIpbPgmIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbPgmIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "600px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optPgmNm");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-DB-PGM_NM");
				container.addChild(output_4, {
					"top": "5px",
					"left": "740px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbPgmNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optPgmNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmNm");
				if(typeof onIpbPgmNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbPgmNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "845px",
					"width": "130px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbUseYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUseYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "1090px",
					"width": "15px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optUseYn");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-DB-USE_YN");
				container.addChild(output_5, {
					"top": "5px",
					"left": "985px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-PGLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnPgm");
				grid_1.init({
					"dataSet": app.lookup("dsCmnPgm"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "116px"},
						{"width": "202px"},
						{"width": "249px"},
						{
							"width": "88px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "215px",
							"visible": false
						},
						{
							"width": "74px",
							"visible": false
						},
						{
							"width": "98px",
							"visible": false
						},
						{
							"width": "98px",
							"visible": false
						},
						{
							"width": "117px",
							"visible": false
						},
						{
							"width": "188px",
							"visible": false
						},
						{
							"width": "132px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "135px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "120px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "144px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "150px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "101px",
							"visible": false
						},
						{
							"width": "101px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "단위시스템";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "프로그램ID";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "프로그램명";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "언어키";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "프로그램구분";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "프로그램유형";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "호출페이지";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "사용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "로그생성여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "권한위임여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "메뉴얼완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "호출프로세스";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "리턴페이지";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "적용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "프로그램담당자ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "개발완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "테스트완료여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "개발종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "개발계획시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.text = "개발계획종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.text = "개발시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.text = "개발담당자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.text = "설계담당자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.text = "매뉴얼파일순번";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.text = "설계시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.text = "설계종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.text = "설계계획시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.text = "설계계획종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.text = "설계일수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.text = "개발일수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.text = "설계률";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.text = "설계내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.text = "추가일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.text = "삭제일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.text = "추가삭제내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.text = "학생전용";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.text = "교수전용";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.text = "출력순서";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.text = "개발률";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.text = "개발내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 43},
								"configurator": function(cell){
									cell.text = "요구사항ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 44},
								"configurator": function(cell){
									cell.text = "개발테스트시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 45},
								"configurator": function(cell){
									cell.text = "개발테스트종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 46},
								"configurator": function(cell){
									cell.text = "개발테스트계획시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 47},
								"configurator": function(cell){
									cell.text = "개발테스트계획종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 48},
								"configurator": function(cell){
									cell.text = "설계테스트시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 49},
								"configurator": function(cell){
									cell.text = "설계테스트종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 50},
								"configurator": function(cell){
									cell.text = "설계테스트계획시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 51},
								"configurator": function(cell){
									cell.text = "설계테스트계획종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 52},
								"configurator": function(cell){
									cell.text = "프로그램세부유형코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 53},
								"configurator": function(cell){
									cell.text = "RESIZE여부";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.style.css({
											"text-align" : "center"
										});
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "UNIT_SYSTEM_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbUnitSystemRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsUnitSystemRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("UNIT_SYSTEM_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PGM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PGM_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PGM_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CALL_PAGE";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbCallPage");
										inputBox_3.maxLength = 100;
										inputBox_3.bind("value").toDataColumn("CALL_PAGE");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdChkUseYn");
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("USE_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "LOG_YN";
									cell.control = (function(){
										var checkBox_3 = new cpr.controls.CheckBox("gdChkLogYn");
										checkBox_3.value = "";
										checkBox_3.trueValue = "Y";
										checkBox_3.falseValue = "";
										checkBox_3.text = "";
										checkBox_3.style.css({
											"text-align" : "center"
										});
										checkBox_3.bind("value").toDataColumn("LOG_YN");
										return checkBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "AUTH_USE_YN";
									cell.control = (function(){
										var checkBox_4 = new cpr.controls.CheckBox("gdChkAuthUseYn");
										checkBox_4.value = "";
										checkBox_4.trueValue = "Y";
										checkBox_4.falseValue = "";
										checkBox_4.text = "";
										checkBox_4.style.css({
											"text-align" : "center"
										});
										checkBox_4.bind("value").toDataColumn("AUTH_USE_YN");
										return checkBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "MAN_FINISH_YN";
									cell.control = (function(){
										var checkBox_5 = new cpr.controls.CheckBox("gdChkManFinishYn");
										checkBox_5.value = "";
										checkBox_5.trueValue = "Y";
										checkBox_5.falseValue = "";
										checkBox_5.text = "";
										checkBox_5.style.css({
											"text-align" : "center"
										});
										checkBox_5.bind("value").toDataColumn("MAN_FINISH_YN");
										return checkBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CALL_PRCS";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbCallPrcs");
										inputBox_4.maxLength = 100;
										inputBox_4.bind("value").toDataColumn("CALL_PRCS");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "RTRN_PAGE";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbRtrnPage");
										inputBox_5.maxLength = 100;
										inputBox_5.bind("value").toDataColumn("RTRN_PAGE");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "APLY_YN";
									cell.control = (function(){
										var checkBox_6 = new cpr.controls.CheckBox("gdChkAplyYn");
										checkBox_6.value = "";
										checkBox_6.trueValue = "Y";
										checkBox_6.falseValue = "";
										checkBox_6.text = "";
										checkBox_6.style.css({
											"text-align" : "center"
										});
										checkBox_6.bind("value").toDataColumn("APLY_YN");
										return checkBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "PGM_CHARGER_ID";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbPgmChargerId");
										inputBox_6.maxLength = 50;
										inputBox_6.bind("value").toDataColumn("PGM_CHARGER_ID");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "DEV_FINISH_YN";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbDevFinishYn");
										inputBox_7.maxLength = 1;
										inputBox_7.bind("value").toDataColumn("DEV_FINISH_YN");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "TEST_FINISH_YN";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbTestFinishYn");
										inputBox_8.maxLength = 1;
										inputBox_8.bind("value").toDataColumn("TEST_FINISH_YN");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "DEV_END_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipDevEndDt");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.style.css({
											"text-align" : "center"
										});
										dateInput_1.bind("value").toDataColumn("DEV_END_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipDevPlanStDt");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.style.css({
											"text-align" : "center"
										});
										dateInput_2.bind("value").toDataColumn("DEV_PLAN_ST_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("gdDipDevPlanEndDt");
										dateInput_3.format = "YYYY-MM-DD";
										dateInput_3.style.css({
											"text-align" : "center"
										});
										dateInput_3.bind("value").toDataColumn("DEV_PLAN_END_DT");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "DEV_ST_DT";
									cell.control = (function(){
										var dateInput_4 = new cpr.controls.DateInput("gdDipDevStDt");
										dateInput_4.format = "YYYY-MM-DD";
										dateInput_4.style.css({
											"text-align" : "center"
										});
										dateInput_4.bind("value").toDataColumn("DEV_ST_DT");
										return dateInput_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "DEV_CHARGER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "DRAW_CHARGER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "DRAW_ST_DT";
									cell.control = (function(){
										var dateInput_5 = new cpr.controls.DateInput("gdDipDrawStDt");
										dateInput_5.format = "YYYY-MM-DD";
										dateInput_5.style.css({
											"text-align" : "center"
										});
										dateInput_5.bind("value").toDataColumn("DRAW_ST_DT");
										return dateInput_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "DRAW_END_DT";
									cell.control = (function(){
										var dateInput_6 = new cpr.controls.DateInput("gdDipDrawEndDt");
										dateInput_6.format = "YYYY-MM-DD";
										dateInput_6.style.css({
											"text-align" : "center"
										});
										dateInput_6.bind("value").toDataColumn("DRAW_END_DT");
										return dateInput_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "DRAW_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_7 = new cpr.controls.DateInput("gdDipDrawPlanStDt");
										dateInput_7.format = "YYYY-MM-DD";
										dateInput_7.style.css({
											"text-align" : "center"
										});
										dateInput_7.bind("value").toDataColumn("DRAW_PLAN_ST_DT");
										return dateInput_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "DRAW_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_8 = new cpr.controls.DateInput("gdDipDrawPlanEndDt");
										dateInput_8.format = "YYYY-MM-DD";
										dateInput_8.style.css({
											"text-align" : "center"
										});
										dateInput_8.bind("value").toDataColumn("DRAW_PLAN_END_DT");
										return dateInput_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "DRAW_DAYCNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.columnName = "DEV_DAYCNT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.columnName = "DRAW_RATE";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.columnName = "DRAW_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.columnName = "ADD_DT";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptAddDt");
										output_7.dataType = "date";
										output_7.format = "YYYY-MM-DD";
										output_7.bind("value").toDataColumn("ADD_DT");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.columnName = "DEL_DT";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptDelDt");
										output_8.dataType = "date";
										output_8.format = "YYYY-MM-DD";
										output_8.bind("value").toDataColumn("DEL_DT");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.columnName = "ADD_DEL_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.columnName = "STUD_DVRS";
									cell.control = (function(){
										var checkBox_7 = new cpr.controls.CheckBox("gdCkbStudDvrs");
										checkBox_7.value = "";
										checkBox_7.trueValue = "Y";
										checkBox_7.falseValue = "";
										checkBox_7.text = "";
										checkBox_7.style.css({
											"text-align" : "center"
										});
										checkBox_7.bind("value").toDataColumn("STUD_DVRS");
										return checkBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.columnName = "PROF_DVRS";
									cell.control = (function(){
										var checkBox_8 = new cpr.controls.CheckBox("gdCkbProfDvrs");
										checkBox_8.value = "";
										checkBox_8.trueValue = "Y";
										checkBox_8.falseValue = "";
										checkBox_8.text = "";
										checkBox_8.style.css({
											"text-align" : "center"
										});
										checkBox_8.bind("value").toDataColumn("PROF_DVRS");
										return checkBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.columnName = "DEV_RATE";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.columnName = "DEV_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 43},
								"configurator": function(cell){
									cell.columnName = "REQ_MATT_ID";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbReqMattId");
										inputBox_9.maxLength = 100;
										inputBox_9.bind("value").toDataColumn("REQ_MATT_ID");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 44},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_ST_DT";
									cell.control = (function(){
										var dateInput_9 = new cpr.controls.DateInput("gdDipDevTestStDt");
										dateInput_9.format = "YYYY-MM-DD";
										dateInput_9.style.css({
											"text-align" : "center"
										});
										dateInput_9.bind("value").toDataColumn("DEV_TEST_ST_DT");
										return dateInput_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 45},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_END_DT";
									cell.control = (function(){
										var dateInput_10 = new cpr.controls.DateInput("gdDipDevTestEndDt");
										dateInput_10.format = "YYYY-MM-DD";
										dateInput_10.style.css({
											"text-align" : "center"
										});
										dateInput_10.bind("value").toDataColumn("DEV_TEST_END_DT");
										return dateInput_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 46},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_11 = new cpr.controls.DateInput("gdDipDevTestPlanStDt");
										dateInput_11.format = "YYYY-MM-DD";
										dateInput_11.style.css({
											"text-align" : "center"
										});
										dateInput_11.bind("value").toDataColumn("DEV_TEST_PLAN_ST_DT");
										return dateInput_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 47},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_12 = new cpr.controls.DateInput("gdDipDevTestPlanEndDt");
										dateInput_12.format = "YYYY-MM-DD";
										dateInput_12.style.css({
											"text-align" : "center"
										});
										dateInput_12.bind("value").toDataColumn("DEV_TEST_PLAN_END_DT");
										return dateInput_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 48},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_ST_DT";
									cell.control = (function(){
										var dateInput_13 = new cpr.controls.DateInput("gdDipDrawTestStDt");
										dateInput_13.format = "YYYY-MM-DD";
										dateInput_13.style.css({
											"text-align" : "center"
										});
										dateInput_13.bind("value").toDataColumn("DRAW_TEST_ST_DT");
										return dateInput_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 49},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_END_DT";
									cell.control = (function(){
										var dateInput_14 = new cpr.controls.DateInput("gdDipDrawTestEndDt");
										dateInput_14.format = "YYYY-MM-DD";
										dateInput_14.style.css({
											"text-align" : "center"
										});
										dateInput_14.bind("value").toDataColumn("DRAW_TEST_END_DT");
										return dateInput_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 50},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_15 = new cpr.controls.DateInput("gdDipDrawTestPlanStDt");
										dateInput_15.format = "YYYY-MM-DD";
										dateInput_15.style.css({
											"text-align" : "center"
										});
										dateInput_15.bind("value").toDataColumn("DRAW_TEST_PLAN_ST_DT");
										return dateInput_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 51},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_16 = new cpr.controls.DateInput("gdDipDrawTestPlanEndDt");
										dateInput_16.format = "YYYY-MM-DD";
										dateInput_16.style.css({
											"text-align" : "center"
										});
										dateInput_16.bind("value").toDataColumn("DRAW_TEST_PLAN_END_DT");
										return dateInput_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 52},
								"configurator": function(cell){
									cell.columnName = "PGM_DTL_TYPE_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 53},
								"configurator": function(cell){
									cell.columnName = "RESIZE_YN";
									cell.control = (function(){
										var checkBox_9 = new cpr.controls.CheckBox("gdCkbResizeYn");
										checkBox_9.value = "";
										checkBox_9.trueValue = "Y";
										checkBox_9.falseValue = "";
										checkBox_9.text = "";
										checkBox_9.bind("value").toDataColumn("RESIZE_YN");
										return checkBox_9;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnPgmSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnPgmSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "665px",
					"height": "565px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "675px",
					"width": "150px",
					"height": "25px"
				});
				var grid_2 = new cpr.controls.Grid("frfCmnPgm");
				grid_2.init({
					"dataSet": app.lookup("dsFrfCmnPgm"),
					"columns": [
						{"width": "291px"},
						{"width": "654px"},
						{"width": "642px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DRAW");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DEV");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "560px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REQ_MATT_ID";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("ipbFrfPgmChargerId");
										inputBox_10.maxLength = 50;
										inputBox_10.bind("value").toDataColumn("REQ_MATT_ID");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("lblFrfPgmChargerId");
										output_9.bind("value").toDataColumn("word");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("lblFrfReqMattId");
										output_10.bind("value").toDataColumn("word");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PGM_CHARGER_ID";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("ipbFrfReqMattId");
										inputBox_11.maxLength = 50;
										inputBox_11.bind("value").toDataColumn("PGM_CHARGER_ID");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_11 = new cpr.controls.Output("lblFrfPgmId");
										return output_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("ipbFrfPgmId");
										inputBox_12.maxLength = 50;
										inputBox_12.imeMode = "inactive";
										inputBox_12.userAttr({"require": "Y"});
										inputBox_12.bind("value").toDataColumn("PGM_ID");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_12 = new cpr.controls.Output("lblFrfPgmNm");
										return output_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PGM_NM";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("ipbFrfPgmNm");
										inputBox_13.maxLength = 200;
										inputBox_13.userAttr({"require": "Y"});
										inputBox_13.bind("value").toDataColumn("PGM_NM");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_13 = new cpr.controls.Output("lblFrfUnitSystemRcd");
										return output_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "UNIT_SYSTEM_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("cbbFrfUnitSystemRcd");
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsUnitSystemRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("UNIT_SYSTEM_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_14 = new cpr.controls.Output("lblFrfLanDivRcd");
										return output_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("cbbFrfLanDivRcd");
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsLanDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_15 = new cpr.controls.Output("lblFrfPgmDivRcd");
										return output_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "PGM_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("cbbFrfPgmDivRcd");
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsPgmDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("PGM_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_16 = new cpr.controls.Output("lblFrfPgmTypeRcd");
										return output_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "PGM_TYPE_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("cbbFrfPgmTypeRcd");
										comboBox_7.userAttr({"require": "Y"});
										(function(comboBox_7){
											comboBox_7.addItem(new cpr.controls.Item("선택", ""));
											comboBox_7.setItemSet(app.lookup("dsPgmTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("PGM_TYPE_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_17 = new cpr.controls.Output("lblFrfCallPage");
										return output_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "CALL_PAGE";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("ipbFrfCallPage");
										inputBox_14.maxLength = 100;
										inputBox_14.imeMode = "inactive";
										inputBox_14.bind("value").toDataColumn("CALL_PAGE");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_18 = new cpr.controls.Output("lblFrfCallPrcs");
										return output_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "CALL_PRCS";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("ipbFrfCallPrcs");
										inputBox_15.maxLength = 100;
										inputBox_15.bind("value").toDataColumn("CALL_PRCS");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_19 = new cpr.controls.Output("lblFrfRtrnPage");
										return output_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "RTRN_PAGE";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("ipbFrfRtrnPage");
										inputBox_16.maxLength = 100;
										inputBox_16.bind("value").toDataColumn("RTRN_PAGE");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_20 = new cpr.controls.Output("lblFrfUseYn");
										return output_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_21 = new cpr.controls.Output("lblFrfManFinishYn");
										return output_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "MAN_FINISH_YN";
									cell.control = (function(){
										var checkBox_10 = new cpr.controls.CheckBox("ckbFrfManFinishYn");
										checkBox_10.value = "";
										checkBox_10.trueValue = "Y";
										checkBox_10.falseValue = "";
										checkBox_10.text = "";
										checkBox_10.style.css({
											"text-align" : "center"
										});
										checkBox_10.bind("value").toDataColumn("MAN_FINISH_YN");
										return checkBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_11 = new cpr.controls.CheckBox("ckbFrfUseYn");
										checkBox_11.value = "";
										checkBox_11.trueValue = "Y";
										checkBox_11.falseValue = "";
										checkBox_11.text = "";
										checkBox_11.style.css({
											"text-align" : "center"
										});
										checkBox_11.bind("value").toDataColumn("USE_YN");
										return checkBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_22 = new cpr.controls.Output("lblFrfLogYn");
										return output_22;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_23 = new cpr.controls.Output("lblFrfAplyYn");
										output_23.visible = false;
										return output_23;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "APLY_YN";
									cell.control = (function(){
										var checkBox_12 = new cpr.controls.CheckBox("ckbFrfAplyYn");
										checkBox_12.visible = false;
										checkBox_12.value = "";
										checkBox_12.trueValue = "Y";
										checkBox_12.falseValue = "";
										checkBox_12.text = "";
										checkBox_12.style.css({
											"text-align" : "center"
										});
										checkBox_12.bind("value").toDataColumn("APLY_YN");
										return checkBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "LOG_YN";
									cell.control = (function(){
										var checkBox_13 = new cpr.controls.CheckBox("ckbFrfLogYn");
										checkBox_13.value = "";
										checkBox_13.trueValue = "Y";
										checkBox_13.falseValue = "";
										checkBox_13.text = "";
										checkBox_13.style.css({
											"text-align" : "center"
										});
										checkBox_13.bind("value").toDataColumn("LOG_YN");
										return checkBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_24 = new cpr.controls.Output("lblFrfAuthUseYn");
										return output_24;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "AUTH_USE_YN";
									cell.control = (function(){
										var checkBox_14 = new cpr.controls.CheckBox("ckbFrfAuthUseYn");
										checkBox_14.value = "";
										checkBox_14.trueValue = "Y";
										checkBox_14.falseValue = "";
										checkBox_14.text = "";
										checkBox_14.style.css({
											"text-align" : "center"
										});
										checkBox_14.bind("value").toDataColumn("AUTH_USE_YN");
										return checkBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DRAW_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_17 = new cpr.controls.DateInput("ipbFrfDrawPlanStDt");
										dateInput_17.format = "YYYY-MM-DD";
										dateInput_17.style.css({
											"text-align" : "center"
										});
										dateInput_17.bind("value").toDataColumn("DRAW_PLAN_ST_DT");
										return dateInput_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "DRAW_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_18 = new cpr.controls.DateInput("ipbFrfDrawPlanEndDt");
										dateInput_18.format = "YYYY-MM-DD";
										dateInput_18.style.css({
											"text-align" : "center"
										});
										dateInput_18.bind("value").toDataColumn("DRAW_PLAN_END_DT");
										return dateInput_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "DRAW_ST_DT";
									cell.control = (function(){
										var dateInput_19 = new cpr.controls.DateInput("ipbFrfDrawStDt");
										dateInput_19.format = "YYYY-MM-DD";
										dateInput_19.style.css({
											"text-align" : "center"
										});
										dateInput_19.bind("value").toDataColumn("DRAW_ST_DT");
										return dateInput_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "DRAW_END_DT";
									cell.control = (function(){
										var dateInput_20 = new cpr.controls.DateInput("ipbFrfDrawEndDt");
										dateInput_20.format = "YYYY-MM-DD";
										dateInput_20.style.css({
											"text-align" : "center"
										});
										dateInput_20.bind("value").toDataColumn("DRAW_END_DT");
										return dateInput_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DRAW_DAYCNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "DRAW_RATE";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("cbbFrfDrawRate");
										(function(comboBox_8){
											comboBox_8.setItemSet(app.lookup("dsProcRateRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("DRAW_RATE");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "DRAW_DESC";
									cell.control = (function(){
										var inputBox_17 = new cpr.controls.InputBox("ipbFrfDrawDesc");
										inputBox_17.maxLength = 1000;
										inputBox_17.bind("value").toDataColumn("DRAW_DESC");
										return inputBox_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_25 = new cpr.controls.Output("lblFrfDrawPlanStDt");
										output_25.bind("value").toDataColumn("word");
										return output_25;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_26 = new cpr.controls.Output("label1");
										return output_26;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 41},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_27 = new cpr.controls.Output("lblFrfDrawStDt");
										output_27.bind("value").toDataColumn("word");
										return output_27;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 42},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_28 = new cpr.controls.Output("label2");
										return output_28;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 43},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_29 = new cpr.controls.Output("lblFrfDrawRate");
										output_29.bind("value").toDataColumn("word");
										return output_29;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 44},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_30 = new cpr.controls.Output("lblFrfDrawChargerNm");
										output_30.bind("value").toDataColumn("word");
										return output_30;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DRAW_CHARGER_NM";
									cell.control = (function(){
										var inputBox_18 = new cpr.controls.InputBox("ipbFrfDrawChargerNm");
										inputBox_18.maxLength = 50;
										inputBox_18.bind("value").toDataColumn("DRAW_CHARGER_NM");
										return inputBox_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 46},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_31 = new cpr.controls.Output("lblFrfDrawDesc");
										output_31.bind("value").toDataColumn("word");
										return output_31;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 47},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_32 = new cpr.controls.Output("lblFrfDrawPlanStDt1");
										output_32.bind("value").toDataColumn("word");
										return output_32;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 48},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_33 = new cpr.controls.Output("lblFrfDevStDt");
										output_33.bind("value").toDataColumn("word");
										return output_33;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 49},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_34 = new cpr.controls.Output("lblFrfDevDesc");
										output_34.bind("value").toDataColumn("word");
										return output_34;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "DEV_DESC";
									cell.control = (function(){
										var inputBox_19 = new cpr.controls.InputBox("ipbFrfDevDesc");
										inputBox_19.maxLength = 1000;
										inputBox_19.bind("value").toDataColumn("DEV_DESC");
										return inputBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_21 = new cpr.controls.DateInput("ipbFrfDevPlanStDt");
										dateInput_21.format = "YYYY-MM-DD";
										dateInput_21.style.css({
											"text-align" : "center"
										});
										dateInput_21.bind("value").toDataColumn("DEV_PLAN_ST_DT");
										return dateInput_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 52},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_35 = new cpr.controls.Output("label3");
										return output_35;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 53},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_36 = new cpr.controls.Output("label4");
										return output_36;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "DEV_END_DT";
									cell.control = (function(){
										var dateInput_22 = new cpr.controls.DateInput("ipbFrfDevEndDt");
										dateInput_22.format = "YYYY-MM-DD";
										dateInput_22.style.css({
											"text-align" : "center"
										});
										dateInput_22.bind("value").toDataColumn("DEV_END_DT");
										return dateInput_22;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "DEV_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_23 = new cpr.controls.DateInput("ipbFrfDevPlanEndDt");
										dateInput_23.format = "YYYY-MM-DD";
										dateInput_23.style.css({
											"text-align" : "center"
										});
										dateInput_23.bind("value").toDataColumn("DEV_PLAN_END_DT");
										return dateInput_23;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 56},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_37 = new cpr.controls.Output("lblFrfDevRate");
										output_37.bind("value").toDataColumn("word");
										return output_37;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 57},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_38 = new cpr.controls.Output("lblFrfDevChargerNm");
										output_38.bind("value").toDataColumn("word");
										return output_38;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "DEV_CHARGER_NM";
									cell.control = (function(){
										var inputBox_20 = new cpr.controls.InputBox("ipbFrfDevChargerNm");
										inputBox_20.maxLength = 50;
										inputBox_20.bind("value").toDataColumn("DEV_CHARGER_NM");
										return inputBox_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "DEV_DAYCNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "DEV_RATE";
									cell.control = (function(){
										var comboBox_9 = new cpr.controls.ComboBox("cbbFrfDevRate");
										(function(comboBox_9){
											comboBox_9.setItemSet(app.lookup("dsProcRateRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_9);
										comboBox_9.bind("value").toDataColumn("DEV_RATE");
										return comboBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_24 = new cpr.controls.DateInput("ipbFrfDevTestPlanStDt");
										dateInput_24.format = "YYYY-MM-DD";
										dateInput_24.style.css({
											"text-align" : "center"
										});
										dateInput_24.bind("value").toDataColumn("DEV_TEST_PLAN_ST_DT");
										return dateInput_24;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_25 = new cpr.controls.DateInput("ipbFrfDevTestPlanEndDt");
										dateInput_25.format = "YYYY-MM-DD";
										dateInput_25.style.css({
											"text-align" : "center"
										});
										dateInput_25.bind("value").toDataColumn("DEV_TEST_PLAN_END_DT");
										return dateInput_25;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_PLAN_ST_DT";
									cell.control = (function(){
										var dateInput_26 = new cpr.controls.DateInput("ipbFrfDrawTestPlanStDt");
										dateInput_26.format = "YYYY-MM-DD";
										dateInput_26.style.css({
											"text-align" : "center"
										});
										dateInput_26.bind("value").toDataColumn("DRAW_TEST_PLAN_ST_DT");
										return dateInput_26;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_PLAN_END_DT";
									cell.control = (function(){
										var dateInput_27 = new cpr.controls.DateInput("ipbFrfDrawTestPlanEndDt");
										dateInput_27.format = "YYYY-MM-DD";
										dateInput_27.style.css({
											"text-align" : "center"
										});
										dateInput_27.bind("value").toDataColumn("DRAW_TEST_PLAN_END_DT");
										return dateInput_27;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 65},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_39 = new cpr.controls.Output("lblFrfDevTestPlanStDt");
										output_39.bind("value").toDataColumn("word");
										return output_39;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 66},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_40 = new cpr.controls.Output("label5");
										return output_40;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 67},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_41 = new cpr.controls.Output("lblFrfDrawTestPlanStDt");
										output_41.bind("value").toDataColumn("word");
										return output_41;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 68},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_42 = new cpr.controls.Output("label7");
										return output_42;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 69},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_43 = new cpr.controls.Output("lblFrfDevTestStDt");
										output_43.bind("value").toDataColumn("word");
										return output_43;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_ST_DT";
									cell.control = (function(){
										var dateInput_28 = new cpr.controls.DateInput("ipbFrfDevTestStDt");
										dateInput_28.format = "YYYY-MM-DD";
										dateInput_28.style.css({
											"text-align" : "center"
										});
										dateInput_28.bind("value").toDataColumn("DEV_TEST_ST_DT");
										return dateInput_28;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 71},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_44 = new cpr.controls.Output("label6");
										return output_44;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "DEV_TEST_END_DT";
									cell.control = (function(){
										var dateInput_29 = new cpr.controls.DateInput("ipbFrfDevTestEndDt");
										dateInput_29.format = "YYYY-MM-DD";
										dateInput_29.style.css({
											"text-align" : "center"
										});
										dateInput_29.bind("value").toDataColumn("DEV_TEST_END_DT");
										return dateInput_29;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 73},
								"configurator": function(cell){
									cell.columnName = "word";
									cell.control = (function(){
										var output_45 = new cpr.controls.Output("lblFrfDrawTestStDt");
										output_45.bind("value").toDataColumn("word");
										return output_45;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_ST_DT";
									cell.control = (function(){
										var dateInput_30 = new cpr.controls.DateInput("ipbFrfDrawTestStDt");
										dateInput_30.format = "YYYY-MM-DD";
										dateInput_30.style.css({
											"text-align" : "center"
										});
										dateInput_30.bind("value").toDataColumn("DRAW_TEST_ST_DT");
										return dateInput_30;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 75},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_46 = new cpr.controls.Output("label8");
										return output_46;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "DRAW_TEST_END_DT";
									cell.control = (function(){
										var dateInput_31 = new cpr.controls.DateInput("ipbFrfDrawTestEndDt");
										dateInput_31.format = "YYYY-MM-DD";
										dateInput_31.style.css({
											"text-align" : "center"
										});
										dateInput_31.bind("value").toDataColumn("DRAW_TEST_END_DT");
										return dateInput_31;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 77},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_47 = new cpr.controls.Output("lblFrfAddDt");
										return output_47;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 78},
								"configurator": function(cell){
									cell.columnName = "ADD_DT";
									cell.control = (function(){
										var dateInput_32 = new cpr.controls.DateInput("ipbFrfAddDt");
										dateInput_32.format = "YYYY-MM-DD";
										dateInput_32.style.css({
											"text-align" : "center"
										});
										dateInput_32.bind("value").toDataColumn("ADD_DT");
										return dateInput_32;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 79},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_48 = new cpr.controls.Output("lblFrfDelDt");
										return output_48;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 80},
								"configurator": function(cell){
									cell.columnName = "DEL_DT";
									cell.control = (function(){
										var dateInput_33 = new cpr.controls.DateInput("ipbFrfDelDt");
										dateInput_33.format = "YYYY-MM-DD";
										dateInput_33.style.css({
											"text-align" : "center"
										});
										dateInput_33.bind("value").toDataColumn("DEL_DT");
										return dateInput_33;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 81},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_49 = new cpr.controls.Output("lblFrfAddDelDesc");
										return output_49;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 82},
								"configurator": function(cell){
									cell.columnName = "ADD_DEL_DESC";
									cell.control = (function(){
										var inputBox_21 = new cpr.controls.InputBox("ipbFrfAddDelDesc");
										inputBox_21.bind("value").toDataColumn("ADD_DEL_DESC");
										return inputBox_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 83},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_50 = new cpr.controls.Output("lblFrfStudDvrs");
										return output_50;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 84},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_51 = new cpr.controls.Output("lblFrfProfDvrs");
										return output_51;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 85},
								"configurator": function(cell){
									cell.columnName = "PROF_DVRS";
									cell.control = (function(){
										var checkBox_15 = new cpr.controls.CheckBox("ckbFrfProfDvrs");
										checkBox_15.value = "";
										checkBox_15.trueValue = "Y";
										checkBox_15.falseValue = "";
										checkBox_15.text = "";
										checkBox_15.style.css({
											"text-align" : "center"
										});
										checkBox_15.bind("value").toDataColumn("PROF_DVRS");
										return checkBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 86},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_52 = new cpr.controls.Output("lblFrfPrtOgd");
										return output_52;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
									cell.control = (function(){
										var inputBox_22 = new cpr.controls.InputBox("ipbFrfPrtOgd");
										inputBox_22.maxLength = 10;
										inputBox_22.bind("value").toDataColumn("PRT_ORD");
										return inputBox_22;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 88},
								"configurator": function(cell){
									cell.columnName = "STUD_DVRS";
									cell.control = (function(){
										var checkBox_16 = new cpr.controls.CheckBox("ckbFrfStudDvrs");
										checkBox_16.value = "";
										checkBox_16.trueValue = "Y";
										checkBox_16.falseValue = "";
										checkBox_16.text = "";
										checkBox_16.style.css({
											"text-align" : "center"
										});
										checkBox_16.bind("value").toDataColumn("STUD_DVRS");
										return checkBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 89},
								"configurator": function(cell){
									cell.columnName = "DEV_ST_DT";
									cell.control = (function(){
										var dateInput_34 = new cpr.controls.DateInput("ipbFrfDevStDt");
										dateInput_34.format = "YYYY-MM-DD";
										dateInput_34.bind("value").toDataColumn("DEV_ST_DT");
										return dateInput_34;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 90},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var button_6 = new cpr.controls.Button("btnLine1");
										button_6.enabled = false;
										return button_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 91},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var button_7 = new cpr.controls.Button("btnLine2");
										button_7.enabled = false;
										return button_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 92},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var button_8 = new cpr.controls.Button("btnLine3");
										button_8.enabled = false;
										return button_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 93},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_53 = new cpr.controls.Output("lblFrfPgmDtlTypeRcd");
										return output_53;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 94},
								"configurator": function(cell){
									cell.columnName = "PGM_DTL_TYPE_RCD";
									cell.control = (function(){
										var comboBox_10 = new cpr.controls.ComboBox("cbbFrfPgmDtlTypeRcd");
										(function(comboBox_10){
											comboBox_10.setItemSet(app.lookup("dsPgmDtlTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_10);
										comboBox_10.bind("value").toDataColumn("PGM_DTL_TYPE_RCD");
										return comboBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 95},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var output_54 = new cpr.controls.Output("lblFrfResizeYn");
										return output_54;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 96},
								"configurator": function(cell){
									cell.columnName = "RESIZE_YN";
									cell.control = (function(){
										var checkBox_17 = new cpr.controls.CheckBox("ckbFrfResizeYn");
										checkBox_17.value = "";
										checkBox_17.trueValue = "Y";
										checkBox_17.falseValue = "";
										checkBox_17.text = "";
										checkBox_17.style.css({
											"text-align" : "center"
										});
										checkBox_17.bind("value").toDataColumn("RESIZE_YN");
										return checkBox_17;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "675px",
					"width": "545px",
					"height": "565px"
				});
				var button_9 = new cpr.controls.Button("btnUpLoad");
				button_9.value = "프로그램업로드";
				if(typeof onBtnUpLoadClick == "function") {
					button_9.addEventListener("click", onBtnUpLoadClick);
				}
				container.addChild(button_9, {
					"top": "6px",
					"left": "850px",
					"width": "109px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCmnCRegPgm";
	cpr.core.Platform.INSTANCE.register(app);
})();
