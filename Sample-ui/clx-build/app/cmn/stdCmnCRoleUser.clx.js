/*
 * App URI: app/cmn/stdCmnCRoleUser
 * Source Location: app/cmn/stdCmnCRoleUser.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCRoleUser", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnCRoleUser.xtm"/>
			
			
			var stdCmnCRoleUser = function() {
				var moPage = this;
				
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPage.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnDeptPopUp",
					iCd					:	"",
					iNm					:	"ipbDeptNm",
					iObjDivRcd			:	["CC009OG"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"/root/reqListUserSch/strObjDivRcd",
					oCd					:	"/root/reqListUserSch/strOgCd",
					oCdNm				:	"ipbDeptNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					:  null
				}
				];
				
				
				moPage.onClick_BtnSearch = function() {
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				
				moPage.onModelConstructDone_StdCmnCRoleUser = function() {
					doOnLoad();
				};
				
				/**
				 * @desc 온로드
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.23
				 */
				function doOnLoad() {
			
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCmnRole", "rptCmnUsrOperGrpUse", "rptCmnUsrOperGrpNoUse"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbUserDivRcd"]);
							
						}
					}, true);
				};
				
				/**
				 * @desc 업무역할목록 조회 실행
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.23
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCmnRole");
							
							doChangeForRptNoUseCondition(true);
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				/**
				 * @desc 사용,미사용 사용자목록 조회 실행
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.18
				 */
				function doListUsrOperGrp(poCallBackFunc){
					var vnIdx = util.Grid.getIndex(app, "grdCmnRole");
					if(vnIdx == null) return;
					
					var vsOprtRoleId = util.Grid.getCellValue(app, "grdCmnRole", "OPRT_ROLE_ID", vnIdx); 
					util.DataMap.setValue(app, "dmRoot", "reqListUsrOperGrp", "strOprtRoleId", vsOprtRoleId);
					
					//strCommand: listUsrOperGrp 
					util.Submit.send(app, "subListUsrOperGrp", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCmnUsrOperGrpUse");
							util.Control.redraw(app, "grdCmnUsrOperGrpNoUse");
							
							doChangeForRptNoUseCondition(true);
							
							//copyUseRoleId();
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				};
				
				function doChangeForRptNoUseCondition(pbStatus) {
					util.Control.setEnable(app, true, maUserSel);
					util.Control.setEnable(app, !pbStatus, maUserIns);
				};
				
				var maUserIns = ["rptCmnUsrOperGrpNoUse"]; 
				var maUserSel = ["ipbUserNm", "ipbDeptNm",  "cbbUserDivRcd", "ipbUserId", "btnDeptPopUp", "btnUserSearch"];
				
				
				
				/*
				 * 부서값이 입력되었는지를 판단한다.
				 * 부서값이 없을 경우 사용자 ID, 사용자명 둘중 하나라도 입력값이 없으면
				 * false를 리턴한다.
				 * @return Boolean
				 * 
				 */
				moPage.checkInputDept = function() {
					var vbResult = false;
					
					var vsDeptNm = util.Control.getValue(app, "ipbDeptNm");
					
					if (ValueUtil.isNull(vsDeptNm)) {
						//사용자 ID, 사용자명중 하나는 필수
						var vsUserId = util.Control.getValue(app, "ipbUserId");
						var vsUserNm =  util.Control.getValue(app, "ipbUserNm");
						
						var vsLblbUserId = ExtControl.getTextValue("lblUserId");
						var vsLblbUserNm = ExtControl.getTextValue("lblUserNm");
						
						if( ValueUtil.isNull(vsUserId) && ValueUtil.isNull(vsUserNm) ){
							util.Msg.alert("NLS-CMM-M016", [vsLblbUserId +", " + vsLblbUserNm]);
						} else {
							vbResult = true;
						}
					
					}else {
						vbResult = true;
					
					}
					
					return vbResult;
				}	
				
				
				moPage.onClick_BtnUserSearch = function() {
					
					if(moPage.checkInputDept()){
						doListUserSch(function(pbSuccess){
							// 조회 : "조회되었습니다." header 메세지 표시
							if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					
						});
					
					}
					
					
				};
				
				
				moPage.onKeyDown_IpbRoleId = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(strKeyType == 13) { 
						util.Header.clickSearch(app);
					}
				};
				
				
				moPage.onKeyDown_IpbRoleNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(strKeyType == 13) { 
						util.Header.clickSearch(app);
					}
				};
				
				
				moPage.onRowSelect_RptCmnRole = function() {
					doListUsrOperGrp(function(pbSuccess){
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
			
					});
				};
				
				
				
				
				moPage.onClick_BtnUp = function() {
					//moveRoleUp();
					moPage.moveRoleUpWithSave();
				};
				
				
				moPage.onClick_BtnDown = function() {
					//moveRoleDown();
					moPage.moveRoleDownWithSave();
				};
				
				/**
				 * @desc 미사용 사용자를 등록 사용자로 등록 후 바로 저장
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.23
				 */
				moPage.moveRoleUpWithSave = function(){
					
					var vsNoUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpNoUse");
					
					var vsNoUstRptNm = ExtRepeat.getLableIdValue("rptCmnUsrOperGrpNoUse");
					var vsUseRptNm = ExtRepeat.getLableIdValue("rptCmnUsrOperGrpUse");
					
					if(String(vsNoUseIdxs).isEmpty()){
						util.Msg.alert("NLS-INF-M045", [vsNoUstRptNm]);
						return;
					
					}
					
					var vaIdxsNoUse = null;
					if(String(vsNoUseIdxs).indexOf(",") != -1){
						vaIdxsNoUse = vsNoUseIdxs.split(",");
					}else{
						vaIdxsNoUse = new Array();
						vaIdxsNoUse[0] = vsNoUseIdxs;
					}
					
					for(var i = 0; i < vaIdxsNoUse.length; i++){
						var vnIdx = vaIdxsNoUse[i];
						var vnNewRowIdx = vnNewRowIdx = util.Grid.insertRow(app, "grdCmnUsrOperGrpUse");
						
						var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpNoUse", vnIdx);
											
						var vsOprtRoleId = util.DataMap.getValue(app, "dmRoot", "reqListUsrOperGrp", "strOprtRoleId");
						
						var vsUserId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_ID", vnIdx);
						var vsUserNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "USER_NM", vnIdx);
						var vsAsgnDeptNm = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "ASGN_DEPT_NM", vnIdx);
						var vsId = util.Grid.getCellValue(app, "grdCmnUsrOperGrpNoUse", "ID", vnIdx);
						
						
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "OPRT_ROLE_ID", vsOprtRoleId, vnNewRowIdx);
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_ID", vsUserId, vnNewRowIdx);
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_NM", vsUserNm, vnNewRowIdx);
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "ASGN_DEPT_NM", vsAsgnDeptNm , vnNewRowIdx);
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "ID", vsId, vnNewRowIdx);
						util.Grid.setCellValue(app, "grdCmnUsrOperGrpUse", "USER_TGT_RCD", "CC00301", vnNewRowIdx);
						
					}
					
					//저장
					doSave();
					
				};
				
				/**
				 * @desc 등록된 사용자를 등록해제 후 바로 저장
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.23
				 */
				moPage.moveRoleDownWithSave = function(){
					
					var vsUseIdxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnUsrOperGrpUse");
					
					var vsNoUstRptNm = ExtRepeat.getLableIdValue("rptCmnUsrOperGrpNoUse");
					var vsUseRptNm = ExtRepeat.getLableIdValue("rptCmnUsrOperGrpUse");
					
					if(String(vsUseIdxs).isEmpty()){
						util.Msg.alert("NLS-INF-M045", [vsUseRptNm]);
						return;
					
					}
					
					var vaIdxsUse = null;
					if(String(vsUseIdxs).indexOf(",") != -1){
						vaIdxsUse = vsUseIdxs.split(",");
					}else{
						vaIdxsUse = new Array();
						vaIdxsUse[0] = vsUseIdxs;
					}
					
					for(var i = 0; i < vaIdxsUse.length; i++){
						var vnIdx = vaIdxsUse[i];
						var vnNewRowIdx = null;
						
						var vsUptStatus = util.Grid.getRowState(app, "grdCmnUsrOperGrpUse", vnIdx);
						
						util.Grid.deleteRow(app, "grdCmnUsrOperGrpUse", "UPT_STATUS", vnIdx);
						
						
					}
					
					//저장
					doSave();
				};
				
				/**
				 * @desc 저장실행
				 * @param 
				 * @return 
				 * @author 최경민 2015.11.23
				 */
				function doSave() {
			
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, "grdCmnUsrOperGrpUse", "MSG")){
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdCmnUsrOperGrpUse")) return false;
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doListUsrOperGrp(function(pbListSuccess) {
								// 조회 "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				
				};
				
				moPage.onKeyDown_IpbUserNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						if(moPage.checkInputDept()){
							doListUserSch(function(pbSuccess){
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
			
							});
						
						}
					
					}
				};
				
				function doListUserSch(poCallBackFunc){
					var vsOprtRoleId = util.DataMap.getValue(app, "dmRoot", "reqListUsrOperGrp", "strOprtRoleId");
					util.DataMap.setValue(app, "dmRoot", "reqListUserSch", "strOprtRoleId", vsOprtRoleId);
					
					//strCommand: listUserSch 
					util.Submit.send(app, "subListUserSch", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCmnUsrOperGrpNoUse");
							doChangeForRptNoUseCondition(false);
							
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				
				};
				
				moPage.onKeyDown_IpbUserId = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						if(moPage.checkInputDept()){
							doListUserSch(function(pbSuccess){
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					
							});
						
						}
					
					}
				};
				
				
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				
				moPage.onKeyDown_IpbDeptNm = function(strKeyType, strKeyStatus, sender) {
					//// 엔터키 입력시
					//if(strKeyType == VKey.ENTER){
					//	doOnChangeStdCmnPObjSch(sender);
					//
					//}
				};
				
				moPage.onClick_BtnDeptPopUp = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnRole");
			dataSet_2.parseData({
				"info": "CMN_ROLE@OPRT_ROLE_ID",
				"columns": [
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "OPRT_ROLE_DESC"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnUsrOperGrpUse");
			dataSet_3.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "ASGN_DEPT_NM"},
					{"name": "ID"},
					{"name": "USER_NM"},
					{"name": "USER_TGT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnUsrOperGrpNoUse");
			dataSet_4.parseData({
				"info": "CMN_USR_OPER_GRP@USER_ID,OPRT_ROLE_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "ASGN_DEPT_NM"},
					{"name": "ID"},
					{"name": "USER_NM"},
					{"name": "USER_TGT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strOprtRoleNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqListUsrOperGrp");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strOprtRoleId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqListUserSch");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					},
					{
						"name": "strOgCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strOgNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnRoleUser/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnRoleUser/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListUsrOperGrp");
			submission_3.action = "/cmn/StdCmnRoleUser/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_3, false);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/cmn/StdCmnRoleUser/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_3);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListUserSch");
			submission_5.action = "/cmn/StdCmnRoleUser/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_3);
			submission_5.addResponseData(dataSet_4, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optRoleId");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-OPRT_ROLE_ID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbRoleId");
				inputBox_1.maxLength = 20;
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optRoleId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strOprtRoleId");
				if(typeof onIpbRoleIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbRoleIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optRoleNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-OPRT_ROLE_NM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbRoleNm");
				inputBox_2.maxLength = 100;
				inputBox_2.bind("fieldLabel").toExpression("#optRoleNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strOprtRoleNm");
				if(typeof onIpbRoleNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbRoleNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnRole");
				grid_1.init({
					"dataSet": app.lookup("dsCmnRole"),
					"columns": [
						{"width": "40px"},
						{"width": "126px"},
						{"width": "133px"},
						{"width": "266px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_DESC");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_DESC";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnRoleSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnRoleSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "620px",
					"height": "565px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-WRKROLLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-USERLST");
				container.addChild(userDefinedControl_3, {
					"top": "350px",
					"left": "655px",
					"width": "315px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnUsrOperGrpUse");
				grid_2.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpUse"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "106px"},
						{"width": "115px"},
						{"width": "153px"},
						{"width": "98px"},
						{
							"width": "124px",
							"visible": false
						},
						{
							"width": "124px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "사용자대상코드";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "USER_TGT_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "30px",
					"left": "655px",
					"width": "565px",
					"height": "225px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-WRKROLUSERLIST");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "655px",
					"width": "315px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDown");
				button_2.value = "";
				if(typeof onBtnDownClick == "function") {
					button_2.addEventListener("click", onBtnDownClick);
				}
				container.addChild(button_2, {
					"top": "260px",
					"left": "1030px",
					"width": "25px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnUp");
				button_3.value = "";
				if(typeof onBtnUpClick == "function") {
					button_3.addEventListener("click", onBtnUpClick);
				}
				container.addChild(button_3, {
					"top": "260px",
					"left": "850px",
					"width": "25px",
					"height": "25px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnUsrOperGrpNoUse");
				grid_3.init({
					"dataSet": app.lookup("dsCmnUsrOperGrpNoUse"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "105px"},
						{"width": "115px"},
						{"width": "153px"},
						{"width": "97px"},
						{
							"width": "124px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "OPRT_ROLE_ID";
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "375px",
					"left": "655px",
					"width": "565px",
					"height": "220px"
				});
				var output_5 = new cpr.controls.Output("optDeptNm");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-DEPT");
				container.addChild(output_5, {
					"top": "320px",
					"left": "860px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_3.maxLength = 100;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqListUserSch"), "strOgNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				if(typeof onIpbDeptNmKeydown == "function") {
					inputBox_3.addEventListener("keydown", onIpbDeptNmKeydown);
				}
				container.addChild(inputBox_3, {
					"top": "320px",
					"left": "955px",
					"width": "100px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnDeptPopUp");
				button_4.value = "";
				button_4.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptPopUpClick == "function") {
					button_4.addEventListener("click", onBtnDeptPopUpClick);
				}
				container.addChild(button_4, {
					"top": "320px",
					"left": "1055px",
					"width": "20px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optUserDivRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-USERDIV");
				container.addChild(output_6, {
					"top": "295px",
					"left": "660px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUserDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUserDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqListUserSch"), "strUserDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUserDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "295px",
					"left": "755px",
					"width": "100px",
					"height": "150px"
				});
				var output_7 = new cpr.controls.Output("optUserId");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-DB-USER_ID");
				container.addChild(output_7, {
					"top": "295px",
					"left": "860px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbUserId");
				inputBox_4.maxLength = 100;
				inputBox_4.bind("fieldLabel").toExpression("#optUserId.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqListUserSch"), "strUserId");
				if(typeof onIpbUserIdKeydown == "function") {
					inputBox_4.addEventListener("keydown", onIpbUserIdKeydown);
				}
				container.addChild(inputBox_4, {
					"top": "295px",
					"left": "955px",
					"width": "100px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optUserNm");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-DB-USER_NM");
				container.addChild(output_8, {
					"top": "320px",
					"left": "660px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbUserNm");
				inputBox_5.maxLength = 100;
				inputBox_5.bind("fieldLabel").toExpression("#optUserNm.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqListUserSch"), "strUserNm");
				if(typeof onIpbUserNmKeydown == "function") {
					inputBox_5.addEventListener("keydown", onIpbUserNmKeydown);
				}
				container.addChild(inputBox_5, {
					"top": "320px",
					"left": "755px",
					"width": "100px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnUserSearch");
				button_5.value = "";
				button_5.style.setClasses(["btn-search"]);
				button_5.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnUserSearchClick == "function") {
					button_5.addEventListener("click", onBtnUserSearchClick);
				}
				container.addChild(button_5, {
					"top": "295px",
					"left": "1155px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "125px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_3;
			linker.userDefinedControl_4.ctrl = linker.grid_2;
		}
	});
	app.title = "stdCmnCRoleUser";
	cpr.core.Platform.INSTANCE.register(app);
})();
