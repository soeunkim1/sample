/*
 * App URI: app/cmn/stdCmnCSmtGroup
 * Source Location: app/cmn/stdCmnCSmtGroup.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCSmtGroup", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = new ComUtil(app);
			/*
			 * Body에서 load 이벤트 발생 시 호출. 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */e) {
				util.Submit.send(app, "subOnLoad", function(pbSuccess) {
					if (pbSuccess) {
						// 콤보박스에 선행데이터로 들어가있는 0번째 행("전체")가 선택 됨
						util.SelectCtl.selectItem(app, "cbbSmtGrpCd", 0);
						// 콤보박스를 갱신 후 다시 그린다.
						util.Control.redraw(app, "cbbSmtGrpCd");
					}
				}, true);
			}
			
			/**
			 * @desc 조회 event
			 * @param poCallBackFunc 조회 후 callback함수
			 * @return void
			 */
			function doList(poCallBackFunc) {
				util.Submit.send(app, "subList", function(pbSuccess) {
					if (pbSuccess) {
						// poCallBackFunc가 null이 아니고 타입이 함수이면
						if (util.isFunc(poCallBackFunc)) {
							poCallBackFunc(pbSuccess);
						}
					}
				});
			}
			
			/**
			 * @desc 작업저장 event
			 * @return void
			 */
			function doSave() {
				// 그리드의 변경사항 유/무를 반환
				if (!util.Grid.isModified(app, "grdCmnConfSmtGrp", "MSG")) {
					return false;
				}
				// 그리드 유효성 검증
				if (!util.validate(app, "grdCmnConfSmtGrp")) {
					return false;
				}
				util.Submit.send(app, "subSave", function(pbSuccess) {
					if (pbSuccess) {
						doList(function(pbListSuccess) {
							if (pbListSuccess) {
								// "갱신된 데이터가 조회되었습니다." 메시지 출력
								util.Msg.notify(app, "NLS-INF-M025");
							}
						});
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 search 이벤트 발생 시 호출.
			 */
			function onBtnsearchSearch(/* cpr.events.CUIEvent */e) {
				/**
				 * @type udc.com.btnSearch
				 */
				var btnsearch = e.control;
				// 데이터 변경상태 체크 메시지(기본, 임베디드 앱 존재 할 경우 isChangedFormData())
				if (util.Grid.isModified(app, "grdCmnConfSmtGrp", "CRM")) {
					return false;
				}
			
				doList(function(pbSuccess) {
					if (pbSuccess) {
						util.Msg.notify(app, "NLS-INF-M024");
					}
				});
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Save(/* cpr.event.CUIEvent */e) {
				/**
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				// 위에서 정의한 함수 호출
				doSave();
			}
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Insert(/* cpr.event.CUIEvent */e) {
				/**
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
			
				// 그리드에 선택된 행을 가져온다.
				var vnRowIndex = util.Grid.getIndex(app, "grdCmnConfSmtGrp");
			
				// 선택된 체크박스 값 가져온다.
				var vsValue = util.SelectCtl.getValue("cbbSmtGrpCd");
				if(vsValue != "%"){
					// 체크박스 값과 행을 이용하여 그리드에서 "SMT_GRP_RCD" 값 을 셋팅한다.
					util.Grid.setCellValue(app, "grdCmnConfSmtGrp", "SMT_GRP_RCD", vsValue, vnRowIndex);
				}
			}
			
			/*
			 * 사용자 정의 컨트롤에서 delete 이벤트 발생 시 호출.
			 */
			//function onGrid_ids_btn1Delete(/* cpr.event.CUIEvent */e) {
				/**
				 * @type udc.com.grid_IDS_Btn
				 */
			//	var grid_ids_btn1 = e.control;
			
				//로직 삭제 되었다고 함
			//	var vsPanelCheckIdx = ExtRepeat.getSelIdxOrFRowIdx("rptCmnConfSmtGrp");
			//	var vaPanelChk = vsPanelCheckIdx.split(",");
				
			//	for( var i = 0 ; i < vaPanelChk.length ; i++){
			//		var vsStdYn = ExtRepeat.getValue("rptCmnConfSmtGrp", "STD_YN", vaPanelChk[i]);
			//		var vsRowStatus = ExtRepeat.getRowStatusChk("rptCmnConfSmtGrp", vaPanelChk[i]);
			//		
			//		if(vsRowStatus != "insert" && vsStdYn == "Y"){
			//			ComMsg.alert(NLS.CMM.M002);
			//			return false;
			//		}
			//	}
			//	ExtRepeat.deleteRow("rptCmnConfSmtGrp");
			//};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnConfSmtGrp");
			dataSet_1.parseData({
				"info": "CMN_CONF_SMT_GRP@SMT_GRP_RCD,SMT_RCD",
				"columns": [
					{"name": "SMT_GRP_RCD"},
					{"name": "SMT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtGrpList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_SHORT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqCmd");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strCdCls",
						"dataType": "string"
					},
					{
						"name": "strSmtGrpCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnSmtGroup/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnSmtGroup/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnSmtGroup/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_1);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSmtGrpCd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-SELEGRP");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSmtGrpCd");
				comboBox_1.bind("fieldLabel").toExpression("#optOptGrpCd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqCmd"), "strSmtGrpCd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", "%"));
					comboBox_1.setItemSet(app.lookup("dsSmtGrpList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "250px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCmnConfSmtGrp");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SMTGRPMPLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "355px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnConfSmtGrp");
				grid_1.init({
					"dataSet": app.lookup("dsCmnConfSmtGrp"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "181px"},
						{"width": "459px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-SMTGRP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SMT_RCD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.style.css({
											"text-align" : "center"
										});
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SMT_GRP_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbSmtGrpRcd");
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsSmtGrpList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("SMT_GRP_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsSmtList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("SMT_RCD");
										return comboBox_3;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnConfSmtGrpSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnConfSmtGrpSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "선택그룹조건입력";
	cpr.core.Platform.INSTANCE.register(app);
})();
