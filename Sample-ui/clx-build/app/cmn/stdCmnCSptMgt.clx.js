/*
 * App URI: app/cmn/stdCmnCSptMgt
 * Source Location: app/cmn/stdCmnCSptMgt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCSptMgt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//공통 모듈 사용
			var util = new ComUtil(app);
			
			//var mnBeforeIndex = 0;
			//var msvsRefKeyTab2 = null;
			//var msOgtCdTab2 = null;
			//var mGrxSelectRow = null;
			var flg = "";
			//var vaIns = [ "tabMain", "btnSave"];
			//var vaSel = ["btnSearch", "cbbDeptDivRcd", "ipbDeptDivNm", "cbbLangList", "dipKeyDate", "cbbYearList", "cbbSmtList", "impDateHelp"];
			
			/******************************************************************************************************
			 *  객체검색팝업 관련 설정사항
			 *  ▶ 설정가능 유형
			 *      1. 인스턴스
			 *      2. 리피트 디테일 셀 ID
			 *      3. 컨트롤 ID
			 *  ▶ 각 변수별 설명
			 *      iXXX : 팝업에 전달될  input 파라미터
			 *      oXXX : 팝업에서 선택한 값을 받을 데이터
			 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
			 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
			 *  	3. iNm 				: 검색조건 부서명									(선택)	
			 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
			 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
			 *  	5. iStartObject 	: 검색시작부서 										(선택)
			 *								  ("CC009OG20000,CC009OG70000",) 
			 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
			 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
			 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
			 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
			 *  	8. iLanDivRcd 	: 언어키													(선택)
			 *  	9. iKeyDate 		: 기준일													(필수)
			 *  	10. oObjDivRcd 	: 객체구분코드 
			 *  	11. oCd 			: 부서코드
			 *  	12. oCdNm 		: 부서명
			 *  	13. oBegDt 		: 시작일
			 *  	14. oEndDt 		: 종료일
			 *  	15. oLanDivRcd 	: 언어키
			 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
			 *									  
			 *******************************************************************************************************/	
			//var moIdsForStdCmnPObjSch = [
			//	{   //데이터관리 부분선언(학사부서)
			//		controlId			:	"btnFrfSaNm",
			//		iCd					:	"",
			//		iNm					:	"ipbFrfSaNm",
			//		iObjDivRcd			:	["CC009SA"],
			//		iStartObject    	:   "",
			//		iOtDivRcd			:	"",
			//		iOtIsTreeView	    :	"",
			//		iLanDivRcd		    :	"",
			//		iKeyDate			:	"dipKeyDate",
			//		iKeyEndDate		    :	"",
			//		oObjDivRcd		    :	"ipbFrfSaObjDivRcd",
			//		oCd					:	"ipbFrfSaCd",
			//		oCdNm				:	"ipbFrfSaNm",
			//		oBegDt				:	"",
			//		oEndDt				:	"",
			//		oLanDivRcd		    :	"",
			//		func 					:  null
			//	},
			//	{   //데이터관리 부분선언(학위)
			//		controlId			:	"btnFrfDgNm",
			//		iCd					:	"",
			//		iNm					:	"ipbFrfDgNm",
			//		iObjDivRcd			:	["CC009DG"],
			//		iStartObject    	:   "",
			//		iOtDivRcd			:	"",
			//		iOtIsTreeView	:	"",
			//		iLanDivRcd		:	"",
			//		iKeyDate			:	"dipKeyDate",
			//		iKeyEndDate		:	"",
			//		oObjDivRcd		:	"",
			//		oCd					:	"ipbFrfDgCd",
			//		oCdNm				:	"ipbFrfDgNm",
			//		oBegDt				:	"",
			//		oEndDt				:	"",
			//		oLanDivRcd		:	"",
			//		func 					:  null
			//	}
			//];
			// 탭 정의
			var TAB = {
				// 데이터관리
				MANAGE : 1,
				// 이력관리
				HIS : 2,
				// 언어
				LANG : 3,
				//계열구분
				SER : 4
			};
			
			// Academic Structure\
			 var moAcademicStructure = {
				// Academic Structure의 서브페이지용 파라미터
				mode : "",
				treeNode : null,
				name : "",
				objType : "",
				objCd : "",
				year : "",
				smt : "",
				keyDate : ""
			};
			
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				
				// 기준일자 조회하는 내부 팝업 호출을 위한 단위시스템코드 설정  -> udc 속성으로 설정
			//	util.Udc.setUdcAppProperty("dipKeyDate", "iUnitSystem", "CMN");
			//	util.Udc.setUdcAppProperty("dipKeyDateHistory", "iUnitSystem", "CMN");
				//4. 서브미션 실행 
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						// 콤보박스에 선행데이터로 들어가있는 0번째 행("전체")가 선택 됨
						util.SelectCtl.selectItem(app, "cbbSpDivRcdList", 0);    
						util.Control.redraw(app, ["dipKeyDate","cbbSpDivRcdList","ipbLanDivRcdList"]);
						doOnLoadWithAcademicStructure();
					}		
				});
			}
			
			/**
			 * @desc  doOnLoadWithAcademicStructure  	
			 * @return void
			 */
			function doOnLoadWithAcademicStructure(){
				
				if(util.Dialog.isPopup(app) == false){
					return;
				}
				//이 페이지가 임포트 되었을때 부모의 값을 가져와서 작업을 해야 함.
				moAcademicStructure = app.getHostProperty("initValue");
				var voParam = moAcademicStructure;
				
				// Academic Structure 모드가 지정되어 있는 경우에만
				if (voParam.mode) {
					var voGrpActualRect = util.Control.getActualRect("grpManage");
					var vnTop = voGrpActualRect.top;
					var vnLeft = voGrpActualRect.left;
					var vnHeight = voGrpActualRect.height;
					var vnWidth = voGrpActualRect.width;
					
					vnTop = vnTop.replace(/[^0-9]/g, '');
					vnLeft = vnLeft.replace(/[^0-9]/g, '');
					vnHeight = vnHeight.replace(/[^0-9]/g, '');
					vnWidth = vnWidth.replace(/[^0-9]/g, '');
					
					var hostApp = app.getHostAppInstance();
					if(hostApp.hasAppMethod("doCropPageToControl")){
						hostApp.callAppMethod("doCropPageToControl", [null, vnTop, vnLeft, vnHeight, vnWidth]);
					}
					
					// 검색조건 세팅
					util.Control.setValue(app, app, "ipbSpNm",voParam.name);
					util.Control.setValue(app, app, "cbbYearList",voParam.year);
					util.Control.setValue(app, app, "cbbSmtList",voParam.smt);
					util.Control.setValue(app, app, "dipKeyDate", voParam.keyDate);
					util.Control.setValue(app, app, "dipKeyDateHistory", voParam.keyDate);
					
					util.DataMap.setValue(app, "dmReqWithAS", "strAsMode", voParam.mode);
					util.DataMap.setValue(app, "dmReqWithAS", "strObjCd", voParam.objCd);
					
					//조회
					app.lookup("btnSearch").click();
				}
			};
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == 13){
					app.lookup("btnSearch").click();
				}
			}
			
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				if (util.Grid.isModified(app, "grdManage", "CRM")) {
					return false;
				}
				var arg = "btnSearch";
				//조회 이벤트 실행
				doSearch(arg);
			}
			
			/**
			 * @desc  doSearch  	조회 버튼 클릭 이벤트
			 * @return void
			 */
			function doSearch(arg, poCallbackFunc,psSpCd){
				
				// 1. 조회조건 필수체크 : 기준일자
				if (!util.validate(app, "dipKeyDate")) return false;
				
				var vbSuccess = false;
				var vsfindSpCd = psSpCd;
				//2. 조회 서브미션 호출
				util.Submit.send(app, "subListManage", function(pbSuccess) {
					if(pbSuccess){
						//2.1이수과정목록 리피트 리빌드
						util.Control.redraw(app, "grdManage");
						
						//notifier가 전역 설정이므로 상관 없이 설정.
						util.Msg.notify(app, "NLS-INF-M024");
						
						//이수과정코드가 넘어 오면 로우 포커싱 해줌
						if(ValueUtil.fixNull(vsfindSpCd) != "")
						{
			//				util.Grid.findRowByCondition("grdManage", "SP_CD == " + vsfindSpCd);
							//이력탭 조회
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.HIS);
						}else{
							//데이터관리화면으로 리턴
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallbackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			};
			
			
			/*
			 * 탭 폴더에서 before-selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택하기 전 발생하는 이벤트. 다음 이벤트로 select 이벤트를 발생합니다.
			 */
			function onTabMainBeforeSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tabMain = e.control;
				var vsSelTabId = e.oldSelection.id
				
				// 1. 현재 선택된 탭의 상태 체크
				switch (vsSelTabId) {
					// 1-1. 데이터관리
					case TAB.MANAGE:{
						if (e.newSelection.id != TAB.MANAGE) {
							// 데이터관리 변경내역 있는 경우
							if (util.Grid.isModified(app, ["grdManage"], "CRM")) {
								// tab 이동 하지 않음
								return false;
							} else {
								//행정부서 목록 변경이 일어난 후 다른탭으로 이동시 프리폼 리셋 처리
								if (util.Grid.isModified(app, ["grdManage"])) {
									//이수과정 목록 리셋
									util.Grid.revertAllData(app, "grdManage");
									//이수과정 기본정보 리셋
									util.Control.redraw(app, "frfManage");
								}
							}
						}
						break;
					}
					// 1-2. 이력관리  버튼 선택
					case TAB.HIS:{
						// 이력관리 리피트 변경내역 있는 경우
						if (util.Grid.isModified(app, ["grdHistory"], "CRM")) {
							// tab 이동 하지 않음
							return false;
						} else {
							if (util.Grid.isModified(app, ["grdHistory"])) {
								//이력 목록 리셋
								util.Grid.revertAllData(app, "grdHistory");
							}
						}
						break;
					}
					// 1-3. 언어 버튼 선택
					case TAB.LANG:{
						// 언어 리피트 변경내역 있는 경우
						if (util.Grid.isModified(app, ["grdLang"], "CRM")) {
							// tab 이동 하지 않음
							return false;
						} else {
							if (util.Grid.isModified(app, ["grdLang"])) {
								//언어 목록 리셋
								util.Grid.revertAllData(app, "grdLang");
							}
						}
						break;
					}
					// 1-4. 계열관리 선택
					case TAB.SER:{
						// 언어 리피트 변경내역 있는 경우
						if (util.Grid.isModified(app, ["grdSer"], "CRM")) {
							// tab 이동 하지 않음
							return false;
						} else {
							if (util.Grid.isModified(app, ["grdSer"])) {
								//계열관리 목록 리셋
								util.Grid.revertAllData(app, "grdSer");
							}
						}
						break;
					}
				}
			}
			
			
			/*
			 * 탭 폴더에서 selection-change 이벤트 발생 시 호출.
			 * Tab Item을 선택한 후에 발생하는 이벤트.
			 */
			function onTabMainSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.TabFolder
				 */
				var tabMain = e.control;
				// 2. 탭 변경
				doSearchDetail(e.newSelection.id);
			}
			
			/**
			 * 탭변경 또는 메인 그리드에서 selection-change 이벤트가 발생했을 경우 처리 로직 
			 * @param {String} psCaseId 탭ID
			 * @return void
			 */
			function doSearchDetail(psCaseId) {
				// 3. 탭변경 후 처리 로직
				switch (psCaseId) {
					// 3-1. 데이터관리 조회
					case TAB.MANAGE:{
						//expression binding으로 로직 처리.
			//			doSearchManage();
						break;
					}
					// 3-2. 이력관리 조회
					case TAB.HIS:{
						//이력조회
						doSearchHistory(function(pbSuccess) {
							// 조회 : "조회되었습니다." header 메세지 표시
							if (pbSuccess) util.Msg.notify(app, "NLS-INF-M024");
						});
						break;
					}
					// 3-3. 언어 조회
					case TAB.LANG:{
						//언어 조회
						doSearchLang(function(pbSuccess) {
							// 조회 : "조회되었습니다." header 메세지 표시
							if (pbSuccess) util.Msg.notify(app, "NLS-INF-M024");
						});
						break;
					}
					// 3-4. 계열관리 조회 
					case TAB.SER:{
						//계열관리 조회
						doSearchSer(function(pbSuccess) {
							// 조회 : "조회되었습니다." header 메세지 표시
							if (pbSuccess) util.Msg.notify(app, "NLS-INF-M024");
						});
						break;
					}
				}
			}
			
			/**
			 * @desc 데이터 관리 (프리폼) 내역 조회 - 바인딩으로 로직 처리
			 * @return void
			 */
			//function doSearchManage() {
				//1.이수과정목록 포커싱된 인덱스
			//	var vnIndex = ExtRepeat.getIndex("rptManage");
			     //2.학사부서코드 활성화여부
			//	var vsFlagGbn = ExtRepeat.getValue("rptManage","FLAG_GBN",vnIndex);
			//	var vsRowStatus = ExtRepeat.getRowStatusChk("rptManage");
				//신규시만 활성화 ,복사 or 수정시 비 활성화
			//	if(vsFlagGbn !="C" &&  vsRowStatus =="insert")
			//	{
			//		ExtControl.setEnable(true,"ipbFrfSpCd");
			//	}else
			//	{
			//		ExtControl.setEnable(false,"ipbFrfSpCd");
			//	}
				//3.리피트 특정 row 데이터를 프리폼 copy
			//	ExtRepeat.copyRowForm("rptManage","frfManage", vnIndex);
			//}
			
			/**
			 * @desc   이력관리 (그리드) 내역 조회
			 * @return void
			 */
			function doSearchHistory(poCallBackFunc){
				var vsHisDate = util.DataMap.getValue(app, "dmDateHistory", "ST_DT");
				var vsKeyDate = util.DataMap.getValue(app, "dmDateMain", "ST_DT");
				//폐기/복구일자 모두 지워졌을 경우 조회조건 기준일자 셋팅 한다.
				if(vsHisDate == ""){
					util.DataMap.setValue(app, "dmDateHistory", "ST_DT", vsKeyDate);
				}
				util.Control.redraw(app, "dipKeyDateHistory");//폐기/복구일자 defalut세팅
				var voSelectRowIdx = util.Grid.getIndex(app, "grdManage");//이력데이터??에서 키값 ??
				
				var vsSpCd   = "";//이수과정코드
				var vsLangKey = "";//언어키
				
				if (voSelectRowIdx != -1) {
					vsSpCd        = util.Grid.getCellValue(app, "grdManage","SP_CD"  ,voSelectRowIdx);//이수과정코드
					vsLangKey     = util.Grid.getCellValue(app, "grdManage","LAN_DIV_RCD"  ,voSelectRowIdx);//참조키
				}else{// "라인을 선택하세요." 데이터관리  tab으로 이동
					util.Msg.alert("NLS-INF-M023");//"라인을 선택하세요." 이전 tab으로 이동
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
					return;
				}
				//이력관리 조회 전 리퀘스트값 셋팅(학사부서 목록 포커싱된  Row 부서코드,언어코드)
				util.DataMap.setValue(app, "dmReqList", "strSpCd", vsSpCd);
				util.DataMap.setValue(app, "dmReqList", "strLanDivRcd", vsLangKey);
				
				//이수과정 이력관리 조회 서브이션 Call
				util.Submit.send(app, "subListHistory", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdHistory");
					}
					// 조회 후 콜백함수 수행
					if(util.isFunc(poCallBackFunc))poCallBackFunc(pbSuccess);
				});
			};
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdManageSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdManage = e.control;
				
				var vnIdx = util.Grid.getIndex(app, "grdManage");
				if(vnIdx == -1){
					return;
				}
				
				var vsTabId = util.Tab.getSelectedId(app, "tabMain");
				// 선택된 현재 행 상태를 가져와 INSERT/UPDATE/DELETE가 아닐 경우만 탭 조회를 한다.
				var vsRowStatus = util.Grid.getRowState(app, "grdManage");
				if(vsRowStatus == cpr.data.tabledata.RowState.UNCHANGED){
					doSearchDetail(vsTabId);
				}
			}
			
			/**
			 * @desc   언어 (리피트) 내역 조회
			 * @return void
			 */
			function doSearchLang(poCallBackFunc){
				var voSelRow = util.Grid.getIndex(app, "grdManage");
				var vsSpCd      = ""; //이수과정코드
				var vsRefKey    = ""; //참조키
				var vsLanDivRcd = ""; //언엌;
				if (voSelRow != -1) {
					vsSpCd        = util.Grid.getCellValue(app, "grdManage", "SP_CD", voSelRow)//이수과정코드
					vsRefKey      = util.Grid.getCellValue(app, "grdManage", "REF_KEY", voSelRow)//참조키
				}else
				{// "라인을 선택하세요." 데이터관리  tab으로 이동
					util.Msg.alert("NLS-INF-M023");// "라인을 선택하세요." 이전 tab으로 이동
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
					return;
				}
				//언어 조회 전 리퀘스트값 셋팅(학사부서 목록 포커싱된  Row 부서코드,참조키)
				util.DataMap.setValue(app, "dmReqSelRow", "strSpCd", vsSpCd);
				util.DataMap.setValue(app, "dmReqSelRow", "strRefKey", vsRefKey);
				//이수과정 언어 조회 서브이션 Call
				util.Submit.send(app, "subListLang", function(pbSuccess){
					if(pbSuccess){
							util.Control.redraw(app, "grdLang");
						}
						// 조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc))poCallBackFunc(pbSuccess);
				});
			};
			
			/**
			 * @desc   계열구분관리(리피트) 내역 조회
			 * @return void
			 */
			function doSearchSer(poCallbackFunc){
					var voSelectRowIdx = util.Grid.getIndex(app, "grdManage");//이력데이터??에서 키값 ??
					var vsRefKey = "";
					
					if (voSelectRowIdx != -1) {
						vsRefKey = util.Grid.getCellValue(app, "grdManage","REF_KEY",voSelectRowIdx);//부서코드
					}else
					{// "라인을 선택하세요." 데이터관리  tab으로 이동
						util.Msg.alert("NLS-INF-M023");
						util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
						return;
					}
					//계열구분 조회 전 리퀘스트값 셋팅(학사부서 목록 포커싱된  Row 부서코드)
					util.DataMap.setValue(app, "dmReqList", "strRefKey", vsRefKey);
					util.Submit.send(app, "subListSer", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdSer");
						}
						// 조회 후 콜백함수 수행
						if(util.isFunc(poCallbackFunc))poCallbackFunc(pbSuccess);
					});
			};
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Insert(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				doInsert();
			}
			/**
			 * @desc   리피트 데이터관리 신규버튼 클릭 이벤트
			 * @return void
			 */
			function doInsert() {
				
				var vnInsIdx		= util.Grid.insertRow(app, "grdManage");//이수과정 추가 Row
				var vsDivRcd		= util.Control.getValue(app, "cbbSpDivRcdList");//조회조건 이수과정구분
				var vsBaseDate		= util.Control.getValue(app, "dipKeyDate"); //조회조건 기준일자
				
				util.Grid.setCellValue(app, "grdManage", "ST_DT", vsBaseDate, vnInsIdx);//시작일자
				util.Grid.setCellValue(app, "grdManage", "END_DT", "99991231000000", vnInsIdx);//종료일자
				util.Grid.setCellValue(app, "grdManage", "OBJ_DIV_RCD", "CC009SP", vnInsIdx);//객체구분코드
				util.Grid.setCellValue(app, "grdManage", "SP_DIV_RCD", (vsDivRcd == "%") ? "" : vsDivRcd); //부서구분
				util.Grid.setCellValue(app, "grdManage", "LAN_DIV_RCD", util.getSystemLocale(app), vnInsIdx);//언어키
				util.Grid.setCellValue(app, "grdManage", "FLAG_GBN", "N", vnInsIdx);//신규구분
				
				// 프리폼의 학번입력에 포커스
				util.Control.setFocus(app, "ipbFrfSpCd");
				return vnInsIdx;
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 idrCommonEvent 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1IdrCommonEvent(/* cpr.events.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				util.Control.redraw(app, "frfManage");
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn1Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn1 = e.control;
				doSaveBtnClick();
			}
			
			/**
			 * doSave  저장 버튼 클릭 이벤트  이벤트 
			 * @return doSave
			 */
			function doSaveBtnClick() {
				var vnSelectedIdx = util.Tab.getSelectedId(app, "tabMain");
				doSave(vnSelectedIdx);
			}
			
			/**
			 * @desc   저장 함수
			 * @param {String} paTabpageId    탭ID
			 * @param {String} poCallbackFunc 콜백함수
			 * @paTabpage        TabPageId
			 * @poCallbackFunc 콜백함수
			 * @return void
			 */
			function doSave(paTabpageId, poCallbackFunc){
				var vbValidSave = true;
				//변경여부체크
				if (doCheckValidation(paTabpageId) == false) return false;
				
				//		매니지 탭과 이력탭은 같은 테이블을 사용하므로 subSave를 공유.
				//		LANG 탭의 경우 테이블이 다르므로 새로운 서브미션 사용.
				//언어
				if (paTabpageId == TAB.LANG) {
					util.Submit.send(app, "subSaveLang", function(pbSuccess){
						if (pbSuccess) {
							flg = "Y";
							doSaveWithAcademicStructure();
							util.Msg.notify(app, "NLS-INF-M001");
							//언어 조회
							doSearchLang(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS-INF-M024");
							});
						} else {
							util.Msg.notify(app, "NLS-WRN-M119");
			//				ExtTab.toggle("tabMain", TAB.LANG);
						}
					});
				//데이터관리 프리폼   
				} else if (paTabpageId == TAB.MANAGE) {
					util.Submit.send(app, "subSaveManage", function(pbSuccess){
						if (pbSuccess) {
							flg = "Y";
							doSaveWithAcademicStructure();
							util.Msg.notify(app, "NLS-INF-M001");
							//저장 성공하면 기본정보 프리폼 초기화 후 조회 
							//조회건수가 0건이면 프리폼이 내역이 반영되지 않기 떄문
							doSearch(null, poCallbackFunc);
						} else {
							util.Msg.notify(app, "NLS-WRN-M119");
						}
					});
				//데이터이력 	
				} else if (paTabpageId == TAB.HIS) {
					util.Submit.send(app, "subSaveHistory", function(pbSuccess){
						if (pbSuccess) {
							flg = "Y";
							util.Grid.setFindRowCondition(app, "grdManage", "SP_CD == " + "'" + util.Grid.getCellValue(app, "grdManage", "SP_CD") + "'");
							doSaveWithAcademicStructure();
							util.Msg.notify(app, "NLS-INF-M001");
							//이력조회
							doSearchHistory(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) {
									//저장후 기본정보 텝으로 이동
									var vsSpCd = util.DataMap.getValue(app, "dmReqList", "strSpCd");
									doSearch(null, poCallbackFunc,vsSpCd);
								}
							});
						} else {
							util.Msg.notify(app, "NLS-WRN-M119");
						}
					})
				//계열관리		
				} else if (paTabpageId == TAB.SER) {
					util.Submit.send(app, "subSaveSer", function(pbSuccess){
						if (pbSuccess) {
							flg = "Y";
							doSaveWithAcademicStructure();
							util.Msg.notify(app, "NLS-INF-M001");
							//계열관리	조회
							doSearchSer(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS-INF-M024");;
							});
						} else {
							util.Msg.notify(app, "NLS-WRN-M119");
						}
					});
				}
			}
			
			/**
			 * @desc   저장 함수 변경여부체크
			 * @paTabpage        TabPageId
			 * @poCallbackFunc 콜백함수
			 * @return void
			 */
			function doCheckValidation(tabpageId){
				var vsGrxId;
				switch (tabpageId) {
					// 1-1. 데이터관리
					case TAB.MANAGE : {
						vsGrxId = "grdManage";
						break;
					}
					// 1-2. 이력관리 
					case TAB.HIS : {
						vsGrxId = "grdHistory";
						break;
					}
					// 1-3. 언어 버튼 선택
					case TAB.LANG : {
						vsGrxId = "grdLang";
						break;
					}
					// 1-4. 계열구분
					case TAB.SER : {
						vsGrxId = "grdSer";
						break;
					}
					default : {
						vsGrxId = "grdManage";
						break;
					}
				}
				if(!util.Grid.isModified(app, [vsGrxId])) {
					//"변경된 데이터가 없습니다." header 메세지 표시
				 	util.Msg.notify(app, "NLS-INF-M026");
				 	return false;
				}
				return util.validate(app, [vsGrxId]);
			}
			
			/**
			 * @desc  doSaveWithAcademicStructure  	
			 * @return void
			 * @author hyunteak 2015. 11. 13.
			 */
			function doSaveWithAcademicStructure(){
				var voParam = moAcademicStructure;
				
				if(voParam.mode){
					var hostApp = app.getHostAppInstance();
					hostApp.callAppMethod("callbackAcademicStructureSubPageSave");
				}
			};
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCopyClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCopy = e.control;
				doCopy();
			}
			
			/**
			 * @desc   복사버튼 클릭 이벤트 처리 
			 * @return void
			 */
			function doCopy(){
			
				var vnOrgRow = util.Grid.getIndex(app, "grdManage"); //선택한 RowIndex
				var vnRow = "";//복사할 대상 신규 RowIndex
				var vsKeyDt = util.Control.getValue(app, "dipKeyDate");
				
				if (vnOrgRow == -1) {
					util.Msg.alert("NLS-INF-M023"); // "라인을 선택하세요."	
					return;
				}
				vnRow = doInsert();
				//1.복사 및 이수과정 목록 refresh
			//util.Grid.copyToGridData(app, 소스그리드ID, 타겟그리드ID, 소스행인덱스, 타겟행인덱스)로 변경 필요...
				util.Grid.copyToRowData("grdManage", vnOrgRow, "grdManage", vnRow);//복사
				
			    // 2.copy된 row에 flag_gbn 설정
				util.Grid.setCellValue(app, "grdManage", "FLAG_GBN", "C", vnRow);
				//3. 시작일자(조회조건 시작일자) 종료일자(99991231) 으로 변경.
				util.Grid.setCellValue(app, "grdManage", "ST_DT", vsKeyDt, vnRow);
				util.Grid.setCellValue(app, "grdManage", "END_DT", "99991231000000", vnRow);
				util.Grid.setCellValue(app, "grdManage", "REF_KEY", "", vnRow);
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnNew3Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnNew3 = e.control;
				doDisUseHistory();
			}
			/**
			 * @desc   doDisUseHistory   폐기버튼 클릭시 이벤트 수행
			 * @return void
			 * @author hyunteak 2015. 11. 19.
			 */
			function doDisUseHistory() {
				
				// 9999레코드를  조회조건의 학기의 (시작일자 - 1초) 로 업데이트 = 해당학기까지 유효한 데이타
				var vsEndDt = null;
				var vsStDt = null;
				var vnCntHistory = util.Grid.getRowCount(app, "grdHistory");
				var vnMaxEndDt = null;
				var voRowHis = null;
				var voRowMax = null;
				//폐기/복구일자 유효성 체크
				if(!util.validate(app, "dipKeyDateHistory")) return false;
			
				//마지막일 검색
				for (var i = 0; i < vnCntHistory; i++) {
					voRowHis = i;
					
					//빌더5에서 주석처리 되어 있음
			//		vsEndDt = ExtRepeat.getValue("rptHistory","END_DT",voRowHis); 
			//		if ((vnMaxEndDt == null) || (vnMaxEndDt != null && vnMaxEndDt < vsEndDt)) {
			//			vnMaxEndDt = vsEndDt;
			//			voRowMax = voRowHis;
			//		}
					
					// 2016. 09. 08 박갑수 9999-12-31이 아닐경우 폐기 불가하도록 수정
					vsEndDt = util.Grid.getCellValue(app, "grdHistory", "END_DT", voRowHis);
					vsEndDt = new String(vsEndDt).substring(0, 8);
					
					if (vsEndDt == "99991231") {
						vnMaxEndDt 	= vsEndDt;
						voRowMax   	= voRowHis;
						break;
					}
				}
				if (voRowMax == null) {
					// 폐기 가능한 데이터가 없습니다.
					util.Msg.alert("NLS-INF-M029");
					return;
				}
				util.Grid.getCellValue(app, "grdHistory", "END_DT", voRowMax);
				vsEndDt = util.Grid.getCellValue(app, "grdHistory", "END_DT", voRowMax);
				vsEndDt = new String(vsEndDt).substring(0, 8);
				
				vsStDt = util.Grid.getCellValue(app, "grdHistory", "ST_DT", voRowMax);
				vsStDt = new String(vsStDt).substring(0, 8);
				
				var vsKeyDt = null;
				vsKeyDt = util.DataMap.getValue(app, "dmDateHistory", "ST_DT")
				vsKeyDt = new String(vsKeyDt).substring(0, 8);
				
				//행정부서 로직과 상이 함 ..
				if (vsStDt >= vsKeyDt) {
					// 폐기 가능한 데이터가 없습니다.
					util.Msg.alert("NLS-INF-M029");
					return;
				}
				
				var vsBefDate = null;
				vsBefDate = getBefDate(vsKeyDt);
				var vsMsgCiiDate = vsBefDate.substring(0, 4) + util.Msg.getMsg("NLS-SCR-YEAR") + vsBefDate.substring(4, 6) 
									+ util.Msg.getMsg("NLS-SCR-MONTH") + vsBefDate.substring(6, 8) + util.Msg.getMsg("NLS-SCR-DAY");
				if(util.Msg.confirm("NLS-CRM-M047", [vsMsgCiiDate]) == 1){
					util.Grid.setCellValue(app, "grdHistory", "END_DT", vsBefDate, voRowMax);
					util.Grid.selectRow(app, "grdHistory", voRowMax);
					//폐기 저장
					doSaveBtnClick();
				}
			};
			
			/**
			 * @desc   getBefDate  keyDate 기준일 이전날짜 추출 
			 * @return rtnBefDt(기준일 이전날짜 추출 )
			 */
			function getBefDate(keyDate) {
			
				var y = keyDate.substring(0, 4);
				var m = keyDate.substring(4, 6);
				var d = keyDate.substring(6, 8);
				var befDt = new Date(y, m - 1, d - 1);
				var befDtYear = befDt.getFullYear().toString(); // 2012.02.29 크롬에서도 정상적으로 작동되도록 수정함. 윤경희
				var befDtMonth = eval(befDt.getMonth() + 1).toString();
				var befDtDate = befDt.getDate().toString();
			
				if (befDtMonth.length == 1) befDtMonth = "0" + befDtMonth;
				if (befDtDate.length == 1) befDtDate = "0" + befDtDate;
			
				var rtnBefDt = befDtYear + befDtMonth + befDtDate + "000000";
			
				return rtnBefDt;
			};
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnNew4Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnNew4 = e.control;
				doUseCancHistory();
			}
			
			/**
			 * @desc   doUseCancHistory   폐기취소 클릭시 이벤트 수행
			 * @return void
			 */
			function doUseCancHistory() {
				var vnCntHistory = util.Grid.getRowCount(app, "grdHistory");
				var vnMaxEndDt = null;
				var voRowHis = null;
				var voRowMax = null;
				var vsEndDt = null;
				//폐기/복구일자 유효성 체크
				if(!util.validate(app, "dipKeyDateHistory")) return false;
				
				for (var i = 0; i < vnCntHistory; i++) {
					voRowHis = i;
					vsEndDt = util.Grid.getCellValue(app, "grdHistory", "END_DT", voRowHis);
					if ((vnMaxEndDt == null) || (vnMaxEndDt != null && vnMaxEndDt < vsEndDt)) {
						vnMaxEndDt = vsEndDt;
						voRowMax = voRowHis;
					}
				}
				
				if (vnMaxEndDt == "99991231" || vnMaxEndDt == "99991231000000") {
					// 폐기취소 가능한 데이터가 없습니다.
					util.Msg.alert("NLS-INF-M030");
					return;
				}
				if(util.Msg.confirm("NLS-CRM-M048") == 1){	
					util.Grid.setCellValue(app, "grdHistory", "END_DT", "99991231", voRowMax);
					util.Grid.selectRow(app, "grdHistory", voRowMax);
			
					doSaveBtnClick();
				}
			};
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnDel2Click(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnDel2 = e.control;
				doRecoverHistory();
			}
			
			/**
			 * @desc   doRecoverHistory   복구 클릭시 이벤트 수행
			 * @return void
			 */	
			function doRecoverHistory() {
					// 요약: 가장 최근의 레코드를 카피하여 insert한다. (단, 기준일자가 최종일자보다 커야 한다.)
					var vnCnt = util.Grid.getRowCount(app, "grdHistory");
					var vnMaxEndDt = null;
					var voRow = null;
					var voMaxRow = null;
					var vnMaxRowNum = null;
					//폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDateHistory")) return false;
					
					for (var i = 0; i < vnCnt; i++) {
						voRow = i;
						if (!voRow) continue;
						
						var vsEndDt = util.Grid.getCellValue(app, "grdHistory", "END_DT", voRow);
						if (i == 0 || vnMaxEndDt < vsEndDt) {
							vnMaxEndDt = vsEndDt;
							voMaxRow = voRow;
							vnMaxRowNum = i;
						}
					}
					
					// key date
					var vsHistoryKeyDate = util.Control.getValue(app, "dipKeyDateHistory");
					
					if (vnMaxEndDt >= vsHistoryKeyDate) {
						// 복구 가능한 DATA가 없습니다.
						util.Msg.alert("NLS-WRN-M128");
						return;
					}
					vsHistoryKeyDate = new String(vsHistoryKeyDate);
					var vsMsgCiiDate = vsHistoryKeyDate.substring(0, 4) + util.Msg.getMsg("NLS-SCR-YEAR")  + vsHistoryKeyDate.substring(4, 6)
									 + util.Msg.getMsg("NLS-SCR-MONTH")  + vsHistoryKeyDate.substring(6, 8) + util.Msg.getMsg("NLS-SCR-DAY") ; //다국어설정
					
					 
					if (util.Msg.confirm("NLS-CRM-M049", [vsMsgCiiDate]) == 1) {
					 
						vnMaxRowNum = util.Grid.getIndex(app, "grdHistory");
						var voNextRow = util.Grid.insertRow(app, "grdHistory");
						 
			//util.Grid.copyToGridData(app, 소스그리드ID, 타겟그리드ID, 소스행인덱스, 타겟행인덱스)로 변경 필요...
						util.Grid.copyToRowData("grdHistory", vnMaxRowNum, "grdHistory", voNextRow);
						
						util.Grid.setCellValue(app, "grdHistory", "REF_KEY", "", voNextRow);
						util.Grid.setCellValue(app, "grdHistory", "ST_DT", vsHistoryKeyDate, voNextRow);
						util.Grid.setCellValue(app, "grdHistory", "END_DT", "99991231", voNextRow);
			
						doSaveBtnClick();
					 }
			};
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn2Insert(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn2 = e.control;
				//이수과정코드.참조키
				var vsRefKey = util.DataMap.getValue(app, "dmReqSelRow", "strRefKey");
				var vsSpCd = util.DataMap.getValue(app, "dmReqSelRow", "strSpCd");
				util.Grid.setCellValue(app, "grdLang","REF_KEY",vsRefKey);
				util.Grid.setCellValue(app, "grdLang","SP_CD",vsSpCd);
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 delete 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn2Delete(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn2 = e.control;
				var voRowLang =util.Grid.getIndex(app, "grdLang");
				
				if (ValueUtil.isNull(voRowLang)) {
					util.Msg.alert("NLS-WRN-M008");
					return;
				}
				
				var vsLang =util.Grid.getCellValue(app, "grdLang","LAN_DIV_RCD",voRowLang);
				
				if (vsLang == util.Control.getValue(app, "ipbLanDivRcdList")) {
					util.Msg.alert("NLS-WRN-M010");
					return;
				}
				
				util.Grid.deleteRow(app, "grdLang");
			}
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn2Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn2 = e.control;
				doSaveBtnClick();
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 insert 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn3Insert(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn3 = e.control;
				var vsUpOgCd = util.DataMap.getValue(app, "dmReqList", "strRefKey");
				util.Grid.setCellValue(app, "grdSer","REF_KEY",vsUpOgCd);
			}
			
			
			/*
			 * 사용자 정의 컨트롤에서 save 이벤트 발생 시 호출.
			 */
			function onGrid_ids_btn3Save(/* cpr.event.CUIEvent */ e){
				/** 
				 * @type udc.com.grid_IDS_Btn
				 */
				var grid_ids_btn3 = e.control;
				doSaveBtnClick();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsLangList");
			dataSet_1.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsDayNightList");
			dataSet_2.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsStrSpDnDivRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCrsDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListTermUnitRcd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsSerDivRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsYearList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSmtList");
			dataSet_8.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsDgList");
			dataSet_9.parseData({
				"columns": [
					{"name": "DG_CD"},
					{"name": "DG_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsSptList");
			dataSet_10.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsFeeCatRcdList");
			dataSet_11.parseData({
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "CD_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsSerCodeRcdList");
			dataSet_12.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "UCD"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			
			var dataSet_13 = new cpr.data.DataSet("dsLang");
			dataSet_13.parseData({
				"info": "CMN_SPT_LANG@SP_CD,REF_KEY,LAN_DIV_RCD",
				"columns": [
					{"name": "SHORT_NM"},
					{"name": "SP_NM"},
					{"name": "PRT_ORD"},
					{"name": "UPD_DTHR"},
					{"name": "CRT_DTHR"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "REF_KEY"},
					{"name": "UPD_USER_ID"},
					{"name": "SP_CD"},
					{"name": "CERT_SP_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_13);
			
			var dataSet_14 = new cpr.data.DataSet("dsManage");
			dataSet_14.parseData({
				"info": "CMN_SPT@SP_CD,ST_DT,END_DT,OBJ_DIV_RCD",
				"columns": [
					{"name": "ONSCH_YLT"},
					{"name": "UPD_DTHR"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "EXP_DT"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "SP_CD"},
					{"name": "CERT_SP_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "ST_DT"},
					{"name": "UPD_PGM_ID"},
					{"name": "SHORT_NM"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "REF_KEY"},
					{"name": "SA_CD_NM"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "REG_FEE_CAT_RCD"},
					{"name": "TERM_UNIT_RCD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SP_DIV_RCD"},
					{"name": "DG_CD"},
					{"name": "DG_CD_NM"},
					{"name": "ASS"},
					{"name": "DGR_CRS_DIV_RCD"},
					{"name": "UPD_IP_MAC"},
					{"name": "END_DT"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_14);
			
			var dataSet_15 = new cpr.data.DataSet("dsFrfManage");
			dataSet_15.parseData({
				"columns": [
					{"name": "ONSCH_YLT"},
					{"name": "UPD_DTHR"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "EXP_DT"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "SP_CD"},
					{"name": "CERT_SP_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "ST_DT"},
					{"name": "UPD_PGM_ID"},
					{"name": "SHORT_NM"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "REF_KEY"},
					{"name": "SA_CD_NM"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "REG_FEE_CAT_RCD"},
					{"name": "TERM_UNIT_RCD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SP_DIV_RCD"},
					{"name": "DG_CD"},
					{"name": "DG_CD_NM"},
					{"name": "ASS"},
					{"name": "DGR_CRS_DIV_RCD"},
					{"name": "UPD_IP_MAC"},
					{"name": "END_DT"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_15);
			
			var dataSet_16 = new cpr.data.DataSet("dsSer");
			dataSet_16.parseData({
				"info": "CMN_SER@REF_KEY,SER_DIV_RCD,SER_RCD",
				"columns": [
					{"name": "REF_KEY"},
					{"name": "REMARK"},
					{"name": "SER_DIV_RCD"},
					{"name": "SER_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_16);
			
			var dataSet_17 = new cpr.data.DataSet("dsHistory");
			dataSet_17.parseData({
				"info": "CMN_SPT@SP_CD,ST_DT,END_DT,OBJ_DIV_RCD",
				"columns": [
					{"name": "ONSCH_YLT"},
					{"name": "UPD_DTHR"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "PRT_ORD"},
					{"name": "FLAG_GBN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "EXP_DT"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "SA_OBJ_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "SP_CD"},
					{"name": "CERT_SP_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "ST_DT"},
					{"name": "UPD_PGM_ID"},
					{"name": "SHORT_NM"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "REF_KEY"},
					{"name": "SA_CD_NM"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "REG_FEE_CAT_RCD"},
					{"name": "TERM_UNIT_RCD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SP_DIV_RCD"},
					{"name": "DG_CD"},
					{"name": "DG_CD_NM"},
					{"name": "ASS"},
					{"name": "DGR_CRS_DIV_RCD"},
					{"name": "UPD_IP_MAC"},
					{"name": "END_DT"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_17);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSpNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strKeyDateHistory",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strUnitSystem",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSpCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqWithAS");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strAsMode",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strSpCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmDateMain");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmDateHistory");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnSptMgt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_10, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_9, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataMap_5, false);
			submission_1.addResponseData(dataMap_6, false);
			submission_1.addResponseData(dataSet_11, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_12, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListManage");
			submission_2.action = "/cmn/StdCmnSptMgt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_5);
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_14, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListHistory");
			submission_3.action = "/cmn/StdCmnSptMgt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_5);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataSet_17, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListLang");
			submission_4.action = "/cmn/StdCmnSptMgt/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_4);
			submission_4.addResponseData(dataSet_13, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveManage");
			submission_5.action = "/cmn/StdCmnSptMgt/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_14);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subSaveHistory");
			submission_6.action = "/cmn/StdCmnSptMgt/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataSet_17);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subSaveLang");
			submission_7.action = "/cmn/StdCmnSptMgt/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataSet_13);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subSaveSer");
			submission_8.action = "/cmn/StdCmnSptMgt/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataSet_16);
			app.register(submission_8);
			
			var submission_9 = new cpr.protocols.Submission("subListSer");
			submission_9.action = "/cmn/StdCmnSptMgt/";
			submission_9.mediaType = "application/x-www-form-urlencoded";
			submission_9.addRequestData(dataMap_1);
			submission_9.addResponseData(dataSet_16, false);
			app.register(submission_9);
			
			var submission_10 = new cpr.protocols.Submission("subDateMainStdCmnDateTime");
			submission_10.action = "/cmn/StdCmnDateTime/";
			submission_10.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_10);
			
			var submission_11 = new cpr.protocols.Submission("subDateHistoryStdCmnDateTime");
			submission_11.action = "/cmn/StdCmnDateTime/";
			submission_11.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_11);
			
			var submission_12 = new cpr.protocols.Submission("subPrecheckStdCmnObjSch");
			submission_12.action = "/http://";
			submission_12.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_12);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_rptManage");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tpcFrfManage";
					var group_2 = new cpr.controls.Container("grptpcFrfManage");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var group_3 = linker.group_3 = new cpr.controls.Container("frfManage");
						group_3.style.setClasses(["form-box"]);
						// Layout
						var xYLayout_3 = new cpr.controls.layouts.XYLayout();
						group_3.setLayout(xYLayout_3);
						(function(container){
							var inputBox_1 = new cpr.controls.InputBox("ipbFrfSpCd");
							inputBox_1.maxLength = 10;
							inputBox_1.userAttr({"require": "Y"});
							inputBox_1.bind("fieldLabel").toExpression("#optFrfSpCd.value");
							inputBox_1.bind("value").toDataColumn("SP_CD");
							container.addChild(inputBox_1, {
								"top": "30px",
								"left": "130px",
								"width": "110px",
								"height": "25px"
							});
							var output_1 = new cpr.controls.Output("optFrfSpNm");
							output_1.value = "";
							output_1.style.setClasses(["require"]);
							output_1.bind("value").toLanguage("UI-DB-SP_NM");
							container.addChild(output_1, {
								"top": "55px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_2 = new cpr.controls.InputBox("ipbFrfSpNm");
							inputBox_2.maxLength = 200;
							inputBox_2.userAttr({"require": "Y"});
							inputBox_2.bind("fieldLabel").toExpression("#optFrfSpNm.value");
							inputBox_2.bind("value").toDataColumn("SP_NM");
							container.addChild(inputBox_2, {
								"top": "55px",
								"left": "130px",
								"width": "335px",
								"height": "25px"
							});
							var dateInput_1 = new cpr.controls.DateInput("dipFrfStDt");
							dateInput_1.enabled = false;
							dateInput_1.userAttr({"require": "Y"});
							dateInput_1.bind("fieldLabel").toExpression("#optFrfStDt.value");
							dateInput_1.bind("value").toDataColumn("ST_DT");
							container.addChild(dateInput_1, {
								"top": "5px",
								"left": "130px",
								"width": "110px",
								"height": "25px"
							});
							var output_2 = new cpr.controls.Output("optFrfStDt");
							output_2.value = "";
							output_2.style.setClasses(["require"]);
							output_2.bind("value").toLanguage("UI-DB-ST_DT");
							container.addChild(output_2, {
								"top": "5px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_3 = new cpr.controls.Output("optFrfEndDt");
							output_3.value = "";
							output_3.style.setClasses(["require"]);
							output_3.bind("value").toLanguage("UI-DB-END_DT");
							container.addChild(output_3, {
								"top": "5px",
								"left": "250px",
								"width": "100px",
								"height": "25px"
							});
							var dateInput_2 = new cpr.controls.DateInput("dipFrfEndDt");
							dateInput_2.enabled = false;
							dateInput_2.userAttr({"require": "Y"});
							dateInput_2.bind("fieldLabel").toExpression("#optFrfEndDt.value");
							dateInput_2.bind("value").toDataColumn("END_DT");
							container.addChild(dateInput_2, {
								"top": "5px",
								"left": "355px",
								"width": "110px",
								"height": "25px"
							});
							var output_4 = new cpr.controls.Output("optFrfSaNm");
							output_4.value = "";
							output_4.style.setClasses(["require"]);
							output_4.bind("value").toLanguage("UI-SCR-UPDEPNM");
							container.addChild(output_4, {
								"top": "30px",
								"left": "475px",
								"width": "150px",
								"height": "25px"
							});
							var inputBox_3 = new cpr.controls.InputBox("ipbFrfSaNm");
							inputBox_3.maxLength = 40;
							inputBox_3.userAttr({"require": "Y"});
							inputBox_3.bind("fieldLabel").toExpression("#optFrfSaNm.value");
							inputBox_3.bind("value").toDataColumn("SA_CD_NM");
							if(typeof onIpbFrfSaNmValueChange == "function") {
								inputBox_3.addEventListener("value-change", onIpbFrfSaNmValueChange);
							}
							container.addChild(inputBox_3, {
								"top": "30px",
								"left": "635px",
								"width": "225px",
								"height": "25px"
							});
							var button_1 = new cpr.controls.Button("btnFrfSaNm");
							button_1.value = "";
							button_1.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfSaNmClick == "function") {
								button_1.addEventListener("click", onBtnFrfSaNmClick);
							}
							container.addChild(button_1, {
								"top": "30px",
								"left": "864px",
								"width": "20px",
								"height": "25px"
							});
							var output_5 = new cpr.controls.Output("optFrfSpCd");
							output_5.value = "";
							output_5.style.setClasses(["require"]);
							output_5.bind("value").toLanguage("UI-DB-SP_CD");
							container.addChild(output_5, {
								"top": "30px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_6 = new cpr.controls.Output("optFrfSpDivRcd");
							output_6.value = "";
							output_6.style.setClasses(["require"]);
							output_6.bind("value").toLanguage("UI-SCR-SPCORSDIV");
							container.addChild(output_6, {
								"top": "30px",
								"left": "250px",
								"width": "100px",
								"height": "25px"
							});
							var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSpDivRcd");
							comboBox_1.userAttr({"require": "Y"});
							comboBox_1.bind("fieldLabel").toExpression("#optFrfSpDivRcd.value");
							comboBox_1.bind("value").toDataColumn("SP_DIV_RCD");
							(function(comboBox_1){
								comboBox_1.setItemSet(app.lookup("dsSptList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_1);
							if(typeof onCbbFrfSpDivRcdSelectionChange == "function") {
								comboBox_1.addEventListener("selection-change", onCbbFrfSpDivRcdSelectionChange);
							}
							container.addChild(comboBox_1, {
								"top": "30px",
								"left": "355px",
								"width": "110px",
								"height": "25px"
							});
							var output_7 = new cpr.controls.Output("optFrfShortNm");
							output_7.value = "";
							output_7.bind("value").toLanguage("UI-GLS-SHORT_NM");
							container.addChild(output_7, {
								"top": "80px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_8 = new cpr.controls.Output("optFrfPrtOrd");
							output_8.value = "";
							output_8.bind("value").toLanguage("UI-DB-PRT_ORD");
							container.addChild(output_8, {
								"top": "80px",
								"left": "895px",
								"width": "110px",
								"height": "25px"
							});
							var inputBox_4 = new cpr.controls.InputBox("ipbFrfShortNm");
							inputBox_4.maxLength = 100;
							inputBox_4.bind("fieldLabel").toExpression("#optFrfShortNm.value");
							inputBox_4.bind("value").toDataColumn("SHORT_NM");
							container.addChild(inputBox_4, {
								"top": "80px",
								"left": "130px",
								"width": "335px",
								"height": "25px"
							});
							var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfPrtOrd");
							numberEditor_1.format = "9,999,999,999";
							numberEditor_1.bind("fieldLabel").toExpression("#optFrfPrtOrd.value");
							numberEditor_1.bind("value").toDataColumn("PRT_ORD");
							container.addChild(numberEditor_1, {
								"top": "80px",
								"left": "1010px",
								"width": "180px",
								"height": "25px"
							});
							var output_9 = new cpr.controls.Output("optFrfCertSpNm");
							output_9.value = "";
							output_9.bind("value").toLanguage("UI-DB-CERT_SP_NM");
							container.addChild(output_9, {
								"top": "105px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_5 = new cpr.controls.InputBox("ipbFrfCertSpNm");
							inputBox_5.maxLength = 200;
							inputBox_5.bind("fieldLabel").toExpression("#optFrfCertSpNm.value");
							inputBox_5.bind("value").toDataColumn("CERT_SP_NM");
							container.addChild(inputBox_5, {
								"top": "105px",
								"left": "130px",
								"width": "335px",
								"height": "25px"
							});
							var output_10 = new cpr.controls.Output("optFrfSpDnDivRcd");
							output_10.value = "";
							output_10.bind("value").toLanguage("UI-DB-SP_DN_DIV_RCD");
							container.addChild(output_10, {
								"top": "55px",
								"left": "475px",
								"width": "150px",
								"height": "25px"
							});
							var comboBox_2 = new cpr.controls.ComboBox("cbbFrfSpDnDivRcd");
							comboBox_2.bind("fieldLabel").toExpression("#optFrfSaDnDivRcd.value");
							comboBox_2.bind("value").toDataColumn("SP_SUB_DIV_RCD");
							(function(comboBox_2){
								comboBox_2.setItemSet(app.lookup("dsStrSpDnDivRcd"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_2);
							container.addChild(comboBox_2, {
								"top": "55px",
								"left": "635px",
								"width": "250px",
								"height": "25px"
							});
							var output_11 = new cpr.controls.Output("optFrfTermUnitRcd");
							output_11.value = "";
							output_11.bind("value").toLanguage("UI-SCR-TERMUNIT");
							container.addChild(output_11, {
								"top": "5px",
								"left": "895px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_3 = new cpr.controls.ComboBox("cbbFrfTermUnitRcd");
							comboBox_3.bind("fieldLabel").toExpression("#optFrfTermUnitRcd.value");
							comboBox_3.bind("value").toDataColumn("TERM_UNIT_RCD");
							(function(comboBox_3){
								comboBox_3.setItemSet(app.lookup("dsListTermUnitRcd"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_3);
							container.addChild(comboBox_3, {
								"top": "5px",
								"left": "1010px",
								"width": "182px",
								"height": "25px"
							});
							var output_12 = new cpr.controls.Output("optFrfDayNightDivRcd");
							output_12.value = "";
							output_12.bind("value").toLanguage("UI-SCR-DNDIV2");
							container.addChild(output_12, {
								"top": "80px",
								"left": "475px",
								"width": "150px",
								"height": "25px"
							});
							var comboBox_4 = new cpr.controls.ComboBox("cbbFrfDayNightDivRcd");
							comboBox_4.bind("fieldLabel").toExpression("#optFrfDayNightDivRcd.value");
							comboBox_4.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
							(function(comboBox_4){
								comboBox_4.setItemSet(app.lookup("dsDayNightList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_4);
							container.addChild(comboBox_4, {
								"top": "80px",
								"left": "635px",
								"width": "250px",
								"height": "25px"
							});
							var output_13 = new cpr.controls.Output("optFrfRegFeeCatRcd");
							output_13.value = "";
							output_13.bind("value").toLanguage("UI-SCR-TUITICATG");
							container.addChild(output_13, {
								"top": "30px",
								"left": "895px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_5 = new cpr.controls.ComboBox("cbbFrfRegFeeCatRcd");
							comboBox_5.bind("fieldLabel").toExpression("#optFrfRegFeeCatRcd.value");
							comboBox_5.bind("value").toDataColumn("REG_FEE_CAT_RCD");
							(function(comboBox_5){
								comboBox_5.setItemSet(app.lookup("dsFeeCatRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_5);
							container.addChild(comboBox_5, {
								"top": "30px",
								"left": "1010px",
								"width": "182px",
								"height": "25px"
							});
							var output_14 = new cpr.controls.Output("optFrfOnschYlt");
							output_14.value = "";
							output_14.bind("value").toLanguage("UI-SCR-ONSCHYL");
							container.addChild(output_14, {
								"top": "105px",
								"left": "475px",
								"width": "150px",
								"height": "25px"
							});
							var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfOnschYlt");
							numberEditor_2.format = "999,999,999,999,999";
							numberEditor_2.bind("fieldLabel").toExpression("#optFrfOnschYlt.value");
							numberEditor_2.bind("value").toDataColumn("ONSCH_YLT");
							container.addChild(numberEditor_2, {
								"top": "105px",
								"left": "635px",
								"width": "249px",
								"height": "25px"
							});
							var output_15 = new cpr.controls.Output("optFrfAss");
							output_15.value = "";
							output_15.bind("value").toLanguage("UI-GLS-ASS");
							container.addChild(output_15, {
								"top": "105px",
								"left": "895px",
								"width": "110px",
								"height": "25px"
							});
							var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfAss");
							numberEditor_3.format = "999,999,999,999,999";
							numberEditor_3.bind("fieldLabel").toExpression("#optFrfAss.value");
							numberEditor_3.bind("value").toDataColumn("ASS");
							container.addChild(numberEditor_3, {
								"top": "105px",
								"left": "1010px",
								"width": "180px",
								"height": "25px"
							});
							var output_16 = new cpr.controls.Output("optFrfDgNm");
							output_16.value = "";
							output_16.bind("value").toLanguage("UI-DB-DGR_CD");
							container.addChild(output_16, {
								"top": "55px",
								"left": "895px",
								"width": "110px",
								"height": "25px"
							});
							var output_17 = new cpr.controls.Output("optFrfLangKey");
							output_17.value = "";
							output_17.bind("value").toLanguage("UI-SCR-LANKEY");
							container.addChild(output_17, {
								"top": "124px",
								"left": "579px",
								"width": "53px",
								"height": "25px"
							});
							var inputBox_6 = new cpr.controls.InputBox("ipbFrfLangKey");
							inputBox_6.visible = false;
							inputBox_6.maxLength = 40;
							inputBox_6.userAttr({"require": "Y"});
							inputBox_6.bind("value").toDataColumn("LAN_DIV_RCD");
							if(typeof onIpbFrfLangKeyValueChange == "function") {
								inputBox_6.addEventListener("value-change", onIpbFrfLangKeyValueChange);
							}
							container.addChild(inputBox_6, {
								"top": "124px",
								"left": "634px",
								"width": "36px",
								"height": "25px"
							});
							var output_18 = new cpr.controls.Output("optFrfRefKey");
							output_18.value = "";
							output_18.bind("value").toLanguage("UI-DB-REF_KEY");
							container.addChild(output_18, {
								"top": "124px",
								"left": "460px",
								"width": "43px",
								"height": "25px"
							});
							var inputBox_7 = new cpr.controls.InputBox("ipbFrfRefKey");
							inputBox_7.visible = false;
							inputBox_7.maxLength = 40;
							inputBox_7.bind("fieldLabel").toExpression("#optFrfRefKey.value");
							inputBox_7.bind("value").toDataColumn("REF_KEY");
							if(typeof onIpbFrfRefKeyValueChange == "function") {
								inputBox_7.addEventListener("value-change", onIpbFrfRefKeyValueChange);
							}
							container.addChild(inputBox_7, {
								"top": "124px",
								"left": "504px",
								"width": "34px",
								"height": "25px"
							});
							var inputBox_8 = new cpr.controls.InputBox("ipbFrfSaCd");
							inputBox_8.visible = false;
							inputBox_8.maxLength = 40;
							inputBox_8.bind("value").toDataColumn("SA_CD");
							if(typeof onIpbFrfSaCdValueChange == "function") {
								inputBox_8.addEventListener("value-change", onIpbFrfSaCdValueChange);
							}
							container.addChild(inputBox_8, {
								"top": "130px",
								"left": "994px",
								"width": "28px",
								"height": "25px"
							});
							var inputBox_9 = new cpr.controls.InputBox("ipbFrfSaObjDivRcd");
							inputBox_9.visible = false;
							inputBox_9.maxLength = 40;
							inputBox_9.bind("fieldLabel").toExpression("#optFrfUobjDivRcd.value");
							inputBox_9.bind("value").toDataColumn("SA_OBJ_DIV_RCD");
							if(typeof onIpbFrfSaObjDivRcdValueChange == "function") {
								inputBox_9.addEventListener("value-change", onIpbFrfSaObjDivRcdValueChange);
							}
							container.addChild(inputBox_9, {
								"top": "131px",
								"left": "1096px",
								"width": "46px",
								"height": "25px"
							});
							var output_19 = new cpr.controls.Output("optFrfUobjDivRcd");
							output_19.value = "";
							output_19.bind("value").toLanguage("UI-SCR-UPDEPDIV");
							container.addChild(output_19, {
								"top": "130px",
								"left": "1040px",
								"width": "52px",
								"height": "25px"
							});
							var output_20 = new cpr.controls.Output("optFrfOgCdCd");
							output_20.value = "";
							output_20.bind("value").toLanguage("UI-DB-USA_CD");
							container.addChild(output_20, {
								"top": "130px",
								"left": "939px",
								"width": "55px",
								"height": "25px"
							});
							var output_21 = new cpr.controls.Output("optFrfobjDivRcd");
							output_21.value = "";
							output_21.bind("value").toLanguage("UI-DB-OBJ_DIV_RCD");
							container.addChild(output_21, {
								"top": "130px",
								"left": "675px",
								"width": "78px",
								"height": "25px"
							});
							var inputBox_10 = new cpr.controls.InputBox("ipbFrfobjDivRcd");
							inputBox_10.visible = false;
							inputBox_10.maxLength = 40;
							inputBox_10.bind("fieldLabel").toExpression("#optFrfobjDivRcd.value");
							inputBox_10.bind("value").toDataColumn("OBJ_DIV_RCD");
							if(typeof onIpbFrfobjDivRcdValueChange == "function") {
								inputBox_10.addEventListener("value-change", onIpbFrfobjDivRcdValueChange);
							}
							container.addChild(inputBox_10, {
								"top": "130px",
								"left": "752px",
								"width": "46px",
								"height": "25px"
							});
							var output_22 = new cpr.controls.Output("optFrfCsrDivRcd");
							output_22.value = "";
							output_22.style.setClasses(["require"]);
							output_22.bind("value").toLanguage("UI-DB-SP_DN_DIV_RCD");
							container.addChild(output_22, {
								"top": "5px",
								"left": "475px",
								"width": "150px",
								"height": "25px"
							});
							var comboBox_6 = new cpr.controls.ComboBox("cbbFrfCsrDivRcd");
							comboBox_6.bind("fieldLabel").toExpression("#optFrfCsrDivRcd.value");
							comboBox_6.bind("value").toDataColumn("DGR_CRS_DIV_RCD");
							(function(comboBox_6){
								comboBox_6.setItemSet(app.lookup("dsCrsDivRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_6);
							container.addChild(comboBox_6, {
								"top": "5px",
								"left": "635px",
								"width": "250px",
								"height": "25px"
							});
							var output_23 = new cpr.controls.Output("optFrfFlagGbn");
							output_23.value = "";
							output_23.bind("value").toLanguage("UI-DB-OBJ_DIV_RCD");
							container.addChild(output_23, {
								"top": "130px",
								"left": "806px",
								"width": "41px",
								"height": "25px"
							});
							var inputBox_11 = new cpr.controls.InputBox("ipbFrfFlagGbn");
							inputBox_11.visible = false;
							inputBox_11.maxLength = 40;
							inputBox_11.bind("fieldLabel").toExpression("#optFrfobjDivRcd.value");
							inputBox_11.bind("value").toDataColumn("FLAG_GBN");
							if(typeof onIpbFrfFlagGbnValueChange == "function") {
								inputBox_11.addEventListener("value-change", onIpbFrfFlagGbnValueChange);
							}
							container.addChild(inputBox_11, {
								"top": "130px",
								"left": "836px",
								"width": "26px",
								"height": "25px"
							});
							var inputBox_12 = new cpr.controls.InputBox("ipbFrfDgNm");
							inputBox_12.maxLength = 40;
							inputBox_12.bind("fieldLabel").toExpression("#optFrfDgNm.value");
							inputBox_12.bind("value").toDataColumn("DG_CD_NM");
							if(typeof onIpbFrfDgNmValueChange == "function") {
								inputBox_12.addEventListener("value-change", onIpbFrfDgNmValueChange);
							}
							container.addChild(inputBox_12, {
								"top": "55px",
								"left": "1010px",
								"width": "160px",
								"height": "25px"
							});
							var button_2 = new cpr.controls.Button("btnFrfDgNm");
							button_2.value = "";
							button_2.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfDgNmClick == "function") {
								button_2.addEventListener("click", onBtnFrfDgNmClick);
							}
							container.addChild(button_2, {
								"top": "55px",
								"left": "1170px",
								"width": "20px",
								"height": "25px"
							});
							var output_24 = new cpr.controls.Output("optFrfDgCd");
							output_24.value = "";
							output_24.bind("value").toLanguage("UI-DB-USA_CD");
							container.addChild(output_24, {
								"top": "130px",
								"left": "871px",
								"width": "48px",
								"height": "25px"
							});
							var inputBox_13 = new cpr.controls.InputBox("ipbFrfDgCd");
							inputBox_13.visible = false;
							inputBox_13.maxLength = 40;
							inputBox_13.bind("fieldLabel").toExpression("#optFrfDgCd.value");
							inputBox_13.bind("value").toDataColumn("DG_CD");
							if(typeof onIpbFrfDgCdValueChange == "function") {
								inputBox_13.addEventListener("value-change", onIpbFrfDgCdValueChange);
							}
							container.addChild(inputBox_13, {
								"top": "130px",
								"left": "898px",
								"width": "28px",
								"height": "25px"
							});
						})(group_3);
						container.addChild(group_3, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "150px"
						});
						var userDefinedControl_2 = new udc.com.comFormTitle();
						userDefinedControl_2.bind("title").toLanguage("");
						container.addChild(userDefinedControl_2, {
							"top": "5px",
							"left": "5px",
							"width": "150px",
							"height": "25px"
						});
						var button_3 = new cpr.controls.Button("btnCopy");
						button_3.value = "";
						button_3.bind("value").toLanguage("UI-SCR-COPY");
						if(typeof onBtnCopyClick == "function") {
							button_3.addEventListener("click", onBtnCopyClick);
						}
						container.addChild(button_3, {
							"top": "5px",
							"left": "890px",
							"width": "60px",
							"height": "25px"
						});
						var button_4 = new cpr.controls.Button("btnNew");
						button_4.value = "";
						button_4.style.setClasses(["btn-new"]);
						button_4.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewClick == "function") {
							button_4.addEventListener("click", onBtnNewClick);
						}
						container.addChild(button_4, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_5 = new cpr.controls.Button("btnDel");
						button_5.value = "";
						button_5.style.setClasses(["btn-delete"]);
						button_5.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelClick == "function") {
							button_5.addEventListener("click", onBtnDelClick);
						}
						if(typeof onBtnDelClick == "function") {
							button_5.addEventListener("click", onBtnDelClick);
						}
						container.addChild(button_5, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_6 = new cpr.controls.Button("btnRestore");
						button_6.value = "";
						button_6.style.setClasses(["btn-restore"]);
						button_6.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreClick == "function") {
							button_6.addEventListener("click", onBtnRestoreClick);
						}
						container.addChild(button_6, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_7 = new cpr.controls.Button("btnSave");
						button_7.value = "";
						button_7.style.setClasses(["btn-save"]);
						button_7.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveClick == "function") {
							button_7.addEventListener("click", onBtnSaveClick);
						}
						container.addChild(button_7, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
					})(group_2);
					tabItem_1.content = group_2;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tpcRptHistory";
					var group_4 = new cpr.controls.Container("grptpcRptHistory");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var button_8 = new cpr.controls.Button("btnNew3");
						button_8.value = "폐기";
						button_8.style.setClasses(["btn-new"]);
						if(typeof onBtnNew3Click == "function") {
							button_8.addEventListener("click", onBtnNew3Click);
						}
						if(typeof onBtnNew3Click == "function") {
							button_8.addEventListener("click", onBtnNew3Click);
						}
						container.addChild(button_8, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_9 = new cpr.controls.Button("btnNew4");
						button_9.value = "폐기취소";
						button_9.style.setClasses(["btn-new"]);
						if(typeof onBtnNew4Click == "function") {
							button_9.addEventListener("click", onBtnNew4Click);
						}
						container.addChild(button_9, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_10 = new cpr.controls.Button("btnDel2");
						button_10.value = "복구";
						button_10.style.setClasses(["btn-delete"]);
						if(typeof onBtnDel2Click == "function") {
							button_10.addEventListener("click", onBtnDel2Click);
						}
						container.addChild(button_10, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
						var output_25 = new cpr.controls.Output("optKeyDateHistory");
						output_25.value = "폐기/복구일자";
						output_25.style.setClasses(["require"]);
						container.addChild(output_25, {
							"top": "5px",
							"left": "768px",
							"width": "100px",
							"height": "25px"
						});
						var dateInput_3 = new cpr.controls.DateInput("dipKeyDateHistory");
						dateInput_3.format = "YYYY-MM-DD";
						dateInput_3.bind("fieldLabel").toExpression("#optKeyDateHistory.value");
						dateInput_3.bind("value").toDataMap(app.lookup("dmDateHistory"), "ST_DT");
						container.addChild(dateInput_3, {
							"top": "5px",
							"left": "872px",
							"width": "120px",
							"height": "25px"
						});
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-HSTMNMLST");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var button_11 = new cpr.controls.Button("btnYearSmtHis");
						button_11.value = "";
						button_11.style.setClasses(["btn-pop-search"]);
						if(typeof onBtnYearSmtHisClick == "function") {
							button_11.addEventListener("click", onBtnYearSmtHisClick);
						}
						container.addChild(button_11, {
							"top": "5px",
							"left": "992px",
							"width": "20px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdHistory");
						grid_1.init({
							"dataSet": app.lookup("dsHistory"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "106px"},
								{"width": "132px"},
								{"width": "109px"},
								{"width": "109px"},
								{"width": "118px"},
								{"width": "179px"},
								{"width": "137px"},
								{"width": "151px"},
								{"width": "97px"},
								{"width": "80px"},
								{"width": "97px"},
								{"width": "80px"},
								{"width": "108px"},
								{
									"width": "98px",
									"visible": false
								},
								{
									"width": "117px",
									"visible": false
								},
								{
									"width": "157px",
									"visible": false
								},
								{
									"width": "108px",
									"visible": false
								},
								{
									"width": "108px",
									"visible": false
								},
								{
									"width": "153px",
									"visible": false
								},
								{
									"width": "88px",
									"visible": false
								},
								{
									"width": "79px",
									"visible": false
								},
								{
									"width": "107px",
									"visible": false
								},
								{
									"width": "153px",
									"visible": false
								},
								{
									"width": "153px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-SP_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-SP_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ST_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-END_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-ISUPRCDNDIVCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CERT_SP_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-SPCORSDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXP_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DNDIV2");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TUITICATG");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SA_OBJ_DIV_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_26 = new cpr.controls.Output();
												output_26.style.css({
													"text-align" : "center"
												});
												return output_26;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SP_CD";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "SP_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
											cell.control = (function(){
												var output_27 = new cpr.controls.Output("gdOptStDtHis");
												output_27.dataType = "date";
												output_27.format = "YYYY-MM-DD";
												output_27.style.css({
													"text-align" : "center"
												});
												output_27.bind("value").toDataColumn("ST_DT");
												return output_27;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "END_DT";
											cell.control = (function(){
												var output_28 = new cpr.controls.Output("gdOptEndDtHis");
												output_28.dataType = "date";
												output_28.format = "YYYY-MM-DD";
												output_28.style.css({
													"text-align" : "center"
												});
												output_28.bind("value").toDataColumn("END_DT");
												return output_28;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "SA_CD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "SP_SUB_DIV_RCD";
											cell.control = (function(){
												var comboBox_7 = new cpr.controls.ComboBox("gdCbbSpDnDivRcdHis");
												comboBox_7.enabled = false;
												comboBox_7.hideButton = true;
												(function(comboBox_7){
													comboBox_7.setItemSet(app.lookup("dsStrSpDnDivRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_7);
												comboBox_7.bind("value").toDataColumn("SP_SUB_DIV_RCD");
												return comboBox_7;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "CERT_SP_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "SP_DIV_RCD";
											cell.control = (function(){
												var comboBox_8 = new cpr.controls.ComboBox("gdCbbSpDivRcdHis");
												comboBox_8.enabled = false;
												comboBox_8.hideButton = true;
												comboBox_8.userAttr({"require": "Y"});
												(function(comboBox_8){
													comboBox_8.addItem(new cpr.controls.Item("선택", ""));
													comboBox_8.setItemSet(app.lookup("dsSptList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_8);
												comboBox_8.bind("value").toDataColumn("SP_DIV_RCD");
												return comboBox_8;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "EXP_DT";
											cell.control = (function(){
												var output_29 = new cpr.controls.Output("gdOptExpDtHis");
												output_29.dataType = "date";
												output_29.format = "YYYY-MM-DD";
												output_29.style.css({
													"text-align" : "center"
												});
												output_29.bind("value").toDataColumn("EXP_DT");
												return output_29;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "DAY_NIGHT_DIV_RCD";
											cell.control = (function(){
												var comboBox_9 = new cpr.controls.ComboBox("gdCbbDayNightDivRcd1");
												comboBox_9.enabled = false;
												comboBox_9.hideButton = true;
												(function(comboBox_9){
													comboBox_9.setItemSet(app.lookup("dsDayNightList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_9);
												comboBox_9.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
												return comboBox_9;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "REG_FEE_CAT_RCD";
											cell.control = (function(){
												var comboBox_10 = new cpr.controls.ComboBox("gdCbbRegFeeCatRcdHis");
												comboBox_10.enabled = false;
												comboBox_10.hideButton = true;
												(function(comboBox_10){
													comboBox_10.setItemSet(app.lookup("dsFeeCatRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_10);
												comboBox_10.bind("value").toDataColumn("REG_FEE_CAT_RCD");
												return comboBox_10;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "OBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "SA_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.columnName = "SA_OBJ_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "DGR_CRS_DIV_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "DG_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.columnName = "ASS";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.columnName = "ONSCH_YLT";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.columnName = "TERM_UNIT_RCD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.columnName = "FLAG_GBN";
										}
									}
								]
							}
						});
						if(typeof onGrdHistorySelectionChange == "function") {
							grid_1.addEventListener("selection-change", onGrdHistorySelectionChange);
						}
						container.addChild(grid_1, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "150px"
						});
					})(group_4);
					tabItem_2.content = group_4;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tpcRptLang";
					var group_5 = new cpr.controls.Container("grptpcRptLang");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_5.setLayout(formLayout_3);
					(function(container){
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("UI-SCR-LANLST");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdLang");
						grid_2.init({
							"dataSet": app.lookup("dsLang"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "100px"},
								{"width": "80px"},
								{"width": "280px"},
								{"width": "280px"},
								{"width": "227px"},
								{"width": "73px"},
								{
									"width": "133px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-SP_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-SP_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SPPROCALIAS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CERT_SP_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-REF_KEY");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_30 = new cpr.controls.Output();
												output_30.style.css({
													"text-align" : "center"
												});
												return output_30;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SP_CD";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_11 = new cpr.controls.ComboBox("gdCbbLangKeyLang");
												comboBox_11.userAttr({"require": "Y"});
												(function(comboBox_11){
													comboBox_11.addItem(new cpr.controls.Item("선택", ""));
													comboBox_11.setItemSet(app.lookup("dsLangList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_11);
												comboBox_11.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_11;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "SP_NM";
											cell.control = (function(){
												var inputBox_14 = new cpr.controls.InputBox("gdIpbSaNmLang");
												inputBox_14.maxLength = 200;
												inputBox_14.userAttr({"require": "Y"});
												inputBox_14.bind("value").toDataColumn("SP_NM");
												return inputBox_14;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
											cell.control = (function(){
												var inputBox_15 = new cpr.controls.InputBox("gdIpbShortNmLang");
												inputBox_15.maxLength = 100;
												inputBox_15.bind("value").toDataColumn("SHORT_NM");
												return inputBox_15;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "CERT_SP_NM";
											cell.control = (function(){
												var inputBox_16 = new cpr.controls.InputBox("gdIpbCertSaNmLang");
												inputBox_16.maxLength = 200;
												inputBox_16.bind("value").toDataColumn("CERT_SP_NM");
												return inputBox_16;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
											cell.control = (function(){
												var numberEditor_4 = new cpr.controls.NumberEditor("gdIpbPrtOgdLang");
												numberEditor_4.spinButton = false;
												numberEditor_4.format = "9,999,999,999";
												numberEditor_4.bind("value").toDataColumn("PRT_ORD");
												return numberEditor_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
											cell.control = (function(){
												var inputBox_17 = new cpr.controls.InputBox("gdIpbRefKeyLang");
												inputBox_17.userAttr({"require": "Y"});
												inputBox_17.bind("value").toDataColumn("REF_KEY");
												return inputBox_17;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdLangSelectionChange == "function") {
							grid_2.addEventListener("selection-change", onGrdLangSelectionChange);
						}
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "150px"
						});
						var button_12 = new cpr.controls.Button("btnNewLang");
						button_12.value = "신규";
						button_12.style.setClasses(["btn-new"]);
						if(typeof onBtnNewLangClick == "function") {
							button_12.addEventListener("click", onBtnNewLangClick);
						}
						container.addChild(button_12, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_13 = new cpr.controls.Button("btnDelLang");
						button_13.value = "삭제";
						button_13.style.setClasses(["btn-delete"]);
						if(typeof onBtnDelLangClick == "function") {
							button_13.addEventListener("click", onBtnDelLangClick);
						}
						container.addChild(button_13, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_14 = new cpr.controls.Button("btnRestoreLang");
						button_14.value = "취소";
						button_14.style.setClasses(["btn-restore"]);
						if(typeof onBtnRestoreLangClick == "function") {
							button_14.addEventListener("click", onBtnRestoreLangClick);
						}
						container.addChild(button_14, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_15 = new cpr.controls.Button("btnSaveLang");
						button_15.value = "저장";
						button_15.style.setClasses(["btn-save"]);
						if(typeof onBtnSaveLangClick == "function") {
							button_15.addEventListener("click", onBtnSaveLangClick);
						}
						container.addChild(button_15, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
					})(group_5);
					tabItem_3.content = group_5;
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				
				var tabItem_4 = (function(tabFolder){
					var tabItem_4 = new cpr.controls.TabItem();
					tabItem_4.text = "tab1";
					tabItem_4.name = "tpcRptSer";
					var group_6 = new cpr.controls.Container("grptpcRptSer");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "0px";
					formLayout_4.verticalSpacing = "0px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_6.setLayout(formLayout_4);
					(function(container){
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
						userDefinedControl_5.bind("title").toLanguage("UI-SCR-LGPDIVLST");
						container.addChild(userDefinedControl_5, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var button_16 = new cpr.controls.Button("btnNewSer");
						button_16.value = "신규";
						button_16.style.setClasses(["btn-new"]);
						if(typeof onBtnNewSerClick == "function") {
							button_16.addEventListener("click", onBtnNewSerClick);
						}
						container.addChild(button_16, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_17 = new cpr.controls.Button("btnDelSer");
						button_17.value = "삭제";
						button_17.style.setClasses(["btn-delete"]);
						if(typeof onBtnDelSerClick == "function") {
							button_17.addEventListener("click", onBtnDelSerClick);
						}
						container.addChild(button_17, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_18 = new cpr.controls.Button("btnRestoreSer");
						button_18.value = "취소";
						button_18.style.setClasses(["btn-restore"]);
						if(typeof onBtnRestoreSerClick == "function") {
							button_18.addEventListener("click", onBtnRestoreSerClick);
						}
						container.addChild(button_18, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_19 = new cpr.controls.Button("btnSaveSer");
						button_19.value = "저장";
						button_19.style.setClasses(["btn-save"]);
						if(typeof onBtnSaveSerClick == "function") {
							button_19.addEventListener("click", onBtnSaveSerClick);
						}
						container.addChild(button_19, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdSer");
						grid_3.init({
							"dataSet": app.lookup("dsSer"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "180px"},
								{"width": "180px"},
								{"width": "769px"},
								{
									"width": "117px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-LGPDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-LGPDIVNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-ORISA");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-ORISA");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_31 = new cpr.controls.Output();
												output_31.style.css({
													"text-align" : "center"
												});
												return output_31;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SER_DIV_RCD";
											cell.control = (function(){
												var comboBox_12 = new cpr.controls.ComboBox("gdOriSerDivRcdSer");
												comboBox_12.userAttr({"require": "Y"});
												(function(comboBox_12){
													comboBox_12.addItem(new cpr.controls.Item("선택", ""));
													comboBox_12.setItemSet(app.lookup("dsSerDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_12);
												comboBox_12.bind("value").toDataColumn("SER_DIV_RCD");
												return comboBox_12;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "SER_RCD";
											cell.control = (function(){
												var comboBox_13 = new cpr.controls.ComboBox("gdOriSerCodeRcd");
												comboBox_13.userAttr({"require": "Y"});
												(function(comboBox_13){
													comboBox_13.addItem(new cpr.controls.Item("선택", ""));
													comboBox_13.setItemSet(app.lookup("dsRow[index('Ser')]"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_13);
												comboBox_13.bind("value").toDataColumn("SER_RCD");
												return comboBox_13;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "REMARK";
											cell.control = (function(){
												var inputBox_18 = new cpr.controls.InputBox("gdIpbRemarkSer");
												inputBox_18.maxLength = 1000;
												inputBox_18.bind("value").toDataColumn("REMARK");
												return inputBox_18;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
											cell.control = (function(){
												var inputBox_19 = new cpr.controls.InputBox("gdIpbRefKeySer");
												inputBox_19.userAttr({"require": "Y"});
												inputBox_19.bind("value").toDataColumn("REF_KEY");
												return inputBox_19;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdSerSelectionChange == "function") {
							grid_3.addEventListener("selection-change", onGrdSerSelectionChange);
						}
						container.addChild(grid_3, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "150px"
						});
					})(group_6);
					tabItem_4.content = group_6;
					return tabItem_4;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_4);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "409px",
					"left": "5px",
					"width": "1215px",
					"height": "186px"
				});
				var button_20 = new cpr.controls.Button("tabBtnManage");
				button_20.value = "데이터관리";
				if(typeof onTabBtnManageClick == "function") {
					button_20.addEventListener("click", onTabBtnManageClick);
				}
				container.addChild(button_20, {
					"top": "382px",
					"left": "5px",
					"width": "100px",
					"height": "28px"
				});
				var button_21 = new cpr.controls.Button("tabBtnHistory");
				button_21.value = "이력관리";
				if(typeof onTabBtnHistoryClick == "function") {
					button_21.addEventListener("click", onTabBtnHistoryClick);
				}
				container.addChild(button_21, {
					"top": "382px",
					"left": "106px",
					"width": "100px",
					"height": "28px"
				});
				var button_22 = new cpr.controls.Button("tabBtnLang");
				button_22.value = "언어";
				if(typeof onTabBtnLangClick == "function") {
					button_22.addEventListener("click", onTabBtnLangClick);
				}
				container.addChild(button_22, {
					"top": "382px",
					"left": "207px",
					"width": "100px",
					"height": "28px"
				});
				var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
				userDefinedControl_6.bind("title").toLanguage("UI-SCR-SPPROCLST");
				container.addChild(userDefinedControl_6, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var userDefinedControl_7 = new udc.com.comFormTitle();
				userDefinedControl_7.bind("title").toLanguage("");
				container.addChild(userDefinedControl_7, {
					"top": "357px",
					"left": "5px",
					"width": "145px",
					"height": "25px"
				});
				var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdManage");
				grid_4.init({
					"dataSet": app.lookup("dsManage"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "106px"},
						{"width": "132px"},
						{"width": "109px"},
						{"width": "109px"},
						{"width": "118px"},
						{"width": "161px"},
						{"width": "162px"},
						{"width": "97px"},
						{"width": "152px"},
						{"width": "167px"},
						{"width": "108px"},
						{"width": "50px"},
						{"width": "108px"},
						{"width": "108px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "108px"},
						{"width": "80px"},
						{"width": "98px"},
						{"width": "117px"},
						{"width": "157px"},
						{"width": "80px"},
						{"width": "108px"},
						{"width": "108px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SP_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SA_CD_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CERT_SP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-SPCORSDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-CRSDIVRCDNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ISUPRCDNDIVCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DGR_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ONSCHYL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TERMUNIT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PRT_ORD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DNDIV2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TUITICATG");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TUITICATG");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SA_OBJ_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EXP_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LANKEY");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_32 = new cpr.controls.Output();
										output_32.style.css({
											"text-align" : "center"
										});
										return output_32;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SP_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_33 = new cpr.controls.Output("gdOptStDt");
										output_33.dataType = "date";
										output_33.format = "YYYY-MM-DD";
										output_33.style.css({
											"text-align" : "center"
										});
										output_33.bind("value").toDataColumn("ST_DT");
										return output_33;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_34 = new cpr.controls.Output("gdOptEndDt");
										output_34.dataType = "date";
										output_34.format = "YYYY-MM-DD";
										output_34.style.css({
											"text-align" : "center"
										});
										output_34.bind("value").toDataColumn("END_DT");
										return output_34;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SA_CD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SHORT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CERT_SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SP_DIV_RCD";
									cell.control = (function(){
										var comboBox_14 = new cpr.controls.ComboBox("gdCbbSpDivRcd");
										comboBox_14.enabled = false;
										comboBox_14.hideButton = true;
										comboBox_14.userAttr({"require": "Y"});
										(function(comboBox_14){
											comboBox_14.addItem(new cpr.controls.Item("선택", ""));
											comboBox_14.setItemSet(app.lookup("dsSptList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_14);
										comboBox_14.bind("value").toDataColumn("SP_DIV_RCD");
										return comboBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DGR_CRS_DIV_RCD";
									cell.control = (function(){
										var comboBox_15 = new cpr.controls.ComboBox("gdCbbCsrDivRcd");
										comboBox_15.enabled = false;
										comboBox_15.hideButton = true;
										comboBox_15.userAttr({"require": "Y"});
										(function(comboBox_15){
											comboBox_15.addItem(new cpr.controls.Item("선택", ""));
											comboBox_15.setItemSet(app.lookup("dsCrsDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_15);
										comboBox_15.bind("value").toDataColumn("DGR_CRS_DIV_RCD");
										return comboBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SP_SUB_DIV_RCD";
									cell.control = (function(){
										var comboBox_16 = new cpr.controls.ComboBox("gdCbbSpDnDivRcd");
										comboBox_16.enabled = false;
										comboBox_16.hideButton = true;
										(function(comboBox_16){
											comboBox_16.setItemSet(app.lookup("dsStrSpDnDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_16);
										comboBox_16.bind("value").toDataColumn("SP_SUB_DIV_RCD");
										return comboBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DG_CD";
									cell.control = (function(){
										var comboBox_17 = new cpr.controls.ComboBox("gdCbbDgCd");
										comboBox_17.enabled = false;
										comboBox_17.hideButton = true;
										(function(comboBox_17){
											comboBox_17.setItemSet(app.lookup("dsDgList"), {
												"label": "DG_NM",
												"value": "DG_CD"
											});
										})(comboBox_17);
										comboBox_17.bind("value").toDataColumn("DG_CD");
										return comboBox_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ASS";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "ONSCH_YLT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "TERM_UNIT_RCD";
									cell.control = (function(){
										var comboBox_18 = new cpr.controls.ComboBox("gdCbbTermUnitRcd");
										comboBox_18.enabled = false;
										comboBox_18.hideButton = true;
										(function(comboBox_18){
											comboBox_18.setItemSet(app.lookup("dsListTermUnitRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_18);
										comboBox_18.bind("value").toDataColumn("TERM_UNIT_RCD");
										return comboBox_18;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "PRT_ORD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD";
									cell.control = (function(){
										var comboBox_19 = new cpr.controls.ComboBox("gdCbbDayNightDivRcd");
										comboBox_19.enabled = false;
										comboBox_19.hideButton = true;
										(function(comboBox_19){
											comboBox_19.setItemSet(app.lookup("dsDayNightList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_19);
										comboBox_19.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
										return comboBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REG_FEE_CAT_RCD";
									cell.control = (function(){
										var comboBox_20 = new cpr.controls.ComboBox("gdCbbRegFeeCatRcd");
										comboBox_20.enabled = false;
										comboBox_20.hideButton = true;
										(function(comboBox_20){
											comboBox_20.setItemSet(app.lookup("dsFeeCatRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_20);
										comboBox_20.bind("value").toDataColumn("REG_FEE_CAT_RCD");
										return comboBox_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "FLAG_GBN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SA_OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "EXP_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
								}
							}
						]
					}
				});
				if(typeof onGrdManageSelectionChange == "function") {
					grid_4.addEventListener("selection-change", onGrdManageSelectionChange);
				}
				container.addChild(grid_4, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "322px"
				});
				var button_23 = new cpr.controls.Button("tabBtnSer");
				button_23.value = "계열관리";
				if(typeof onTabBtnSerClick == "function") {
					button_23.addEventListener("click", onTabBtnSerClick);
				}
				container.addChild(button_23, {
					"top": "382px",
					"left": "308px",
					"width": "100px",
					"height": "28px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var group_7 = new cpr.controls.Container("grpSearch");
			group_7.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_7.setLayout(xYLayout_4);
			(function(container){
				var output_35 = new cpr.controls.Output("optKeyDate");
				output_35.value = "";
				output_35.style.setClasses(["require"]);
				output_35.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_35, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var output_36 = new cpr.controls.Output("optSpDivRcdList");
				output_36.value = "";
				output_36.bind("value").toLanguage("UI-SCR-SPCORSDIV");
				container.addChild(output_36, {
					"top": "5px",
					"left": "245px",
					"width": "100px",
					"height": "25px"
				});
				var button_24 = new cpr.controls.Button("btnSearch");
				button_24.value = "조회";
				button_24.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_24.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_24, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var dateInput_4 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_4.style.css({
					"text-align" : "center"
				});
				dateInput_4.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_4.bind("value").toDataMap(app.lookup("dmDateMain"), "ST_DT");
				if(typeof onDipKeyDateKeydown == "function") {
					dateInput_4.addEventListener("keydown", onDipKeyDateKeydown);
				}
				container.addChild(dateInput_4, {
					"top": "5px",
					"left": "110px",
					"width": "110px",
					"height": "25px"
				});
				var comboBox_21 = new cpr.controls.ComboBox("cbbSpDivRcdList");
				comboBox_21.bind("fieldLabel").toExpression("#optSpDivRcdList.value");
				comboBox_21.bind("value").toDataMap(app.lookup("dmReqList"), "strSpDivRcd");
				(function(comboBox_21){
					comboBox_21.addItem(new cpr.controls.Item("전체", "%"));
					comboBox_21.setItemSet(app.lookup("dsSptList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_21);
				container.addChild(comboBox_21, {
					"top": "5px",
					"left": "350px",
					"width": "120px",
					"height": "25px"
				});
				var inputBox_20 = new cpr.controls.InputBox("ipbSpNm");
				inputBox_20.maxLength = 100;
				inputBox_20.bind("fieldLabel").toExpression("#optSpNm.value");
				inputBox_20.bind("value").toDataMap(app.lookup("dmReqList"), "strSpNm");
				if(typeof onIpbSpNmKeydown == "function") {
					inputBox_20.addEventListener("keydown", onIpbSpNmKeydown);
				}
				container.addChild(inputBox_20, {
					"top": "5px",
					"left": "585px",
					"width": "100px",
					"height": "25px"
				});
				var output_37 = new cpr.controls.Output("optSpNm");
				output_37.value = "";
				output_37.bind("value").toLanguage("UI-SCR-DEPTNM");
				container.addChild(output_37, {
					"top": "5px",
					"left": "480px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_21 = new cpr.controls.InputBox("ipbDeptNm1");
				inputBox_21.maxLength = 100;
				inputBox_21.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_21.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNm1ValueChange == "function") {
					inputBox_21.addEventListener("value-change", onIpbDeptNm1ValueChange);
				}
				container.addChild(inputBox_21, {
					"top": "48px",
					"left": "1227px",
					"width": "100px",
					"height": "25px"
				});
				var button_25 = new cpr.controls.Button("btnYearSmt");
				button_25.value = "";
				button_25.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_25.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_25, {
					"top": "5px",
					"left": "219px",
					"width": "20px",
					"height": "25px"
				});
			})(group_7);
			container.addChild(group_7, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "690px",
				"left": "20px",
				"width": "50px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "3px",
				"left": "1245px",
				"width": "325px",
				"height": "75px"
			});
			
			var output_38 = new cpr.controls.Output("optLanDivRcdList");
			output_38.value = "";
			output_38.bind("value").toLanguage("UI-SCR-SPCORSDIV");
			container.addChild(output_38, {
				"top": "105px",
				"left": "1245px",
				"width": "100px",
				"height": "25px"
			});
			
			var inputBox_22 = new cpr.controls.InputBox("ipbLanDivRcdList");
			inputBox_22.visible = false;
			inputBox_22.maxLength = 100;
			inputBox_22.bind("fieldLabel").toExpression("#optLanDivRcdList.value");
			inputBox_22.bind("value").toDataMap(app.lookup("dmResOnLoad"), "strLanDivRcd");
			if(typeof onIpbLanDivRcdListValueChange == "function") {
				inputBox_22.addEventListener("value-change", onIpbLanDivRcdListValueChange);
			}
			if(typeof onIpbLanDivRcdListKeydown == "function") {
				inputBox_22.addEventListener("keydown", onIpbLanDivRcdListKeydown);
			}
			container.addChild(inputBox_22, {
				"top": "105px",
				"left": "1344px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_4));
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.ctrl = linker.grid_2;
			linker.userDefinedControl_5.ctrl = linker.grid_3;
			linker.userDefinedControl_6.ctrl = linker.grid_4;
		}
	});
	app.title = "이수과정관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
