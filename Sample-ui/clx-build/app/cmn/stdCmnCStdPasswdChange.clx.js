/*
 * App URI: app/cmn/stdCmnCStdPasswdChange
 * Source Location: app/cmn/stdCmnCStdPasswdChange.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCStdPasswdChange", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			/******************************************************************************************************
			 *  객체검색팝업 관련 설정사항
			 *  ▶ 설정가능 유형
			 *      1. 인스턴스
			 *      2. 리피트 디테일 셀 ID
			 *      3. 컨트롤 ID
			 *  ▶ 각 변수별 설명
			 *      iXXX : 팝업에 전달될  input 파라미터
			 *      oXXX : 팝업에서 선택한 값을 받을 데이터
			 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
			 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
			 *  	3. iNm 				: 검색조건 부서명									(선택)	
			 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
			 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
			 *  	5. iStartObject 	: 검색시작부서 										(선택)
			 *								  ("CC009OG20000,CC009OG70000",) 
			 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
			 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
			 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
			 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
			 *  	8. iLanDivRcd 	: 언어키													(선택)
			 *  	9. iKeyDate 		: 기준일													(필수)
			 *  	10. oObjDivRcd 	: 객체구분코드 
			 *  	11. oCd 			: 부서코드
			 *  	12. oCdNm 		: 부서명
			 *  	13. oBegDt 		: 시작일
			 *  	14. oEndDt 		: 종료일
			 *  	15. oLanDivRcd 	: 언어키
			 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
			 *									  
			 *******************************************************************************************************/	
			//var moIdsForStdCmnPObjSch = [
			//{
			//	controlId			:	"btnSaNm",
			//	iCd					:	"",
			//	iNm					:	"ipbDeptNm",
			//	iObjDivRcd			:	["CC009SA"],
			//	iStartObject    	:   "",
			//	iOtDivRcd			:	"",
			//	iOtIsTreeView	:	"Y",
			//	iLanDivRcd		:	"",
			//	iKeyDate			:	"/root/resOnLoad/strCurDt",
			//	iKeyEndDate		:	"",
			//	oObjDivRcd		:	"",
			//	oCd					:	"/root/reqList/strDeptCd",
			//	oCdNm				:	"ipbDeptNm",
			//	oBegDt				:	"",
			//	oEndDt				:	"",
			//	oLanDivRcd		:	"",
			//	func 					:  null
			//}];
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				//리피트 초기 설정
			//	ExtRepeat.init("rptCmnUseUser");
				//검색조건 초기 설정
			//	ExtGroup.initSearchBox("grpSearch", "grpData");
				//서브미션 실행 (실패시 cover page)
			
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess) {
						util.Control.setFocus(app, "ipbStudNm");
					};
				}, true);
			};
			
			
			/*
			 * "Button" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				// 1. 리피트 변경사항체크 
				if( util.Grid.isModified(app, ["grdCmnUseUser"], "CRM") ) return false;
				
				// 2. 조회조건 필수 체크 : 학번, 학생명 중 하나는 필수
				var vsUserId = ValueUtil.fixNull( util.Control.getValue(app, "ipbStudId") );
				var vsUserNm = ValueUtil.fixNull( util.Control.getValue(app, "ipbStudNm") );
				
				if(vsUserId == "" && vsUserNm == "") {
					//조회조건[@] 중 하나는 반드시 입력해야 합니다.
					//다국어 필요 2018.05.02 배소영
					util.Msg.alert("NLS-CMM-M016", ["학번, 학생명"]);		
					return false;
				};
				
				// 3. 조회한다.
				doList(function(pbSuccess){
					if(pbSuccess){
						//조회되었습니다.
						util.Msg.notify(app, "NLS-INF-M024");
					};
				});
			};
			
			function doList(poCallBackFunc) {
				// 학생목록을 조회한다.
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess) {
						util.Control.redraw(app, ["grdCmnUseUser"]);
						// 조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					};
				});
			};
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER) {
					var vcBtnSch = app.lookup("btnSearch");
					vcBtnSch.click();
				};
			}
			
			/*
			 * "비밀번호 초기화" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnPasswdInitClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnPasswdInit = e.control;
				var vnIdx = util.Grid.getIndex(app, "grdCmnUseUser");
				
				// 1. 선택한 로우가 존재하는 지 확인
				if( vnIdx == -1) return false;
				
				var vsSsn = ValueUtil.fixNull( util.Grid.getCellValue(app, "grdCmnUseUser", "SSN", vnIdx) );
				
				// 2. 주민등록번호 입력여부 확인
				if(vsSsn == ""){
					util.Msg.warn("M110");
					return false;
				};
				
				// 3. 주민등록번호 형식 체크 확인
				if (!ValueUtil.checkType("SSN", vsSsn)){
					util.Msg.warn("M110");
					return false;
				};
				
				var vsNewPassWd = vsSsn.replace( /([0-9]{1})([0-9]{7}$)/, "$1");
				
				util.Grid.setCellValue(app, "grdCmnUseUser", "PWD", vsNewPassWd, vnIdx);
				util.Grid.setCellValue(app, "grdCmnUseUser", "TMP_PWD", vsNewPassWd, vnIdx);
			}
			
			/*
			 * "취소" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnRestoreClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnRestore = e.control;
				
				var vnIdx = util.Grid.getIndex(app, "grdCmnUseUser");
				
				// 1. 선택한 로우가 존재하는 지 확인
				if( ValueUtil.isNull(vnIdx)) return false;
				
				util.Grid.revertRowData(app, "grdCmnUseUser", vnIdx);
			}
			
			/*
			 * "저장" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSaveClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSave = e.control;
				doSave();
			};
			
			function doSave() {
				if( !util.Grid.isModified(app, "grdCmnUseUser", "MSG") ) {
					return false;
				};
				if( !util.validate(app, "grdCmnUseUser") ) return false;
				
				util.Submit.send(app, "subSave", function(pbSuccess){
					if(pbSuccess) {
						doList(function(pbListSuccess){
							if(pbListSuccess) {
								//갱신된 데이터가 조회되었습니다.
								util.Msg.notify(app, "NLS-INF-M025");
							};
						});
					};
				});
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnUseUser");
			dataSet_2.parseData({
				"info": "CMN_USE_USER@USER_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "EMAIL"},
					{"name": "SSN"},
					{"name": "USER_DIV_RCD"},
					{"name": "PARTY_ID"},
					{"name": "ID"},
					{"name": "PWD"},
					{"name": "TMP_PWD"},
					{"name": "USER_NM"},
					{"name": "ASGN_DEPT_DIV_RCD"},
					{"name": "ASGN_DEPT_CD"},
					{"name": "USE_YN"},
					{"name": "SYSTEM_MGR_YN"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "REMARK"},
					{"name": "PWD_ERROR_CNT"},
					{"name": "PWD_CHG_DTHR"},
					{"name": "SSN_VIEW"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strCurDt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnStdPasswdChange/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnStdPasswdChange/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnStdPasswdChange/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_2);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStudId");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStudId");
				if(typeof onIpbStudIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbStudIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optStudNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-STUDNM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudNm");
				inputBox_2.bind("fieldLabel").toExpression("#optStudNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strStudNm");
				if(typeof onIpbStudNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbStudNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optDeptNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-DEPT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "495px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "600px",
					"width": "150px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaNm");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaNmClick == "function") {
					button_2.addEventListener("click", onBtnSaNmClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "750px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-STUDLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnPasswdInit");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-GLS-INIT");
				if(typeof onBtnPasswdInitClick == "function") {
					button_3.addEventListener("click", onBtnPasswdInitClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "970px",
					"width": "120px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUseUser");
				grid_1.init({
					"dataSet": app.lookup("dsCmnUseUser"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "101px"},
						{"width": "95px"},
						{"width": "83px"},
						{"width": "159px"},
						{"width": "95px"},
						{"width": "123px"},
						{"width": "153px"},
						{"width": "64px"},
						{"width": "90px"},
						{"width": "90px"},
						{
							"width": "90px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-STUDNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-USERDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-DEPNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PWD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EMAIL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USE_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-EFFT_BEG_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-EFFT_END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-TMP_PWD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "USER_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbUserDivRcd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsUserDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("USER_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SSN";
									cell.control = (function(){
										var maskEditor_1 = new cpr.controls.MaskEditor("gdIpbSsn");
										maskEditor_1.enabled = false;
										maskEditor_1.mask = "000000-0000000";
										maskEditor_1.bind("value").toDataColumn("SSN");
										return maskEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PWD";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdSrbPwd");
										inputBox_4.secret = true;
										inputBox_4.bind("value").toDataColumn("PWD");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EMAIL";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbEmail");
										inputBox_5.maxLength = 100;
										inputBox_5.bind("value").toDataColumn("EMAIL");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdChkUseYn");
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("USE_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "EFFT_ST_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipEfftStDt");
										dateInput_1.userAttr({"require": "Y"});
										dateInput_1.bind("value").toDataColumn("EFFT_ST_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "EFFT_END_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipEfftEndDt");
										dateInput_2.userAttr({"require": "Y"});
										dateInput_2.bind("value").toDataColumn("EFFT_END_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "TMP_PWD";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdSrbTmpPwd");
										inputBox_6.secret = true;
										inputBox_6.bind("value").toDataColumn("TMP_PWD");
										return inputBox_6;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "695px",
				"left": "15px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "학생비밀번호변경";
	cpr.core.Platform.INSTANCE.register(app);
})();
