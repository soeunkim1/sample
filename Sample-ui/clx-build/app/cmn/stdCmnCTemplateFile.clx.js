/*
 * App URI: app/cmn/stdCmnCTemplateFile
 * Source Location: app/cmn/stdCmnCTemplateFile.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCTemplateFile", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCmnCTemplateFile.xtm"/>
			
			var stdCmnCTemplateFile = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author xxxx at 2017.04.10
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
			
							
				/**
				 * @desc 
				 * @return 
				 * @author xxxx 2017.04.10
				 */
				moPage.onModelConstructDone_stdCmnCTemplateFile = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCmnTemplateFile");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grp_rptCmnTemplateFile");
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "cbbUnitSystemRcd");
						}
					});
				}
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2017.04.10
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCmnTemplateFile");
						}
					});
					
					
				}
			
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author xxxx 2017.04.10
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
			
			
				
				moPage.onClick_BtnSearch = function() {
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
				
				
				moPage.onClick_BtnUpload = function() {
					FileUtil.getFileName(true, null, function(psFileNm){
						if(psFileNm) {
							var vaFileNm = psFileNm.split(",");			
							if(vaFileNm.length > 2) return;
							//strCommand: upload 
							util.Submit.send(app, "subUpload", function(pbSuccess){
														
								if(pbSuccess){
									doList();
								}
							});
							
						}
					}, null, false);
				};
				
				
				moPage.onClick_RdBtnDown = function() {
					
			
					var vsFileNm = util.Grid.getCellValue(app, "grdCmnTemplateFile", "FILE_NM");
					var voParam = {
										"strFileSubPath" :"stdCmnCTemplateFile",
										"strFileNm" :vsFileNm,
										"strOriFileNm" : vsFileNm,
										"strTmpFilePath" :"",
										"strCommand" : "fileDownLoad"
							}
			
					//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
					FileUtil.downloadFile("std.cmn.StdCmnFileTransUtil.ex", voParam);
							
							
				};
				
				
				moPage.onClick_RdBtnDel = function() {
					if(!util.Msg.confirm("NLS-CRM-M004") )	return;	
					
					util.DataMap.setValue(app, "dmReqList", "strFileSerialNo", util.Grid.getCellValue(app, "grdCmnTemplateFile", "FILE_SERIAL_NO"));
					util.DataMap.setValue(app, "dmReqList", "strFileNm", util.Grid.getCellValue(app, "grdCmnTemplateFile", "FILE_NM"));
					
					//strCommand: delete 
					util.Submit.send(app, "subDelete", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnTemplateFile");
			dataSet_2.parseData({
				"info": "CMN_TEMPLATE_FILE@FILE_SERIAL_NO",
				"columns": [
					{"name": "FILE_SERIAL_NO"},
					{"name": "USER_ID"},
					{"name": "FILE_NM"},
					{"name": "UPLOAD_DTHR"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "USER_NM"},
					{"name": "FILE_PATH"},
					{"name": "UNIT_SYSTEM_RCD_NM"},
					{"name": "FILE_EXIST_YN"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strFileSerialNo",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnTemplateFile/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnTemplateFile/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subDelete");
			submission_3.action = "/cmn/StdCmnTemplateFile/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subUpload");
			submission_4.action = "/cmn/StdCmnTemplateFile/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUnitSystemRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-UNITSYSTEM");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbUnitSystemRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsUnitSystemRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCmnTemplateFile");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-FORMDOWN");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnUpload");
				button_2.value = "파일업로드";
				button_2.style.setClasses(["btn-commit"]);
				if(typeof onBtnUploadClick == "function") {
					button_2.addEventListener("click", onBtnUploadClick);
				}
				container.addChild(button_2, {
					"top": "4px",
					"left": "1120px",
					"width": "98px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnTemplateFile");
				grid_1.init({
					"dataSet": app.lookup("dsCmnTemplateFile"),
					"columns": [
						{"width": "40px"},
						{"width": "123px"},
						{"width": "181px"},
						{"width": "334px"},
						{"width": "101px"},
						{"width": "131px"},
						{"width": "99px"},
						{"width": "90px"},
						{"width": "81px"},
						{
							"width": "106px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FILENAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FILE-PATH");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "업로드일시";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "파일존재여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FILEDOWN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FILEDEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "파일순번";
									cell.style.setClasses(["require"]);
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "UNIT_SYSTEM_RCD_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "FILE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "FILE_PATH";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "UPLOAD_DTHR";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdDipUploadDthr");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD HH:mm:ss";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("UPLOAD_DTHR");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "FILE_EXIST_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbFileExistYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("FILE_EXIST_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var button_3 = new cpr.controls.Button("gdBtnDown");
										return button_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var button_4 = new cpr.controls.Button("gdBtnDel");
										return button_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbFileSerialNo");
										inputBox_1.maxLength = 15;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("FILE_SERIAL_NO");
										return inputBox_1;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCmnCTemplateFile";
	cpr.core.Platform.INSTANCE.register(app);
})();
