/*
 * App URI: app/cmn/stdCmnCTest
 * Source Location: app/cmn/stdCmnCTest.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCTest", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCmnCTest.xtm"/>
			
			var stdCmnCTest = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author xxxx at 2017.12.14
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
			
							
				/**
				 * @desc 
				 * @return 
				 * @author xxxx 2017.12.14
				 */
				moPage.onModelConstructDone_stdCmnCTest = function() {
			
				}
			
			
			
			
			
			
			
			
			
			
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2017.12.14
				 */
				function doList(poCallBackFunc) {
			
				}
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2017.12.14
				 */
				function doSave() {
			
				}
			
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author xxxx 2017.12.14
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
			
			return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUserDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAsgnDeptDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnUseUser");
			dataSet_3.parseData({
				"info": "CMN_USE_USER@USER_ID",
				"columns": [
					{"name": "USER_ID"},
					{"name": "EMAIL"},
					{"name": "SSN"},
					{"name": "USER_DIV_RCD"},
					{"name": "PARTY_ID"},
					{"name": "ID"},
					{"name": "PWD"},
					{"name": "TMP_PWD"},
					{"name": "USER_NM"},
					{"name": "ASGN_DEPT_DIV_RCD"},
					{"name": "ASGN_DEPT_CD"},
					{"name": "USE_YN"},
					{"name": "SYSTEM_MGR_YN"},
					{"name": "EFFT_ST_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "REMARK"},
					{"name": "PWD_ERROR_CNT"},
					{"name": "PWD_CHG_DTHR"},
					{"name": "CERT_BOOK_INFO"},
					{"name": "LOGIN_DTHR"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strSTUDNM",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnTest/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnTest/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnTest/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStudId");
				output_1.value = "STUD_ID";
				output_1.style.setClasses(["require"]);
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStudId");
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSTUDNM");
				output_2.value = "STUD_NM";
				container.addChild(output_2, {
					"top": "5px",
					"left": "250px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSTUDNM");
				inputBox_2.bind("fieldLabel").toExpression("#optSTUDNM.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSTUDNM");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "355px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCmnUseUser");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "신규";
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "삭제";
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "작업취소";
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "작업저장";
				button_5.style.setClasses(["btn-save"]);
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUseUser");
				grid_1.init({
					"dataSet": app.lookup("dsCmnUseUser"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "75px"},
						{"width": "45px"},
						{"width": "45px"},
						{"width": "210px"},
						{"width": "75px"},
						{"width": "30px"},
						{"width": "60px"},
						{"width": "90px"},
						{"width": "60px"},
						{"width": "225px"},
						{"width": "90px"},
						{"width": "60px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "30px"},
						{"width": "135px"},
						{"width": "135px"},
						{"width": "105px"},
						{"width": "75px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "사용자ID";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "이메일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "SSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "사용자구분코드[CC005]";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "구성원ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "패스워드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "임시패스워드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "사용자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "소속부서구분코드[CC009]";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "소속부서코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "사용여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "시스템관리자여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "유효시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "유효종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "비고";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "비밀번호 오류횟수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "비밀변호 변경일시";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "인증서DN정보";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.text = "로그인일시";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbUserId");
										inputBox_3.maxLength = 50;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("USER_ID");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "EMAIL";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbEmail");
										inputBox_4.maxLength = 100;
										inputBox_4.bind("value").toDataColumn("EMAIL");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SSN";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbSsn");
										inputBox_5.maxLength = 30;
										inputBox_5.bind("value").toDataColumn("SSN");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PARTY_ID";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbPartyId");
										inputBox_6.maxLength = 50;
										inputBox_6.bind("value").toDataColumn("PARTY_ID");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ID";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbId");
										inputBox_7.maxLength = 20;
										inputBox_7.bind("value").toDataColumn("ID");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PWD";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbPwd");
										inputBox_8.maxLength = 200;
										inputBox_8.bind("value").toDataColumn("PWD");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "TMP_PWD";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbTmpPwd");
										inputBox_9.maxLength = 200;
										inputBox_9.bind("value").toDataColumn("TMP_PWD");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbUserNm");
										inputBox_10.maxLength = 100;
										inputBox_10.bind("value").toDataColumn("USER_NM");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ASGN_DEPT_CD";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbAsgnDeptCd");
										inputBox_11.maxLength = 10;
										inputBox_11.bind("value").toDataColumn("ASGN_DEPT_CD");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "USE_YN";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbUseYn");
										inputBox_12.maxLength = 1;
										inputBox_12.bind("value").toDataColumn("USE_YN");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "SYSTEM_MGR_YN";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbSystemMgrYn");
										inputBox_13.maxLength = 1;
										inputBox_13.bind("value").toDataColumn("SYSTEM_MGR_YN");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "EFFT_ST_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipEfftStDt");
										dateInput_1.bind("value").toDataColumn("EFFT_ST_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "EFFT_END_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipEfftEndDt");
										dateInput_2.bind("value").toDataColumn("EFFT_END_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_14.maxLength = 1000;
										inputBox_14.bind("value").toDataColumn("REMARK");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "PWD_ERROR_CNT";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("gdIpbPwdErrorCnt");
										inputBox_15.maxLength = 15;
										inputBox_15.bind("value").toDataColumn("PWD_ERROR_CNT");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "PWD_CHG_DTHR";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("gdDipPwdChgDthr");
										dateInput_3.bind("value").toDataColumn("PWD_CHG_DTHR");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "CERT_BOOK_INFO";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("gdIpbCertBookInfo");
										inputBox_16.maxLength = 200;
										inputBox_16.bind("value").toDataColumn("CERT_BOOK_INFO");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "LOGIN_DTHR";
									cell.control = (function(){
										var dateInput_4 = new cpr.controls.DateInput("gdDipLoginDthr");
										dateInput_4.bind("value").toDataColumn("LOGIN_DTHR");
										return dateInput_4;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCmnCTest";
	cpr.core.Platform.INSTANCE.register(app);
})();
