/*
 * App URI: app/cmn/stdCmnCTmpMultiRepeat2
 * Source Location: app/cmn/stdCmnCTmpMultiRepeat2.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnCTmpMultiRepeat2", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnCTmpMultiRepeat2.xtm"/>
			
			var stdCmnCTmpMultiRepeat2 = function() {
					
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/******************************************************************************************************
				 *  학생검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *      1. controlId			: 최초 이벤트의 버튼이나 그리드 id	(필수)
				 *      2. iStudNo 			: 검색조건 학번					    		(선택) (값이 존재할 경우 4자리 이상)
				 *      3. iStudId 				: 검색조건 학번오브젝트					(선택)
				 *      4. iStudNm 			: 이름        				            		(선택) (값이 존재할 경우 2자리 이상)
				 *      5. iKeyDate 			: 기준일 										(필수) (기준일자(학년도학기 종료일),안주면 최종데이터나옴)
				 *      6. iObjDivRcd 		: 객체구분코드 								(선택)
				 *      7. iObjCd 				: 부서코드										(선택)
				 *      8. iObjNm 			: 부서명											(선택) 
				 *      9. iAuthYN				: 권한미적용여부 (미적용시: "Y")		(선택) 
				 *     10. iStatRcd			: 학적상태코드								(선택) "CT301ATTE,CT301ABSE,CT301COMP,CT301GRAD,CT301REMO"
				 *     11. oStudId				: 학번오브젝트
				 *     12. oStudNo 			: 학번
				 *     13. oStudNm 			: 이름
				 *     14. oSsn 				: 주민번호
				 *     15. oStatNm 			: 학적상태명
				 *     16. oStatRcd 			: 학적상태코드
				 *     17. oProcRslt 			: 진급학기
				 *     18. oProcRsltYear 	: 진급학년
				 *     19. oSaCd 				: 학사부서코드명
				 *     20. oSaNm 			: 학사부서명
				 *     21. oSpCd 				: 이수과정코드명
				 *     22. oSpNm 			: 이수과정명
				 *     23. oOgCd 				: 행정부서코드명
				 *     24. oOgNm 			: 행정부서명
				 *     25. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId     		: "btnStudNo",
					iStudNo       		: "ipbStudNo",		
					iStudId       		: "",
					iStudNm       		: "",
					iKeyDate	  		: "/root/resOnLoad/strKeyDate",
					iObjDivRcd 		: "",
					iObjCd     	  		: "",
					iObjNm 			: "",
					iAuthYN		  		: "",
					iStatRcd		  	: "",
					oStudId       		: "/root/reqKey/strStudId",
					oStudNo       		: "ipbStudNo",		
					oStudNm       	: "",
					oSsn          		: "",
					oStatNm 	  		: "",
					oStatRcd	  		: "",
					oProcRslt	  		: "",
					oProcRsltYear 	: "",
					oSaCd         		: "",
					oSaNm         	: "",					
					oSpCd         		: "",
					oSpNm         	: "",
					oOgCd 		  		: "",
					oOgNm 		  	: "",
					func 		  			: function(poRtnValue){
												//객체검색 후 callBack Func
												//결과 object : poRtnValue.result
											   }
				},
				{
					controlId     		: "btnFrfStudNo",
					iStudNo       		: "ipbFrfStudNo",		
					iStudId       		: "",
					iStudNm       		: "",
					iKeyDate	  		: "/root/resOnLoad/strKeyDate",
					iObjDivRcd 		: "",
					iObjCd     	  		: "",
					iObjNm 		  	: "",
					iAuthYN		  		: "",
					iStatRcd		  	: "",
					oStudId       		: "ipbFrfStudId",
					oStudNo       		: "ipbFrfStudNo",		
					oStudNm         	: "ipbFrfRepNm",
					oSsn          		: "",
					oStatNm 	  		: "",
					oStatRcd	  		: "",
					oProcRslt	  		: "",
					oProcRsltYear 	: "",
					oSaCd         		: "",
					oSaNm         	: "",					
					oSpCd         		: "",
					oSpNm         	: "",
					oOgCd 		  		: "",
					oOgNm 		  	: "",
					func 		  			: function(poRtnValue){
												//객체검색 후 callBack Func
												//결과 object : poRtnValue.result
											   }
				}
				];
					
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId			:	"btnSaNm",
					iCd					:	"",
					iNm					:	"ipbSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"/root/resOnLoad/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"",
					oCd					:	"/root/reqKey/strSaCd",
					oCdNm				:	"ipbSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func 					: function(poRtnValue){
												//객체검색 후 callBack Func
												//결과 object : poRtnValue.result
											   }
				},
				{
					controlId			:	"btnFrfSaNm",
					iCd					:	"",
					iNm					:	"ipbFrfSaNm",
					iObjDivRcd			:	["CC009SA"],
					iStartObject    	:   "",
					iOtDivRcd			:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"",
					iKeyDate			:	"/root/resOnLoad/strKeyDate",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"",
					oCd					:	"ipbFrfSaCd",
					oCdNm				:	"ipbFrfSaNm",
					oBegDt				:	"",
					oEndDt				:	"",
					oLanDivRcd		:	"",
					func					:	function(poRtnValue){
												//객체검색 후 callBack Func
												//결과 object : poRtnValue.result
											   }
				}
				];
				
				/******************************************************************************************************
				 *  공통파일업로드 관련 설정사항 사용법
				 *
				 * 예시)
				 * var moIdsForStdCmnFileUtil = [{
				 *		controlId 					: "btnFileUpLoad",
				 *		iFileSerialNo 				: "rdOptFileSerialNo",
				 *		iFileSubPath 				:  model.getTitle(),
				 *		iTableName 				: "CMN_TMP_REG",
				 *		iIsDirectUpLoad			: null,
				 *     isFileSelectorOnly       : null,
				 *		iIsHideDelete 				: null,			
				 *		iIsDownloadOnly 		: null,
				 *		iFileExtFilter 				: null,
				 *		oFileSerailNo				: "rdOptFileSerialNo",
				 *		oTmpFilePath			: null,			//리피트일경우 null로 지정
				 *		oFileCnt					: null,		
				 *		oFileDataChanged		: null,
				 *		func							: function(poRtnFileInfo){
				 *											ex)
				 *											if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
																util.FreeForm.setValue(app, "frfCmnDevStd", "FILE_SERIAL_NO", "", true); 
																doSave();
															}
				 *										}
				 *	}];
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 			: 최초 이벤트의 버튼이나 그리드 id             						(필수)
				 *  	2. iFileSerialNo		: 파일순번                                										(선택) 
				 *  	3. iFileSubPath 		: 저장될 파일 폴더(appworks.properties에 정의된 폴더 경로)	(필수)	
				 *  	4. iTableName 		: 파일업로드에 사용될 업무단 테이블명								(필수)
				 *  	5. iIsHideDelete 		: 삭제버튼 숨기기 여부 													(선택)
				 *								  	  default : false;
				 *		6. iIsDownloadOnly	: 다운로드만 가능할지 여부(업로드X)									(선택)
				 *								      default : false;
				 *		7. iIsDirectUpLoad   : auto save기능을 사용하지 않고 파일업로드 팝업을 이용하여 업로드 후 업로드된 정보만 리턴받아 제어 할 경우 사용
				 *									  default : false;
				 *		8. isFileSelectorOnly : 파일 셀럭터를 이용하여 응용프로그램에서 탬프 파일 경로만 취득하여 제어할 경우경우 사용
				 *									  default : false;
				 *		9. iFileExtFilter		: 업로드가능 확장자(배열) 												(선택)
				 *								  	  ex)["jpg","png"]
				 *  	10. oFileSerailNo 		: 파일순번																		(필수)
				 *  	11. oFileCnt 			: 저장된 파일 갯수															(선택)
				 *									  (	func의 args 대체 가능 poRtnFileInfo.strFileCnt)
				 *									  리피트내 컬럼 지정시 updatable="False" 지정
				 *  	12. oTmpFilePath 	: 임시폴더파일경로															(선택)
				 *									  리피트일경우 null로 지정, TMP_FILE_PATH 데이터셋 생성됨
				 *									  
				 *		13.oFileDataChanged	: 파일업로드 변경 여부 판단											(필수)		
				 *									  (	func의 args 대체 가능 poRtnFileInfo.isFileDataChanged)
				 *
				 *  	14. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  args..
				 * 									  poRtnFileInfo.IS_FILE_CHG 			파일업로드 리피트 변경 여부
				 *															 FILE_CNT					업로드 파일 갯수
				 *															 TMP_FILE_PATH		임시파일경로
				 *									  						 FILE_SERAIL_NO		파일순번
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnFileUtil = [{
					controlId 					: "btnFileUpLoad",
					iFileSerialNo 				: "rdOptFileSerialNo",
					iFileSubPath 				:  model.getTitle(),
					iTableName 				: "CMN_TMP_REG",
					iIsDirectUpLoad			: null,
					isFileSelectorOnly       : null,
					iIsHideDelete 				: null,			
					iIsDownloadOnly 		: null,
					iFileExtFilter 				: null,
					oFileSerailNo				: null,
					oTmpFilePath			: null,			//리피트일경우 null로 지정
					oFileCnt					: "optFrfFileCnt",		
					oFileDataChanged		: null,
					func							: function(poRtnFileInfo){
														if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
															util.Grid.setCellValue(app, "grdCmnTmpReg", "FILE_SERIAL_NO", "", null, true);
															doSave();
														}
													}
				}];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc  onModelConstructDone  event
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onModelConstructDone_StdCmnCTmpMultiRepeat2 = function() {
					
					// 리피트 및 조회그룹 관련 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCmnTmpReg");
					
					//서브미션 실행 (두번째 인자가 'onLoad' 일 경우 서브미션 실패시 coverPage 실행)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							ExtRepeat.refresh("frfCmnTmpReg");
						}
					});
				};
					
				/**
				 * @desc  학생목록 조회 submission 실행
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCmnTmpReg");
							
							var vnCnt = util.Grid.getRowCount(app, "grdCmnTmpReg");
							if(vnCnt < 1){
								util.Control.reset(app, "frfCmnTmpReg");					
							}
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					}); 
				}
				
				/**
				 * @desc     학생목록 리피트 저장 submission 실행
				 * @param  {Function} poCallBackFunc 저장 후 콜백정의
				 * @return void
				 * @author xxx 2015. 6. 18.
				 */
				function doSave(poCallBackFunc) {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCmnTmpReg"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCmnTmpReg")) return false;
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");					
								if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbListSuccess);
							});
						}
					});
				}
				
				/**
				 * @desc  조회 버튼 click event 
				 *             필수 검색 조건이 존재할 경우 필수 체크 사항
				 *              1. 필수검색조건 컨트롤의 UserDefineAttr 지정
			     *              2. valid 체크 공통 함수 사용
				 *               if(!util.validate(app, "ipbSaNm")) return false;
				 *			    3. 조회버튼의 최초 함수에 return 지정 
				 *                예) 조회버튼클릭 후 에디터 창 return page.onClick_BtnSearch(); 
				 *                 
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onClick_BtnSearch = function() {
					
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
						
					});
				};
				
				/**
				 * @desc 신규 click event
				 *            학생목록 리피트 row 추가
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onClick_BtnNew = function() {
					// 신규로우 추가
					util.Grid.insertRow(app, "grdCmnTmpReg");
					// 프리폼의 학번입력에 포커스
					util.Control.setFocus(app,  "ipbFrfStudNo");
				};
				
				/**
				 * @desc 삭제 click event
				 *            학생목록 리피트 index row 삭제 status 변경
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnDel = function() {
			
					util.Grid.deleteRow(app, "grdCmnTmpReg");
					// 학생정보 프리폼 비활성화 처리
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 작업취소 click event
				 *            학생목록 리피트 index row restore
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdCmnTmpReg");
					// 학생정보 프리폼 비활성화 처리
					doCompareFrfEnable();
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCmnTmpReg", "frfCmnTmpReg");
				};
				
				/**
				 * @desc 작업저장 click event
				 *            학생목록 리피트 변경내역 저장
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnSave = function() {
					doSave();
				};
				
				/**
				 * @desc  학생목록 리피트 상태에 따른  학생정보 프리폼 비활성화 제어
				 *			    1.index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param  {?} pnIndex 
				 * @return void
				 * @author xxx 2015. 6. 23.
				 */
				function doCompareFrfEnable() {
					
					if( (!util.Grid.getIndex(app, "grdCmnTmpReg")) 
						|| util.Grid.getRowState(app, "grdCmnTmpReg") == cpr.data.tabledata.RowState.DELETED) {
							
						util.Control.setEnable(app, false, ["frfCmnTmpReg"]);	
						
					} else {
						util.Control.setEnable(app, true, ["frfCmnTmpReg"]);	
					}	
				}	
				
				/**
				 * @desc  학생목록 리피트 rowSelect event
				 *             현재 index로 학생정보 프리폼 copyRowFrom
				 * @return void
				 * @author xxx 2015. 6. 18.
				 */
				moPage.onRowSelect_RptCmnTmpReg = function() {
					// 학생목록 리피트 현재 index get
					var vnIndex = util.Grid.getIndex(app, "grdCmnTmpReg");
					//리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCmnTmpReg", "frfCmnTmpReg", vnIndex);
					// 학생정보 프리폼 비활성화 제어
					doCompareFrfEnable();
				};
				
				/**
				 * @desc  학생정보 프리폼 update event
				 *             학생정보 변경내역을 학생목록 리피트로 update 실행
				 * @return void
				 * @author xxx 2015. 6. 18.
				 */
				moPage.onUpdate_FrfCmnTmpReg = function() {
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptCmnTmpReg","frfCmnTmpReg");
				};
				
				/**
				 * @desc 검색조건의 학사부서 valueChange event
				 *            객체검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onValueChanged_IpbSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 검색조건의 학사부서 버튼 click event
				 *            객체검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnSaNm = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 검색조건의 학번 valueChange event
				 *            학생 검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 검색조건의 학번 버튼 click event
				 *            학생 검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onClick_BtnStudNo = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 학생정보 프리폼의 학번 valueChange event
				 *            학생 검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onValueChanged_IpbFrfStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 학생정보 프리폼의 학번 버튼 click event
				 *            학생 검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				moPage.onClick_BtnFrfStudNo = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 학생정보 프리폼의 부서명 valueChange event
				 *            객체검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onValueChanged_IpbFrfSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학생정보 프리폼의 부서명 버튼 click event
				 *            객체검색 팝업 호출
				 * @param {Object} sender 이벤트 객체
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnFrfSaNm = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학생정보 프리폼의 파일첨부 click event
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */	
				moPage.onClick_BtnFileUpLoad = function(sender) {
					doOnClickStdCmnPFileUtil(sender);
				};
				
				/**
				 * @desc 학생목록 리피트 panel click event
				 *			 학생목록 리피트 row all check
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */		
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsGenderRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsStudDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsNatRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDayNightDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSaCdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsBankRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmnTmpReg");
			dataSet_7.parseData({
				"info": "CMN_TMP_REG@STUD_ID",
				"columns": [
					{"name": "FILE_SERIAL_NO"},
					{"name": "STUD_ID"},
					{"name": "SSN"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "CHA_NM"},
					{"name": "ACCT_NO"},
					{"name": "ZIPCODE"},
					{"name": "GENDER_RCD"},
					{"name": "NAT_RCD"},
					{"name": "ADDR1"},
					{"name": "ADDR2"},
					{"name": "STUD_NO"},
					{"name": "ENG_NM"},
					{"name": "EMAIL"},
					{"name": "CLP_NO"},
					{"name": "AEN"},
					{"name": "STUD_DIV_RCD"},
					{"name": "REP_NM"},
					{"name": "BANK_RCD"},
					{"name": "OWNER_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "FILE_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsFrfCmnTmpReg");
			dataSet_8.parseData({
				"columns": [
					{"name": "FILE_SERIAL_NO"},
					{"name": "STUD_ID"},
					{"name": "SSN"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "CHA_NM"},
					{"name": "ACCT_NO"},
					{"name": "ZIPCODE"},
					{"name": "GENDER_RCD"},
					{"name": "NAT_RCD"},
					{"name": "ADDR1"},
					{"name": "ADDR2"},
					{"name": "STUD_NO"},
					{"name": "ENG_NM"},
					{"name": "EMAIL"},
					{"name": "CLP_NO"},
					{"name": "AEN"},
					{"name": "STUD_DIV_RCD"},
					{"name": "REP_NM"},
					{"name": "BANK_RCD"},
					{"name": "OWNER_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "FILE_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResRtnFileInfo");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strFileSerailNo",
						"dataType": "string"
					},
					{
						"name": "strFileCnt",
						"dataType": "string"
					},
					{
						"name": "strFileTmpPath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnTmpMultiRepeat2/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnTmpMultiRepeat2/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnTmpMultiRepeat2/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "10px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "120px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSaNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optStudNo");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "270px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "130px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSaNm");
				button_1.value = "";
				button_1.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaNmClick == "function") {
					button_1.addEventListener("click", onBtnSaNmClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "240px",
					"width": "20px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudNo");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudNoClick == "function") {
					button_2.addEventListener("click", onBtnStudNoClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "505px",
					"width": "20px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-STUDLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnTmpReg");
				grid_1.init({
					"dataSet": app.lookup("dsCmnTmpReg"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "92px"},
						{"width": "137px"},
						{"width": "100px"},
						{"width": "50px"},
						{"width": "119px"},
						{"width": "126px"},
						{
							"width": "106px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-DEPTNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-KOR_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-GENDER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STDDIS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CLP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "업로드파일번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "오브젝트ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "학과부서";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "영어명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "한자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "주야간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "은행";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "계좌번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "소유명";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GENDER_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbGenderRcd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsGenderRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("GENDER_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "STUD_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbStudDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsStudDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("STUD_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CLP_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ENG_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "CHA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbDayNightDivRcd");
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsDayNightDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "BANK_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbBankRcd");
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsBankRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("BANK_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "ACCT_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnTmpRegSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnTmpRegSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "715px",
					"height": "565px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-STUDTINFO");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "730px",
					"width": "150px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnNew");
				button_4.value = "";
				button_4.style.setClasses(["btn-new"]);
				button_4.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_4.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnDel");
				button_5.value = "";
				button_5.style.setClasses(["btn-delete"]);
				button_5.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_5.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnRestore");
				button_6.value = "";
				button_6.style.setClasses(["btn-restore"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_6.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnSave");
				button_7.value = "";
				button_7.style.setClasses(["btn-save"]);
				button_7.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_7.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfCmnTmpReg");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_4 = new cpr.controls.Output("optFrfStudNo");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_4, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSaNm");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-SCR-DEPTNM");
					container.addChild(output_5, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfGenderRcd");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-GLS-GENDER");
					container.addChild(output_6, {
						"top": "55px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfBankRcd");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-GLS-BANK");
					container.addChild(output_7, {
						"top": "80px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfOwnerNm");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-SCR-ACTHOLDER");
					container.addChild(output_8, {
						"top": "105px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfEngNm");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-DB-ENG_NM");
					container.addChild(output_9, {
						"top": "130px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfStudId");
					output_10.value = "오브젝트ID";
					container.addChild(output_10, {
						"top": "180px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfSaCd");
					output_11.value = "학과부서코드";
					container.addChild(output_11, {
						"top": "205px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfRepNm");
					output_12.value = "";
					output_12.style.setClasses(["require"]);
					output_12.bind("value").toLanguage("UI-DB-KOR_NM");
					container.addChild(output_12, {
						"top": "5px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfStudDivRcd");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-STDDIS");
					container.addChild(output_13, {
						"top": "30px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfClpNo");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-GLS-CLP");
					container.addChild(output_14, {
						"top": "55px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfAcctNo");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-ACCT_NO");
					container.addChild(output_15, {
						"top": "80px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfDayNightDivRcd");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-SCR-DNDIS");
					container.addChild(output_16, {
						"top": "105px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfChaNm");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-DB-CHA_NM");
					container.addChild(output_17, {
						"top": "130px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfFileSerialNo");
					output_18.value = "업로드파일번호";
					container.addChild(output_18, {
						"top": "180px",
						"left": "251px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfStudNo");
					inputBox_3.maxLength = 40;
					inputBox_3.bind("value").toDataColumn("STUD_NO");
					if(typeof onIpbFrfStudNoValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpbFrfStudNoValueChange);
					}
					container.addChild(inputBox_3, {
						"top": "5px",
						"left": "110px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfSaNm");
					inputBox_4.maxLength = 40;
					inputBox_4.bind("value").toDataColumn("SA_NM");
					if(typeof onIpbFrfSaNmValueChange == "function") {
						inputBox_4.addEventListener("value-change", onIpbFrfSaNmValueChange);
					}
					container.addChild(inputBox_4, {
						"top": "30px",
						"left": "110px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfOwnerNm");
					inputBox_5.maxLength = 200;
					inputBox_5.bind("value").toDataColumn("OWNER_NM");
					container.addChild(inputBox_5, {
						"top": "105px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfEngNm");
					inputBox_6.maxLength = 200;
					inputBox_6.bind("value").toDataColumn("ENG_NM");
					container.addChild(inputBox_6, {
						"top": "130px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_7.visible = false;
					inputBox_7.maxLength = 40;
					inputBox_7.bind("value").toDataColumn("STUD_ID");
					container.addChild(inputBox_7, {
						"top": "180px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfSaCd");
					inputBox_8.visible = false;
					inputBox_8.maxLength = 40;
					inputBox_8.bind("value").toDataColumn("SA_CD");
					container.addChild(inputBox_8, {
						"top": "205px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfFileSerialNo");
					inputBox_9.visible = false;
					inputBox_9.maxLength = 10;
					inputBox_9.bind("value").toDataColumn("FILE_SERIAL_NO");
					container.addChild(inputBox_9, {
						"top": "180px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfChaNm");
					inputBox_10.maxLength = 200;
					inputBox_10.bind("value").toDataColumn("CHA_NM");
					container.addChild(inputBox_10, {
						"top": "130px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfAcctNo");
					inputBox_11.maxLength = 200;
					inputBox_11.bind("value").toDataColumn("ACCT_NO");
					container.addChild(inputBox_11, {
						"top": "80px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("ipbFrfClpNo");
					inputBox_12.maxLength = 60;
					inputBox_12.bind("value").toDataColumn("CLP_NO");
					container.addChild(inputBox_12, {
						"top": "55px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("ipbFrfRepNm");
					inputBox_13.maxLength = 200;
					inputBox_13.bind("value").toDataColumn("REP_NM");
					container.addChild(inputBox_13, {
						"top": "5px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfGenderRcd");
					comboBox_5.bind("value").toDataColumn("GENDER_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsGenderRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "55px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfBankRcd");
					comboBox_6.bind("value").toDataColumn("BANK_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsBankRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "80px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfStudDivRcd");
					comboBox_7.bind("value").toDataColumn("STUD_DIV_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsStudDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "30px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfDayNightDivRcd");
					comboBox_8.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsDayNightDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "105px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
					var button_8 = new cpr.controls.Button("btnFrfStudNo");
					button_8.value = "";
					button_8.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfStudNoClick == "function") {
						button_8.addEventListener("click", onBtnFrfStudNoClick);
					}
					container.addChild(button_8, {
						"top": "5px",
						"left": "220px",
						"width": "20px",
						"height": "25px"
					});
					var button_9 = new cpr.controls.Button("btnFrfSaNm");
					button_9.value = "";
					button_9.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfSaNmClick == "function") {
						button_9.addEventListener("click", onBtnFrfSaNmClick);
					}
					container.addChild(button_9, {
						"top": "30px",
						"left": "220px",
						"width": "20px",
						"height": "25px"
					});
					var button_10 = new cpr.controls.Button("btnFileUpLoad");
					button_10.value = "";
					button_10.bind("value").toLanguage("UI-SCR-FILEATTACH");
					if(typeof onBtnFileUpLoadClick == "function") {
						button_10.addEventListener("click", onBtnFileUpLoadClick);
					}
					container.addChild(button_10, {
						"top": "155px",
						"left": "111px",
						"width": "70px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfFileUpLoad");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-SCR-ATCHFILE");
					container.addChild(output_19, {
						"top": "155px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfFileCnt");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-FILEINFO");
					container.addChild(output_20, {
						"top": "155px",
						"left": "250px",
						"width": "100px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfFileCnt");
					output_21.value = "";
					output_21.style.css({
						"text-align" : "right"
					});
					output_21.bind("value").toDataColumn("FILE_CNT");
					container.addChild(output_21, {
						"top": "155px",
						"left": "355px",
						"width": "130px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "30px",
					"left": "730px",
					"width": "490px",
					"height": "565px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaFile");
			cpr.core.App.load("app/imp/impFileUtil", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "677px",
				"left": "245px",
				"width": "95px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "stdCmnCTmpMultiRepeat2";
	cpr.core.Platform.INSTANCE.register(app);
})();
