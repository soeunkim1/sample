/*
 * App URI: app/cmn/stdCmnDevMakeFile
 * Source Location: app/cmn/stdCmnDevMakeFile.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnDevMakeFile", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsImpList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSch");
			dataSet_2.parseData({
				"columns": [
					{"name": "SCH_NM"},
					{"name": "CTRL_TYPE"},
					{"name": "REQ_STATUS"},
					{"name": "COND_CTRL_WIDTH"},
					{"name": "CODE_TYPE"},
					{"name": "CODE_NM"},
					{"name": "CTRL_NM"},
					{"name": "LABEL_WIDTH"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsImport");
			dataSet_3.parseData({
				"columns": [
					{"name": "IMPORT_ID"},
					{"name": "IMPORT_NM"},
					{"name": "DESC_END"},
					{"name": "DESC_START"},
					{"name": "IMPORT_SRC"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsRepeat");
			dataSet_4.parseData({
				"columns": [
					{"name": "DATASET_NM"},
					{"name": "QUERY"},
					{"name": "TABLE_NM"},
					{"name": "GRID_HEIGHT"},
					{"name": "INS_NM"},
					{"name": "GRID_TYPE"},
					{"name": "GRID_ID"},
					{"name": "GRID_NM"},
					{"name": "GRID_WIDTH"},
					{"name": "QUERY_STR"},
					{"name": "FORM_TYPE"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strFormHeigth",
						"dataType": "string"
					},
					{
						"name": "strMakeFileNm",
						"dataType": "string"
					},
					{
						"name": "strFormWidth",
						"dataType": "string"
					},
					{
						"name": "stdReportYn",
						"dataType": "string"
					},
					{
						"name": "strProcessorYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strFilePathInfo",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnInit");
			submission_1.action = "/cmn/StdCmnDevMakeFile/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subMakeFile");
			submission_2.action = "/cmn/StdCmnDevMakeFile/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_2);
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataSet_4);
			submission_2.addRequestData(dataSet_3);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-FILEINFO");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "141px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpFileInfo");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optMakeFileNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-FILENAME");
				container.addChild(output_1, {
					"top": "5px",
					"left": "6px",
					"width": "80px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnMake");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-GLS-EXEC");
				if(typeof onBtnMakeClick == "function") {
					button_1.addEventListener("click", onBtnMakeClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optFormSize");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-FORMSIZE");
				container.addChild(output_2, {
					"top": "5px",
					"left": "301px",
					"width": "135px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbMakeFileNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optMakeFileNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strMakeFileNm");
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "91px",
					"width": "200px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbFormWidth");
				inputBox_2.bind("fieldLabel").toExpression("#optFormSize.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strFormWidth");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "441px",
					"width": "101px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbFormHeigth");
				inputBox_3.bind("fieldLabel").toExpression("#optFormSize.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strFormHeigth");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "548px",
					"width": "101px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optProcessorYn");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-PROCESSCREYN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "659px",
					"width": "135px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbProcessorYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strProcessorYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "799px",
					"width": "26px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optReportYn");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-REPORTFORM");
				container.addChild(output_4, {
					"top": "5px",
					"left": "835px",
					"width": "135px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbReportYn");
				checkBox_2.visible = false;
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "stdReportYn");
				if(typeof onCkbReportYnValueChange == "function") {
					checkBox_2.addEventListener("value-change", onCkbReportYnValueChange);
				}
				container.addChild(checkBox_2, {
					"top": "5px",
					"left": "975px",
					"width": "26px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpRptSch");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-SCHCONDCRE");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "6px",
					"width": "141px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSchNew");
				button_2.value = "";
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnSchNewClick == "function") {
					button_2.addEventListener("click", onBtnSchNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSchDel");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnSchDelClick == "function") {
					button_3.addEventListener("click", onBtnSchDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdSch");
				grid_1.init({
					"dataSet": app.lookup("dsSch"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "160px"},
						{"width": "160px"},
						{"width": "160px"},
						{"width": "100px"},
						{"width": "130px"},
						{"width": "130px"},
						{"width": "130px"},
						{"width": "130px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-CONDNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-CONTROLTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-CONTROLNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-MAND_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CODETYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CDCLSNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REVELAREA");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CONDCONTROLAREA");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCH_NM";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbSchNm");
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("SCH_NM");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CTRL_TYPE";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbCtrlType");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("Input", "Input"));
											comboBox_1.addItem(new cpr.controls.Item("Date", "Date"));
											comboBox_1.addItem(new cpr.controls.Item("Check", "Check"));
											comboBox_1.addItem(new cpr.controls.Item("Combo", "Combo"));
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("CTRL_TYPE");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CTRL_NM";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbCtrlNm");
										inputBox_5.userAttr({"require": "Y"});
										inputBox_5.bind("value").toDataColumn("CTRL_NM");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "REQ_STATUS";
									cell.control = (function(){
										var checkBox_3 = new cpr.controls.CheckBox("gdChbReqStatus");
										checkBox_3.value = "";
										checkBox_3.trueValue = "Y";
										checkBox_3.falseValue = "";
										checkBox_3.text = "";
										checkBox_3.bind("value").toDataColumn("REQ_STATUS");
										return checkBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CODE_TYPE";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbCodeType");
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("CMN_CODE", "CD"));
											comboBox_2.addItem(new cpr.controls.Item("CMN_CONF_CODE", "CF"));
											comboBox_2.addItem(new cpr.controls.Item("없음", "N"));
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("CODE_TYPE");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CODE_NM";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbCodeRcdNm");
										inputBox_6.bind("value").toDataColumn("CODE_NM");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "LABEL_WIDTH";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbCtlWidth");
										numberEditor_1.spinButton = false;
										numberEditor_1.bind("value").toDataColumn("LABEL_WIDTH");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "COND_CTRL_WIDTH";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbCondCtrlWidth");
										numberEditor_2.spinButton = false;
										numberEditor_2.bind("value").toDataColumn("COND_CTRL_WIDTH");
										return numberEditor_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "29px",
					"left": "6px",
					"width": "1215px",
					"height": "177px"
				});
				var button_4 = new cpr.controls.Button("btnSchRestore");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnSchRestoreClick == "function") {
					button_4.addEventListener("click", onBtnSchRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "213px"
			});
			
			var group_3 = new cpr.controls.Container("grpRptRepeat");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-GRIDCRE");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "6px",
					"width": "89px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRptNew");
				button_5.value = "";
				button_5.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnRptNewClick == "function") {
					button_5.addEventListener("click", onBtnRptNewClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1029px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnRptDel");
				button_6.value = "";
				button_6.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnRptDelClick == "function") {
					button_6.addEventListener("click", onBtnRptDelClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1094px",
					"width": "60px",
					"height": "25px"
				});
				var grid_2 = new cpr.controls.Grid("grdRepeat");
				grid_2.init({
					"dataSet": app.lookup("dsRepeat"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "150px"},
						{"width": "163px"},
						{"width": "150px"},
						{"width": "120px"},
						{"width": "150px"},
						{"width": "150px"},
						{"width": "120px"},
						{"width": "120px"},
						{
							"width": "170px",
							"visible": false
						},
						{
							"width": "70px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TBNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCREEN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-GRIDTYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-GRIDID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-GRIDTITLENAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-INSTANCENAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-SIZE(WIDTH)");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-SIZE(HIGH)");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-QUERY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "데이터셋ID명";
									cell.style.setClasses(["require"]);
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.style.css({
											"text-align" : "center"
										});
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "TABLE_NM";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbTableNm");
										inputBox_7.bind("value").toDataColumn("TABLE_NM");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "FORM_TYPE";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbRptFormType");
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("SingleRepeat", "SR"));
											comboBox_3.addItem(new cpr.controls.Item("Repeat+FreeForm", "RF"));
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("FORM_TYPE");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "GRID_TYPE";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbRptType");
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("Repeat", "GRID"));
											comboBox_4.addItem(new cpr.controls.Item("FreeForm", "FREEFORM"));
											comboBox_4.addItem(new cpr.controls.Item("Repeat+FreeForm", "MUTIL_H"));
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("GRID_TYPE");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "GRID_ID";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbRptId");
										inputBox_8.userAttr({"require": "Y"});
										inputBox_8.bind("value").toDataColumn("GRID_ID");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GRID_NM";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbRptNm");
										inputBox_9.userAttr({"require": "Y"});
										inputBox_9.bind("value").toDataColumn("GRID_NM");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "INS_NM";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbInsNm");
										inputBox_10.bind("value").toDataColumn("INS_NM");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "GRID_WIDTH";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbRptWidth");
										inputBox_11.bind("value").toDataColumn("GRID_WIDTH");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "GRID_HEIGHT";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbRptHeight");
										inputBox_12.bind("value").toDataColumn("GRID_HEIGHT");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "QUERY";
									cell.control = (function(){
										var numberEditor_3 = new cpr.controls.NumberEditor("gdIpbQuery");
										numberEditor_3.spinButton = false;
										numberEditor_3.bind("value").toDataColumn("QUERY");
										return numberEditor_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "DATASET_NM";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbDateSetNm");
										inputBox_13.userAttr({"require": "Y"});
										inputBox_13.bind("value").toDataColumn("DATASET_NM");
										return inputBox_13;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "29px",
					"left": "6px",
					"width": "1215px",
					"height": "163px"
				});
				var button_7 = new cpr.controls.Button("btnRptRestore");
				button_7.value = "";
				button_7.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRptRestoreClick == "function") {
					button_7.addEventListener("click", onBtnRptRestoreClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optText");
				output_7.value = "\u203b 그리드타입이 Repeat+FreeForm일 경우 그리드ID, 그리드타이틀명, 사이즈(넓이,높이)는 '/' 구분자를 이용하여 'Grid명/FreeForm명'으로 설정해주세요";
				container.addChild(output_7, {
					"top": "5px",
					"left": "100px",
					"width": "920px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "315px",
				"left": "5px",
				"width": "1225px",
				"height": "200px"
			});
			
			var group_4 = new cpr.controls.Container("grpRptImport");
			// Layout
			var xYLayout_5 = new cpr.controls.layouts.XYLayout();
			group_4.setLayout(xYLayout_5);
			(function(container){
				var userDefinedControl_5 = new udc.com.comFormTitle();
				userDefinedControl_5.bind("title").toLanguage("UI-SCR-IMPORTCRE");
				container.addChild(userDefinedControl_5, {
					"top": "5px",
					"left": "6px",
					"width": "89px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnImportNew");
				button_8.value = "";
				button_8.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnImportNewClick == "function") {
					button_8.addEventListener("click", onBtnImportNewClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "509px",
					"width": "60px",
					"height": "25px"
				});
				var button_9 = new cpr.controls.Button("btnImportDel");
				button_9.value = "";
				button_9.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnImportDelClick == "function") {
					button_9.addEventListener("click", onBtnImportDelClick);
				}
				container.addChild(button_9, {
					"top": "5px",
					"left": "574px",
					"width": "60px",
					"height": "25px"
				});
				var grid_3 = new cpr.controls.Grid("grdImport");
				grid_3.init({
					"dataSet": app.lookup("dsImport"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "269px"},
						{"width": "190px"},
						{"width": "190px"},
						{"width": "93px"},
						{"width": "105px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-IMPORTFILENAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-IMPORTPATH");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-IMPORTID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "스크립트 주석 start";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "스크립트 주석 end";
									cell.style.setClasses(["require"]);
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_8 = new cpr.controls.Output();
										output_8.style.css({
											"text-align" : "center"
										});
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "IMPORT_NM";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbImpFileNm");
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsImpList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("IMPORT_NM");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "IMPORT_SRC";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("gdIpbImpSrc");
										inputBox_14.enabled = false;
										inputBox_14.userAttr({"require": "Y"});
										inputBox_14.bind("value").toDataColumn("IMPORT_SRC");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "IMPORT_ID";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("gdIpbImpId");
										inputBox_15.enabled = false;
										inputBox_15.userAttr({"require": "Y"});
										inputBox_15.bind("value").toDataColumn("IMPORT_ID");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DESC_START";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("gdIpbDescSt");
										inputBox_16.userAttr({"require": "Y"});
										inputBox_16.bind("value").toDataColumn("DESC_START");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DESC_END";
									cell.control = (function(){
										var inputBox_17 = new cpr.controls.InputBox("gdIpbDescEnd");
										inputBox_17.userAttr({"require": "Y"});
										inputBox_17.bind("value").toDataColumn("DESC_END");
										return inputBox_17;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_3, {
					"top": "29px",
					"left": "6px",
					"width": "694px",
					"height": "117px"
				});
				var button_10 = new cpr.controls.Button("btnImportRestore");
				button_10.value = "";
				button_10.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnImportRestoreClick == "function") {
					button_10.addEventListener("click", onBtnImportRestoreClick);
				}
				container.addChild(button_10, {
					"top": "5px",
					"left": "640px",
					"width": "60px",
					"height": "25px"
				});
			})(group_4);
			container.addChild(group_4, {
				"top": "520px",
				"left": "5px",
				"width": "709px",
				"height": "152px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "응용파일폼생성(개발자용)";
	cpr.core.Platform.INSTANCE.register(app);
})();
