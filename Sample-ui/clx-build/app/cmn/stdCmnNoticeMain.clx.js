/*
 * App URI: app/cmn/stdCmnNoticeMain
 * Source Location: app/cmn/stdCmnNoticeMain.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnNoticeMain", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnNoticeMain.xtm"/>
			
			
			var stdCmnNoticeMain = function() {
				var moPage = new Page();
				
				var vsSeq = 1;
				var msContent = "";
				var noticeAttr;
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				function doList(poCollBackFunc){
					
							//strCommand: mainlist 
							util.Submit.send(app, "subList", function(pbSuccess){
						
						if(pbSuccess){
							util.Control.redraw(app, "grdNotice");
							// 조회 : "조회되었습니다." header 메세지 표시
							util.Msg.notify(app, "NLS.INF.M024");
						}
						// 조회 후 콜백함수 수행 
						// 만약 이것이 함수 이면 콜백동작 
						if(util.isFunc(poCollBackFunc)){
							poCollBackFunc(pbSuccess);
						}
					});
					
				};
				
				moPage.onModelConstructDone_StdCmnNoticeMain = function() {
					doList();
				};
				
				// 선택한 공지사항의 세부 내용을 보여준다. 
				moPage.reDrawNoticeGrp = function(poRow) {
					
				  var vnNullCnt = 0;
				  var vsTitle = util.DataSet.getValue(app, "dsResBoard", "TITLE", poRow);
				  var vsContent = util.DataSet.getValue(app, "dsResBoard", "CONT", poRow);
				  var vsLink = util.DataSet.getValue(app, "dsResBoard", "LINK_URL", poRow);
				  var vsFile1 = util.DataSet.getValue(app, "dsResBoard", "FILE_NM1", poRow);
				  var vsFile2 = util.DataSet.getValue(app, "dsResBoard", "FILE_NM2", poRow);
				  var vsFile3 = util.DataSet.getValue(app, "dsResBoard", "FILE_NM3", poRow);
				  
				  var vsFileOrgNm1 = util.DataSet.getValue(app, "dsResBoard", "FILE_ORG_NM1", poRow);
				  var vsFileOrgNm2 = util.DataSet.getValue(app, "dsResBoard", "FILE_ORG_NM2", poRow);
				  var vsFileOrgNm3 = util.DataSet.getValue(app, "dsResBoard", "FILE_ORG_NM3", poRow);
			
				  if(!vsLink) vnNullCnt++; 
				  if(!vsFile1) vnNullCnt++; 
				  if(!vsFile2) vnNullCnt++; 
				  if(!vsFile3) vnNullCnt++; 
					
				  var vsTotalTop = 40;
				  var vsCtlHeight = 23;  
				  var vsLblFileHeight = 0;
				
				// 링크가 값이 없으면 링크 레이블을 숨김
				  if(ValidUtil.checkValue(vsLink,"notNull=yes")) {
					ExtControl.setAttr("lblLink", "top", vsTotalTop);  
					ExtControl.setAttr("lblLinkContent", "top", util.Control.getProperty(app, "lblLink","top"));
					util.Control.setValue(app, "lblLinkContent",vsLink);
					vsTotalTop =  util.Control.getProperty(app, "lblLink","top") + vsCtlHeight;
				  } else {
					ExtControl.setAttr("lblLink", "visible", false);
					ExtControl.setAttr("lblLinkContent", "visible", false);
				  }
				  
				// 파일업로드가 되어있지 않으면 파일첨부란을 보여주지 않는다. 
				 if((ValidUtil.checkValue(vsFile1,"notNull=yes")) || (ValidUtil.checkValue(vsFile2,"notNull=yes")) || (ValidUtil.checkValue(vsFile3,"notNull=yes"))){
					ExtControl.setAttr("lblFile", "top", vsTotalTop);
				 }
				
			
				  if(ValidUtil.checkValue(vsFile1,"notNull=yes")){
					ExtControl.setAttr("lblFile1", "top", vsTotalTop); 
					util.Control.setValue(app, "lblFile1", vsFile1);
					util.Control.setValue(app, "lblFileOrgNm1", vsFileOrgNm1);
					vsTotalTop = util.Control.getProperty(app, "lblFile1", "top") + vsCtlHeight;
					vsLblFileHeight += vsCtlHeight;
				  }else{
					ExtControl.setAttr("lblFile1","visible", false);
				  }
				  if(ValidUtil.checkValue(vsFile2,"notNull=yes")){
					ExtControl.setAttr("lblFile2", "top", vsTotalTop); 
					util.Control.setValue(app, "lblFile2", vsFile1);
					util.Control.setValue(app, "lblFileOrgNm2", vsFileOrgNm1);
					vsTotalTop = util.Control.getProperty(app, "lblFile2", "top") + vsCtlHeight;
					vsLblFileHeight += vsCtlHeight;
				  }else{
					ExtControl.setAttr("lblFile2","visible", false);
				  }
				 if(ValidUtil.checkValue(vsFile3,"notNull=yes")){
					ExtControl.setAttr("lblFile3", "top", vsTotalTop); 
					util.Control.setValue(app, "lblFile3", vsFile1);
					util.Control.setValue(app, "lblFileOrgNm3", vsFileOrgNm1);
					vsTotalTop = util.Control.getProperty(app, "lblFile3", "top") + vsCtlHeight;
					vsLblFileHeight += vsCtlHeight;
				  }else{
					ExtControl.setAttr("lblFile3","visible", false);
				  }
				  
				 if(ValidUtil.checkValue(vsFile1,"notNull=yes") || ValidUtil.checkValue(vsFile1,"notNull=yes") || ValidUtil.checkValue(vsFile1,"notNull=yes")){
					ExtControl.setAttr("lblFile", "height", vsLblFileHeight -3);
				 }else{
					ExtControl.setAttr("lblFile","visible", false);
				 }
				
				ExtControl.setAttr("lblContent","top", vsTotalTop);
				ExtControl.setAttr("lblContent","height", util.Control.getProperty(app, "lblContent","height")-vsTotalTop + 40);
				
				ExtControl.setAttr("txtContent","top", vsTotalTop);
				ExtControl.setAttr("txtContent","height", util.Control.getProperty(app, "txtContent","height")-vsTotalTop + 40);
			 
				util.Control.setValue(app, "lblTitleContent", vsTitle);
				util.Control.setValue(app, "txtContent",vsContent);
				util.Control.redraw(app, "grp2");
				
				//ExtControl.setAttr("txtContent","src", "mainBoard.html");
				 //this.setTxtContent(vsContent);
				ExtControl.setAttr("rptNotice" ,"visible", false);
				ExtControl.setAttr("grp2", "visible", true);
				};
				
				moPage.getTxtContent = function() {
					return msContent;
					
				};
				
				moPage.setTxtContent = function(psContent) {
					msContent = psContent;
				};
				
				
				// 공지사항 선택시 
				moPage.onRowSelect_RptNotice = function() {
						
					var vnRow = util.Grid.getIndex(app, "grdNotice");
					if( vnRow == null) { return; }
					
					vsSeq =util.Grid.getCellValue(app, "grdNotice","rdIpbSeq", vnRow);
					util.DataMap.setValue(app, "dmReqHit", "SEQ", vsSeq);
					
					//조회수 + 1 서브미션 
					//strCommand: noticehitount 
					util.Submit.send(app, "subHitPlus", function(pbSuccess){
						
						if(pbSuccess){
							reDrawNoticeGrp(vnRow);
							
						}
					});
				};
				
				// 목록보기 클릭 시 다시 공지사항 화면으로 
				moPage.onClick_Button3 = function() {
			
					ExtControl.setAttr("rptNotice", "visible", true);
					ExtControl.setAttr("grp2", "visible", false);
					doList();
				 
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsResBoard");
			dataSet_1.parseData({
				"columns": [
					{"name": "SEQ"},
					{"name": "ANNC_DT"},
					{"name": "ANNC_FUND_NM"},
					{"name": "EMGCY_YN"},
					{"name": "USER_DIV_RCD"},
					{"name": "ANNC_ST_DT"},
					{"name": "ANNC_END_DT"},
					{"name": "TITLE"},
					{"name": "CONT"},
					{"name": "IQY_CNT"},
					{"name": "LINK_URL"},
					{"name": "FILE_NM1"},
					{"name": "FILE_NM2"},
					{"name": "FILE_NM3"},
					{"name": "FILE_ORG_NM1"},
					{"name": "FILE_ORG_NM2"},
					{"name": "FILE_ORG_NM3"},
					{"name": "ANNC_DIV_RCD"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_PGM_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "UPD_DTHR"},
					{"name": "UPD_USER_ID"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"},
					{"name": "FILE_SERIAL_NO"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmRoot");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "EXBERRMSG",
						"dataType": "string"
					},
					{
						"name": "resOnLoad",
						"dataType": "string"
					},
					{
						"name": "temp",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqHit");
			dataMap_2.parseData({
				"columns" : [{
					"name": "SEQ",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "SEQ",
						"dataType": "string"
					},
					{
						"name": "strUserDivCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/StdCmnNoticeBoard/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_3);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subHitPlus");
			submission_2.action = "/cmn/StdCmnNoticeBoard/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subBoard");
			submission_3.action = "/cmn/StdCmnNoticeBoard/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_1, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp2");
			group_1.visible = false;
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optTitle");
				output_1.value = "제목";
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("button3");
				button_1.value = "목록보기";
				if(typeof onButton3Click == "function") {
					button_1.addEventListener("click", onButton3Click);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optLink");
				output_2.value = "링크";
				container.addChild(output_2, {
					"top": "30px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("label4");
				output_3.value = "첨부파일";
				container.addChild(output_3, {
					"top": "55px",
					"left": "5px",
					"width": "60px",
					"height": "70px"
				});
				var output_4 = new cpr.controls.Output("optLinkContent");
				output_4.value = "";
				output_4.bind("value").toDataMap(app.lookup("dmRow"), "LINK_URL");
				container.addChild(output_4, {
					"top": "30px",
					"left": "70px",
					"width": "1150px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optTitleContent");
				output_5.value = "";
				output_5.bind("value").toDataMap(app.lookup("dmRow"), "TITLE");
				container.addChild(output_5, {
					"top": "5px",
					"left": "75px",
					"width": "1085px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optFile1");
				output_6.value = "";
				container.addChild(output_6, {
					"top": "55px",
					"left": "70px",
					"width": "1150px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optFile2");
				output_7.value = "";
				container.addChild(output_7, {
					"top": "80px",
					"left": "70px",
					"width": "1150px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optFile3");
				output_8.value = "";
				container.addChild(output_8, {
					"top": "105px",
					"left": "70px",
					"width": "1150px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optContent");
				output_9.value = "내용";
				container.addChild(output_9, {
					"top": "130px",
					"left": "5px",
					"width": "60px",
					"height": "465px"
				});
				var textArea_1 = new cpr.controls.TextArea("txtContent");
				textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "CONT");
				container.addChild(textArea_1, {
					"top": "130px",
					"left": "70px",
					"width": "1150px",
					"height": "465px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "70px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var group_2 = new cpr.controls.Container("group2");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grdNotice");
				grid_1.init({
					"dataSet": app.lookup("dsResBoard"),
					"columns": [
						{"width": "150px"},
						{"width": "935px"},
						{"width": "130px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{
							"width": "80px",
							"visible": false
						},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "공지일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "제목";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "공지자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "공지시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "공지종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "공지대상";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "긴급여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "공지자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "내용";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "링크";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "첨부파일1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "첨부파일2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "첨부파일3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "공지번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "조회수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "실첨부파일1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "실첨부파일2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "실첨부파일3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "공지구분";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "ANNC_DT";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("output1");
										output_10.dataType = "date";
										output_10.format = "YYYY-MM-DD";
										output_10.bind("value").toDataColumn("ANNC_DT");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "TITLE";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("inputbox3");
										inputBox_1.readOnly = true;
										inputBox_1.bind("value").toDataColumn("TITLE");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ANNC_FUND_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ANNC_ST_DT";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("inputbox1");
										inputBox_2.bind("value").toDataColumn("ANNC_ST_DT");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ANNC_END_DT";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("inputbox4");
										inputBox_3.visible = false;
										inputBox_3.bind("value").toDataColumn("ANNC_END_DT");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("inputbox5");
										inputBox_4.visible = false;
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "EMGCY_YN";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("inputbox6");
										inputBox_5.bind("value").toDataColumn("EMGCY_YN");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ANNC_FUND_NM";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("inputbox7");
										inputBox_6.bind("value").toDataColumn("ANNC_FUND_NM");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CONT";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("inputbox12");
										inputBox_7.bind("value").toDataColumn("CONT");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "LINK_URL";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("inputbox8");
										inputBox_8.bind("value").toDataColumn("LINK_URL");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "FILE_NM1";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("inputbox9");
										inputBox_9.bind("value").toDataColumn("FILE_NM1");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "FILE_NM2";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("inputbox10");
										inputBox_10.bind("value").toDataColumn("FILE_NM2");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "FILE_NM3";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("inputbox11");
										inputBox_11.bind("value").toDataColumn("FILE_NM3");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "SEQ";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbSeq");
										inputBox_12.bind("value").toDataColumn("SEQ");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "IQY_CNT";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("inputbox14");
										inputBox_13.bind("value").toDataColumn("IQY_CNT");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM1";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("inputbox15");
										inputBox_14.bind("value").toDataColumn("FILE_ORG_NM1");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM2";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("inputbox16");
										inputBox_15.bind("value").toDataColumn("FILE_ORG_NM2");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM3";
									cell.control = (function(){
										var inputBox_16 = new cpr.controls.InputBox("inputbox17");
										inputBox_16.bind("value").toDataColumn("FILE_ORG_NM3");
										return inputBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "ANNC_DIV_RCD";
									cell.control = (function(){
										var inputBox_17 = new cpr.controls.InputBox("inputbox2");
										inputBox_17.bind("value").toDataColumn("ANNC_DIV_RCD");
										return inputBox_17;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdNoticeSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdNoticeSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "190px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "70px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var group_3 = new cpr.controls.Container("grpNotice");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var button_2 = new cpr.controls.Button("button23");
				button_2.value = "더보기";
				container.addChild(button_2, {
					"top": "5px",
					"left": "1150px",
					"width": "65px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("label1");
				output_11.value = "공지사항";
				container.addChild(output_11, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "22px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
