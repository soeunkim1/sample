/*
 * App URI: app/cmn/stdCmnPCustomManu
 * Source Location: app/cmn/stdCmnPCustomManu.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPCustomManu", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnCustomManu");
			dataSet_1.parseData({
				"info": "CMN_CUSTOM_MANU@SEQ",
				"columns": [
					{"name": "USER_NM"},
					{"name": "USER_ID"},
					{"name": "SEQ"},
					{"name": "PGM_ID"},
					{"name": "CONT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strPgmId",
						"dataType": "string"
					},
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strContent",
						"dataType": "string"
					},
					{
						"name": "strPgmNm",
						"dataType": "string"
					},
					{
						"name": "strPgmNm2",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "checkUserYn",
						"dataType": "string"
					},
					{
						"name": "checkMenuParam",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmObjGbnList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "row",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/StdCmnCustomManu/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSaveReg");
			submission_2.action = "/cmn/StdCmnCustomManu/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnCustomManu/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_1);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_txtContent");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-MENUALREG");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "150px",
					"height": "25px"
				});
				var textArea_1 = new cpr.controls.TextArea("txtContent");
				textArea_1.maxLength = 1000;
				textArea_1.userAttr({"require": "Y"});
				textArea_1.bind("fieldLabel").toExpression("#optTitleFrfCmnCustomManu.value");
				textArea_1.bind("value").toDataMap(app.lookup("dmReqList"), "strContent");
				container.addChild(textArea_1, {
					"top": "30px",
					"left": "5px",
					"width": "630px",
					"height": "84px"
				});
				var output_1 = new cpr.controls.Output("optMenuNm");
				output_1.value = "";
				output_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmNm");
				container.addChild(output_1, {
					"top": "5px",
					"left": "160px",
					"width": "190px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnReg");
				button_1.value = "등록";
				button_1.style.setClasses(["btn-commit"]);
				button_1.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.WRKSAVE']"), "MSG_TEXT");
				if(typeof onBtnRegClick == "function") {
					button_1.addEventListener("click", onBtnRegClick);
				}
				if(typeof onBtnRegClick == "function") {
					button_1.addEventListener("click", onBtnRegClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "575px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "50px",
				"left": "5px",
				"width": "640px",
				"height": "121px"
			});
			
			var button_2 = new cpr.controls.Button("btnCancel");
			button_2.value = "화면닫기";
			button_2.style.setClasses(["btn-commit"]);
			if(typeof onBtnCancelClick == "function") {
				button_2.addEventListener("click", onBtnCancelClick);
			}
			container.addChild(button_2, {
				"top": "415px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCmnCustomManu");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnCustomManu");
				grid_1.init({
					"dataSet": app.lookup("dsCmnCustomManu"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "80px"},
						{"width": "454px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-USER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CONTENT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PGID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-USER_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "SEQ";
									cell.style.setClasses(["require"]);
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "60px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_2 = new cpr.controls.Output();
										output_2.style.css({
											"text-align" : "center"
										});
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CONT";
									cell.control = (function(){
										var textArea_2 = new cpr.controls.TextArea("gdTxtContent");
										textArea_2.maxLength = 1000;
										textArea_2.bind("value").toDataColumn("CONT");
										return textArea_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbPgmId");
										inputBox_1.bind("value").toDataColumn("PGM_ID");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "USER_ID";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbUserId");
										inputBox_2.bind("value").toDataColumn("USER_ID");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SEQ";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbSeq");
										inputBox_3.bind("value").toDataColumn("SEQ");
										return inputBox_3;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnCustomManuRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdCmnCustomManuRowDblclick);
				}
				if(typeof onGrdCmnCustomManuRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdCmnCustomManuRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "29px",
					"left": "5px",
					"width": "630px",
					"height": "195px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-MENUALLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optMenuNm2");
				output_3.value = "";
				output_3.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmNm2");
				container.addChild(output_3, {
					"top": "5px",
					"left": "160px",
					"width": "267px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "삭제";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.DELETE']"), "MSG_TEXT");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "510px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "취소";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.WRKCANCL']"), "MSG_TEXT");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "575px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "175px",
				"left": "5px",
				"width": "640px",
				"height": "230px"
			});
			
			var button_5 = new cpr.controls.Button("btnSave");
			button_5.value = "저장";
			button_5.style.setClasses(["btn-save"]);
			button_5.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.WRKSAVE']"), "MSG_TEXT");
			if(typeof onBtnSaveClick == "function") {
				button_5.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_5, {
				"top": "415px",
				"left": "585px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
		}
	});
	app.title = "내가 만드는 매뉴얼";
	cpr.core.Platform.INSTANCE.register(app);
})();
