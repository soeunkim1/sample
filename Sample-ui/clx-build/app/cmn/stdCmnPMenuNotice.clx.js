/*
 * App URI: app/cmn/stdCmnPMenuNotice
 * Source Location: app/cmn/stdCmnPMenuNotice.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPMenuNotice", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnPMenuNotice.xtm"/>
			
			
			var stdCmnPMenuNotice = function() {
				var moPage = new Page();
				var msContent = "";
				
				moPage.onModelConstructDone_StdCmnPMenuNotice = function() {
						
						
						util.DataMap.setValue(app, "dmReqKey", "strMenuId", moPageInfo.menuId);
						//strCommand: mainlist 
						util.Submit.send(app, "subMenuNotice", function(pbSuccess){
						if(pbSuccess){
							moPage.setTxtContent(util.DataMap.getValue(app, "dmResList", "strContent"));
							ExtSubPage.setPage("hojContent", "inc/common/mainBoard.html", true);
						}
					}); 
					
				};
				
					// 조회시 불러온 공지사항의 내용을 mainBoard.html에서 호출하여 화면에 뿌려줌 
				moPage.getTxtContent = function() {
					return msContent;
					
				};
				
				//조회시 데이터베이스로부터 가져온 내용 값을 전역변수에 담는다.
				moPage.setTxtContent = function(psContent) {
					msContent = psContent;
				};
				
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
				moPage.onClick_BtnClose = function() {
					app.close();
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strMenuId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strContent",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subMenuNotice");
			submission_1.action = "/cmn/StdCmnAnnounceBoard/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnClose");
			button_1.value = "닫기";
			if(typeof onBtnCloseClick == "function") {
				button_1.addEventListener("click", onBtnCloseClick);
			}
			container.addChild(button_1, {
				"top": "378px",
				"left": "538px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("group2");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojContent");
				container.addChild(hTMLObject_1, {
					"top": "5px",
					"left": "5px",
					"width": "585px",
					"height": "325px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "595px",
				"height": "337px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "공지사항 팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
