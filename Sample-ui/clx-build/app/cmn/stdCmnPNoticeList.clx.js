/*
 * App URI: app/cmn/stdCmnPNoticeList
 * Source Location: app/cmn/stdCmnPNoticeList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPNoticeList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnPNoticeList.xtm"/>
			
			var stdCmnPNoticeList = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				var msContent = "";
				
				moPObject.moIdsForStdCmnFileUtil = [{
					controlId : "btnFileDownLoad",
					iFileSerialNo : "optFileSerialNo",
					iFileSubPath : "stdCmnSMainNotice",
					iTableName : "CMN_BOARD",
					iIsDirectUpLoad : null,
					isFileSelectorOnly : null,
					iIsHideDelete : true,
					iIsDownloadOnly : true,
					iFileExtFilter : null,
					oFileSerailNo : "optFileSerialNo",
					oTmpFilePath : null, //리피트일경우 null로 지정
					oFileCnt : "optFileCnt",
					oFileDataChanged : null,
					func : null
				}];
				
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
					/**
					 * @desc  mainBoard.html에서 호출하여 공지사항의 상세 내용 입력
					 * @param
					 * @return msContent
					 * @author 강현우2016.02.02
					 */		
					moPage.getTxtContent = function() {
						return msContent;
						
					};
					
					
				function doListDtl() {
							
						// 호출한 페이지에서 파라미터 받기.													
						var vnNoticeSeq =  ExtPopUp.getParentVal("mnNoticeSeq");
						util.DataMap.setValue(app, "dmReqKey", "SEQ", vnNoticeSeq);
						
						//서브미션 실행
						//strCommand: listDetail 
						util.Submit.send(app, "subListDtl", function(pbSuccess){
							if(pbSuccess){
								//컨트롤 rebuild
								moPage.reDrawNoticeGrp();
								util.Control.redraw(app, "grpDataImp");
							if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							}
						}, true);
				};
				
				/**
					 * @desc  공지사항 선택 - 컨트롤 위치 및 사이즈 조정
					 * @param poRow
					 * @return void
					 * @author 강현우 2016.02.02
					 */		
					moPage.reDrawNoticeGrp = function() {
						
						// 상세 내용안에 보여질 데이터들(제목, 내용, 링크, 파일1,2,3)
						var vsTitle = util.DataSet.getValue(app, "dsResBoard", "TITLE");
						var vsContent = util.DataSet.getValue(app, "dsResBoard", "CONT");
						var vsLink = util.DataSet.getValue(app, "dsResBoard", "LINK_URL");
							
						// "제목"은 고정이므로 고정위치 값을 지정해 놓는다.
						var vsTotalTop = 65;
						// 컨트롤의 높이
						var vsCtlHeight = 25;
						// "첨부파일" 레이블의 높이
						var vsLblFileHeight = 0;
						// "내용"의 높이조절
						var vnContHeg = 0;
						// "링크"의 위치 
						var vsLinkTop = Number(util.Control.getStyleAttr(app, "lblLink", "top")) - 1;
						
						// 링크가 값이 없으면 링크 레이블을 숨김
						if (ValidUtil.checkValue(vsLink, "notNull=yes")) {
							util.Control.setStyleAttr(app, "lblLink", "top", vsTotalTop);
							util.Control.setStyleAttr(app, "lblLinkContent", "top", vsLinkTop);
							util.Control.setValue(app, "lblLinkContent", vsLink);
							vsTotalTop = vsLinkTop + vsCtlHeight;
							util.Control.setVisible(app, true, "lblLink");
							util.Control.setVisible(app, true, "lblLinkContent");
						} else {
							util.Control.setVisible(app, false, "lblLink");
							util.Control.setVisible(app, false, "lblLinkContent");
							vnContHeg += vsCtlHeight;
						}
						
						// 파일업로드가 되어있는 경우
						var vnFileCnt = util.DataSet.getValue(app, "dsResBoard","FILE_CNT");
			
						if (vnFileCnt != 0) {
							// 파일 부분 위치 조정
							util.Control.setStyleAttr(app, "lblFile", "top", vsTotalTop - 1);
							util.Control.setStyleAttr(app, "btnFileDownLoad", "top", vsTotalTop - 1);
							util.Control.setStyleAttr(app, "lblFileCnt", "top", vsTotalTop - 1);
							util.Control.setStyleAttr(app, "optFileCnt", "top", vsTotalTop - 1);
							
							util.Control.setValue(app, "optFileCnt", vnFileCnt);
							util.Control.setVisible(app, true, "lblFile");
							util.Control.setVisible(app, true, "btnFileDownLoad");
							util.Control.setVisible(app, true, "lblFileCnt");
							util.Control.setVisible(app, true, "optFileCnt");
							
							// 파일 하단 부분 위치값 조정 
							var vsFileTop = Number(util.Control.getStyleAttr(app, "lblFile", "top"));
							vsTotalTop = Number(vsFileTop) + vsCtlHeight;
							vsLblFileHeight += vsCtlHeight;
						}
						else {
							util.Control.setVisible(app, false, "btnFileDownLoad");
							util.Control.setVisible(app, false, "lblFile");
							util.Control.setVisible(app, false, "lblFileCnt");
							util.Control.setVisible(app, false, "optFileCnt");
							
							vnContHeg += vsCtlHeight;
						}
						// "내용" 레이블 사이즈와 위치 변경 
						util.Control.setStyleAttr(app, "lblContent", "top", vsTotalTop - 1);
						var vsContentHeight = util.Control.getStyleAttr(app, "lblContent", "height"); //465px
						var vnContentHeight = vsContentHeight.replace(/[^0-9]/g, ''); //465
						util.Control.setStyleAttr(app, "lblContent", "height", (Number(vnContentHeight) + vnContHeg));
						
						// htmlObject 그룹 사이즈와 위치 변경
						util.Control.setStyleAttr(app, "grpDataImpContent", "top", vsTotalTop - 2);
						var vsGroupHeight = util.Control.getStyleAttr(app, "grpDataImpContent", "height"); //465px
						var vnGroupHeight = vsContentHeight.replace(/[^0-9]/g, ''); //465
						util.Control.setStyleAttr(app, "grpDataImpContent", "height", (Number(vnGroupHeight) + vnContHeg));
			
						// htmlObject 사이즈와 위치 변경 
						var vsHojHeight = util.Control.getStyleAttr(app, "hojContent", "height");
						var vnHojHeight = vsHojHeight.replace(/[^0-9]/g, '');
						var domContent = model.window().document.getElementById("hojContent");
						
						
						// htmlObject 영역에 내용을 가져와 보여준다.(html태그 속성 유지)
						moPage.setTxtContent(vsContent);
						ExtSubPage.setPage("hojContent", "inc/common/mainBoard.html", true, "auto");
									
						if (domContent != null) {
							// html이 불러와진 상태라면 body의 위치와 크기 속성을 직접 조작
							domContent.style.top = vsTotalTop+"px";
							domContent.style.height = (Number(vnHojHeight) + vnContHeg)+"px";
						}
						else {
							// 공지사항을 최초 선택 시에는 컨트롤 위치를 조작
							util.Control.setStyleAttr(app, "hojContent", "top", vsTotalTop - 1);
							util.Control.setStyleAttr(app, "hojContent", "height", (Number(vnHojHeight) + vnContHeg));
						}
						
						util.Control.setValue(app, "optTitleContent", vsTitle);
						
					};
					
						/**
					 * @desc  첨부파일 다운로드 클릭
					 * @param
					 * @return void
					 * @author 강현우2016.02.02
					 */		
				moPage.onClick_BtnFileDownLoad = function(sender) {
						doOnClickStdCmnPFileUtil(sender);
					}
					
				
				/**
					 * @desc  공지사항의 내용 값 설정
					 * @param psContent
					 * @return void
					 * @author 강현우2016.02.02
					 */		
					moPage.setTxtContent = function(psContent) {
						msContent = psContent;
					};
					
				
			//	moPage.onRowSelect_RptCmnBoard = function() {
			//		//
			//		//var vnRow = ExtRepeat.getIndex("rptCmnBoard");
			//		//if (vnRow == null) {
			//		//	return;
			//		//}
			//		//
			//		////공지사항 상세내용을 팝업으로 띄움(부모함수 호출)
			//		//ExtPopUp.getParentScript("openNoticeDetail", vnRow);
			//		//
			//		//ExtControl.setVisible(true, "grpDataImp");
			//		//var domContent = model.window().document.getElementById("hojContent");
			//		//if(domContent != null) domContent.style.display = "inline";
			//		//
			//		//moPage.doListDtl();
			//		//
			//		////model.load("/xtm/cmn/stdCmnPNoticeDetail.xtm", null);
			//		//
			//		////전체 공지사항 팝업 제거 
			//		////ExtPopUp.closeLayeredPopup();
			//	}
				
				
				
				moPage.onModelConstructDone_StdCmnPNoticeList = function() {
					//세션정보를 이용해 사용자 구분코드값 세팅
						util.DataMap.setValue(app, "dmRoot", "reqKey", "strUserDivRcd", moUserInfo.userDivRcd);
						
						var vsEventStatr = ExtPopUp.getParentVal("mnEventStart");
						doGrpVisible(vsEventStatr);
						
						
						if(vsEventStatr == "L"){
							// 팝업 온로드시 공지사항 전체 목록을 가져온다.
							doList(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
						
						}else{
							doList(function(pbSuccess) {
								
								doListDtl();
								// 조회 : "조회되었습니다." header 메세지 표시
								if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
							
							
						}
				};
				
				
				
				function doGrpVisible(psStatus){
					
					if(psStatus == "L"){
						
						util.Control.setVisible(app, true, "grpDataBoard");
						util.Control.setVisible(app, false, ["grpDataImp"]);
			
						var domContent = model.window().document.getElementById("hojContent");
						
						if(domContent != null) domContent.style.display = "none";
						
					}else{
						util.Control.setVisible(app, false, "grpDataBoard");
						util.Control.setVisible(app, true, ["grpDataImp"]);
			
						var domContent = model.window().document.getElementById("hojContent");
						
						if(domContent != null) domContent.style.display = "inline";
					}
				
					
				}
				/**
				 * @desc  공지사항 목록 전체 조회
				 * @param poCollBackFunc
				 * @return void
				 * @author 강현우 2016.02.18
				 */	
				function doList(poCollBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, "grdCmnBoard");
						}
						if (util.isFunc(poCollBackFunc)) {
							poCollBackFunc(pbSuccess);
						}
					});
					
				};
				
				moPage.onClick_BtnClose = function() {
					app.close();
				}
				
				moPage.onClick_BtnList = function() {
					//ExtPopUp.closeLayeredPopup();
					// 부모함수 호출(공지사항 전체목록 팝업)
					//model.load("/xtm/cmn/stdCmnPNoticeList.xtm", null);
					util.Control.setVisible(app, true, "grpDataBoard");
					util.Control.setVisible(app, false, ["grpDataImp"]);
					
					var domContent = model.window().document.getElementById("hojContent");
					domContent.style.display = "none";
				}
				
				moPage.onClick_BtnFileDownLoad = function(sender) {
						doOnClickStdCmnPFileUtil(sender);
					}
				
				
				moPage.onClick_RdOptTitle = function() {
					var vnRow = util.Grid.getIndex(app, "grdCmnBoard");
					if (vnRow == null) {
						return;
					}
					
					//공지사항 상세내용을 팝업으로 띄움(부모함수 호출)
					ExtPopUp.getParentScript("openNoticeDetail", vnRow);
					
					util.Control.setVisible(app, true, "grpDataImp");
					var domContent = model.window().document.getElementById("hojContent");
					if(domContent != null) domContent.style.display = "inline";
					
					doListDtl();
					
					//model.load("/xtm/cmn/stdCmnPNoticeDetail.xtm", null);
					
					//전체 공지사항 팝업 제거 
					//ExtPopUp.closeLayeredPopup();
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnBoard");
			dataSet_1.parseData({
				"info": "CMN_BOARD@SEQ",
				"columns": [
					{"name": "SEQ"},
					{"name": "ANNC_DT"},
					{"name": "ANNC_FUND_NM"},
					{"name": "EMGCY_YN"},
					{"name": "USER_DIV_RCD"},
					{"name": "ANNC_ST_DT"},
					{"name": "ANNC_END_DT"},
					{"name": "TITLE"},
					{"name": "CONT"},
					{"name": "IQY_CNT"},
					{"name": "LINK_URL"},
					{"name": "FILE_NM1"},
					{"name": "FILE_NM2"},
					{"name": "FILE_NM3"},
					{"name": "FILE_ORG_NM1"},
					{"name": "FILE_ORG_NM2"},
					{"name": "FILE_ORG_NM3"},
					{"name": "ANNC_DIV_RCD"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_PGM_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "UPD_DTHR"},
					{"name": "UPD_USER_ID"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "FILE_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsResBoard");
			dataSet_2.parseData({
				"columns": [
					{"name": "SEQ"},
					{"name": "ANNC_DT"},
					{"name": "ANNC_FUND_NM"},
					{"name": "EMGCY_YN"},
					{"name": "USER_DIV_RCD"},
					{"name": "ANNC_ST_DT"},
					{"name": "ANNC_END_DT"},
					{"name": "TITLE"},
					{"name": "CONT"},
					{"name": "IQY_CNT"},
					{"name": "LINK_URL"},
					{"name": "FILE_NM1"},
					{"name": "FILE_NM2"},
					{"name": "FILE_NM3"},
					{"name": "FILE_ORG_NM1"},
					{"name": "FILE_ORG_NM2"},
					{"name": "FILE_ORG_NM3"},
					{"name": "ANNC_DIV_RCD"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "FILE_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "SEQ",
						"dataType": "string"
					},
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/StdCmnMainNotice/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListDtl");
			submission_2.action = "/cmn/StdCmnMainNotice/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpDataBoard");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnBoard");
				grid_1.init({
					"dataSet": app.lookup("dsCmnBoard"),
					"columns": [
						{"width": "40px"},
						{"width": "150px"},
						{"width": "565px"},
						{"width": "130px"},
						{"width": "100px"},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{"width": "120px"},
						{"width": "120px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "공지일자";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "제목";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "공지자명";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "공지시작일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "공지종료일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "긴급여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "내용";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "링크";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "첨부파일1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "첨부파일2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "첨부파일3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "공지번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "조회수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "실첨부파일1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "실첨부파일2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "실첨부파일3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "공지구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "파일시리얼번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "파일개수";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "ANNC_DT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptAnncDt");
										output_1.dataType = "date";
										output_1.format = "YYYY-MM-DD";
										output_1.bind("value").toDataColumn("ANNC_DT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "TITLE";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdOptTitle");
										inputBox_1.bind("value").toDataColumn("TITLE");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ANNC_FUND_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ANNC_ST_DT";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbAnncStDt");
										inputBox_2.bind("value").toDataColumn("ANNC_ST_DT");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ANNC_END_DT";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbAnnsEndDt");
										inputBox_3.bind("value").toDataColumn("ANNC_END_DT");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "EMGCY_YN";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbEmgcyYn");
										inputBox_4.bind("value").toDataColumn("EMGCY_YN");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CONT";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbContent");
										inputBox_5.bind("value").toDataColumn("CONT");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "LINK_URL";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbLinkUrl");
										inputBox_6.bind("value").toDataColumn("LINK_URL");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "FILE_NM1";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbFileNm1");
										inputBox_7.bind("value").toDataColumn("FILE_NM1");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "FILE_NM2";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbFileNm2");
										inputBox_8.bind("value").toDataColumn("FILE_NM2");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "FILE_NM3";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbFileNm3");
										inputBox_9.bind("value").toDataColumn("FILE_NM3");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SEQ";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbSeq");
										inputBox_10.bind("value").toDataColumn("SEQ");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "IQY_CNT";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbIqyCnt");
										inputBox_11.bind("value").toDataColumn("IQY_CNT");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM1";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbFileOrgNm1");
										inputBox_12.bind("value").toDataColumn("FILE_ORG_NM1");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM2";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbFileOrgNm2");
										inputBox_13.bind("value").toDataColumn("FILE_ORG_NM2");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "FILE_ORG_NM3";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("gdIpbFileOrgNm3");
										inputBox_14.bind("value").toDataColumn("FILE_ORG_NM3");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "ANNC_DIV_RCD";
									cell.control = (function(){
										var inputBox_15 = new cpr.controls.InputBox("gdIpbAnncDivRcd");
										inputBox_15.bind("value").toDataColumn("ANNC_DIV_RCD");
										return inputBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "FILE_CNT";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "880px",
					"height": "400px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "890px",
				"height": "435px"
			});
			
			var button_1 = new cpr.controls.Button("btnClose");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseClick == "function") {
				button_1.addEventListener("click", onBtnCloseClick);
			}
			container.addChild(button_1, {
				"top": "475px",
				"left": "10px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpDataImp");
			group_2.visible = false;
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_2 = new cpr.controls.Output("optLink");
				output_2.value = "링크";
				container.addChild(output_2, {
					"top": "30px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optFile");
				output_3.value = "첨부파일";
				container.addChild(output_3, {
					"top": "55px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optLinkContent");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toDataMap(app.lookup("dmRow"), "LINK_URL");
				container.addChild(output_4, {
					"top": "30px",
					"left": "70px",
					"width": "815px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optContent");
				output_5.value = "내용";
				container.addChild(output_5, {
					"top": "80px",
					"left": "5px",
					"width": "60px",
					"height": "350px"
				});
				var button_2 = new cpr.controls.Button("btnFileDownLoad");
				button_2.value = "다운로드";
				if(typeof onBtnFileDownLoadClick == "function") {
					button_2.addEventListener("click", onBtnFileDownLoadClick);
				}
				container.addChild(button_2, {
					"top": "55px",
					"left": "70px",
					"width": "80px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optFileCnt");
				output_6.value = "";
				output_6.style.css({
					"text-align" : "right"
				});
				output_6.bind("value").toDataMap(app.lookup("dmRow"), "FILE_CNT");
				container.addChild(output_6, {
					"top": "55px",
					"left": "260px",
					"width": "50px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optFileCnt");
				output_7.value = "첨부파일 개수";
				container.addChild(output_7, {
					"top": "55px",
					"left": "155px",
					"width": "100px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optTitle");
				output_8.value = "제목";
				container.addChild(output_8, {
					"top": "5px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optTitleContent");
				output_9.value = "";
				output_9.style.setClasses(["require"]);
				output_9.bind("value").toDataMap(app.lookup("dmRow"), "TITLE");
				container.addChild(output_9, {
					"top": "5px",
					"left": "70px",
					"width": "730px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("grpDataImpContent");
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var hTMLObject_1 = new cpr.controls.HTMLObject("hojContent");
					container.addChild(hTMLObject_1, {
						"top": "1px",
						"left": "1px",
						"width": "811px",
						"height": "347px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "80px",
					"left": "70px",
					"width": "815px",
					"height": "350px"
				});
				var output_10 = new cpr.controls.Output("optFileSerialNo");
				output_10.visible = false;
				output_10.value = "";
				output_10.bind("value").toDataMap(app.lookup("dmRow"), "FILE_SERIAL_NO");
				container.addChild(output_10, {
					"top": "55px",
					"left": "800px",
					"width": "50px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optSeq");
				output_11.visible = false;
				output_11.value = "";
				output_11.bind("value").toDataMap(app.lookup("dmRow"), "SEQ");
				container.addChild(output_11, {
					"top": "55px",
					"left": "690px",
					"width": "50px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optAnncFundNm");
				output_12.visible = false;
				output_12.value = "";
				output_12.bind("value").toDataMap(app.lookup("dmRow"), "ANNC_FUND_NM");
				container.addChild(output_12, {
					"top": "55px",
					"left": "745px",
					"width": "50px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnList");
				button_3.value = "목록보기";
				if(typeof onBtnListClick == "function") {
					button_3.addEventListener("click", onBtnListClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "805px",
					"width": "80px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "890px",
				"height": "435px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaFile");
			cpr.core.App.load("app/imp/impFileUtil", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "501px",
				"left": "30px",
				"width": "95px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "공지사항";
	cpr.core.Platform.INSTANCE.register(app);
})();
