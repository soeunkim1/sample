/*
 * App URI: app/cmn/stdCmnPOuterUserSch
 * Source Location: app/cmn/stdCmnPOuterUserSch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPOuterUserSch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			/******************************************************************************
			 * 부모 페이지에서 받아온 기본값을 받는 객체
			 * 내부적으로 Result라는 객체를 가지고 있으며, 부모에 넘겨줄 결과값을 저장
			 * @member moStdCmnPOuterUserSch
			 ******************************************************************************/	
			//var moStdCmnPOuterUserSch = {
			//	// 팝업 작동 내부사용
			//	controlId : "",
			//	openedByChange : false,
			//	strUserId		: "", 		//사용자ID 
			//	strUserNm		: "",		//사용자명
			//	
			//	// 선택열 결과 리턴
			//	result : {
			//		OTS_ID : "",
			//		SSN : "",
			//		KOR_NM : "",
			//		ENG_NM : "",
			//		CHA_NM : "",
			//		GENDER_RCD : "",
			//		BIRTHDAY : "",
			//		LNR_SLR_DIV_RCD : "",
			//		EMAIL : "",
			//		CLP_NO : "",
			//		ZIPCODE : "",
			//		ZIPSEQ : "",
			//		ADDR1 : "",
			//		ADDR2 : "",
			//		HOME_TEL_NO : "",
			//		NAT_RCD : ""
			//	}
			//};
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				// app headr - initSearchBox()
				//리피트 초기 설정
			//	ExtRepeat.init(["rptCmnPartyOutside"]);
				//검색조건 초기 설정
			//	ExtGroup.initSearchBox("grpSearch", "grpData");
								
				//서브미션 실행 (실패시 cover page)
				util.Submit.send(app, "subOnLoad", function(pbSuccess){
					if(pbSuccess){
						// 사용자ID 컨트롤 포커스
			//			util.Control.setFocus("ipbUserId");			
						
						//부모창에서 전달한 값을 받는다.
						doParentGet();
						
						var initValue = app.getHostProperty("initValue"); 
						// 조건값이 둘 중 하나만 있어도 바로 자동 조회를 한다.
						if (app.lookup("ipbUserId").value != "" || app.lookup("ipbUserNm").value != "") {
							/**@type cpr.controls.Button*/
							var vcBtnSearch = app.lookup("btnSearch");
							vcBtnSearch.click();
						}
					}
				},true);
			}
			
			/**
			 * 호출한 페이지에서 파라미터 받기
			 */
			function doParentGet() {
				// 호출한 페이지에서 파라미터 받기.													
			//	var voStdCmnPOuterUserSch =  ExtPopUp.getParentVal("moStdCmnPOuterUserSch");
				var voStdCmnPOuterUserSch = app.getHostProperty("initValue");
						
			//	// 파라미터  값복사 (deep copy)
			//	for (var key in voStdCmnPOuterUserSch) {
			//		if (key == "result") {
			//			// 결과 값은 복사하지 않음.
			//			continue;
			//		}
			//		moStdCmnPOuterUserSch [key] = voStdCmnPOuterUserSch [key];
			//	}
				// 팝업이 뜬후에는 false로 고침.
			//	voStdCmnPOuterUserSch.openedByChange = false;
				
				// 파라미터 받아서 초기 검색조건 세팅.
			//	var voParam = moStdCmnPOuterUserSch;
				var voParam = voStdCmnPOuterUserSch;
				
				// 사용자ID
				if (voParam.strUserId) {
					util.Control.setValue(app, app, "ipbUserId", voParam.strUserId);
				}
				
				// 사용자명
				if (voParam.strUserNm) {
					util.Control.setValue(app, app, "ipbUserNm", voParam.strUserNm);
				}
			}
			
			/**
			 * 조회버튼 이벤트(외부인 목록을 조회한다.)
			 * @param poCallBackFunc 콜백함수
			 */
			function doList(poCallBackFunc) {			
				// 조회 서브미션 호출
				util.Submit.send(app, "subList", function(pbSuccess){		
					if(pbSuccess){
						// 사용자목록
						util.Control.redraw(app, "grdCmnPartyOutside"); 
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
					}
				}, true);
			}
			
			/**
			 * @desc  doCloseOk (선택닫기 이벤트시 호출) 	
			 * @return void 
			 * @author Kim Bora 2015. 11. 27.
			 */
			function doCloseOk() {
				var vsSelectIndxs = util.Grid.getCheckOrSelectedRowIndex(app, "grdCmnPartyOutside");
				
				if(ValueUtil.isNull(vsSelectIndxs)){
					//선택된 데이터가 없습니다.
					util.Msg.warn("M008");
					return false;
				}
			
			//	var voResult = moStdCmnPOuterUserSch.result;
				var voResult = app.lookup("grdCmnPartyOutside").getSelectedRow().getRowData();
				
			//	var vnIdx = ExtRepeat.getIndex("rptCmnPartyOutside");
			//	
			//	voResult.OTS_ID = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptOtsId", vnIdx);                 // 외부인ID
			//    voResult.SSN = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptSsn", vnIdx);                       // 사회보장번호
			//	voResult.KOR_NM = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptKorNm", vnIdx);            // 한글명
			//	voResult.ENG_NM = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptEngNm", vnIdx);           // 영문명 
			//	voResult.CHA_NM = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptChaNm", vnIdx);           // 한자명
			//	voResult.GENDER_RCD = ExtRepeat.getValue("rptCmnPartyOutside", "rdCbbGenderRcd", vnIdx);   // 성별코드
			//	voResult.BIRTHDAY = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptBirthday", vnIdx);       // 생년월일
			//	voResult.LNR_SLR_DIV_RCD = ExtRepeat.getValue("rptCmnPartyOutside", "rdCbbLnrSlrDivRcd", vnIdx);   // 음양력구분코드
			//	voResult.EMAIL = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptEmail", vnIdx);       // 이메일
			//	voResult.CLP_NO = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptClpNo", vnIdx);   // 휴대전화번호
			//	voResult.ZIPCODE = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptZipcode", vnIdx);   // 우편번호
			//	voResult.ZIPSEQ = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptZipSeq", vnIdx);   // 우편번호일련번호
			//	voResult.ADDR1 = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptAddr1", vnIdx);      // 주소1
			//	voResult.ADDR2 = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptAddr2", vnIdx);      // 주소2
			//	voResult.HOME_TEL_NO = ExtRepeat.getValue("rptCmnPartyOutside", "rdOptHomeTelNo", vnIdx);   // 자택전화번호
			//	voResult.NAT_RCD = ExtRepeat.getValue("rptCmnPartyOutside", "rdCbbNatRcd", vnIdx);   // 국가코드
				
				// 팝업닫기 후 콜백메소드호출
			//	ExtPopUp.closeLayeredPopup("callbackStdCmnPOuterUserSch", moStdCmnPOuterUserSch);
				app.setHostProperty("returnValue", voResult);
				app.close();
			}	
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode ==  cpr.events.KeyCode.ENTER){		
					var vcBtnSearch = app.lookup("btnSearch");
					vcBtnSearch.click();
				}
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				doList(function(pbSuccess) {
					if (pbSuccess) 
						util.Msg.notify(app, "NLS-INF-M024");
				});
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCloseClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnClose = e.control;
				app.close();
			}
			
			/*
			 * "" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnCloseOkClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnCloseOk = e.control;
				doCloseOk();
			}
			
			
			/*
			 * 그리드에서 row-dblclick 이벤트 발생 시 호출.
			 * detail이 row를 더블클릭 한 경우 발생하는 이벤트.
			 */
			function onGrdCmnPartyOutsideRowDblclick(/* cpr.events.CGridEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnPartyOutside = e.control;
				doCloseOk();
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsGenderRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsLnrSlrDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsNatRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnPartyOutside");
			dataSet_4.parseData({
				"info": "CMN_PARTY_OUTSIDE@EXPT_REJ_ID",
				"columns": [
					{"name": "OTS_ID"},
					{"name": "SSN"},
					{"name": "KOR_NM"},
					{"name": "ENG_NM"},
					{"name": "CHA_NM"},
					{"name": "GENDER_RCD"},
					{"name": "BIRTHDAY"},
					{"name": "LNR_SLR_DIV_RCD"},
					{"name": "EMAIL"},
					{"name": "CLP_NO"},
					{"name": "ADDR1"},
					{"name": "ZIPCODE"},
					{"name": "ZIPSEQ"},
					{"name": "ADDR2"},
					{"name": "HOME_TEL_NO"},
					{"name": "NAT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnOuterUserSch/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnOuterUserSch/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "620px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optUserId");
				output_1.value = "사용자ID";
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbUserId");
				inputBox_1.bind("fieldLabel").toExpression("#optUserId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserId");
				if(typeof onIpbUserIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbUserIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "120px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optUserNm");
				output_2.value = "사용자명";
				container.addChild(output_2, {
					"top": "5px",
					"left": "240px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbUserNm");
				inputBox_2.bind("fieldLabel").toExpression("#optUserNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
				if(typeof onIpbUserNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbUserNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "345px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "685px",
				"height": "32px"
			});
			
			var button_2 = new cpr.controls.Button("btnClose");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseClick == "function") {
				button_2.addEventListener("click", onBtnCloseClick);
			}
			container.addChild(button_2, {
				"top": "377px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseOk");
			button_3.value = "";
			button_3.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_3.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_3, {
				"top": "377px",
				"left": "630px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "245px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnPartyOutside");
				grid_1.init({
					"dataSet": app.lookup("dsCmnPartyOutside"),
					"columns": [
						{"width": "40px"},
						{"width": "68px"},
						{"width": "96px"},
						{"width": "81px"},
						{"width": "72px"},
						{"width": "74px"},
						{"width": "52px"},
						{"width": "85px"},
						{"width": "62px"},
						{"width": "101px"},
						{"width": "100px"},
						{"width": "85px"},
						{"width": "81px"},
						{"width": "179px"},
						{"width": "102px"},
						{"width": "66px"},
						{"width": "92px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "외부인ID";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "사회보장번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "한글명";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "영문명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "한자명";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "성별";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "생년월일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "양[음]력";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "E-Mail";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "휴대전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "우편번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "주소";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "상세주소";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "자택전화번호";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "국가";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "우편일련번호";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "OTS_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "KOR_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ENG_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CHA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GENDER_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbGenderRcd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsGenderRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("GENDER_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "BIRTHDAY";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptBirthday");
										output_3.dataType = "date";
										output_3.format = "YYYY-MM-DD";
										output_3.bind("value").toDataColumn("BIRTHDAY");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "LNR_SLR_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbLnrSlrDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsLnrSlrDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("LNR_SLR_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EMAIL";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CLP_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "ZIPCODE";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ADDR1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ADDR2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "HOME_TEL_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "NAT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbNatRcd");
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsNatRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("NAT_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "ZIPSEQ";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnPartyOutsideRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdCmnPartyOutsideRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "675px",
					"height": "265px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "685px",
				"height": "300px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "외부인검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
