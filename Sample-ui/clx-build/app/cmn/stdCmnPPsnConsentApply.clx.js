/*
 * App URI: app/cmn/stdCmnPPsnConsentApply
 * Source Location: app/cmn/stdCmnPPsnConsentApply.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPPsnConsentApply", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnPPsnConsentApply.xtm"/>
			
			var stdCmnPPsnConsentApply = function() {
					
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				
				
				moPage.onModelConstructDone_StdCmnPPsnConsentApply = function() {
					//서브미션 실행 (실패시 cover page)
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
								
							util.Control.redraw(app, "frfCmnPsnConsent");
									
						}
					}, true);
				};
				
				
				function doSave(poCallBackFunc) {
					
					var vnCnt = util.Grid.getRowCount(app, "frfCmnPsnConsent");
					
					for (var i = 1 ; i <= vnCnt ; i++){
						
						var vsContYn = util.Grid.getCellValue(app, "frfCmnPsnConsent",  "CONSENT_YN", i);
						
						if(vsContYn != "Y"){
									
							var vsItemNm = util.Grid.getCellValue(app, "frfCmnPsnConsent",  "ITEM_NM", i);
							util.Msg.alert("NLS-CMM-M045", [vsItemNm]);
							return false;
						}
					}
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							if(Common.findMainWindow().coverViewPrivateConsent){
								Common.findMainWindow().coverViewPrivateConsent(false);
							}
						}
					});
				}
			
				
				moPage.onValueChanged_CkbAll = function() {
					var vsChkValue = ExtControl.getTextValue("ckbAll");
					
					var vnCnt = util.Grid.getRowCount(app, "frfCmnPsnConsent");
					
					for (var i = 0 ; i <= vnCnt ; i++){
						if(vsChkValue == "Y")
							util.Grid.setCellValue(app, "frfCmnPsnConsent",  "CONSENT_YN", "Y", i + 1);
						else util.Grid.setCellValue(app, "frfCmnPsnConsent",  "CONSENT_YN", "", i + 1);
					}
				
				}
				
				moPage.onClick_BtnSave = function() {
					doSave();
				}
				
				moPage.onClick_BtnPrivacyTable = function() {
					var leftPos = (screen.availWidth - 690)/2;
					var topPos = (screen.availHeight - 710)/3;
					window.open("/privacyStandardSheet.html", "PRIVACY_SHEET", "top="+topPos+",left="+leftPos+",width=689,height=710,scroll=no,status=no,resizable=no");
				}
				
				
				moPage.onClick_BtnClose = function() {
					if(Common.findMainWindow().coverViewPrivateConsent){
						Common.findMainWindow().coverViewPrivateConsent(false);
					} 
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsFrfCmnPsnConsent");
			dataSet_1.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "ITEM_DIV_RCD"},
					{"name": "ITEM_NO"},
					{"name": "CONSENT_YN"},
					{"name": "ITEM_NM"},
					{"name": "CONSENT_DIV_RCD"},
					{"name": "COLLECT_CONT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsConDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserId",
						"dataType": "string"
					},
					{
						"name": "strUserNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strCheckAllYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/cmn/StdCmnPsnConsentApply/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/cmn/StdCmnPsnConsentApply/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_1);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCmnPsnConsent");
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var textArea_1 = new cpr.controls.TextArea("txtFrfCont");
					textArea_1.readOnly = true;
					textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "COLLECT_CONT");
					container.addChild(textArea_1, {
						"top": "30px",
						"left": "5px",
						"width": "655px",
						"height": "160px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfConDivRcd");
					comboBox_1.enabled = false;
					comboBox_1.hideButton = true;
					comboBox_1.bind("value").toDataMap(app.lookup("dmRow"), "CONSENT_DIV_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsConDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "585px",
						"width": "60px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("ckbFrfConsentYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "";
					checkBox_1.userAttr({"require": "Y"});
					checkBox_1.style.css({
						"text-align" : "center"
					});
					checkBox_1.bind("fieldLabel").toExpression("#optFrfItemNm.value");
					checkBox_1.bind("value").toDataMap(app.lookup("dmRow"), "CONSENT_YN");
					container.addChild(checkBox_1, {
						"top": "5px",
						"left": "630px",
						"width": "20px",
						"height": "25px"
					});
					var output_1 = new cpr.controls.Output("optFrfItemNm");
					output_1.value = "";
					output_1.bind("value").toDataMap(app.lookup("dmRow"), "ITEM_NM");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "355px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "140px",
					"left": "15px",
					"width": "675px",
					"height": "435px"
				});
				var output_2 = new cpr.controls.Output("optMsg");
				output_2.value = "시스템 사용에 대한 업무협조와 각 사이트 로그인 정보제공에 관해 동의를 받아야 합니다.\n관련 업무부분의 '개인정보 수집ㆍ이용' 에 대한 안내를 반드시 읽고 동의해 주세요.\n동의를 하지 않더라도 저장버튼을 한번 클릭하셔야 다시 뜨지 않습니다.";
				container.addChild(output_2, {
					"top": "45px",
					"left": "15px",
					"width": "675px",
					"height": "70px"
				});
				var button_1 = new cpr.controls.Button("btnPrivacyTable");
				button_1.value = "개인정보파일 보유기간 책정 기준표";
				if(typeof onBtnPrivacyTableClick == "function") {
					button_1.addEventListener("click", onBtnPrivacyTableClick);
				}
				container.addChild(button_1, {
					"top": "15px",
					"left": "420px",
					"width": "270px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSave");
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_2.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_2, {
					"top": "115px",
					"left": "627px",
					"width": "60px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbAll");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "전체동의";
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strCheckAllYn");
				if(typeof onCkbAllValueChange == "function") {
					checkBox_2.addEventListener("value-change", onCkbAllValueChange);
				}
				container.addChild(checkBox_2, {
					"top": "115px",
					"left": "532px",
					"width": "80px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnClose");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
				if(typeof onBtnCloseClick == "function") {
					button_3.addEventListener("click", onBtnCloseClick);
				}
				container.addChild(button_3, {
					"top": "585px",
					"left": "630px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optBottomMsg");
				output_3.value = "* 수집한 개인정보는 정보주체의 동의 없이 수집한 목적 외로 사용하거나 제 3자에게 제공되지 않습니다.";
				container.addChild(output_3, {
					"top": "585px",
					"left": "15px",
					"width": "575px",
					"height": "25px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("");
				container.addChild(userDefinedControl_1, {
					"top": "15px",
					"left": "15px",
					"width": "300px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "-5px",
				"left": "-5px",
				"width": "700px",
				"height": "615px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "개인정보동의팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
