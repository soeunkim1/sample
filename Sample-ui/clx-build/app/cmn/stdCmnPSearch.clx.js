/*
 * App URI: app/cmn/stdCmnPSearch
 * Source Location: app/cmn/stdCmnPSearch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnPSearch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataMap_1 = new cpr.data.DataMap("dmList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "column",
						"dataType": "string"
					},
					{
						"name": "sorttype",
						"dataType": "string"
					},
					{
						"name": "sortorder",
						"dataType": "string"
					},
					{
						"name": "andor",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("group1");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var comboBox_1 = new cpr.controls.ComboBox("cbbFind");
				comboBox_1.bind("value").toDataMap(app.lookup("dmList"), "column");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsTempLSortList"), {
						"label": "name",
						"value": "column"
					});
				})(comboBox_1);
				if(typeof onCbbFindSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbFindSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "35px",
					"left": "106px",
					"width": "95px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optPagePgTitle");
				output_1.value = "찾기";
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "225px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optData");
				output_2.value = "찾을 데이터";
				output_2.style.setClasses(["require"]);
				container.addChild(output_2, {
					"top": "35px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbData");
				if(typeof onIpbDataValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDataValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "35px",
					"left": "205px",
					"width": "145px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSearchCond");
				output_3.value = "찾을 조건";
				output_3.style.setClasses(["require"]);
				container.addChild(output_3, {
					"top": "60px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbSearchCond");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("일치", "=="));
					radioButton_1.addItem(new cpr.controls.Item("포함", "like"));
				})(radioButton_1);
				if(typeof onRdbSearchCondValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbSearchCondValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "60px",
					"left": "105px",
					"width": "245px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "닫기";
				button_1.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "85px",
					"left": "290px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnFind");
				button_2.value = "찾기";
				if(typeof onBtnFindClick == "function") {
					button_2.addEventListener("click", onBtnFindClick);
				}
				container.addChild(button_2, {
					"top": "85px",
					"left": "225px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "5px",
				"left": "5px",
				"width": "355px",
				"height": "115px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "Untitled";
	cpr.core.Platform.INSTANCE.register(app);
})();
