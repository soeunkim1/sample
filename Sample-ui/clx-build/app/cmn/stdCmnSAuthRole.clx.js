/*
 * App URI: app/cmn/stdCmnSAuthRole
 * Source Location: app/cmn/stdCmnSAuthRole.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnSAuthRole", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCmnSAuthRole.xtm"/>
			
			var stdCmnSAuthRole = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author xxxx at 2016.10.07
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
			
							
				/**
				 * @desc 
				 * @return 
				 * @author xxxx 2016.10.07
				 */
				moPage.onModelConstructDone_stdCmnSAuthRole = function() {
					
					//검색조건 초기 설정
					//ExtGroup.initSearchBox("grpSearch", ["grpData"], ["impStdApsStructure"]);
					
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCmnUsrOperGrpUse", "rptCmnOperMenu","rptCmnMenu", "rptCmnMenuOper","rptCmnMenuUser"]);
					
					//트리 크기 설정
					impTreeNodeApplyStyleAttr("width", "240");
					impTreeNodeApplyStyleAttr("height", "563");
					
					
					var vcTrv = model.getControl("trvImpMst");
						vcTrv.on("DOMActivate", function(e){
								var vsSelValue = util.Tree.getSelectedValue(app, "trvImpMst");
								moPage.trvClickEvent(vsSelValue);
						});
						
						
						vcTrv.on("itemexpanding", function(e){
								
					//			ExtRepeat.reset(["rptCmnUsrOperGrpUse", "rptCmnOperMenu"]);
								
						});
					
					
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
						
							var vsKeyDate = util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate");
								
							impStdApsStructureList(moPageInfo.authRngRcd, vsKeyDate, true, true, false, moUserInfo.asgnDeptDivRcd, moUserInfo.asgnDeptCd, function(pbTrvSuccess){
								if(pbTrvSuccess){
									ExtTreeView.setExpandItem(getImpStdApsStructureTrvId(), true, model.getControl(getImpStdApsStructureTrvId()).getTreeList().get(0));
								}
							});
							
							
							util.Control.redraw(app, ["cbbUnitSystemRcd","rptCmnMenu"]);
							
							
							
							
						}
					}, true);
				};
			
			
			
				function doTabChange(psCaseId) {
					
						var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
							
							// 현재 선택된 탭의 상태 체크
							switch (vsSelTabId) {
			
								case "tpcAuth" : {
									
									
									break;
								}
								
								case "tpcDept" : {
									
									
									break;
								}
								
							}
							
							// 탭변경
							util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
							
							//탭변경 후 처리 로직
							switch (psCaseId) {
			
								case "tpcAuth" : {
									
									
									break;
								}
			
								case "tpcDept" : {
									
									break;
								}
							}
					
				}
			
			
			
			
			
			
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2016.10.07
				 */
				function doList(poCallBackFunc) {
			
				}
			
				/**
				 * @desc 
				 * @param 
				 * @return 
				 * @author xxxx 2016.10.07
				 */
				function doSave() {
			
				}
			
			
			
				
				moPage.onClick_TabBtnStudInfo = function() {
					doTabChange("tpcAuth");
				};
				
				
				moPage.onClick_TabBtnDept = function() {
					doTabChange("tpcDept");
				};
				
				
				moPage.onClick_BtnExpend = function() {
					util.Tree.expandAllItems(app, "trvImpMst",true,null);//treeView전체목록 보여준다
				};
				
				
				
				moPage.trvClickEvent = function(){
					var vsSelValue = util.Tree.getSelectedValue(app, "trvImpMst");
					
				
					var vsValueType = vsSelValue.substring(0, 9);
					
					if (vsValueType == "CC009PRSN") {
						var vsStaffNo = vsSelValue.substr(9, vsSelValue.length - 9);
						
						moPage.getUsrOperGrp(vsStaffNo);
						
						
					}else{
						util.Control.reset(app, ["rptCmnUsrOperGrpUse", "rptCmnOperMenu"]);
						
					}
					
					
			//		else if(vsValueType == "CC009OG10"){
			//			
			//		}
			//		
				}
				
				
				
					
					
				
				
				
			//	moPage.onValueChanged_IpbUserNm = function() {
			//		
			//	};
				
				
				
				moPage.getUsrOperGrp = function(psStaffNo, poCallBackFunc){
					
							
					util.DataMap.setValue(app, "dmReqList", "strStaffNo" , psStaffNo);
					
					
					//strCommand: listUsrOperGrp 
					util.Submit.send(app, "subListUsrOperGrp", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCmnUsrOperGrpUse");
							
							if( util.Grid.getRowCount(app, "grdCmnUsrOperGrpUse") < 1){
								util.Control.reset(app, "rptCmnOperMenu");
							}
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
					
				};
				
				
				
				
				moPage.onRowSelect_RptCmnUsrOperGrpUse = function() {
					moPage.getCmnOperMenu();
				};
				
				moPage.getCmnOperMenu = function(poCallBackFunc){
					
					
					
					util.DataMap.setValue(app, "dmRoot", "reqList", "strOprtRoleId", util.Grid.getCellValue(app, "grdCmnUsrOperGrpUse","OPRT_ROLE_ID"));
					//ExtInstance.setValue("/root/reqListOperMenu", "strLanDivRcd", vsLanDivRcd);
					
					
					//strCommand: listOperMenu 
					util.Submit.send(app, "subListOperMenu", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCmnOperMenu");
							
										
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
							
							
					
				};
				
				
				moPage.getCmnMenuOper = function(poCallBackFunc){
					
					
					
					util.DataMap.setValue(app, "dmRoot", "reqList", "strMenuId", util.Grid.getCellValue(app, "grdCmnMenu","MENU_ID"));
							
					//strCommand: listMenuOper 
					util.Submit.send(app, "subListMenuOper", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCmnMenuOper");
					
						
						}
					});
							
							
					
				};
				
				moPage.getCmnMenuUser = function(){
					
					
					
					util.DataMap.setValue(app, "dmRoot", "reqList", "strOprtRoldIdMenu", util.Grid.getCellValue(app, "grdCmnMenuOper","OPRT_ROLE_ID"));
							
					//strCommand: listMenuOperUser 
					util.Submit.send(app, "subListMenuOperUser", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCmnMenuUser");
					
							
						}
					});
							
							
					
				};
				
				
				moPage.getOperGrpText = function(){
					
					var vsFilterNm = ExtInput.getText("ipbOperNm"); // 검색어
					var vcRpt = model.getControl("rptCmnUsrOperGrpUse");
					
					vcRpt.filterRemoveAll(); // 기존 필터 제거
					vcRpt.setFilter("OPRT_ROLE_ID", "like", vsFilterNm, false);
					vcRpt.setFilter("OPRT_ROLE_NM", "like", vsFilterNm, false);
					vcRpt.filter(true);
				}
				
				
				moPage.getMenuOperText = function(){
					
					var vsFilterNm1 = ExtInput.getText("ipbMenu"); // 검색어
					
					var vsFilterNm2 = ExtInput.getText("ipbUnitSystem"); // 검색어
					
					var vcRpt = model.getControl("rptCmnMenu");
							
					vcRpt.filterRemoveAll(); // 기존 필터 제거
					vcRpt.setFilter("MENU_NM", "like", vsFilterNm1, false);
					vcRpt.setFilter("MENU_ID", "like", vsFilterNm1, false);
					
					
					//vcRpt.setFilter("UNIT_SYSTEM_RCD_NM", "like", vsFilterNm2, false);
					vcRpt.filter(true);
				};
				
				
				
				moPage.getMenuText = function(){
					
					var vsFilterNm = ExtInput.getText("ipbMenuNm"); // 검색어
					var vcRpt = model.getControl("rptCmnOperMenu");
					
					vcRpt.filterRemoveAll(); // 기존 필터 제거
					vcRpt.setFilter("MENU_ID", "like", vsFilterNm, false);
					vcRpt.setFilter("MENU_NM", "like", vsFilterNm, false);
					vcRpt.filter(true);
				}
				
				moPage.onClick_BtnSearchPgm = function() {
					moPage.getOperGrpText();
				};
				
				
				moPage.onKeyDown_IpbOperNm = function(strKeyType, strKeyStatus) {
					if(strKeyType == 13) { ExtModel.dispatch("btnSearchOper", "DOMActivate");  }
				};
				
				moPage.onKeyDown_IpbMenu = function(strKeyType, strKeyStatus) {
					if(strKeyType == 13) { ExtModel.dispatch("btnSearchMe", "DOMActivate");  }
				}
				
				moPage.onClick_BtnSearchMenu = function() {
					moPage.getMenuText();
				}
				
				
			
				
				
				moPage.onRowSelect_RptCmnMenu = function() {
					moPage.getCmnMenuOper();
				};
				
				
			
				
				
				moPage.onKeyDown_IpbMenu = function(strKeyType, strKeyStatus) {
					if(strKeyType == 13) { ExtModel.dispatch("btnSearchMe", "DOMActivate");  }
				}
				
			
				
				
				
				moPage.onClick_BtnSearchMe = function() {
					
					//strCommand: listMenu 
					util.Submit.send(app, "subListMenu", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdCmnMenu");
							
							
							if ( util.Grid.getRowCount(app, "grdCmnMenu") < 1 ) util.Control.reset(app, ["grdCmnMenuOper","grdCmnMenuUser"]);
					
							
						}
					});
				};
				
				
				moPage.onValueChanged_CbbUnitSystemRcd = function() {
					ExtModel.dispatch("btnSearchMe", "DOMActivate");
				};
				
				
				moPage.onKeyDown_IpbUserNm = function(strKeyType, strKeyStatus) {
					if(strKeyType == 13){
					
						var vsUserNm      = ExtControl.getTextValue("ipbUserNm");
								
						if(vsUserNm !="")
						{
							//펼쳐진 트리 모두 감추기
							util.Tree.expandAllItems(app, "trvImpMst",false);
						
							var vcTrv = model.getControl("trvImpMst");
							
					        var voRtn =  vcTrv.getRoot().findItemFromLabel(vsUserNm);
					
							if(ValueUtil.isNull(voRtn)){
								
								util.Control.reset(app, ["rptCmnUsrOperGrpUse", "rptCmnOperMenu"]);
								vcTrv.setValue("");
					
								
							}else{
								//메뉴명 으로 검색
								ExtTreeView.findItemValue("trvImpMst", vsUserNm, "LABEL",  true);
								moPage.trvClickEvent();
							}		
						}
					}
				};
				
				
				moPage.onRowSelect_RptCmnMenuOper = function() {
					moPage.getCmnMenuUser();
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsUnitSystemRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnUsrOperGrpUse");
			dataSet_2.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_TGT_RCD"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "DIV_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnOperMenu");
			dataSet_3.parseData({
				"columns": [
					{"name": "OPRT_ROLE_ID"},
					{"name": "MENU_ID"},
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "MENU_AUTH_DIV_RCD"},
					{"name": "AUTH_RNG_RCD"},
					{"name": "MENU_NM"},
					{"name": "PGM_NM"},
					{"name": "ACCT_UNIT_RCD"},
					{"name": "MENU_AUTH_DIV_RCD_NM"},
					{"name": "AUTH_RNG_RCD_NM"},
					{"name": "MENU_PATH"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnMenu");
			dataSet_4.parseData({
				"columns": [
					{"name": "MENU_ID"},
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UMENU_ID"},
					{"name": "UPGM_ID"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "MENU_NM"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "MENU_LVL"},
					{"name": "PRT_ORD"},
					{"name": "USE_YN"},
					{"name": "MENU_YN"},
					{"name": "SHOW_YN"},
					{"name": "UMENU_NM"},
					{"name": "UNIT_SYSTEM_RCD_NM"},
					{"name": "MID_MENU_NM"},
					{"name": "MENU_PATH"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnMenuOper");
			dataSet_5.parseData({
				"columns": [
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "BASE_AUTH_YN"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCmnMenuUser");
			dataSet_6.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "OPRT_ROLE_ID"},
					{"name": "OPRT_ROLE_NM"},
					{"name": "ASGN_DEPT_NM"},
					{"name": "ID"},
					{"name": "USER_NM"},
					{"name": "USER_TGT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmRoot");
			dataMap_2.parseData({
				"columns" : [{
					"name": "rptPanel",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strStaffNo",
						"dataType": "string"
					},
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strMenuId",
						"dataType": "string"
					},
					{
						"name": "strMenuNm",
						"dataType": "string"
					},
					{
						"name": "strUnitSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strOprtRoldIdMenu",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnAuthRole/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListMenu");
			submission_2.action = "/cmn/StdCmnAuthRole/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListMenuOperUser");
			submission_3.action = "/cmn/StdCmnAuthRole/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListUsrOperGrp");
			submission_4.action = "/cmn/StdCmnAuthRole/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_2, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListOperMenu");
			submission_5.action = "/cmn/StdCmnAuthRole/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_3);
			submission_5.addResponseData(dataSet_3, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListMenuOper");
			submission_6.action = "/cmn/StdCmnAuthRole/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_3);
			submission_6.addResponseData(dataSet_5, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tpcAuth";
					var group_2 = new cpr.controls.Container("grptpcAuth");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdApsStructure");
						cpr.core.App.load("app/aps/impStdApsStructure", function(app) {
							if(app){
								embeddedApp_1.app = app;
							}
						});
						container.addChild(embeddedApp_1, {
							"top": "30px",
							"left": "0px",
							"width": "250px",
							"height": "565px"
						});
						var button_1 = new cpr.controls.Button("btnExpend");
						button_1.value = "";
						if(typeof onBtnExpendClick == "function") {
							button_1.addEventListener("click", onBtnExpendClick);
						}
						container.addChild(button_1, {
							"top": "8px",
							"left": "225px",
							"width": "20px",
							"height": "18px"
						});
						var output_1 = new cpr.controls.Output("optUserNm");
						output_1.value = "사용자명";
						container.addChild(output_1, {
							"top": "6px",
							"left": "8px",
							"width": "70px",
							"height": "25px"
						});
						var inputBox_1 = new cpr.controls.InputBox("ipbUserNm");
						inputBox_1.bind("fieldLabel").toExpression("#optUserNm.value");
						inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
						if(typeof onIpbUserNmKeydown == "function") {
							inputBox_1.addEventListener("keydown", onIpbUserNmKeydown);
						}
						container.addChild(inputBox_1, {
							"top": "6px",
							"left": "84px",
							"width": "115px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUsrOperGrpUse");
						grid_1.init({
							"dataSet": app.lookup("dsCmnUsrOperGrpUse"),
							"columns": [
								{"width": "40px"},
								{"width": "117px"},
								{"width": "140px"},
								{
									"width": "94px",
									"visible": false
								},
								{
									"width": "105px",
									"visible": false
								},
								{
									"width": "157px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-USETGT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-USER_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-USER_TGT_RCD");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "OPRT_ROLE_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "OPRT_ROLE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "DIV_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "USER_TGT_RCD";
										}
									}
								]
							}
						});
						if(typeof onGrdCmnUsrOperGrpUseSelectionChange == "function") {
							grid_1.addEventListener("selection-change", onGrdCmnUsrOperGrpUseSelectionChange);
						}
						container.addChild(grid_1, {
							"top": "31px",
							"left": "255px",
							"width": "315px",
							"height": "564px"
						});
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("UI-SCR-USEWRKROLST");
						container.addChild(userDefinedControl_2, {
							"top": "6px",
							"left": "255px",
							"width": "265px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnOperMenu");
						grid_2.init({
							"dataSet": app.lookup("dsCmnOperMenu"),
							"columns": [
								{"width": "40px"},
								{"width": "115px"},
								{"width": "329px"},
								{"width": "77px"},
								{"width": "80px"},
								{"width": "148px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-AUTHRNG");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-USEAUTH");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_ID");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "MENU_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MENU_PATH";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "AUTH_RNG_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "MENU_AUTH_DIV_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "MENU_NM";
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "30px",
							"left": "575px",
							"width": "632px",
							"height": "565px"
						});
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-WRKROLMNLST");
						container.addChild(userDefinedControl_3, {
							"top": "6px",
							"left": "576px",
							"width": "265px",
							"height": "25px"
						});
						var inputBox_2 = new cpr.controls.InputBox("ipbOperNm");
						inputBox_2.bind("fieldLabel").toExpression("#optUserNm.value");
						inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
						if(typeof onIpbOperNmKeydown == "function") {
							inputBox_2.addEventListener("keydown", onIpbOperNmKeydown);
						}
						container.addChild(inputBox_2, {
							"top": "6px",
							"left": "390px",
							"width": "115px",
							"height": "25px"
						});
						var button_2 = new cpr.controls.Button("btnSearchOper");
						button_2.value = "조회";
						button_2.style.setClasses(["btn-search"]);
						if(typeof onBtnSearchOperClick == "function") {
							button_2.addEventListener("click", onBtnSearchOperClick);
						}
						container.addChild(button_2, {
							"top": "6px",
							"left": "510px",
							"width": "60px",
							"height": "25px"
						});
						var button_3 = new cpr.controls.Button("btnSearchMenu");
						button_3.value = "조회";
						button_3.style.setClasses(["btn-search"]);
						if(typeof onBtnSearchMenuClick == "function") {
							button_3.addEventListener("click", onBtnSearchMenuClick);
						}
						container.addChild(button_3, {
							"top": "6px",
							"left": "849px",
							"width": "60px",
							"height": "25px"
						});
						var inputBox_3 = new cpr.controls.InputBox("ipbMenuNm");
						inputBox_3.bind("fieldLabel").toExpression("#optUserNm.value");
						inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strUserNm");
						if(typeof onIpbMenuNmKeydown == "function") {
							inputBox_3.addEventListener("keydown", onIpbMenuNmKeydown);
						}
						container.addChild(inputBox_3, {
							"top": "6px",
							"left": "729px",
							"width": "115px",
							"height": "25px"
						});
					})(group_2);
					tabItem_1.content = group_2;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tpcDept";
					var group_3 = new cpr.controls.Container("grptpcDept");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnMenu");
						grid_3.init({
							"dataSet": app.lookup("dsCmnMenu"),
							"columns": [
								{"width": "40px"},
								{"width": "82px"},
								{"width": "109px"},
								{"width": "131px"},
								{"width": "130px"},
								{"width": "309px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UNITSYSTEM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UPMENUNM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-MENU_ID");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_RCD_NM";
											cell.control = (function(){
												var inputBox_4 = new cpr.controls.InputBox("inputbox5");
												inputBox_4.enabled = false;
												inputBox_4.readOnly = true;
												inputBox_4.bind("value").toDataColumn("UNIT_SYSTEM_RCD_NM");
												return inputBox_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MID_MENU_NM";
											cell.control = (function(){
												var inputBox_5 = new cpr.controls.InputBox("inputbox4");
												inputBox_5.enabled = false;
												inputBox_5.readOnly = true;
												inputBox_5.bind("value").toDataColumn("MID_MENU_NM");
												return inputBox_5;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "MENU_NM";
											cell.control = (function(){
												var inputBox_6 = new cpr.controls.InputBox("inputbox3");
												inputBox_6.enabled = false;
												inputBox_6.readOnly = true;
												inputBox_6.bind("value").toDataColumn("MENU_NM");
												return inputBox_6;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "MENU_ID";
											cell.control = (function(){
												var inputBox_7 = new cpr.controls.InputBox("inputbox1");
												inputBox_7.enabled = false;
												inputBox_7.readOnly = true;
												inputBox_7.bind("value").toDataColumn("MENU_ID");
												return inputBox_7;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "MENU_PATH";
											cell.control = (function(){
												var inputBox_8 = new cpr.controls.InputBox("inputbox2");
												inputBox_8.enabled = false;
												inputBox_8.readOnly = true;
												inputBox_8.bind("value").toDataColumn("MENU_PATH");
												return inputBox_8;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdCmnMenuSelectionChange == "function") {
							grid_3.addEventListener("selection-change", onGrdCmnMenuSelectionChange);
						}
						container.addChild(grid_3, {
							"top": "30px",
							"left": "5px",
							"width": "816px",
							"height": "565px"
						});
						var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdCmnMenuOper");
						grid_4.init({
							"dataSet": app.lookup("dsCmnMenuOper"),
							"columns": [
								{"width": "40px"},
								{"width": "117px"},
								{"width": "205px"},
								{"width": "97px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-OPRT_ROLE_NM");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "OPRT_ROLE_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "OPRT_ROLE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "BASE_AUTH_YN";
											cell.control = (function(){
												var checkBox_1 = new cpr.controls.CheckBox("checkbox1");
												checkBox_1.enabled = false;
												checkBox_1.value = "";
												checkBox_1.trueValue = "Y";
												checkBox_1.falseValue = "";
												checkBox_1.text = "";
												checkBox_1.style.css({
													"text-align" : "center"
												});
												checkBox_1.bind("value").toDataColumn("BASE_AUTH_YN");
												return checkBox_1;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdCmnMenuOperSelectionChange == "function") {
							grid_4.addEventListener("selection-change", onGrdCmnMenuOperSelectionChange);
						}
						container.addChild(grid_4, {
							"top": "26px",
							"left": "833px",
							"width": "376px",
							"height": "207px"
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("UI-SCR-MENULST");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
						userDefinedControl_5.bind("title").toLanguage("UI-SCR-USEWRKROLST");
						container.addChild(userDefinedControl_5, {
							"top": "4px",
							"left": "833px",
							"width": "265px",
							"height": "25px"
						});
						var inputBox_9 = new cpr.controls.InputBox("ipbMenu");
						inputBox_9.bind("fieldLabel").toExpression("#optUserNm.value");
						inputBox_9.bind("value").toDataMap(app.lookup("dmReqList"), "strMenuNm");
						if(typeof onIpbMenuKeydown == "function") {
							inputBox_9.addEventListener("keydown", onIpbMenuKeydown);
						}
						container.addChild(inputBox_9, {
							"top": "5px",
							"left": "495px",
							"width": "115px",
							"height": "25px"
						});
						var button_4 = new cpr.controls.Button("btnSearchMe");
						button_4.value = "조회";
						button_4.style.setClasses(["btn-search"]);
						if(typeof onBtnSearchMeClick == "function") {
							button_4.addEventListener("click", onBtnSearchMeClick);
						}
						container.addChild(button_4, {
							"top": "6px",
							"left": "617px",
							"width": "60px",
							"height": "25px"
						});
						var output_2 = new cpr.controls.Output("optMenuDiv");
						output_2.value = "";
						output_2.bind("value").toLanguage("UI-SCR-MENUDIV");
						container.addChild(output_2, {
							"top": "5px",
							"left": "390px",
							"width": "100px",
							"height": "25px"
						});
						var output_3 = new cpr.controls.Output("optSystemDiv");
						output_3.value = "";
						output_3.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
						container.addChild(output_3, {
							"top": "6px",
							"left": "160px",
							"width": "100px",
							"height": "25px"
						});
						var comboBox_1 = new cpr.controls.ComboBox("cbbUnitSystemRcd");
						comboBox_1.bind("fieldLabel").toExpression("#optUnitSystemRcd.value");
						comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strUnitSystemRcd");
						(function(comboBox_1){
							comboBox_1.addItem(new cpr.controls.Item("전체", ""));
							comboBox_1.setItemSet(app.lookup("dsUnitSystemRcdList"), {
								"label": "CD_NM",
								"value": "CD"
							});
						})(comboBox_1);
						if(typeof onCbbUnitSystemRcdSelectionChange == "function") {
							comboBox_1.addEventListener("selection-change", onCbbUnitSystemRcdSelectionChange);
						}
						container.addChild(comboBox_1, {
							"top": "6px",
							"left": "265px",
							"width": "115px",
							"height": "25px"
						});
						var grid_5 = linker.grid_5 = new cpr.controls.Grid("grdCmnMenuUser");
						grid_5.init({
							"dataSet": app.lookup("dsCmnMenuUser"),
							"columns": [
								{"width": "40px"},
								{"width": "72px"},
								{"width": "94px"},
								{"width": "153px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-USER_ID");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-USER_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-ASGNDEPT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_NM";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ASGN_DEPT_NM";
										}
									}
								]
							}
						});
						container.addChild(grid_5, {
							"top": "270px",
							"left": "833px",
							"width": "376px",
							"height": "325px"
						});
						var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
						userDefinedControl_6.bind("title").toLanguage("UI-SCR-WRKROLUSERLIST");
						container.addChild(userDefinedControl_6, {
							"top": "245px",
							"left": "833px",
							"width": "315px",
							"height": "25px"
						});
					})(group_3);
					tabItem_2.content = group_3;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "35px",
					"left": "5px",
					"width": "1215px",
					"height": "600px"
				});
				var button_5 = new cpr.controls.Button("tabBtnAuth");
				button_5.value = "";
				button_5.bind("value").toLanguage("UI-SCR-STUDTINFO");
				if(typeof onTabBtnAuthClick == "function") {
					button_5.addEventListener("click", onTabBtnAuthClick);
				}
				container.addChild(button_5, {
					"top": "7px",
					"left": "10px",
					"width": "115px",
					"height": "28px"
				});
				var button_6 = new cpr.controls.Button("tabBtnDept");
				button_6.value = "";
				button_6.bind("value").toLanguage("UI-SCR-STUDREGFEEINFO");
				if(typeof onTabBtnDeptClick == "function") {
					button_6.addEventListener("click", onTabBtnDeptClick);
				}
				container.addChild(button_6, {
					"top": "7px",
					"left": "126px",
					"width": "115px",
					"height": "28px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "638px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
			linker.userDefinedControl_5.ctrl = linker.grid_4;
			linker.userDefinedControl_6.ctrl = linker.grid_5;
		}
	});
	app.title = "stdCmnSAuthRole";
	cpr.core.Platform.INSTANCE.register(app);
})();
