/*
 * App URI: app/cmn/stdCmnSLoginList
 * Source Location: app/cmn/stdCmnSLoginList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnSLoginList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnSLoginList.xtm"/>
			
			
			var stdCmnSLoginList = function() {
			
				var moPage = this;
				
				// 탭정의
				var TAB = {
					USER : "tpcUserCnnt",
					PGM : "tpcPgmCnnt",
					USE : "tpcUserUse",
					DOWN : "tpcDownCnnt"
				};
				
				// 탭버튼정의
				var TAB_BTN = {
					// 사용자별 접속현황
					tpcUserCnnt : "tabBtnUserCnnt", 
					// 프로그램별 접속현황  
					tpcPgmCnnt : "tabBtnPgmCnnt",
					// 사용자별 접속현황
					tpcUserUse : "tabBtnUserUse",
					
					tpcDownCnnt : "tabBtnDownCnnt"
				};
				
				/**
				 * @desc ModelConstructDone event
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doOnLoad() {
					// 1. 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCmnCnnt", "rptCmnUseCnnt", "rptCmnPgm", "rptCmnRecUser", "rptCmnUser", "rptUserPgm", "rptCmnDown"]);
					// 2. 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					// 3. 첫번째 탭버튼 선택
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.USER);
			
					// 4. 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							var vsStDt = util.DataMap.getValue(app, "dmResOnLoad", "strStDt");       // 기준 시작일자
							var vsEndDt = util.DataMap.getValue(app, "dmResOnLoad", "strEndDt"); // 기준 종료일자
							
							util.Control.setValue(app, "dipStDt", vsStDt);
							util.Control.setValue(app, "dipEndDt", vsEndDt);
							
								
							setTimeout(function(){
									util.Header.clickSearch(app);					
							}, 200);
						}
					}, true);
				}
				/**
				 * @desc 조회한다.
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doList(){
					
					
					// 선택된 탭아이디 
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					
					switch (vsSelTabId) {
						// 2-1. 사용자별접속현황
						case TAB.USER : {
							doListCnnt(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});	
							break;
						}
						// 2-2. 프로그램별 접속현황
						case TAB.PGM : {
							util.Control.setVisible(app, true, ["lblMenuId", "ipbMenuId"]);
							
							doListPgm(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});			
							break;
						}
						// 2-3. 사용자별 사용현황
						case TAB.USE : {
							doListUser(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
							break;
						}
						
						// 2-4. 출력 현황
						case TAB.DOWN : {
							doLisDown(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
							break;
						}
					}
				}
				
				/**
				 * @desc 첫번째 탭(사용자별 접속현황) 접속현황 목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListCnnt(poCallBackFunc){
					// 1. 조회조건 필수체크 : 기준일자
					if(!util.validate(app, ["dipStDt", "dipEndDt"])){
						return false;
					}
					
					// 2. 조회 서브미션 호출
					//strCommand: listCnnt 
					util.Submit.send(app, "subListCnnt", function(pbSuccess){
						if(pbSuccess){
							// 접속현황 목록 
							util.Control.redraw(app, "grdCmnCnnt");
							
							var vnCnt = util.Grid.getRowCount(app, "grdCmnCnnt");
							if(vnCnt < 1){
								util.Control.reset(app, "rptCmnUseCnnt");
							}
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}	
				
				/**
				 * @desc 첫번째 탭(사용자별 접속현황) 접속현황 목록 선택에 따른 사용자접속목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListUseCnnt(poCallBackFunc){
					// 1. 조회조건 : 접속현황 목록의 값 
					//var vsOrd = ExtRepeat.getValue("rptCmnCnnt", "ORD");
					var vsUserDivRcd = util.Grid.getCellValue(app, "grdCmnCnnt", "USER_DIV_RCD");
					
					//ExtInstance.setValue("/root/reqListUseCnnt/strOrd", vsOrd);
					util.DataMap.setValue(app, "dmReqListUseCnnt", "strUserDivRcd", vsUserDivRcd);
					
					// 2. 조회 서브미션 호출
					//strCommand: listUseCnnt 
					util.Submit.send(app, "subListUseCnnt", function(pbSuccess){
						if(pbSuccess){
							// 사용자접속 목록
							util.Control.redraw(app, "grdCmnUseCnnt");
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc 두번째 탭(프로그램별 접속현황) 프로그램목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListPgm(poCallBackFunc){
					// 1. 조회조건 필수체크 : 기준일자
					if(!util.validate(app, ["dipStDt", "dipEndDt"])){
						return false;
					}
					
					// 2. 조회 서브미션 호출
					//strCommand: listPgm 
					util.Submit.send(app, "subListPgm", function(pbSuccess){
						if(pbSuccess){
							// 프로그램 목록 
							util.Control.redraw(app, "grdCmnPgm");
							
							var vnCnt = util.Grid.getRowCount(app, "grdCmnPgm");
							if(vnCnt < 1){
								util.Control.reset(app, "rptCmnRecUser");
							}
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc 두번째 탭(사용자별 사용현황) 프로그램 목록 선택에 따른 최근접속사용자목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListRecUser(poCallBackFunc){
					
				}
				
				/**
				 * @desc 세번째 탭(사용자별 사용현황) 사용자목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListUser(poCallBackFunc){
					// 1. 조회조건 필수체크 : 기준일자
					if(!util.validate(app, ["dipStDt", "dipEndDt"])){
						return false;
					}
					
					// 2. 조회 서브미션 호출
					//strCommand: listUser 
					util.Submit.send(app, "subListUser", function(pbSuccess){
						if(pbSuccess){
							// 사용자 목록 
							util.Control.redraw(app, "grdCmnUser", true);
							
							var vnCnt = util.Grid.getRowCount(app, "grdCmnUser");
							if(vnCnt < 1){
								util.Control.reset(app, "rptUserPgm");
							}
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				function doLisDown(poCallBackFunc){
					// 1. 조회조건 필수체크 : 기준일자
					if(!util.validate(app, ["dipStDt", "dipEndDt"])){
						return false;
					}
					
					// 2. 조회 서브미션 호출
					//strCommand: listDown 
					util.Submit.send(app, "subListDown", function(pbSuccess){
						if(pbSuccess){
							// 사용자 목록 
							util.Control.redraw(app, "grdCmnDown", true);
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc 세번째 탭(사용자별 사용현황) 사용자목록 선택에 따른 프로그램목록을 조회한다.
				 * @param {Object} 서브미션 실행 후 처리될 콜백 함수
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doListUserPgm(poCallBackFunc){
					// 1. 조회조건 : 사용자 목록에서 선택한 행의 사용자 Id
					var vsUserId = util.Grid.getCellValue(app, "grdCmnUser", "USER_ID");
					util.DataMap.setValue(app, "dmReqListUser", "strUseUserId", vsUserId);
					
					// 2. 조회 서브미션 호출
					//strCommand: listUserPgm 
					util.Submit.send(app, "subListUserPgm", function(pbSuccess){
						if(pbSuccess){
							// 프로그램목록
							util.Control.redraw(app, "grdUserPgm");
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc  탭변경 이벤트
				 * @param {String} psCaseId 탭ID
				 * @return void
				 * @author Kim Bora 2015. 11. 19.
				 */
				function doTabChange(psCaseId){
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
				
					// 1. 현재 선택된 탭과 선택한 탭이 같은 경우 조회하지 않는다.
					if(vsSelTabId == psCaseId) return false;
					
					// 2. 탭변경
					util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
						
					// 3. 조회조건 메뉴ID 컨트롤에 대한 비활성화처리 
					// => 두번째 탭(프로그램별 접속현황) 선택인 경우만 조회조건이 보여진다.
					util.Control.setVisible(app, false, ["lblMenuId", "ipbMenuId"]);
					util.Control.reset(app, "ipbMenuId");
					
					// 4. 탭변경 후 처리 로직
					switch (psCaseId) {
						// 2-1. 사용자별접속현황
						case TAB.USER : {
							doListCnnt(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
							
							break;
						}
						// 2-2. 프로그램별 접속현황
						case TAB.PGM : {
							util.Control.setVisible(app, true, ["lblMenuId", "ipbMenuId"]);
							
							doListPgm(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
							
							break;
						}
						// 2-3. 사용자별 사용현황
						case TAB.USE : {
							doListUser(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
			
							break;
						}
						
						// 2-4. 출력 사용현황
						case TAB.DOWN : {
							doLisDown(function(pbSuccess) {
								if(pbSuccess){
									// 조회 : "조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
			
							break;
						}
					}
				}
				
				moPage.onClick_BtnSearch = function() {
					doList();
				}
					
				moPage.onModelConstructDone_StdCmnSLoginList = function() {
					doOnLoad();
				};
				
				moPage.onClick_TabBtnUserCnnt = function() {
					doTabChange(TAB.USER);
				};
				
				moPage.onClick_TabBtnPgmCnnt = function() {
					doTabChange(TAB.PGM);
				};
				
				moPage.onClick_TabBtnUserUse = function() {
					doTabChange(TAB.USE);
				};
					
				moPage.onKeyDown_IpbMenuId = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				
			//	moPage.onClick_TabBtnUserUse1 = function() {
			//		moPage.doTabChange(TAB.DOWN);
			//	}
				
				
				function doListRecUser(poCallBackFunc){
					// 1. 조회조건 : 프로그램 목록에서 선택한 행의 메뉴Id
					var vsMenuId = util.Grid.getCellValue(app, "grdCmnPgm", "MENU_ID");
					util.DataMap.setValue(app, "dmReqListRecUser", "strPgmId", vsMenuId);
					
					// 2. 조회 서브미션 호출
					//strCommand: listRecUser 
					util.Submit.send(app, "subListRecUser", function(pbSuccess){
						if(pbSuccess){
							// 최근 접속 사용자
							util.Control.redraw(app, "grdCmnRecUser");
							
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				
				moPage.onClick_TabBtnDownCnnt = function() {
					doTabChange(TAB.DOWN);
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnCnnt");
			dataSet_1.parseData({
				"columns": [
					{"name": "USER_DIV_RCD"},
					{"name": "USER_DIV_NM"},
					{"name": "USER_CNT"},
					{"name": "USER_DISTINCT_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnUseCnnt");
			dataSet_2.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_NM"},
					{"name": "CNNT_DTHR"},
					{"name": "USER_IP_MAC"},
					{"name": "BROWER_INFO"},
					{"name": "OS_INFO"},
					{"name": "USER_AGENT_INFO"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnPgm");
			dataSet_3.parseData({
				"columns": [
					{"name": "UNIT_SYSTEM_NM"},
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "ACCESS_CNT"},
					{"name": "ACCESS_USER_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCmnRecUser");
			dataSet_4.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_NM"},
					{"name": "ACCESS_TIME"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsCmnUser");
			dataSet_5.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "USER_NM"},
					{"name": "DEPT_NM"},
					{"name": "USER_DIV_NM"},
					{"name": "ACCESS_TIME"},
					{"name": "ACCESS_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsUserPgm");
			dataSet_6.parseData({
				"columns": [
					{"name": "UNIT_SYSTEM_NM"},
					{"name": "MENU_ID"},
					{"name": "MENU_NM"},
					{"name": "ACCESS_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmnDown");
			dataSet_7.parseData({
				"columns": [
					{"name": "USER_ID"},
					{"name": "PRT_DIV_RCD_NM"},
					{"name": "DEPT_NM"},
					{"name": "USER_DIV_NM"},
					{"name": "MENU_NM"},
					{"name": "REQ_DTHR"},
					{"name": "USER_NM"},
					{"name": "REQ_INFO"},
					{"name": "DATA_CNT"},
					{"name": "FILE_NM"},
					{"name": "USER_IP_MAC"},
					{"name": "MENU_ID"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strMenuId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqListUser");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strUseUserId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqListUseCnnt");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strOrd",
						"dataType": "string"
					},
					{
						"name": "strUserDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqListRecUser");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strPgmId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnLoginList/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListCnnt");
			submission_2.action = "/cmn/StdCmnLoginList/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListUseCnnt");
			submission_3.action = "/cmn/StdCmnLoginList/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataSet_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListPgm");
			submission_4.action = "/cmn/StdCmnLoginList/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataSet_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListRecUser");
			submission_5.action = "/cmn/StdCmnLoginList/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addRequestData(dataMap_5);
			submission_5.addResponseData(dataSet_4, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListUser");
			submission_6.action = "/cmn/StdCmnLoginList/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_2);
			submission_6.addResponseData(dataSet_5, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subListUserPgm");
			submission_7.action = "/cmn/StdCmnLoginList/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_2);
			submission_7.addRequestData(dataMap_3);
			submission_7.addResponseData(dataSet_6, false);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subListDown");
			submission_8.action = "/cmn/StdCmnLoginList/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataMap_2);
			submission_8.addResponseData(dataSet_7, false);
			app.register(submission_8);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.SCH']"), "MSG_TEXT");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDt");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-REGISTDAT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipStDt");
				dateInput_1.format = "YYYY-MM-DD";
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStDt");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "110px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("label1");
				output_2.value = "~";
				container.addChild(output_2, {
					"top": "5px",
					"left": "215px",
					"width": "20px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipEndDt");
				dateInput_2.format = "YYYY-MM-DD";
				dateInput_2.userAttr({"require": "Y"});
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndDt");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "240px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optMenuId");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-MENU_ID");
				container.addChild(output_3, {
					"top": "5px",
					"left": "350px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbMenuId");
				inputBox_1.visible = false;
				inputBox_1.bind("fieldLabel").toExpression("#optPgmIdNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strMenuId");
				if(typeof onIpbMenuIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbMenuIdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "455px",
					"width": "345px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tpcUserCnnt";
					var group_3 = new cpr.controls.Container("grptpcUserCnnt");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_3.setLayout(formLayout_1);
					(function(container){
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("");
						container.addChild(userDefinedControl_2, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnCnnt");
						grid_1.init({
							"dataSet": app.lookup("dsCmnCnnt"),
							"columns": [
								{"width": "40px"},
								{"width": "128px"},
								{"width": "126px"},
								{"width": "200px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_DIV_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "USER_DISTINCT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						if(typeof onGrdCmnCnntSelectionChange == "function") {
							grid_1.addEventListener("selection-change", onGrdCmnCnntSelectionChange);
						}
						container.addChild(grid_1, {
							"top": "30px",
							"left": "5px",
							"width": "510px",
							"height": "525px"
						});
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "520px",
							"width": "265px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnUseCnnt");
						grid_2.init({
							"dataSet": app.lookup("dsCmnUseCnnt"),
							"columns": [
								{"width": "40px"},
								{"width": "93px"},
								{"width": "88px"},
								{"width": "125px"},
								{"width": "127px"},
								{"width": "113px"},
								{"width": "90px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "CNNT_DTHR";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "USER_IP_MAC";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "BROWER_INFO";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "OS_INFO";
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "30px",
							"left": "520px",
							"width": "690px",
							"height": "525px"
						});
					})(group_3);
					tabItem_1.content = group_3;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tpcPgmCnnt";
					var group_4 = new cpr.controls.Container("grptpcPgmCnnt");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_4.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnPgm");
						grid_3.init({
							"dataSet": app.lookup("dsCmnPgm"),
							"columns": [
								{"width": "40px"},
								{"width": "113px"},
								{"width": "128px"},
								{"width": "208px"},
								{"width": "85px"},
								{"width": "80px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MENU_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "MENU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ACCESS_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "ACCESS_USER_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						if(typeof onGrdCmnPgmSelectionChange == "function") {
							grid_3.addEventListener("selection-change", onGrdCmnPgmSelectionChange);
						}
						container.addChild(grid_3, {
							"top": "30px",
							"left": "5px",
							"width": "670px",
							"height": "525px"
						});
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
						userDefinedControl_5.bind("title").toLanguage("");
						container.addChild(userDefinedControl_5, {
							"top": "5px",
							"left": "680px",
							"width": "265px",
							"height": "25px"
						});
						var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdCmnRecUser");
						grid_4.init({
							"dataSet": app.lookup("dsCmnRecUser"),
							"columns": [
								{"width": "40px"},
								{"width": "119px"},
								{"width": "115px"},
								{"width": "236px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ACCESS_TIME";
											cell.style.css({
												"text-align" : "center"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_4, {
							"top": "30px",
							"left": "680px",
							"width": "525px",
							"height": "525px"
						});
					})(group_4);
					tabItem_2.content = group_4;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tpcUserUse";
					var group_5 = new cpr.controls.Container("grptpcUserUse");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_5.setLayout(formLayout_3);
					(function(container){
						var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
						userDefinedControl_6.bind("title").toLanguage("");
						container.addChild(userDefinedControl_6, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_5 = linker.grid_5 = new cpr.controls.Grid("grdCmnUser");
						grid_5.init({
							"dataSet": app.lookup("dsCmnUser"),
							"columns": [
								{"width": "40px"},
								{"width": "90px"},
								{"width": "90px"},
								{"width": "93px"},
								{"width": "101px"},
								{"width": "127px"},
								{"width": "81px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "USER_DIV_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "DEPT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "ACCESS_TIME";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "ACCESS_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						if(typeof onGrdCmnUserSelectionChange == "function") {
							grid_5.addEventListener("selection-change", onGrdCmnUserSelectionChange);
						}
						container.addChild(grid_5, {
							"top": "30px",
							"left": "5px",
							"width": "635px",
							"height": "525px"
						});
						var grid_6 = linker.grid_6 = new cpr.controls.Grid("grdUserPgm");
						grid_6.init({
							"dataSet": app.lookup("dsUserPgm"),
							"columns": [
								{"width": "40px"},
								{"width": "104px"},
								{"width": "115px"},
								{"width": "221px"},
								{"width": "65px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "UNIT_SYSTEM_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "MENU_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "MENU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ACCESS_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									}
								]
							}
						});
						container.addChild(grid_6, {
							"top": "30px",
							"left": "645px",
							"width": "560px",
							"height": "525px"
						});
						var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comTitle();
						userDefinedControl_7.bind("title").toLanguage("");
						container.addChild(userDefinedControl_7, {
							"top": "5px",
							"left": "645px",
							"width": "265px",
							"height": "25px"
						});
					})(group_5);
					tabItem_3.content = group_5;
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				
				var tabItem_4 = (function(tabFolder){
					var tabItem_4 = new cpr.controls.TabItem();
					tabItem_4.text = "tab1";
					tabItem_4.name = "tpcDownCnnt";
					var group_6 = new cpr.controls.Container("grptpcDownCnnt");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "0px";
					formLayout_4.verticalSpacing = "0px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_6.setLayout(formLayout_4);
					(function(container){
						var grid_7 = linker.grid_7 = new cpr.controls.Grid("grdCmnDown");
						grid_7.init({
							"dataSet": app.lookup("dsCmnDown"),
							"columns": [
								{"width": "40px"},
								{"width": "73px"},
								{"width": "69px"},
								{"width": "70px"},
								{"width": "97px"},
								{"width": "128px"},
								{"width": "119px"},
								{"width": "78px"},
								{"width": "136px"},
								{"width": "65px"},
								{"width": "98px"},
								{"width": "119px"},
								{"width": "422px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-TITLE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-DEVNOTICE");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-EXER");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-REGISTRANT");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnName = "USER_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "USER_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "USER_DIV_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "DEPT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "MENU_ID";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "MENU_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_DIV_RCD_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "FILE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "DATA_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "USER_IP_MAC";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "REQ_DTHR";
											cell.control = (function(){
												var output_4 = new cpr.controls.Output("gdOptDownReqDthr");
												output_4.dataType = "date";
												output_4.format = "YYYY-MM-DD HH:mm:ss";
												output_4.bind("value").toDataColumn("REQ_DTHR");
												return output_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "REQ_INFO";
										}
									}
								]
							}
						});
						container.addChild(grid_7, {
							"top": "25px",
							"left": "5px",
							"width": "1205px",
							"height": "525px"
						});
						var userDefinedControl_8 = linker.userDefinedControl_8 = new udc.com.comTitle();
						userDefinedControl_8.bind("title").toLanguage("");
						container.addChild(userDefinedControl_8, {
							"top": "5px",
							"left": "10px",
							"width": "265px",
							"height": "25px"
						});
					})(group_6);
					tabItem_4.content = group_6;
					return tabItem_4;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_4);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "35px",
					"left": "5px",
					"width": "1215px",
					"height": "560px"
				});
				var button_2 = new cpr.controls.Button("tabBtnUserCnnt");
				button_2.value = "";
				button_2.bind("value").toLanguage("UI-SCR-DEVNOTICE");
				if(typeof onTabBtnUserCnntClick == "function") {
					button_2.addEventListener("click", onTabBtnUserCnntClick);
				}
				container.addChild(button_2, {
					"top": "8px",
					"left": "5px",
					"width": "130px",
					"height": "28px"
				});
				var button_3 = new cpr.controls.Button("tabBtnPgmCnnt");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-SCR-DEVREQ");
				if(typeof onTabBtnPgmCnntClick == "function") {
					button_3.addEventListener("click", onTabBtnPgmCnntClick);
				}
				container.addChild(button_3, {
					"top": "8px",
					"left": "136px",
					"width": "145px",
					"height": "28px"
				});
				var button_4 = new cpr.controls.Button("tabBtnUserUse");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-DEVSTD");
				if(typeof onTabBtnUserUseClick == "function") {
					button_4.addEventListener("click", onTabBtnUserUseClick);
				}
				container.addChild(button_4, {
					"top": "8px",
					"left": "282px",
					"width": "130px",
					"height": "28px"
				});
				var button_5 = new cpr.controls.Button("tabBtnDownCnnt");
				button_5.value = "";
				button_5.bind("value").toLanguage("UI-GLS-PRT");
				if(typeof onTabBtnDownCnntClick == "function") {
					button_5.addEventListener("click", onTabBtnDownCnntClick);
				}
				container.addChild(button_5, {
					"top": "8px",
					"left": "413px",
					"width": "130px",
					"height": "28px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "603px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
			linker.userDefinedControl_5.ctrl = linker.grid_4;
			linker.userDefinedControl_6.ctrl = linker.grid_5;
			linker.userDefinedControl_7.ctrl = linker.grid_6;
			linker.userDefinedControl_8.ctrl = linker.grid_7;
		}
	});
	app.title = "사용자별접속현황";
	cpr.core.Platform.INSTANCE.register(app);
})();
