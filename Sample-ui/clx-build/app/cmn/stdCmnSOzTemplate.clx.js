/*
 * App URI: app/cmn/stdCmnSOzTemplate
 * Source Location: app/cmn/stdCmnSOzTemplate.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnSOzTemplate", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCmnSOzTemplate.xtm"/>
			
			
			var stdCmnSOzTemplate = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
						/******************************************************************************************************
						 *  학생검색팝업 관련 설정사항
						 *  ▶ 설정가능 유형
						 *      1. 인스턴스
						 *      2. 리피트 디테일 셀 ID
						 *      3. 컨트롤 ID
						 *  ▶ 각 변수별 설명
						 *      iXXX : 팝업에 전달될  input 파라미터
						 *      oXXX : 팝업에서 선택한 값을 받을 데이터
						 *      1. controlId			: 최초 이벤트의 버튼이나 그리드 id	(필수)
						 *      2. iStudNo 			: 검색조건 학번					    		(선택) (값이 존재할 경우 4자리 이상)
						 *      3. iStudId 				: 검색조건 학번오브젝트					(선택)
						 *      4. iStudNm 			: 이름        				            		(선택) (값이 존재할 경우 2자리 이상)
						 *      5. iKeyDate 			: 기준일 										(필수) (기준일자(학년도학기 종료일),안주면 최종데이터나옴)
						 *      6. iObjDivRcd 		: 객체구분코드 								(선택)
						 *      7. iObjCd 				: 부서코드										(선택)
						 *      8. iObjNm 			: 부서명											(선택) 
						 *      9. iAuthYN				: 권한미적용여부 (미적용시: "Y")		(선택) 
						 *     10. iStatRcd			: 학적상태코드								(선택) "CT301ATTE,CT301ABSE,CT301COMP,CT301GRAD,CT301REMO"
						 *     11. oStudId				: 학번오브젝트
						 *     12. oStudNo 			: 학번
						 *     13. oStudNm 			: 이름
						 *     14. oSsn 				: 주민번호
						 *     15. oStatNm 			: 학적상태명
						 *     16. oStatRcd 			: 학적상태코드
						 *     17. oProcRslt 			: 진급학기
						 *     18. oProcRsltYear 	: 진급학년
						 *     19. oSaCd 				: 학사부서코드명
						 *     20. oSaNm 			: 학사부서명
						 *     21. oSpCd 				: 이수과정코드명
						 *     22. oSpNm 			: 이수과정명
						 *     23. oOgCd 				: 행정부서코드명
						 *     24. oOgNm 			: 행정부서명
						 *     25. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
						 *									  
						 *******************************************************************************************************/	
						moPObject.moIdsForStdCsrPStSearch = [
						{
							controlId     		: "btnStudNo",
							iStudNo       		: "ipbStudNo",		
							iStudId       		: "",
							iStudNm       		: "",
							iKeyDate	  		: "/root/resOnLoad/strKeyDate",
							iObjDivRcd 		: "",
							iObjCd     	  		: "",
							iObjNm 			: "",
							iAuthYN		  		: "",
							iStatRcd			: "",
							oStudId       		: "/root/reqKey/strStudId",
							oStudNo       		: "ipbStudNo",		
							oStudNm       	: "",
							oSsn          		: "",
							oStatNm 	  		: "",
							oStatRcd	  		: "",
							oProcRslt	  		: "",
							oProcRsltYear    : "",
							oSaCd         		: "",
							oSaNm         	: "",					
							oSpCd         		: "",
							oSpNm         	: "",
							oOgCd 		  		: "",
							oOgNm 		  	: "",
							func 		  			: null
						},
						{
							controlId     		: "rdBtnStudNo",
							iStudNo       		: "rdIpbStudNo",
							iStudId       		: "",
							iStudNm       		: "",
							iKeyDate	  		: "/root/resOnLoad/strKeyDate",
							iObjDivRcd 		: "",
							iObjCd     	  		: "",
							iObjNm 			: "",
							iAuthYN		  		: "",
							oStudId       		: "rdIpbStudId",
							oStudNo       		: "rdIpbStudNo",
							oStudNm       	: "rdIpbRepNm",
							oSsn          		: "rdIpbSsn",
							oStatNm 	  		: "",
							oStatRcd	  		: "",
							oProcRslt	  		: "",
							oProcRsltYear	: "",
							oSaCd         		: "",
							oSaNm         	: "",					
							oSpCd         		: "",
							oSpNm         	: "",
							oOgCd 		  		: "",
							oOgNm 		  	: "",
							func 		  		    : null
						}
						];
						
						/******************************************************************************************************
						 *  객체검색팝업 관련 설정사항
						 *  ▶ 설정가능 유형
						 *      1. 인스턴스
						 *      2. 리피트 디테일 셀 ID
						 *      3. 컨트롤 ID
						 *  ▶ 각 변수별 설명
						 *      iXXX : 팝업에 전달될  input 파라미터
						 *      oXXX : 팝업에서 선택한 값을 받을 데이터
						 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
						 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
						 *  	3. iNm 				: 검색조건 부서명									(선택)	
						 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
						 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
						 *  	5. iStartObject 	: 검색시작부서 										(선택)
						 *								  ("CC009OG20000,CC009OG70000",) 
						 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
						 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
						 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
						 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
						 *  	8. iLanDivRcd 	: 언어키													(선택)
						 *  	9. iKeyDate 		: 기준일													(필수)
						 *  	10. oObjDivRcd 	: 객체구분코드 
						 *  	11. oCd 			: 부서코드
						 *  	12. oCdNm 		: 부서명
						 *  	13. oBegDt 		: 시작일
						 *  	14. oEndDt 		: 종료일
						 *  	15. oLanDivRcd 	: 언어키
						 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
						 *									  
						 *******************************************************************************************************/	
						moPObject.moIdsForStdCmnPObjSch = [
						{
							controlId			:	"btnSaNm",
							iCd					:	"",
							iNm					:	"ipbSaNm",
							iObjDivRcd			:	["CC009OG","CC009SA"],
							iStartObject    	:   "",
							iOtDivRcd			:	"",
							iOtIsTreeView	:	"",
							iLanDivRcd		:	"",
							iKeyDate			:	"/root/resOnLoad/strKeyDate",
							iKeyEndDate		:	"",
							oObjDivRcd		:	"",
							oCd					:	"/root/reqKey/strSaCd",
							oCdNm				:	"ipbSaNm",
							oBegDt				:	"",
							oEndDt				:	"",
							oLanDivRcd		:	"",
							func 					:  null
						},
						{
							controlId			:	"rdBtnSaNm",
							iCd					:	"",
							iNm					:	"rdIpbSaNm",
							iObjDivRcd			:	["CC009SA"],
							iStartObject    	:   "",
							iOtDivRcd			:	"",
							iOtIsTreeView	:	"",
							iLanDivRcd		:	"",
							iKeyDate			:	"/root/resOnLoad/strKeyDate",
							iKeyEndDate		:	"",
							oObjDivRcd		:	"",
							oCd					:	"rdIpbSaCd",
							oCdNm				:	"rdIpbSaNm",
							oBegDt				:	"",
							oEndDt				:	"",
							oLanDivRcd		:	"",
							func					:	null
						}
						];
						
				/**
				 * @desc  onLoad  	
				 * @return void
				 * @author xxxx 2015. 6. 5.
				 */
				function doOnLoad() {
					
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grp_rptCmnTmpReg"]);
					
				}
				
			
			
				moPage.onModelConstructDone_stdCmnSOzTemplate = function() {
					doOnLoad();
				};
				
				
				moPage.onClick_BtnSearch = function() {
					var voParam = {
								p_strLanDivRcd 	: msDefaultLocale,	 												// 언어키
								p_strKeyDate 	: "20160111",		 													// 기준일자
								p_strStudNo 		: util.DataMap.getValue(app, "root/reqKey", "strStudNo"),	// 학번
								p_strSaCd 		: util.DataMap.getValue(app, "root/reqKey", "strSaCd"),	 	// 학사부서 코드
								p_strCheckAuthId : moUserInfo.id														//사용자ID
								
							};
							
						 var voOzFormParam = {
								  TITLE : "토마토대학교 차세대 통합정보시스템 구축" //리포트타이틀
								, SUB_TITLE : "서브타이틀" //리포트서브타이틀		
								, FORM_TYPE : "flash"
							};	
							
					util.Report.open(app, "hojReport", "stdCmnSTmpReg", voOzFormParam, voParam);
				};
				
				
				
				moPage.onValueChanged_IpbSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				
				
			
				
				
				moPage.onClick_BtnSaNm = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				
				moPage.onClick_BtnStudNo = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				
				
				
				
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				
				moPage.onClick_BtnOzPopup = function() {
					
					
					var voParam = {
								p_strLanDivRcd 	: msDefaultLocale,	 												// 언어키
								p_strKeyDate 	: "20160111",		 													// 기준일자
								p_strStudNo 		: util.DataMap.getValue(app, "root/reqKey", "strStudNo"),	// 학번
								p_strSaCd 		: util.DataMap.getValue(app, "root/reqKey", "strSaCd"),	 	// 학사부서 코드
								p_strCheckAuthId : moUserInfo.id														//사용자ID
								
							};
							
						 var voOzFormParam = {
								  TITLE : "토마토대학교 차세대 통합정보시스템 구축" //리포트타이틀
								, SUB_TITLE : "서브타이틀" //리포트서브타이틀		
								, FORM_TYPE : "flash"
							};	
							
					ReportUtil.fOzPopupOpen("학생목록", "stdCmnSTmpReg", voOzFormParam, voParam);
					
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsGenderRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsStudDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsNatRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDayNightDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSaCdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsBankRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCmnTmpReg");
			dataSet_7.parseData({
				"columns": [
					{"name": "SA_NM"},
					{"name": "OWNER_NM"},
					{"name": "BANK_RCD"},
					{"name": "REP_NM"},
					{"name": "STUD_DIV_RCD"},
					{"name": "AEN"},
					{"name": "CLP_NO"},
					{"name": "EMAIL"},
					{"name": "ADDR2"},
					{"name": "ENG_NM"},
					{"name": "STUD_NO"},
					{"name": "ADDR1"},
					{"name": "NAT_RCD"},
					{"name": "GENDER_RCD"},
					{"name": "ZIPCODE"},
					{"name": "ACCT_NO"},
					{"name": "CHA_NM"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "SSN"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "STUD_ID"},
					{"name": "SA_CD"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/cmn/StdCmnTmpSingRepeat/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnTmpSingRepeat/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/cmn/StdCmnTmpSingRepeat/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSaNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optStudNo");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "270px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "130px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSaNm");
				button_1.value = "";
				button_1.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnSaNmClick == "function") {
					button_1.addEventListener("click", onBtnSaNmClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "240px",
					"width": "20px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudNo");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudNoClick == "function") {
					button_2.addEventListener("click", onBtnStudNoClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "505px",
					"width": "20px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "조회";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toDataMap(app.lookup("dmText()='UI.SCR.SCH']"), "MSG_TEXT");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCmnTmpReg");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCmnTmpReg");
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "33px",
					"left": "10px",
					"width": "1210px",
					"height": "561px"
				});
				var button_4 = new cpr.controls.Button("btnOzPopup");
				button_4.value = "출력";
				if(typeof onBtnOzPopupClick == "function") {
					button_4.addEventListener("click", onBtnOzPopupClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "680px",
				"left": "80px",
				"width": "50px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "680px",
				"left": "10px",
				"width": "50px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCmnSOzTemplate";
	cpr.core.Platform.INSTANCE.register(app);
})();
