/*
 * App URI: app/cmn/stdCmnSUnitTestList
 * Source Location: app/cmn/stdCmnSUnitTestList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/cmn/stdCmnSUnitTestList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			var util = new ComUtil(app);
			
			/** 조회
			 * @desc 
			 * @param 조회후 콜백함수
			 */
			function doList(poCallBackFunc){
				util.Submit.send(app, "subList", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnPgm");
						
						//조회 후 콜백함수 수행
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc doUTestIng event 진행내역 조회한다.
			 * @return void
			 */
			function doUTestIng(poCallBackFunc){
				var vnPgmRow = util.Grid.getIndex(app, "grdCmnPgm");
				var vnRow = util.Grid.getIndex(app, "grdCmnUtestStep");
				var vsSeq = util.Grid.getCellValue(app, "grdCmnUtestStep","SEQ",vnRow);
				var vsPgmId = util.Grid.getCellValue(app, "grdCmnPgm","PGM_ID",vnPgmRow);
				util.DataMap.setValue(app, "dmReqList", "strTestSerialNo", vsSeq);
				util.DataMap.setValue(app, "dmReqList", "strUtestIngPgmId", vsPgmId);
			
				util.Submit.send(app, "subListDtl", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUtestRslt");
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc doUTestGrp event 진행내역 조회한다.
			 * @return void
			 */
			function doUTestGrp(poCallBackFunc){
				var vnRow = util.Grid.getIndex(app, "grdCmnPgm");
				var vsPgmId = util.Grid.getCellValue(app, "grdCmnPgm","PGM_ID",vnRow);
				
				util.DataMap.setValue(app, "dmReqList", "strUtestGrpPgmId", vsPgmId);
			
				util.Submit.send(app, "subSubList", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, "grdCmnUtestStep");
			
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					}
				});
			}
			
			/**
			 * @desc doTreeMenuClick event 메뉴 클릭시 조회조건 셋팅후 데이터 조회
			 * @return void
			 */
			function doTreeMenuClick(){
				var vsValue = util.Tree.getSelectedValue(app, "trvCmnMenu");
						
				if(vsValue == null){
					//선택된 데이터가 없습니다.
					util.Msg.warn("M008");
					return false;
				}	
			
				var voValueNode = util.DataSet.findRow(app, "dsTrvCmnMenu", "KEYSET == '" + vsValue + "'");
				
				if(voValueNode.getValue("PGM_ID") !="MENUHEADER")	{
					util.Control.setValue(app, app, "ipbPgmId", voValueNode.getValue("PGM_ID"));
					util.Control.setValue(app, app, "ipbPgmNm", voValueNode.getValue("PGM_NM"));
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/**
			 * @desc 메뉴검색 팝업 콜백함수
			 * @return void
			 */
			function doMenuSearchAfter(){
				var vsMenuId = util.Control.getValue(app, "ipbPgmId");   //조회조건 프로그램 아이디
				var vsMenuNm = util.Control.getValue(app, "ipbPgmNm");//트리 프로그램 메뉴명
				var vsSchMenuId = util.Control.getValue(app, "ipbSchPgmId");//트리 프로그램 메뉴ID
				
				if(vsSchMenuId !=""){
					//펼쳐진 트리 모두 감추기
					util.Tree.expandAllItems(app, "trvCmnMenu", false);
					//메뉴명 으로 검색
					util.Tree.getItem("trvCmnMenu", vsMenuNm, "LABEL");
					//트리선택 메뉴 조회
					doTreeMenuClick();
				}
			}
			
			/*
			 * Body에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(/* cpr.events.CEvent */ e){
				//서브미션 실행
				util.Submit.send(app, "subOnInit", function(pbSuccess){
					if(pbSuccess){
						util.Control.redraw(app, ["cbbSysDiv"]);
					}
				});
			}
			
			/*
			 * "조회" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onBtnSearchClick(/* cpr.events.CMouseEvent */ e){
				/** 
				 * @type cpr.controls.Button
				 */
				var btnSearch = e.control;
				if(!util.validate(app, "grpSearch")) return false;
				
				doList(function(pbSuccess){
					if(pbSuccess){
						var vnCnt = util.Grid.getRowCount(app, "grdCmnPgm");
						var vnFailCnt = 0;
						
						if(vnCnt == 0){
							util.Control.reset(app, app, ["grdCmnUtestStep", "grdCmnUtestRslt"]);
						}else{
							for(var i = 0 ; i < vnCnt ; i++){
								var vsUtestYn = util.Grid.getCellValue(app, "grdCmnPgm", "EXIST_TEST_CASE_YN", i);
								var vsDoNotCnt = util.Grid.getCellValue(app, "grdCmnPgm", "DONOT_CNT", i);
								
								//컬러 바인딩 사용
								//1. 테스트 케이스가 등록이 안 된 경우
								if(ValueUtil.fixNull(vsUtestYn) != "Y"){
			//						ExtRepeat.Cell("rptCmnPgm", 2, i, "PGM_NM", "#c5141c")
									vnFailCnt++;
								//2.미완료된 테스트 건수가 남아있는 경우
								}else if(vsDoNotCnt > 0){
			//						ExtRepeat.Cell("rptCmnPgm", 2, i, "PGM_NM", "#0000ff")
									vnFailCnt++;
								}
							}
						}
						util.Control.setValue(app, app, "lblFailCnt", vnFailCnt);
						
						//조회되었습니다.
			//			util.Msg.info("M024");
					}
				});
			}
			
			/*
			 * 그룹에서 keydown 이벤트 발생 시 호출.
			 * 사용자가 키를 누를 때 발생하는 이벤트.
			 */
			function onGrpSearchKeydown(/* cpr.events.CKeyboardEvent */ e){
				/** 
				 * @type cpr.controls.Container
				 */
				var grpSearch = e.control;
				if(e.keyCode == cpr.events.KeyCode.ENTER){
					var btnSearch = app.lookup("btnSearch");
					btnSearch.click();
				}
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnPgmSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnPgm = e.control;
				if(util.Grid.getIndex(app, "grdCmnPgm") == -1){
					return false;
				}
				
				//단위테스트그룹
				doUTestGrp(function(pbSuccess){
					var vnCnt = util.Grid.getRowCount(app, "grdCmnUtestStep");
					if(vnCnt == 0){
						util.Control.reset(app, app, "grdCmnUtestRslt");
					}
					//조회되었습니다.
					if(pbSuccess) util.Msg.alert("NLS-INF-M024");
				});
			}
			
			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrdCmnUtestStepSelectionChange(/* cpr.events.CSelectionEvent */ e){
				/** 
				 * @type cpr.controls.Grid
				 */
				var grdCmnUtestStep = e.control;
				if(util.Grid.getIndex(app, "grdCmnUtestStep") == -1){
					return false;
				}
				
				doUTestIng(function(pbSuccess){
					//조회되었습니다.
					util.Msg.alert("NLS-INF-M024");
				});
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCmnUtestStep");
			dataSet_1.parseData({
				"info": "CMN_OPER_MENU@OPRT_ROLE_ID,MENU_ID,PGM_ID,LAN_DIV_RCD",
				"columns": [
					{"name": "SEQ"},
					{"name": "USER_NM"},
					{"name": "TEST_DT"},
					{"name": "END_YN"},
					{"name": "END_DT"},
					{"name": "NPASS_CNT"},
					{"name": "PGM_ID"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCmnUtestRslt");
			dataSet_2.parseData({
				"columns": [
					{"name": "TEST_DIV_RCD"},
					{"name": "TEST_SDIV_RCD"},
					{"name": "TEST_DESC"},
					{"name": "RSLT_RCD"},
					{"name": "FAILE_RSN"},
					{"name": "BEF_RSLT_RCD"},
					{"name": "TEST_DESC_RCD"},
					{"name": "TEST_SERIAL_NO"},
					{"name": "SEQ_NUM"},
					{"name": "PGM_ID"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCmnPgm");
			dataSet_3.parseData({
				"columns": [
					{"name": "MID_MENU_NM"},
					{"name": "PGM_NM"},
					{"name": "PGM_ID"},
					{"name": "PGM_TYPE"},
					{"name": "DONOT_CNT"},
					{"name": "EXIST_TEST_CASE_YN"},
					{"name": "MENU_ID"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsTrvCmnMenu");
			dataSet_4.parseData({
				"columns": [
					{"name": "MENU_ID"},
					{"name": "PGM_ID"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UMENU_ID"},
					{"name": "UPGM_ID"},
					{"name": "ULAN_GBN"},
					{"name": "KEYSET"},
					{"name": "UKEYSET"},
					{"name": "MENU_NM"},
					{"name": "PGM_NM"},
					{"name": "MENU_YN"},
					{"name": "MENU_LVL"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListUtestDiv");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListUtestDivRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsListUtestItem");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsListUtestRslt");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsSystemList");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strPgmId",
						"dataType": "string"
					},
					{
						"name": "strTestSerialNo",
						"dataType": "string"
					},
					{
						"name": "stdPgmNm",
						"dataType": "string"
					},
					{
						"name": "stdSchMenuId",
						"dataType": "string"
					},
					{
						"name": "strSystemRcd",
						"dataType": "string"
					},
					{
						"name": "strUtestIngPgmId",
						"dataType": "string"
					},
					{
						"name": "strUtestGrpPgmId",
						"dataType": "string"
					},
					{
						"name": "labelCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResTemp");
			dataMap_2.parseData({
				"columns" : [{
					"name": "trvMst",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnInit");
			submission_1.action = "/cmn/StdCmnUnitTestList/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_9, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/cmn/StdCmnUnitTestList/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSubList");
			submission_3.action = "/cmn/StdCmnUnitTestList/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_1, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListDtl");
			submission_4.action = "/cmn/StdCmnUnitTestList/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_2, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optPgmId");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-DB-OPRT_ROLE_ID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "235px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbPgmId");
				inputBox_1.imeMode = "inactive";
				inputBox_1.bind("fieldLabel").toExpression("#optPgmId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPgmId");
				if(typeof onIpbPgmIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbPgmIdKeydown);
				}
				if(typeof onIpbPgmIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbPgmIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "340px",
					"width": "130px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSysDiv");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-SYSTEMDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSysDiv");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSysDiv.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSystemRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSystemList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "120px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-WRKROLMNLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "450px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCmnUtestStep");
				grid_1.init({
					"dataSet": app.lookup("dsCmnUtestStep"),
					"columns": [
						{"width": "40px"},
						{"width": "75px"},
						{"width": "130px"},
						{"width": "100px"},
						{"width": "90px"},
						{"width": "100px"},
						{"width": "102px"},
						{
							"width": "97px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SEQ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-USER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-TEST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-END_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NPSS_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPALS");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SEQ";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "USER_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "TEST_DT";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptTestDt");
										output_3.dataType = "date";
										output_3.format = "YYYY-MM-DD";
										output_3.style.css({
											"text-align" : "center"
										});
										output_3.bind("value").toDataColumn("TEST_DT");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "END_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptEndDt");
										output_4.dataType = "date";
										output_4.format = "YYYY-MM-DD";
										output_4.style.css({
											"text-align" : "center"
										});
										output_4.bind("value").toDataColumn("END_DT");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "NPASS_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
								}
							}
						]
					}
				});
				if(typeof onGrdCmnUtestStepSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCmnUtestStepSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "450px",
					"width": "770px",
					"height": "230px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-WRKROLLST");
				container.addChild(userDefinedControl_3, {
					"top": "265px",
					"left": "450px",
					"width": "265px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCmnUtestRslt");
				grid_2.init({
					"dataSet": app.lookup("dsCmnUtestRslt"),
					"columns": [
						{"width": "40px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "224px"},
						{"width": "64px"},
						{"width": "189px"},
						{"width": "82px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-LDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-DIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-TEST_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-RSLT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-DLG-LBL-L050");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-COPY_RES");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "45px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "TEST_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbDivRcdIng");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsListUtestDiv"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("TEST_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "TEST_SDIV_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbSdivRcdIng");
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsListUtestDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("TEST_SDIV_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "TEST_DESC";
									cell.control = (function(){
										var textArea_1 = new cpr.controls.TextArea("gdTxtTestDescList");
										textArea_1.bind("value").toDataColumn("TEST_DESC");
										return textArea_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "RSLT_RCD";
									cell.control = (function(){
										var radioButton_1 = new cpr.controls.RadioButton("gdbRsltRcdIng");
										radioButton_1.enabled = false;
										(function(radioButton_1){
											radioButton_1.setItemSet(app.lookup("dsListUtestRslt"), {
												"label": "CD_NM",
												"value": "CD"
											})
										})(radioButton_1);
										radioButton_1.bind("value").toDataColumn("RSLT_RCD");
										return radioButton_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "FAILE_RSN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "BEF_RSLT_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbBefRsltRcdIng");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										comboBox_4.style.css({
											"text-align" : "center"
										});
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListUtestRslt"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("BEF_RSLT_RCD");
										return comboBox_4;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCmnUtestRsltSelectionChange == "function") {
					grid_2.addEventListener("selection-change", onGrdCmnUtestRsltSelectionChange);
				}
				container.addChild(grid_2, {
					"top": "290px",
					"left": "450px",
					"width": "770px",
					"height": "305px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-MENULST");
				container.addChild(userDefinedControl_4, {
					"top": "5px",
					"left": "5px",
					"width": "220px",
					"height": "25px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCmnPgm");
				grid_3.init({
					"dataSet": app.lookup("dsCmnPgm"),
					"columns": [
						{"width": "40px"},
						{"width": "85px"},
						{"width": "105px"},
						{"width": "90px"},
						{"width": "45px"},
						{"width": "60px"},
						{"width": "135px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SEQ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PGM_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PGM_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TYPE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NPSS_CNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NPSS_CNT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "MID_MENU_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "PGM_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "PGM_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PGM_TYPE";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DONOT_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "EXIST_TEST_CASE_YN";
									cell.style.css({
										"text-align" : "right"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdCmnPgmSelectionChange == "function") {
					grid_3.addEventListener("selection-change", onGrdCmnPgmSelectionChange);
				}
				container.addChild(grid_3, {
					"top": "30px",
					"left": "5px",
					"width": "440px",
					"height": "565px"
				});
				var output_5 = new cpr.controls.Output("opt1");
				output_5.value = "미완료";
				container.addChild(output_5, {
					"top": "5px",
					"left": "266px",
					"width": "60px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("opt2");
				output_6.value = "건";
				container.addChild(output_6, {
					"top": "5px",
					"left": "360px",
					"width": "16px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optFailCnt");
				output_7.value = "";
				output_7.bind("value").toDataMap(app.lookup("dmReqList"), "labelCnt");
				container.addChild(output_7, {
					"top": "5px",
					"left": "325px",
					"width": "36px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("output1");
				output_8.value = "";
				container.addChild(output_8, {
					"top": "5px",
					"left": "109px",
					"width": "20px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("output2");
				output_9.value = "";
				container.addChild(output_9, {
					"top": "5px",
					"left": "133px",
					"width": "20px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaMenu");
			cpr.core.App.load("app/cmn/impStdCmnPMenuSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "675px",
				"left": "135px",
				"width": "100px",
				"height": "22px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
		}
	});
	app.title = "stdCmnCRoleMenu";
	cpr.core.Platform.INSTANCE.register(app);
})();
