/*
 * App URI: app/crs/extCrsCBankFileCrt
 * Source Location: app/crs/extCrsCBankFileCrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsCBankFileCrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsCBankFileCrt.xtm"/>
			
			
			var extCrsCBankFileCrt = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
					
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnStudPop",
					iStudNo 		: "ipbStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "/root/reqKey/END_DT",
					iObjDivRcd 		: "", 
					iObjCd 			: "", 
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbStudIdObj",
					oStudNo 		: "ipbStudId",
					oStudNm 		: "",
					oStatNm 		: "",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : null
				}
				];	
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onModelConstructDone_ExtCrsCBankFileCrt = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptError"]);
					
					//오루내역 리피트 visible = false
					util.Control.setVisible(app, false, ["grpData"]);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt","cbbBankRcd", "cbbAtte"]);
							
							util.SelectCtl.selectItem(app, "cbbBankRcd", 0);
							
							util.Control.setValue(app, "ckbPayTypeAll", "Y");
							
							// 학기, 납부형태에 따른 납부형태, 분납차수 제어
							doChangeExecCond();
						}
					});
				};
				
				/**
				 * @desc 학년도 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onValueChanged_CbbYear = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학기 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onValueChanged_CbbSmt = function() {
					doChangeDate();
					
					// 학기, 납부형태에 따른 납부형태, 분납차수 제어
					doChangeExecCond();
				};
				
				/**
				 * @desc 학년도학기 변경 이벤트 - 기준 시작일자, 종료일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				function doChangeDate() {
					util.DataMap.setValue(app, "dmReqKey", "ST_DT", "");
					util.DataMap.setValue(app, "dmReqKey", "END_DT", "");
					
					ExtSubmission.sendEx("subDate", "date"); 
				};
				
				/**
				 * @desc 납부형태-분납 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onValueChanged_CkbPayTypeDiv = function() {
					// 학기, 납부형태에 따른 납부형태, 분납차수 제어
					doChangeExecCond();
				};
				
				/**
				 * @desc 실행조건 학생팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onClick_BtnStudPop = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 실행조건 학생 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 실행조건 학기에 따른 납부형태, 분납차수 제어
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doChangeExecCond() {
					var vsSmtCd = util.Control.getValue(app, "cbbSmt");
					var vsChkValue = vsSmtCd.substring(vsSmtCd.length - 2);
					
					//계절학기일경우 
					if ("91" == vsChkValue || "93" == vsChkValue) {
						util.Control.setEnable(app, false, ["ckbPayTypeAll", "ckbPayTypeDiv", "rdbDivPaySeq"]);
						
						util.Control.setValue(app, "ckbPayTypeDiv", "");
						util.Control.setValue(app, "rdbDivPaySeq", "");
						util.Control.setValue(app, "ckbPayTypeAll", "Y");
					} else {
						util.Control.setEnable(app, true, ["ckbPayTypeAll", "ckbPayTypeDiv"]);
						
						if(util.Control.getValue(app, "ckbPayTypeDiv") == "Y"){
							util.Control.setEnable(app, true, ["rdbDivPaySeq"]);
						}else{
							util.Control.setValue(app, "rdbDivPaySeq", "")	;
							util.Control.setEnable(app, false, ["rdbDivPaySeq"]);
						}	
					}
				};
				
				/**
				 * @desc 실행버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-31
				 */
				moPage.onClick_BtnSaveRun = function() { 
					
					util.Msg.notify(app, "null");	
					//오루내역 리피트 visible = false
					util.Control.setVisible(app, false, ["grpData"]);
					
					if(!util.validate(app, ["cbbSchYear", "cbbSmt", "cbbBankRcd"])) return;
					
					// 실행조건 유효성 체크
					if(!doCondValidation()) return;
					
					var vsSchYearSelIdx = util.SelectCtl.getSelectedIndex(app, "cbbSchYear");
					var vsSmtSelIdx = util.SelectCtl.getSelectedIndex(app, "cbbSmt");
					var vsBankSelIdx = util.SelectCtl.getSelectedIndex(app, "cbbBankRcd");
					
					//파일명 (학년도+학기+_+은행명)
					util.DataMap.setValue(app, "dmReqKey", "strFileNm", util.SelectCtl.getLabel(app, "cbbSchYear", vsSchYearSelIdx) + util.SelectCtl.getLabel(app, "cbbSmt", vsSmtSelIdx) + "_" + util.SelectCtl.getLabel(app, "cbbBankRcd", vsBankSelIdx));	
					
					// 2016.10.14 배치처리전 커버페이지 씌우는 로직추가
					util.coverPage(app);
					
					// 등록대상은행파일 생성 서브미션
					//strCommand: crtBankFile 
					util.Submit.send(app, "subCrtBankFile", function(pbSuccess){
						if(pbSuccess){
							var vsIsErr = util.DataMap.getValue(app, "dmResList", "isErr");
							if(vsIsErr == "Y"){
								//파일생성이 실패되었습니다. 오류목록을 확인하시길 바랍니다.
								util.Msg.alert("NLS-CRS-M102");
								util.Msg.notify(app, "NLS.CRS.M102");	
								
								//오루내역 리피트 visible
								util.Control.setVisible(app, true, ["grpData"]);
								util.Control.redraw(app, "grdError");
							}else{
								//오루내역 리피트 visible = false
								util.Control.setVisible(app, false, ["grpData"]);
								util.Control.redraw(app, "grdError");
								
								var vsResultCnt = util.DataMap.getValue(app, "dmResList", "strResultCnt");	
								
								//은행용 파일이 생성되었습니다.
								util.Msg.alert("NLS-CRS-M101", [vsResultCnt]);
								util.Msg.notify(app, "NLS.CRS.M100");	
								
								// 파일 셋팅
								var vsFileDir = util.DataMap.getValue(app, "dmFileInfo", "strFileDir");		//파일디렉토리경로
								var vsFileNm = util.DataMap.getValue(app, "dmFileInfo", "strFileNm");		//파일명
								var vsFileChgNm = util.DataMap.getValue(app, "dmFileInfo", "strFileChgNm");	//변환파일명(실제 서버에 저장된 파일명)
								var strTmpFilePath = util.DataMap.getValue(app, "dmFileInfo", "strTmpFilePath");	
								
								var voFileParam = {
											"strFileSubPath" : "",
											"strFileNm" : vsFileChgNm,
											"strOriFileNm" : vsFileNm,
											"strTmpFilePath" : strTmpFilePath,
											"strCommand" : "fileDownLoad"
								}
								
								//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
								FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voFileParam);
							}	
							
						}else{
							//파일생성이 실패되었습니다.
							util.Msg.alert("NLS-CRS-M099");
							util.Msg.notify(app, "NLS.CRS.M099");	
						}	
						
						util.removeCover(app);
					}); 
				};
				
				/**
				 * @desc 실행조건 검증
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doCondValidation() {
					var vbValid = true;
					
					var vsPayTypeAll = util.Control.getValue(app, "ckbPayTypeAll");	//납부형태(전액)
					var vsPayTypeDiv = util.Control.getValue(app, "ckbPayTypeDiv"); 	//납부형태(분납)
					
					// 납부형태 체크
					if (ValueUtil.isNull(vsPayTypeAll) && ValueUtil.isNull(vsPayTypeDiv)) {
						vbValid = false;
						util.Msg.alert("NLS-WRN-M100", [ExtControl.getTextValue("lblPayType")]);
					}
					else if (vsPayTypeDiv == "Y") {
						
						var vsDivPaySeq = util.Control.getValue(app, "rdbDivPaySeq"); 	//분납차수 
						
						//분납차수.
						if (ValueUtil.isNull(vsDivPaySeq)) {
							vbValid = false;
							// 분납선택시 차수는 필수항목입니다.
							util.Msg.alert("NLS-CRS-M098");
							util.Control.setFocus(app, "rdbDivPaySeq");
						}
					}
					
					return vbValid;
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListPayBank");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListAtte");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListYear");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListSmt");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListErrStud");
			dataSet_5.parseData({
				"columns": [
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "ERROR_DESC"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "SA_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "strBankRcd",
						"dataType": "string"
					},
					{
						"name": "strPayTypeAll",
						"dataType": "string"
					},
					{
						"name": "strPayTypeDiv",
						"dataType": "string"
					},
					{
						"name": "strDivPaySeq",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strAddStatRcd",
						"dataType": "string"
					},
					{
						"name": "strRegFeePayRec",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "isErr",
						"dataType": "string"
					},
					{
						"name": "strResultCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFileInfo");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsBankFileCrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/crs/ExtCrsBankFileCrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCrtBankFile");
			submission_3.action = "/crs/ExtCrsBankFileCrt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_3, false);
			submission_3.addResponseData(dataMap_2, false);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnSaveRun");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-GLS-EXEC");
			if(typeof onBtnSaveRunClick == "function") {
				button_1.addEventListener("click", onBtnSaveRunClick);
			}
			container.addChild(button_1, {
				"top": "35px",
				"left": "1170px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpExecCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "270px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListYear"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "110px",
					"width": "150px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListSmt"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "375px",
					"width": "150px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optBankRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-BANK");
				container.addChild(output_3, {
					"top": "30px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbBankRcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optBankRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strBankRcd");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsListPayBank"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "110px",
					"width": "150px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optPayType");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-SCR-PAYFORM");
				container.addChild(output_4, {
					"top": "30px",
					"left": "270px",
					"width": "100px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbPayTypeAll");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "전액";
				checkBox_1.bind("fieldLabel").toExpression("#optPayType.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayTypeAll");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "375px",
					"width": "75px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optDivPaySeq");
				output_5.value = "";
				output_5.bind("value").toLanguage("NLS-SCR-DIVPAYSEQ");
				container.addChild(output_5, {
					"top": "30px",
					"left": "535px",
					"width": "100px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbDivPaySeq");
				radioButton_1.bind("fieldLabel").toExpression("#optDivPaySeq.value");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivPaySeq");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("1차", "1"));
					radioButton_1.addItem(new cpr.controls.Item("2차", "2"));
					radioButton_1.addItem(new cpr.controls.Item("3차", "3"));
					radioButton_1.addItem(new cpr.controls.Item("4차", "4"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"top": "30px",
					"left": "640px",
					"width": "355px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optStudId");
				output_6.value = "";
				output_6.bind("value").toLanguage("NLS-SCR-STUDID");
				container.addChild(output_6, {
					"top": "55px",
					"left": "5px",
					"width": "100px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "55px",
					"left": "110px",
					"width": "126px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopClick == "function") {
					button_2.addEventListener("click", onBtnStudPopClick);
				}
				container.addChild(button_2, {
					"top": "55px",
					"left": "237px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudIdObj");
				inputBox_2.visible = false;
				inputBox_2.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudId");
				container.addChild(inputBox_2, {
					"top": "55px",
					"left": "259px",
					"width": "5px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbPayTypeDiv");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "분납";
				checkBox_2.bind("fieldLabel").toExpression("#optPayType.value");
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayTypeDiv");
				if(typeof onCkbPayTypeDivValueChange == "function") {
					checkBox_2.addEventListener("value-change", onCkbPayTypeDivValueChange);
				}
				container.addChild(checkBox_2, {
					"top": "30px",
					"left": "449px",
					"width": "75px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optAtte");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_7, {
					"top": "5px",
					"left": "534px",
					"width": "100px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbAtte");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optAtte.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strAddStatRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsListAtte"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "639px",
					"width": "121px",
					"height": "25px"
				});
				var checkBox_3 = new cpr.controls.CheckBox("chkFeePayRec");
				checkBox_3.value = "";
				checkBox_3.trueValue = "Y";
				checkBox_3.falseValue = "";
				checkBox_3.text = "미등록자";
				checkBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strRegFeePayRec");
				container.addChild(checkBox_3, {
					"top": "5px",
					"left": "764px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "80px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "654px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-REFUNDLIST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdError");
				grid_1.init({
					"dataSet": app.lookup("dsListErrStud"),
					"columns": [
						{"width": "40px"},
						{"width": "98px"},
						{"width": "111px"},
						{"width": "151px"},
						{"width": "67px"},
						{"width": "734px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ERROR_LIST");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptProcRsltYear");
										output_8.dataType = "number";
										output_8.format = "###";
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ERROR_DESC";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "495px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "145px",
				"left": "5px",
				"width": "1225px",
				"height": "530px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_3.ctrl = linker.grid_1;
		}
	});
	app.title = "등록대상은행파일 생성";
	cpr.core.Platform.INSTANCE.register(app);
})();
