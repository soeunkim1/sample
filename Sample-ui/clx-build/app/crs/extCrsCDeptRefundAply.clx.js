/*
 * App URI: app/crs/extCrsCDeptRefundAply
 * Source Location: app/crs/extCrsCDeptRefundAply.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsCDeptRefundAply", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsCDeptRefundAply.xtm"/>
			
			
			var extCrsCDeptRefundAply = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnStudPop",
					iStudNo 		: "ipbStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "",
					iObjDivRcd 		: "", 
					iObjCd 			: "", 
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbStudIdObj",
					oStudNo 		: "ipbStudId",
					oStudNm 		: "",
					oStatNm 		: "",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : null
				}
				,{
					controlId 		: "btnFrfStudPop",
					iStudNo 		: "ipbFrfStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "",
					iObjDivRcd 		: "", 
					iObjCd 			: "", 
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbFrfStudIdObj",
					oStudNo 		: "ipbFrfStudId",
					oStudNm 		: "optFrfRepNm",
					oStatNm 		: "optFrfStatNm",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "optFrfProcRsltYear",
					oSaNm			: "optFrfSaNm",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : function(voParam) {
						doGetRegScalInfo();
					}
				}
				];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-26
				 */
				moPage.onModelConstructDone_ExtCrsCDeptRefundAply = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptRefundAply", "frfRefundAply"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					//암호화컬럼 설정
					ExtRepeat.addOriginCol("rptRefundAply", ["STUD_ACCT_NO"]);
					
					doOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */
				function doOnLoad(){
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbProcRsnRcd");
							
							// 현재일자 셋팅
							var vsSysdate = util.DataMap.getValue(app, "dmResOnLoad", "strSysdate").substring(0,8);
							util.Control.setValue(app, "ipbRefStDt", vsSysdate);
							util.Control.setValue(app, "ipbRefEndDt", vsSysdate);
							
							// 기준일자 = 현재일자
							util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsSysdate);
						}
					}, true);
				};
				
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-26
				 */
				function doSetPopKeyDate() {
					var vsSysdate = util.DataMap.getValue(app, "dmResOnLoad", "strSysdate").substring(0,8);
					
					moPObject.moIdsForStdCsrPStSearch[0].iKeyDate = vsSysdate;
					moPObject.moIdsForStdCsrPStSearch[1].iKeyDate = vsSysdate;
				};
				
				/**
				 * @desc 조회조건 학생 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-26
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 조회조건 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-26
				 */
				moPage.onClick_BtnStudPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-26
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc  환불신청 목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdRefundAply");
							
							// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
							doCompareFrfEnable();	
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc   리피트 패널 체크
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/**
				 * @desc   프리폼 변경시 리피트 반영
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onUpdate_FrfBase = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptRefundAply", "frfRefundAply");
				}
				
				/**
				 * @desc   리피트 row select  이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onRowSelect_RptStudScal = function() {
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptRefundAply","frfRefundAply");
					
					doCompareFrfEnable();
				};
					
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */
				function doCompareFrfEnable() {
					var vnIdx = util.Grid.getIndex(app, "grdRefundAply");
					var vsStaus = util.Grid.getRowState(app, "grdRefundAply", vnIdx);
					
					// 마스터 로우 없을경우 프리폼 리셋
					var vsRowCnt = util.Grid.getRowCount(app, "grdRefundAply");
					if( vsRowCnt <= 0 || !vnIdx){
						util.Control.reset(app, "frfRefundAply");
					}	
					
					if( (!vnIdx) || vsStaus == "delete") {
						util.Control.setEnable(app, false, ["frfRefundAply"]);	
					}else{
						// 환불처리일 값이 잇는 경우 프리폼 비활성화
						var vsProcDt = util.Grid.getCellValue(app, "grdRefundAply", "PROC_DT", vnIdx);
						if(ValueUtil.isNull(vsProcDt)){
							util.Control.setEnable(app, true, ["frfRefundAply"]);	
							
							if(vsStaus == "insert"){
								ExtControl.setEnable (true, ["ipbFrfStudId", "btnFrfStudPop", "cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfItemCd"]);	
							}else{
								util.Control.setEnable(app, false, ["ipbFrfStudId", "btnFrfStudPop", "cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfItemCd"]);	
							}
							
							// 환불사유가 자퇴제적인 경우 환불금액 비활성화하고 환불율에 의해 자동계산되어지도록 함, 그 외는 직접입력
							var vsProcRsnRcd = util.Grid.getCellValue(app, "grdRefundAply", "PROC_RSN_RCD", vnIdx);
							if(vsProcRsnRcd == "CR30501"){
								util.Control.setEnable(app, false, ["ipbFrfAmt"]);
								util.Control.setEnable(app, true, ["iptFrfRefundTransRateNur", "iptFrfRefundTransRateDen"]);
							}else{
								util.Control.setEnable(app, true, ["ipbFrfAmt"]);
								util.Control.setEnable(app, false, ["iptFrfRefundTransRateNur", "iptFrfRefundTransRateDen"]);
							}	
							
						}else{
							util.Control.setEnable(app, false, ["frfRefundAply"]);	
						}	
					}	
				};	
				
				/**
				 * @desc 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */		
				moPage.onClick_BtnNew = function() {
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var vnNewRow = util.Grid.insertRow(app, "grdRefundAply");	
					
					var vsSchYearRcd  = util.DataMap.getValue(app, "dmResOnLoad", "strSchYearRcd");
					var vsSmtRcd      = util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcd");
					var vsSysDate   = util.DataMap.getValue(app, "dmResOnLoad", "strSysdate");
					
					util.Grid.setCellValue(app, "grdRefundAply", "SCH_YEAR_RCD"	, vsSchYearRcd	 , vnNewRow);
					util.Grid.setCellValue(app, "grdRefundAply", "SMT_RCD"     	, vsSmtRcd		 , vnNewRow);
					util.Grid.setCellValue(app, "grdRefundAply", "INPUT_DT"	    , vsSysDate	 	 , vnNewRow);
					util.Grid.setCellValue(app, "grdRefundAply", "REG_CLS_RCD"	, "CR30101"	 	 , vnNewRow);	//등록금분류코드
					util.Grid.setCellValue(app, "grdRefundAply", "DESC_TYPE_RCD"	, "CR302REF"	 , vnNewRow);	//내역유형코드
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptRefundAply","frfRefundAply", vnNewRow);
					
					doCompareFrfEnable();
					
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "ipbFrfStudId");
				};
				
				/**
				 * 프리폼 학생검색버튼클릭이벤트
				 * @param sender
				 * @type void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onClick_BtnFrfStudPop = function(sender){
					doSetPopKeyDate();
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * 프리폼 학생변경이벤트
				 * @param sender
				 * @type void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onValueChanged_IpbFrfStudId = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onClick_BtnDel = function() {
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdRefundAply");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsProcDt = util.Grid.getCellValue(app, "grdRefundAply", "PROC_DT", vnRow);
						
						if(!ValueUtil.isNull(vsProcDt)){
							// 환불처리가 완료된 건이 존재하여 삭제 불가능합니다.
							util.Msg.alert("NLS-CRS-M087");	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							return;
						}
					}  
					
					// 삭제처리
					util.Grid.deleteRow(app, "grdRefundAply");
					
					// 로우가 없는 경우 rowSelect 이벤트가 일어나지 않으므로 이벤트 추가
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdRefundAply");
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptRefundAply","frfRefundAply");
					
					// 로우가 없는 경우 rowSelect 이벤트가 일어나지 않으므로 이벤트 추가
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-26
				 */	
				moPage.onClick_BtnSave = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdRefundAply"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdRefundAply")) return false;
					
					//모든 데이터를 체크하기 위해 변경
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							// 신규시 pk_value 설정
							var vsPkSerialNo = util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSerialNo");
							if(!ValueUtil.isNull(vsPkSerialNo)){
								var vsPkValue = "STUD_ID:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsStudId") 
												+ ",SCH_YEAR_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSchYearRcd") 
												+ ",SMT_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSmtRcd")
												+ ",REG_CLS_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsRegClsRcd")
												+ ",ITEM_CD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsItemCd")
												+ ",DESC_TYPE_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsDescTypeRcd")
												+ ",SERIAL_NO:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSerialNo");
								ExtRepeat.setPkValues("rptRefundAply", vsPkValue);
							}	
							
							doList(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * 계좌번호 변경 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onValueChanged_IpbFrfStudAcctNo = function() {
					var vsValue = util.FreeForm.getValue(app, "frfRefundAply", "STUD_ACCT_NO");
					var vsChkValue = "";
					//특수문자만 입력시 널처리
					var specialChars = /[-~!#$^&*=+|:;?"<,.>']/;
					vsValue.split(specialChars).join("");
					
					if (vsValue.match(/[0-9]/g) != null) {
						vsChkValue = vsValue.match(/[0-9]/g).join("");
					} else {
						vsChkValue =  "";
					}
					util.FreeForm.setValue(app, "frfRefundAply", "STUD_ACCT_NO", vsChkValue, false);
				};
				
				/**
				 * 환불금액 변경 이벤트 -> 저장시 체크로 변경
				 * @return void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onValueChanged_IpbFrfAmt = function() {
					
			//		var vsValue = ExtFreeForm.getValue("frfRefundAply", "AMT");
			//		
			//		if(vsValue.length != 0 && Number(vsValue) < 1){
			//			//-는 입력 안됨 : @은 0보다 큰수만 허용됩니다.
			//			ComMsg.alert(NLS.CRS.M006, [NLS.NSCR.RFDAMT]);
			//			ExtFreeForm.setValue("frfRefundAply", "AMT", "");
			//			ExtControl.setFocus("ipbFrfAmt");
			//			return;
			//		}
				};
				
				/**
				 * @desc 환불신청 목록에 체크된 리피트 인덱스 배열 리턴
				 * @return Array 리피트에 체크된 인덱스 배열
				 * @author Aeyoung Lee 2016-05-26
				 */
				function doGetSelRowIdx() {
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdRefundAply");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					return voPanelChk;
				};
				
				/**
				 * 환불 신청 버튼 클릭 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onClick_BtnSaveAply = function() {
					// 환불신청 목록 선택 여부 체크
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptRefundAply/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdRefundAplyRefundAply")]);
						return false;
					}
					
					// 리피터 변경사항 체크
					if(util.Grid.isModified(app, ["grdRefundAply"])){
						//환불신청목록에 변경사항 있습니다. 먼저 저장하시기 바랍니다.
						util.Msg.alert("NLS-CRS-M088");
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = moPage.doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsProcPlanDt = util.Grid.getCellValue(app, "grdRefundAply", "PROC_PLAN_DT", vnRow);
						
						// 미신청 자료인지 체크
						if(!ValueUtil.isNull(vsProcPlanDt)){
							// 환불신청된 자료가 존재하여 처리불가합니다.
							util.Msg.alert("NLS-CRS-M089");	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						// 은행, 계좌번호, 예금주 필수 입력 체크
						var vsStudBankRcd = util.Grid.getCellValue(app, "grdRefundAply", "STUD_BANK_RCD", vnRow);
						var vsStudAcctNo = util.Grid.getCellValue(app, "grdRefundAply", "STUD_ACCT_NO", vnRow);
						var vsOwnerNm = util.Grid.getCellValue(app, "grdRefundAply", "OWNER_NM", vnRow);
						
						if(ValueUtil.isNull(vsStudBankRcd)){
							util.Msg.alert("NLS-WRN-M100", [NLS.NSCR.BANK]);	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							util.Control.setFocus(app, "cbbFrfStudBankCd");
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						if(ValueUtil.isNull(vsStudAcctNo)){
							util.Msg.alert("NLS-WRN-M100", [NLS.NSCR.ACCT_NO]);	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							util.Control.setFocus(app, "ipbFrfStudAcctNo");
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						if(ValueUtil.isNull(vsOwnerNm)){
							util.Msg.alert("NLS-WRN-M100", [NLS.NSCR.OWNER_NM]);	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							util.Control.setFocus(app, "ipbFrfOwerNm");
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdRefundAply", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 환불신청처리 서브미션
					//strCommand: aplyRefund 
					util.Submit.send(app, "subAplyRefund", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){	
								if(pbListSuccess){		
									//환불신청이 처리되었습니다.
									util.Msg.alert("NLS-CRS-M091");
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				}
				
				/**
				 * 환불신청취소 버튼 클릭 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-26
				 */	
				moPage.onClick_BtnSaveCancel = function() {
					// 환불신청 목록 선택 여부 체크
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptRefundAply/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdRefundAplyRefundAply")]);
						return false;
					}
					
					// 리피터 변경사항 체크
					if(util.Grid.isModified(app, ["grdRefundAply"])){
						//환불신청목록에 변경사항 있습니다. 먼저 저장하시기 바랍니다.
						util.Msg.alert("NLS-CRS-M088");
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						
						var vsProcPlanDt = util.Grid.getCellValue(app, "grdRefundAply", "PROC_PLAN_DT", vnRow);
						var vsProcDt = util.Grid.getCellValue(app, "grdRefundAply", "PROC_DT", vnRow);
						
						if(!(ValueUtil.isNull(vsProcDt) && !ValueUtil.isNull(vsProcPlanDt))){
							// 환불신청된 자료만 취소가능합니다. 처리불가합니다.
							util.Msg.alert("NLS-CRS-M090");	
							util.Grid.selectRow(app, "grdRefundAply", vnRow);
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdRefundAply", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 환불신청취소 서브미션
					//strCommand: cancelRefund 
					util.Submit.send(app, "subCancelRefund", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){
								if(pbListSuccess){		
									//환불신청취소가 처리되었습니다.
									util.Msg.alert("NLS-CRS-M092");
									util.Msg.notify(app, "NLS.INF.M025");
								}	
							});
						}else{
							util.Grid.setRowStateAll(app, "grdRefundAply", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				};
				
				/**
				 * 기타증빙파일생성 버튼 클릭 이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-09
				 */	
				moPage.onClick_BtnSaveFileCrt = function() {
					
					// 리피터 변경사항 체크
					if(util.Grid.isModified(app, ["grdRefundAply"])){
						//환불신청목록에 변경사항 있습니다. 먼저 저장하시기 바랍니다.
						util.Msg.alert("NLS-CRS-M088");
						return false;
					}
					
					// 배치처리전 커버페이지 씌우는 로직추가
					util.coverPage(app);
					
					//strCommand: crtFile 
					util.Submit.send(app, "subCrtFile", function(pbSuccessRun){
						if(pbSuccessRun){
							
							//파일이 생성되었습니다.
							util.Msg.alert("NLS-CRS-M109");
							util.Msg.notify(app, "NLS.CRS.M109");	
							
							// 파일 셋팅
							var vsFileDir = util.DataMap.getValue(app, "dmFileInfo", "strFileDir");		//파일디렉토리경로
							var vsFileNm = util.DataMap.getValue(app, "dmFileInfo", "strFileNm");		//파일명
							var vsFileChgNm = util.DataMap.getValue(app, "dmFileInfo", "strFileChgNm");	//변환파일명(실제 서버에 저장된 파일명)
							var strTmpFilePath = util.DataMap.getValue(app, "dmFileInfo", "strTmpFilePath");	
							
							var voFileParam = {
										"strFileSubPath" : "",
										"strFileNm" : vsFileChgNm,
										"strOriFileNm" : vsFileNm,
										"strTmpFilePath" : strTmpFilePath,
										"strCommand" : "fileDownLoad"
							}
							
							//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
							FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voFileParam);
						}else{
							//파일생성이 실패되었습니다.
							util.Msg.notify(app, "NLS.CRS.M110");	
						}	
						
						util.removeCover(app);
					});  
				};
				
				/**
				 * 학년도 변경이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-09
				 */	
				moPage.onValueChanged_CbbFrfSchYearRcd = function() {
					doGetRegScalInfo();
				};
				
				/**
				 * 학기 변경이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-09
				 */	
				moPage.onValueChanged_CbbFrfSmtRcd = function() {
					doGetRegScalInfo();
				};
				
				/**
				 * 등록금항목 변경이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-09
				 */	
				moPage.onValueChanged_CbbFrfItemCd = function() {
					doGetRegScalInfo();
				};
				
				/**
				 * 학번, 학년도, 학기, 등록금항목 변경 시 등록금납입금액, 장학금액, 실납입액 조회 서브미션
				 * @return void
				 * @author AeyoungLee 2016-11-09
				 */	
				function doGetRegScalInfo() {
					
					var vsSchYearRcd = util.FreeForm.getValue(app, "frfRefundAply", "SCH_YEAR_RCD");
					var vsSmtRcd = util.FreeForm.getValue(app, "frfRefundAply", "SMT_RCD");
					var vsStudId = util.FreeForm.getValue(app, "frfRefundAply", "STUD_ID");
					var vsItemCd = util.FreeForm.getValue(app, "frfRefundAply", "ITEM_CD");
					
					if(ValueUtil.isNull(vsSchYearRcd) || ValueUtil.isNull(vsSmtRcd) || ValueUtil.isNull(vsStudId) || ValueUtil.isNull(vsItemCd)){
						util.FreeForm.setValue(app, "frfRefundAply", "REG_PAY_AMT", "");
						util.FreeForm.setValue(app, "frfRefundAply", "SCAL_AMT", "");
						util.FreeForm.setValue(app, "frfRefundAply", "REAL_PAY_AMT", "");
						return false;	
					}	
					
					util.DataMap.setValue(app, "dmReqStudKey", "strSchYearRcd", vsSchYearRcd);
					util.DataMap.setValue(app, "dmReqStudKey", "strSmtRcd", vsSmtRcd);
					util.DataMap.setValue(app, "dmReqStudKey", "strStudId", vsStudId);
					util.DataMap.setValue(app, "dmReqStudKey", "strItemCd", vsItemCd);
					
					//strCommand: regScalInfo 
					util.Submit.send(app, "subRegScalInfo", function(pbSuccess){
						if(pbSuccess){
							
							util.FreeForm.setValue(app, "frfRefundAply", "REG_PAY_AMT", util.DataMap.getValue(app, "dmRegScalInfo", "strRegPayAmt"));
							util.FreeForm.setValue(app, "frfRefundAply", "SCAL_AMT", util.DataMap.getValue(app, "dmRegScalInfo", "strScalAmt"));
							util.FreeForm.setValue(app, "frfRefundAply", "REAL_PAY_AMT", util.DataMap.getValue(app, "dmRegScalInfo", "strRealPayAmt"));
							
							// 환불율이 있는 경우 다시 계산하여 셋팅
							doGetCalcRefundInfo();
						}
						
					}); 
					
				};	
				
				/**
				 * 환불비율분자 변경이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-16
				 */	
				moPage.onValueChanged_IptFrfRefundTransRateNur = function() {
					// 리프트 환불율 셋팅
					var vnRateNur = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_NUR"));
					var vnRateDen = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_DEN"));
					
					if(vnRateNur < 1 || vnRateDen < 1){
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE", "");	
					}else{
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE", vnRateNur + "/" + vnRateDen);	
					}
					
					doGetCalcRefundInfo();
				};
				
				/**
				 * 환불비율분모 변경이벤트
				 * @return void
				 * @author AeyoungLee 2016-11-16
				 */	
				moPage.onValueChanged_IptFrfRefundTransRateDen = function() {
					// 리프트 환불율 셋팅
					var vnRateNur = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_NUR"));
					var vnRateDen = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_DEN"));
					
					if(vnRateNur < 1 || vnRateDen < 1){
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE", "");	
					}else{
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE", vnRateNur + "/" + vnRateDen);	
					}
					
					doGetCalcRefundInfo();
				};
				
				/**
				 * 환불율 변경 시 실납입액 대비 계산 서브미션 호출
				 * @return void
				 * @author AeyoungLee 2016-11-15
				 */
				function doGetCalcRefundInfo() {
					
					var vsAmt = Number(util.FreeForm.getValue(app, "frfRefundAply", "REAL_PAY_AMT"));
					var vsRateNur = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_NUR"));
					var vsRateDen = Number(util.FreeForm.getValue(app, "frfRefundAply", "REFUND_TRANS_RATE_DEN"));
					
					if(vsAmt < 1 || vsRateNur < 1 || vsRateDen < 1){
						util.FreeForm.setValue(app, "frfRefundAply", "AMT", "0");
						return false;	
					}	
					
					util.DataMap.setValue(app, "dmReqCalcKey", "strPayAmt", vsAmt);
					util.DataMap.setValue(app, "dmReqCalcKey", "strRateNur", vsRateNur);
					util.DataMap.setValue(app, "dmReqCalcKey", "strRateDen", vsRateDen);
					
					// 환불금액 계산 서브미션
					//strCommand: calcRefundInfo 
					util.Submit.send(app, "subCalcRefundInfo", function(pbSuccess){
						if(pbSuccess){
							util.FreeForm.setValue(app, "frfRefundAply", "AMT", util.DataMap.getValue(app, "dmCalcRefundInfo", "strCalcRefundAmt"));
						}
					}); 
				};
				
				/**
				 * 환불사유 변경시 환불금액, 환불율 컨트롤 제어
				 * @return void
				 * @author AeyoungLee 2016-11-15
				 */
				moPage.onValueChanged_CbbFrfProcRsnRcd = function() {
					// 환불사유가 자퇴제적인 경우 환불금액 비활성화하고 환불율에 의해 자동계산되어지도록 함, 그 외는 직접입력
					var vsProcRsnRcd = util.FreeForm.getValue(app, "frfRefundAply", "PROC_RSN_RCD");
					if(vsProcRsnRcd == "CR30501"){
						util.Control.setEnable(app, false, ["ipbFrfAmt"]);
						util.Control.setEnable(app, true, ["iptFrfRefundTransRateNur", "iptFrfRefundTransRateDen"]);
					}else{
						util.Control.setEnable(app, true, ["ipbFrfAmt"]);
						util.Control.setEnable(app, false, ["iptFrfRefundTransRateNur", "iptFrfRefundTransRateDen"]);
						
						util.FreeForm.setValue(app, "frfRefundAply", "REFUND_TRANS_RATE_NUR", "");
						util.FreeForm.setValue(app, "frfRefundAply", "REFUND_TRANS_RATE_DEN", "");
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE_NUR", "");
						util.Grid.setCellValue(app, "grdRefundAply", "REFUND_TRANS_RATE_DEN", "");
					}		
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListProcRsnRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListStatRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListStudBankCd");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListSchYearRcd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListSmtRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsFrfRefundAply");
			dataSet_7.parseData({
				"columns": [
					{"name": "SA_NM"},
					{"name": "SA_CD"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "REG_CLS_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "ITEM_CD"},
					{"name": "DESC_TYPE_RCD"},
					{"name": "AMT"},
					{"name": "PROC_PLAN_DT"},
					{"name": "PROC_DT"},
					{"name": "CII_DT"},
					{"name": "REFUND_TRANS_RATE_NUR"},
					{"name": "REFUND_TRANS_RATE_DEN"},
					{"name": "REFUND_TRANS_RATE"},
					{"name": "PROC_RSN_RCD"},
					{"name": "STUD_BANK_RCD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "LOAN_YN"},
					{"name": "SERIAL_NO"},
					{"name": "INPUT_DT"},
					{"name": "STAT_NM"},
					{"name": "REMARK"},
					{"name": "REG_PAY_AMT"},
					{"name": "SCAL_AMT"},
					{"name": "REAL_PAY_AMT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsRefundAply");
			dataSet_8.parseData({
				"info": "CRS_REG_FEE_PAY@STUD_ID,SCH_YEAR_RCD,SMT_RCD,REG_CLS_RCD,ITEM_CD,DESC_TYPE_RCD,SERIAL_NO",
				"columns": [
					{"name": "SA_NM"},
					{"name": "SA_CD"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "REG_CLS_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "ITEM_CD"},
					{"name": "DESC_TYPE_RCD"},
					{"name": "AMT"},
					{"name": "PROC_PLAN_DT"},
					{"name": "PROC_DT"},
					{"name": "CII_DT"},
					{"name": "REFUND_TRANS_RATE_NUR"},
					{"name": "REFUND_TRANS_RATE_DEN"},
					{"name": "REFUND_TRANS_RATE"},
					{"name": "PROC_RSN_RCD"},
					{"name": "STUD_BANK_RCD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "LOAN_YN"},
					{"name": "SERIAL_NO"},
					{"name": "INPUT_DT"},
					{"name": "STAT_NM"},
					{"name": "REMARK"},
					{"name": "REG_PAY_AMT"},
					{"name": "SCAL_AMT"},
					{"name": "REAL_PAY_AMT"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strRefStDt",
						"dataType": "string"
					},
					{
						"name": "strRefEndDt",
						"dataType": "string"
					},
					{
						"name": "strProcRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSysdate",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqCalcKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strPayAmt",
						"dataType": "string"
					},
					{
						"name": "strRateNur",
						"dataType": "string"
					},
					{
						"name": "strRateDen",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqStudKey");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strItemCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmCalcRefundInfo");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strCalcRefundAmt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmRtnPkKeyInfo");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strInsStudId",
						"dataType": "string"
					},
					{
						"name": "strInsSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strInsSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strInsRegClsRcd",
						"dataType": "string"
					},
					{
						"name": "strInsItemCd",
						"dataType": "string"
					},
					{
						"name": "strInsDescTypeRcd",
						"dataType": "string"
					},
					{
						"name": "strInsSerialNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmFileInfo");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			
			var dataMap_8 = new cpr.data.DataMap("dmRegScalInfo");
			dataMap_8.parseData({
				"columns" : [
					{
						"name": "strRegPayAmt",
						"dataType": "string"
					},
					{
						"name": "strScalAmt",
						"dataType": "string"
					},
					{
						"name": "strRealPayAmt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_8);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsDeptRefundAply/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/ExtCrsDeptRefundAply/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_8, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/crs/ExtCrsDeptRefundAply/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_8);
			submission_3.addResponseData(dataMap_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subAplyRefund");
			submission_4.action = "/crs/ExtCrsDeptRefundAply/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_8);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subCancelRefund");
			submission_5.action = "/crs/ExtCrsDeptRefundAply/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_8);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subCrtFile");
			submission_6.action = "/crs/ExtCrsDeptRefundAply/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataMap_7, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subRegScalInfo");
			submission_7.action = "/crs/ExtCrsDeptRefundAply/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_4);
			submission_7.addResponseData(dataMap_8, false);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subCalcRefundInfo");
			submission_8.action = "/crs/ExtCrsDeptRefundAply/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataMap_3);
			submission_8.addResponseData(dataMap_5, false);
			app.register(submission_8);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStudId");
				output_1.value = "";
				output_1.bind("value").toLanguage("NLS-SCR-STUDID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "540px",
					"width": "75px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "620px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopClick == "function") {
					button_2.addEventListener("click", onBtnStudPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "722px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudIdObj");
				inputBox_2.visible = false;
				inputBox_2.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudId");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "744px",
					"width": "5px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optProcRsnRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-RFDRSN");
				container.addChild(output_2, {
					"top": "5px",
					"left": "320px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbProcRsnRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optProcRsnRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcRsnRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListProcRsnRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "400px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optTerm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-TERM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "5px",
					"width": "75px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("ipbRefStDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optTermSt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRefStDt");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "85px",
					"width": "105px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("ipbRefEndDt");
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optTermEnd.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strRefEndDt");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "205px",
					"width": "105px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optText");
				output_4.value = "~";
				container.addChild(output_4, {
					"top": "5px",
					"left": "190px",
					"width": "15px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optTermSt");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-SCR-TERM_ST_DT");
				container.addChild(output_5, {
					"top": "5px",
					"left": "815px",
					"width": "75px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optTermEnd");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-SCR-TERM_END_DT");
				container.addChild(output_6, {
					"top": "5px",
					"left": "900px",
					"width": "75px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-REFUND_APLY_LIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnNew");
				button_3.value = "";
				button_3.style.setClasses(["btn-new"]);
				button_3.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_3.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnDel");
				button_4.value = "";
				button_4.style.setClasses(["btn-delete"]);
				button_4.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_4.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRestore");
				button_5.value = "";
				button_5.style.setClasses(["btn-restore"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_5.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnSave");
				button_6.value = "";
				button_6.style.setClasses(["btn-save"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_6.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdRefundAply");
				grid_1.init({
					"dataSet": app.lookup("dsRefundAply"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "56px"},
						{"width": "66px"},
						{"width": "117px"},
						{"width": "39px"},
						{"width": "74px"},
						{"width": "80px"},
						{"width": "68px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "86px"},
						{"width": "84px"},
						{"width": "56px"},
						{"width": "80px"},
						{"width": "82px"},
						{"width": "108px"},
						{"width": "71px"},
						{"width": "79px"},
						{"width": "54px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "142px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-STUDID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REFUND_ITEM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDSTDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REFUNDRATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCH_LOANER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-BANK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ACCT_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ACTHOLDER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-INPUT_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-PROCDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REMARK");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_7 = new cpr.controls.Output();
										output_7.style.css({
											"text-align" : "center"
										});
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptProcRsltYear");
										output_8.dataType = "number";
										output_8.format = "###";
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PROC_RSN_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbPmntDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsListProcRsnRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("PROC_RSN_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbPmntDivRcd1");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsListItemCd"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("ITEM_CD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REG_PAY_AMT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptRegPayAmt");
										output_9.dataType = "number";
										output_9.format = "s#,###";
										output_9.style.css({
											"text-align" : "right"
										});
										output_9.bind("value").toDataColumn("REG_PAY_AMT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("gdOptScalAmt");
										output_10.dataType = "number";
										output_10.format = "s#,###";
										output_10.style.css({
											"text-align" : "right"
										});
										output_10.bind("value").toDataColumn("SCAL_AMT");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "REAL_PAY_AMT";
									cell.control = (function(){
										var output_11 = new cpr.controls.Output("gdOptRealPayAmt");
										output_11.dataType = "number";
										output_11.format = "s#,###";
										output_11.style.css({
											"text-align" : "right"
										});
										output_11.bind("value").toDataColumn("REAL_PAY_AMT");
										return output_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var output_12 = new cpr.controls.Output("gdOptAmt");
										output_12.dataType = "number";
										output_12.format = "s#,###";
										output_12.style.css({
											"text-align" : "right"
										});
										output_12.bind("value").toDataColumn("AMT");
										return output_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CII_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "REFUND_TRANS_RATE";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "LOAN_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdCkbLoanYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("LOAN_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "STUD_BANK_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbStudBankCd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListStudBankCd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("STUD_BANK_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "STUD_ACCT_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbSchYearRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsListSchYearRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsListSmtRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SMT_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "INPUT_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "PROC_PLAN_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							}
						]
					}
				});
				if(typeof onGrdRefundAplySelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdRefundAplySelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "400px"
				});
				var button_7 = new cpr.controls.Button("btnSaveCancel");
				button_7.value = "";
				button_7.style.setClasses(["btn-save"]);
				button_7.bind("value").toLanguage("UI-SCR-REQCAN");
				if(typeof onBtnSaveCancelClick == "function") {
					button_7.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "900px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnSaveAply");
				button_8.value = "";
				button_8.style.setClasses(["btn-save"]);
				button_8.bind("value").toLanguage("UI-SCR-REFUND_APLY");
				if(typeof onBtnSaveAplyClick == "function") {
					button_8.addEventListener("click", onBtnSaveAplyClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "835px",
					"width": "60px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-REFUND_APLY_INFO");
				container.addChild(userDefinedControl_3, {
					"top": "434px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfRefundAply");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_13 = new cpr.controls.Output("optFrfInputDt");
					output_13.value = "";
					output_13.style.css({
						"text-align" : "center"
					});
					output_13.bind("value").toDataColumn("INPUT_DT");
					container.addChild(output_13, {
						"top": "106px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfProcRsltYear");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-GLS-SHYR");
					container.addChild(output_14, {
						"top": "5px",
						"left": "745px",
						"width": "95px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfStudBankCd");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-BANK");
					container.addChild(output_15, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfSchYearRcd");
					output_16.value = "";
					output_16.style.setClasses(["require"]);
					output_16.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_16, {
						"top": "105px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfItemCd");
					output_17.value = "";
					output_17.style.setClasses(["require"]);
					output_17.bind("value").toLanguage("UI-SCR-REFUND_ITEM");
					container.addChild(output_17, {
						"top": "30px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfStudAcctNo");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-SCR-ACCT_NO");
					container.addChild(output_18, {
						"top": "80px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfSmtRcd");
					output_19.value = "";
					output_19.style.setClasses(["require"]);
					output_19.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_19, {
						"top": "105px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfStudBankCd");
					comboBox_7.bind("fieldLabel").toExpression("#optFrfStudBankCd.value");
					comboBox_7.bind("value").toDataColumn("STUD_BANK_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsListStudBankCd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "80px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfOwerNm");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-ACTHOLDER");
					container.addChild(output_20, {
						"top": "81px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfInputDt");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-SCR-INPUT_DT");
					container.addChild(output_21, {
						"top": "106px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfProcPlanDt");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-DB-REQDT");
					container.addChild(output_22, {
						"top": "106px",
						"left": "680px",
						"width": "95px",
						"height": "25px"
					});
					var output_23 = new cpr.controls.Output("optFrfAmt");
					output_23.value = "";
					output_23.style.setClasses(["require"]);
					output_23.bind("value").toLanguage("UI-SCR-RFDAMT");
					container.addChild(output_23, {
						"top": "56px",
						"left": "680px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_8.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_8.bind("value").toDataColumn("SMT_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsListSmtRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					if(typeof onCbbFrfSmtRcdSelectionChange == "function") {
						comboBox_8.addEventListener("selection-change", onCbbFrfSmtRcdSelectionChange);
					}
					container.addChild(comboBox_8, {
						"top": "105px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_9.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_9.bind("value").toDataColumn("SCH_YEAR_RCD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsListSchYearRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					if(typeof onCbbFrfSchYearRcdSelectionChange == "function") {
						comboBox_9.addEventListener("selection-change", onCbbFrfSchYearRcdSelectionChange);
					}
					container.addChild(comboBox_9, {
						"top": "106px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("optFrfStudId");
					output_24.value = "";
					output_24.style.setClasses(["require"]);
					output_24.bind("value").toLanguage("NLS-SCR-STUDID");
					container.addChild(output_24, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var button_9 = new cpr.controls.Button("btnFrfStudPop");
					button_9.value = "";
					button_9.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfStudPopClick == "function") {
						button_9.addEventListener("click", onBtnFrfStudPopClick);
					}
					container.addChild(button_9, {
						"top": "5px",
						"left": "199px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_3.maxLength = 20;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_3.bind("value").toDataColumn("STUD_NO");
					if(typeof onIpbFrfStudIdValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpbFrfStudIdValueChange);
					}
					container.addChild(inputBox_3, {
						"top": "5px",
						"left": "104px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfStudIdObj");
					inputBox_4.visible = false;
					inputBox_4.userAttr({"require": "Y"});
					inputBox_4.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_4.bind("value").toDataColumn("STUD_ID");
					container.addChild(inputBox_4, {
						"top": "5px",
						"left": "221px",
						"width": "5px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optFrfRepNm");
					output_25.value = "";
					output_25.bind("value").toLanguage("UI-SCR-NAME");
					container.addChild(output_25, {
						"top": "5px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_26 = new cpr.controls.Output("optFrfSaNm");
					output_26.value = "";
					output_26.bind("value").toLanguage("UI-SCR-DEPT");
					container.addChild(output_26, {
						"top": "5px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_27 = new cpr.controls.Output("optFrfProcRsnRcd");
					output_27.value = "";
					output_27.style.setClasses(["require"]);
					output_27.bind("value").toLanguage("UI-SCR-RFDRSN");
					container.addChild(output_27, {
						"top": "31px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_28 = new cpr.controls.Output("optFrfRepNm");
					output_28.value = "";
					output_28.bind("value").toDataColumn("REP_NM");
					container.addChild(output_28, {
						"top": "5px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfStudAcctNo");
					numberEditor_1.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optFrfStudAcctNo.value");
					numberEditor_1.bind("value").toDataColumn("STUD_ACCT_NO");
					if(typeof onIpbFrfStudAcctNoValueChange == "function") {
						numberEditor_1.addEventListener("value-change", onIpbFrfStudAcctNoValueChange);
					}
					container.addChild(numberEditor_1, {
						"top": "80px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var output_29 = new cpr.controls.Output("optFrfProcPlanDt");
					output_29.value = "";
					output_29.style.css({
						"text-align" : "center"
					});
					output_29.bind("value").toDataColumn("PROC_PLAN_DT");
					container.addChild(output_29, {
						"top": "106px",
						"left": "780px",
						"width": "115px",
						"height": "25px"
					});
					var output_30 = new cpr.controls.Output("optFrfSaNm");
					output_30.value = "";
					output_30.bind("value").toDataColumn("SA_NM");
					container.addChild(output_30, {
						"top": "5px",
						"left": "555px",
						"width": "180px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfAmt");
					numberEditor_2.format = "999,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optFrfAmt.value");
					numberEditor_2.bind("value").toDataColumn("AMT");
					if(typeof onIpbFrfAmtValueChange == "function") {
						numberEditor_2.addEventListener("value-change", onIpbFrfAmtValueChange);
					}
					container.addChild(numberEditor_2, {
						"top": "56px",
						"left": "780px",
						"width": "115px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfOwerNm");
					inputBox_5.maxLength = 100;
					inputBox_5.bind("fieldLabel").toExpression("#optFrfOwerNm.value");
					inputBox_5.bind("value").toDataColumn("OWNER_NM");
					container.addChild(inputBox_5, {
						"top": "80px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var output_31 = new cpr.controls.Output("optFrfCiiDt");
					output_31.value = "";
					output_31.bind("value").toLanguage("UI-SCR-RFDSTDT");
					container.addChild(output_31, {
						"top": "56px",
						"left": "905px",
						"width": "95px",
						"height": "25px"
					});
					var output_32 = new cpr.controls.Output("optFrfProcRsltYear");
					output_32.value = "";
					output_32.style.css({
						"text-align" : "center"
					});
					output_32.bind("value").toDataColumn("PROC_RSLT_YEAR");
					container.addChild(output_32, {
						"top": "5px",
						"left": "845px",
						"width": "50px",
						"height": "25px"
					});
					var output_33 = new cpr.controls.Output("optFrfStatNm");
					output_33.value = "";
					output_33.bind("value").toDataColumn("STAT_NM");
					container.addChild(output_33, {
						"top": "5px",
						"left": "1005px",
						"width": "40px",
						"height": "25px"
					});
					var output_34 = new cpr.controls.Output("optFrfStatNm");
					output_34.value = "";
					output_34.bind("value").toLanguage("UI-SCR-SCHREGST");
					container.addChild(output_34, {
						"top": "5px",
						"left": "905px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_10 = new cpr.controls.ComboBox("cbbFrfProcRsnRcd");
					comboBox_10.bind("fieldLabel").toExpression("#optFrfProcRsnRcd.value");
					comboBox_10.bind("value").toDataColumn("PROC_RSN_RCD");
					(function(comboBox_10){
						comboBox_10.setItemSet(app.lookup("dsListProcRsnRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_10);
					if(typeof onCbbFrfProcRsnRcdSelectionChange == "function") {
						comboBox_10.addEventListener("selection-change", onCbbFrfProcRsnRcdSelectionChange);
					}
					container.addChild(comboBox_10, {
						"top": "31px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_11 = new cpr.controls.ComboBox("cbbFrfItemCd");
					comboBox_11.bind("fieldLabel").toExpression("#optFrfItemCd.value");
					comboBox_11.bind("value").toDataColumn("ITEM_CD");
					(function(comboBox_11){
						comboBox_11.setItemSet(app.lookup("dsListItemCd"), {
							"label": "ITEM_NM",
							"value": "ITEM_CD"
						});
					})(comboBox_11);
					if(typeof onCbbFrfItemCdSelectionChange == "function") {
						comboBox_11.addEventListener("selection-change", onCbbFrfItemCdSelectionChange);
					}
					container.addChild(comboBox_11, {
						"top": "30px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var output_35 = new cpr.controls.Output("optFrfCiiDt");
					output_35.value = "";
					output_35.style.css({
						"text-align" : "center"
					});
					output_35.bind("value").toDataColumn("CII_DT");
					container.addChild(output_35, {
						"top": "56px",
						"left": "1005px",
						"width": "80px",
						"height": "25px"
					});
					var output_36 = new cpr.controls.Output("optFrfRefundTransRate");
					output_36.value = "";
					output_36.bind("value").toLanguage("UI-SCR-REFUNDRATE");
					container.addChild(output_36, {
						"top": "56px",
						"left": "1095px",
						"width": "50px",
						"height": "25px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("iptFrfRefundTransRateNur");
					numberEditor_3.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_3.bind("fieldLabel").toExpression("#optFrfRefundTransRate.value");
					numberEditor_3.bind("value").toDataColumn("REFUND_TRANS_RATE_NUR");
					if(typeof onIptFrfRefundTransRateNurValueChange == "function") {
						numberEditor_3.addEventListener("value-change", onIptFrfRefundTransRateNurValueChange);
					}
					container.addChild(numberEditor_3, {
						"top": "55px",
						"left": "1150px",
						"width": "20px",
						"height": "25px"
					});
					var checkBox_2 = new cpr.controls.CheckBox("ckbFrfLoanYn");
					checkBox_2.value = "";
					checkBox_2.trueValue = "Y";
					checkBox_2.falseValue = "";
					checkBox_2.text = "학자금대출자";
					checkBox_2.bind("value").toDataColumn("LOAN_YN");
					container.addChild(checkBox_2, {
						"top": "80px",
						"left": "680px",
						"width": "125px",
						"height": "25px"
					});
					var output_37 = new cpr.controls.Output("optFrfProcDt");
					output_37.value = "";
					output_37.bind("value").toLanguage("UI-SCR-REFUND_PROC_DT");
					container.addChild(output_37, {
						"top": "106px",
						"left": "905px",
						"width": "95px",
						"height": "25px"
					});
					var output_38 = new cpr.controls.Output("optFrfProcDt");
					output_38.value = "";
					output_38.style.css({
						"text-align" : "center"
					});
					output_38.bind("value").toDataColumn("PROC_DT");
					container.addChild(output_38, {
						"top": "106px",
						"left": "1005px",
						"width": "115px",
						"height": "25px"
					});
					var output_39 = new cpr.controls.Output("optFrfRemark");
					output_39.value = "";
					output_39.bind("value").toLanguage("UI-SCR-REMARK");
					container.addChild(output_39, {
						"top": "80px",
						"left": "905px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_6.maxLength = 1000;
					inputBox_6.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_6.bind("value").toDataColumn("REMARK");
					container.addChild(inputBox_6, {
						"top": "80px",
						"left": "1005px",
						"width": "199px",
						"height": "25px"
					});
					var output_40 = new cpr.controls.Output("optFrfRegPayAmt");
					output_40.value = "";
					output_40.bind("value").toLanguage("UI-SCR-RFDAMT");
					container.addChild(output_40, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_41 = new cpr.controls.Output("optFrfRegPayAmt");
					output_41.value = "";
					output_41.dataType = "number";
					output_41.format = "s#,###";
					output_41.style.css({
						"text-align" : "right"
					});
					output_41.bind("value").toDataColumn("REG_PAY_AMT");
					container.addChild(output_41, {
						"top": "55px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_42 = new cpr.controls.Output("optFrfScalAmt");
					output_42.value = "";
					output_42.dataType = "number";
					output_42.format = "s#,###";
					output_42.style.css({
						"text-align" : "right"
					});
					output_42.bind("value").toDataColumn("SCAL_AMT");
					container.addChild(output_42, {
						"top": "55px",
						"left": "329px",
						"width": "115px",
						"height": "25px"
					});
					var output_43 = new cpr.controls.Output("optFrfScalAmt");
					output_43.value = "";
					output_43.bind("value").toLanguage("UI-SCR-RFDAMT");
					container.addChild(output_43, {
						"top": "55px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_44 = new cpr.controls.Output("optFrfRealPayAmt");
					output_44.value = "";
					output_44.bind("value").toLanguage("UI-SCR-RFDAMT");
					container.addChild(output_44, {
						"top": "55px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_45 = new cpr.controls.Output("optFrfRealPayAmt");
					output_45.value = "";
					output_45.dataType = "number";
					output_45.format = "s#,###";
					output_45.style.css({
						"text-align" : "right"
					});
					output_45.bind("value").toDataColumn("REAL_PAY_AMT");
					container.addChild(output_45, {
						"top": "55px",
						"left": "554px",
						"width": "115px",
						"height": "25px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("iptFrfRefundTransRateDen");
					numberEditor_4.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_4.bind("fieldLabel").toExpression("#optFrfRefundTransRate.value");
					numberEditor_4.bind("value").toDataColumn("REFUND_TRANS_RATE_DEN");
					if(typeof onIptFrfRefundTransRateDenValueChange == "function") {
						numberEditor_4.addEventListener("value-change", onIptFrfRefundTransRateDenValueChange);
					}
					container.addChild(numberEditor_4, {
						"top": "55px",
						"left": "1178px",
						"width": "20px",
						"height": "25px"
					});
					var output_46 = new cpr.controls.Output("optText1");
					output_46.value = "/";
					container.addChild(output_46, {
						"top": "55px",
						"left": "1170px",
						"width": "8px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "459px",
					"left": "5px",
					"width": "1215px",
					"height": "137px"
				});
				var button_10 = new cpr.controls.Button("btnSaveFileCrt");
				button_10.visible = false;
				button_10.value = "기타증빙파일생성";
				button_10.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveFileCrtClick == "function") {
					button_10.addEventListener("click", onBtnSaveFileCrtClick);
				}
				container.addChild(button_10, {
					"top": "5px",
					"left": "710px",
					"width": "120px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "602px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "677px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "부서환불신청";
	cpr.core.Platform.INSTANCE.register(app);
})();
