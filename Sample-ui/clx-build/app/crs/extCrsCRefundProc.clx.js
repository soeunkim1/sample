/*
 * App URI: app/crs/extCrsCRefundProc
 * Source Location: app/crs/extCrsCRefundProc.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsCRefundProc", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsCRefundProc.xtm"/>
			
			
			var extCrsCRefundProc = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnStudPop",
					iStudNo 		: "ipbStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "",
					iObjDivRcd 		: "", 
					iObjCd 			: "", 
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbStudIdObj",
					oStudNo 		: "ipbStudId",
					oStudNm 		: "",
					oStatNm 		: "",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : null
				}
				];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onModelConstructDone_ExtCrsCDeptRefundAply = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptRefund"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					doOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doOnLoad(){
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbProcRsnRcd");
							
							// 현재일자 셋팅
							var vsSysdate = util.DataMap.getValue(app, "dmResOnLoad", "strSysdate").substring(0,8);
							util.Control.setValue(app, "ipbRefStDt", vsSysdate);
							util.Control.setValue(app, "ipbRefEndDt", vsSysdate);
							
							// 기준일자 = 현재일자
							util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsSysdate);
						}
					}, true);
				};
				
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doSetPopKeyDate() {
					var vsSysdate = util.DataMap.getValue(app, "dmResOnLoad", "strSysdate").substring(0,8);
					
					moPObject.moIdsForStdCsrPStSearch[0].iKeyDate = vsSysdate;
				};
				
				/**
				 * @desc 조회조건 학생 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 조회조건 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onClick_BtnStudPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-30
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc  환불목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdRefund");
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc   리피트 패널 체크
				 * @return void
				 * @author Aeyoung Lee 2016-05-30
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/**
				 * @desc 환불신청 목록에 체크된 리피트 인덱스 배열 리턴
				 * @return Array 리피트에 체크된 인덱스 배열
				 * @author Aeyoung Lee 2016-05-30
				 */
				function doGetSelRowIdx() {
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdRefund");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					return voPanelChk;
				};
				
				/**
				 * 환불 처리 버튼 클릭 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-30
				 */	
				moPage.onClick_BtnSaveProc = function() {
					// 환불신청 목록 선택 여부 체크
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptRefund/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdRefundRefund")]);
						return false;
					}
					
					// 환불일자 입력체크
					if(!util.validate(app, ["ipbRefundDt"])){
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = moPage.doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsProcDt = util.Grid.getCellValue(app, "grdRefund", "PROC_DT", vnRow);
						
						// 확정 자료인지 체크
						if(!ValueUtil.isNull(vsProcDt)){
							// 환불처리된 자료가 존재하여 처리불가합니다.
							util.Msg.alert("NLS-CRS-M094");	
							util.Grid.selectRow(app, "grdRefund", vnRow);
							util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdRefund", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 환불처리 서브미션
					//strCommand: procRefund 
					util.Submit.send(app, "subProcRefund", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){	
								if(pbListSuccess){		
									
									util.Control.setValue(app, "ipbRefundDt", "");
									
									//환불처리되었습니다.
									util.Msg.alert("NLS-CRS-M095");
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				}
				
				
				/**
				 * 환불취소 버튼 클릭 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-30
				 */	
				moPage.onClick_BtnSaveCancel = function() {
					// 환불신청 목록 선택 여부 체크
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptRefund/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdRefundRefund")]);
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						
						var vsProcDt = util.Grid.getCellValue(app, "grdRefund", "PROC_DT", vnRow);
						
						if(ValueUtil.isNull(vsProcDt)){
							// 환불처리 되지 않은 자료가 존재하여 처리불가합니다.
							util.Msg.alert("NLS-CRS-M096");	
							util.Grid.selectRow(app, "grdRefund", vnRow);
							util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdRefund", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 환불취소 서브미션
					//strCommand: cancelRefund 
					util.Submit.send(app, "subCancelRefund", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){
								if(pbListSuccess){		
									//환불취소가 처리되었습니다.
									util.Msg.alert("NLS-CRS-M097");
									util.Msg.notify(app, "NLS.INF.M025");
								}	
							});
						}else{
							util.Grid.setRowStateAll(app, "grdRefund", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListProcRsnRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListStatRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListStudBankCd");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListSchYearRcd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListSmtRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRefund");
			dataSet_7.parseData({
				"info": "CRS_REG_FEE_PAY@STUD_ID,SCH_YEAR_RCD,SMT_RCD,REG_CLS_RCD,ITEM_CD,DESC_TYPE_RCD,SERIAL_NO",
				"columns": [
					{"name": "SA_NM"},
					{"name": "SA_CD"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "REG_CLS_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "ITEM_CD"},
					{"name": "DESC_TYPE_RCD"},
					{"name": "AMT"},
					{"name": "PROC_PLAN_DT"},
					{"name": "PROC_DT"},
					{"name": "CII_DT"},
					{"name": "REFUND_TRANS_RATE_NUR"},
					{"name": "REFUND_TRANS_RATE_DEN"},
					{"name": "REFUND_TRANS_RATE"},
					{"name": "PROC_RSN_RCD"},
					{"name": "STUD_BANK_RCD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "LOAN_YN"},
					{"name": "REMARK"},
					{"name": "SERIAL_NO"},
					{"name": "INPUT_DT"},
					{"name": "STAT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strAplyStDt",
						"dataType": "string"
					},
					{
						"name": "strAplyEndDt",
						"dataType": "string"
					},
					{
						"name": "strProcRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strRefStat",
						"dataType": "string"
					},
					{
						"name": "strRefundDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSysdate",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsRefundProc/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/ExtCrsRefundProc/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subProcRefund");
			submission_3.action = "/crs/ExtCrsRefundProc/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subCancelRefund");
			submission_4.action = "/crs/ExtCrsRefundProc/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_7);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStudId");
				output_1.value = "";
				output_1.bind("value").toLanguage("NLS-SCR-STUDID");
				container.addChild(output_1, {
					"top": "5px",
					"left": "760px",
					"width": "75px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "840px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnStudPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopClick == "function") {
					button_2.addEventListener("click", onBtnStudPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "942px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudIdObj");
				inputBox_2.visible = false;
				inputBox_2.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudId");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "964px",
					"width": "5px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optProcRsnRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-RFDRSN");
				container.addChild(output_2, {
					"top": "5px",
					"left": "320px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbProcRsnRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optProcRsnRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcRsnRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListProcRsnRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "400px",
					"width": "130px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optTerm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-APLY_TERM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "5px",
					"width": "75px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("ipbRefStDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optTermSt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strAplyStDt");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "85px",
					"width": "105px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("ipbRefEndDt");
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optTermEnd.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strAplyEndDt");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "205px",
					"width": "105px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optText");
				output_4.value = "~";
				container.addChild(output_4, {
					"top": "5px",
					"left": "190px",
					"width": "15px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optTermSt");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-SCR-APLY_ST_DT");
				container.addChild(output_5, {
					"top": "5px",
					"left": "995px",
					"width": "75px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optTermEnd");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-SCR-APLY_END_DT");
				container.addChild(output_6, {
					"top": "5px",
					"left": "1080px",
					"width": "75px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optRefundStat");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-REFUND_STAT");
				container.addChild(output_7, {
					"top": "5px",
					"left": "540px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbRefundStat");
				comboBox_2.bind("fieldLabel").toExpression("#optRefundStat.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strRefStat");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("신청", "A"));
					comboBox_2.addItem(new cpr.controls.Item("완료", "C"));
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "620px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-REFUNDLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdRefund");
				grid_1.init({
					"dataSet": app.lookup("dsRefund"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "56px"},
						{"width": "66px"},
						{"width": "117px"},
						{"width": "39px"},
						{"width": "74px"},
						{"width": "80px"},
						{"width": "68px"},
						{"width": "86px"},
						{"width": "84px"},
						{"width": "56px"},
						{"width": "82px"},
						{"width": "108px"},
						{"width": "71px"},
						{"width": "85px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "161px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-STUDID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REFUND_ITEM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RFDSTDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REFUNDRATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-BANK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ACCT_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ACTHOLDER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCH_LOANER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-PROCDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptProcRsltYear");
										output_8.dataType = "number";
										output_8.format = "###";
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROC_RSN_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbPmntDivRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsListProcRsnRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("PROC_RSN_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbPmntDivRcd1");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListItemCd"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("ITEM_CD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptScalAmt");
										output_9.dataType = "number";
										output_9.format = "s#,###";
										output_9.style.css({
											"text-align" : "right"
										});
										output_9.bind("value").toDataColumn("AMT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CII_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PROC_PLAN_DT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "REFUND_TRANS_RATE";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "STUD_BANK_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbStudBankCd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsListStudBankCd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("STUD_BANK_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "STUD_ACCT_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "LOAN_YN";
									cell.control = (function(){
										var checkBox_1 = new cpr.controls.CheckBox("gdChbLoanYn");
										checkBox_1.enabled = false;
										checkBox_1.value = "";
										checkBox_1.trueValue = "Y";
										checkBox_1.falseValue = "";
										checkBox_1.text = "";
										checkBox_1.style.css({
											"text-align" : "center"
										});
										checkBox_1.bind("value").toDataColumn("LOAN_YN");
										return checkBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "PROC_PLAN_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbSchYearRcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsListSchYearRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsListSmtRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SMT_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "563px"
				});
				var button_3 = new cpr.controls.Button("btnSaveCancel");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-REFUND_CANCEL");
				if(typeof onBtnSaveCancelClick == "function") {
					button_3.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSaveProc");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-REFUND_PROC");
				if(typeof onBtnSaveProcClick == "function") {
					button_4.addEventListener("click", onBtnSaveProcClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var dateInput_3 = new cpr.controls.DateInput("ipbRefundDt");
				dateInput_3.userAttr({"require": "Y"});
				dateInput_3.style.css({
					"text-align" : "center"
				});
				dateInput_3.bind("fieldLabel").toExpression("#optRefundDt.value");
				dateInput_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strRefundDt");
				container.addChild(dateInput_3, {
					"top": "5px",
					"left": "985px",
					"width": "105px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optRefundDt");
				output_10.value = "";
				output_10.bind("value").toLanguage("UI-SCR-RFDDT");
				container.addChild(output_10, {
					"top": "5px",
					"left": "840px",
					"width": "75px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "674px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "환불신청자료 환불처리";
	cpr.core.Platform.INSTANCE.register(app);
})();
