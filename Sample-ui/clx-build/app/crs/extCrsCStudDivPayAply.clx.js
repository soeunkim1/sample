/*
 * App URI: app/crs/extCrsCStudDivPayAply
 * Source Location: app/crs/extCrsCStudDivPayAply.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsCStudDivPayAply", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsCStudDivPayAply.xtm"/>
			
			
			var extCrsCStudDivPayAply = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * @desc import 헤더 초기화
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc import 학생정보 임포트 초기화
				 * @member extCrsCStudDivPayAply
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				moPage.onLoadImportDone_ImpStudInfo = function() {
					impStudInfo();
				};
				
				/**
				 * @desc 화면 온로드
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */	
				moPage.onModelConstructDone_ExtCrsCStudDivPayAply = function() {
					
					if(moUserInfo.userDivRcd != "CC00501"){
						//학생만 사용가능한 화면입니다.
						util.Msg.alert("NLS-CRS-M093");
						util.coverPage(app);
						return;
					}	
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptDivPayApply"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData","grpDataDtl"]);
					//학년도학기 비활성화
					util.Control.setEnable(app, false, ["cbbYearImpNS", "cbbSmtImpNS"]);
					
					//온로드 서브미션
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						
						util.Control.redraw(app, ["cbbDivPayStatRcd"]);
					});
					
					var vsStudId = moUserInfo.id;
					
					//학년도 학기 검색임포트
					doOnLoadImpNS("CRS", function(pbSuccess){
						if(pbSuccess){
							
							var vsStDt = ExtInstance.getValue("instance('impCommonN')/root/date/ST_DT");
							ExtInstance.setValue("/root/reqKey/strSchYearRcd", ExtInstance.getValue("instance('impCommonN')/root/date/YEAR"));
							ExtInstance.setValue("/root/reqKey/strSmtRcd", ExtInstance.getValue("instance('impCommonN')/root/date/SMT"));
							util.DataMap.setValue(app, "dmReqKey", "strStDt", vsStDt);
							ExtInstance.setValue("/root/reqKey/strEndDt", ExtInstance.getValue("instance('impCommonN')/root/date/END_DT"));
							util.DataMap.setValue(app, "dmReqKey", "strStudId", vsStudId);
							
							// 학번에 해당하는 학생정보를 가져온다. 
							setImpStudInfo(vsStudId, vsStDt, null, function(pbStudSuccess){
								if(pbStudSuccess){
									util.Header.clickSearch(app);
								}
							});
						}
					});
				};
				
				/**
				 * @desc 조회 버튼 클릭 이벤트
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				moPage.onClick_BtnSearch = function() {
					if(!util.validate(app, ["grpSearch"])) return false;
					
					// 분납상태 체크 및 분납조회
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc 조회 서브미션 실행
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				function doList(poCallbackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdDivPayApply");
							
							util.Control.redraw(app, ["cbbDivPayStatRcd", "dipDivPayReqDt"]);
							
							// 분납신청, 분납취소 버튼 제어
							var vsBtnApply = util.DataMap.getValue(app, "dmResList", "strBtnApplyEnableCtrl");
							var vsBtnCancel = util.DataMap.getValue(app, "dmResList", "strBtnCancelEnableCtrl");
							
							util.Control.setEnable(app, vsBtnApply == "F" ? false : true, "btnSaveApply");
							util.Control.setEnable(app, vsBtnCancel == "F" ? false : true, "btnSaveCancel");
						}
						
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(pbSuccess); 
					}, true);	
						
				};
				
				/**
				 * @desc 분납신청 버튼 클릭 이벤트
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				moPage.onClick_BtnSaveApply = function() {
					
					var vnTotPayFee = Number(util.Grid.getCellValue(app, "grdDivPayApply", "TOT_FEE", 4));
					if(vnTotPayFee <= 0){
						// 전액장학생은 분납신청을 할 수 없습니다.	
						util.Msg.alert("NLS-CRS-M106");
						return;
					}	
					
					//strCommand: createDivPay 
					util.Submit.send(app, "subCreateDivPay", function(pbSuccess){
						if(pbSuccess){
							// 분납상태 체크 및 분납조회
							doList(function(pbSuccess){
								if(pbSuccess){
									// 분납신청이 처리되었습니다.
									util.Msg.alert("NLS-CRS-M081");
									util.Msg.notify(app, "NLS.CRS.M081");
								}	
							});	
						}
					});	
				};
				
				/**
				 * @desc 분납취소 버튼 클릭 이벤트
				 * @member extCrsCStudDivPayAply
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 5. 20.
				 */
				moPage.onClick_BtnSaveCancel = function() {
					
					//strCommand: cancelDivPay 
					util.Submit.send(app, "subCancelDivPay", function(pbSuccess){
						if(pbSuccess){
							// 분납상태 체크 및 분납조회
							doList(function(pbSuccess){
								if(pbSuccess){
									//분납취소가 처리되었습니다.
									util.Msg.alert("NLS-CRS-M082");
									util.Msg.notify(app, "NLS.CRS.M082");
								}	
							});	
						}
					});	
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsDivPayApply");
			dataSet_1.parseData({
				"columns": [
					{"name": "ITEM_NM"},
					{"name": "TOT_FEE"},
					{"name": "FIRST_FEE"},
					{"name": "SECOND_FEE"},
					{"name": "THIRD_FEE"},
					{"name": "FOURTH_FEE"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListDivPayStatRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strBtnApplyEnableCtrl",
						"dataType": "string"
					},
					{
						"name": "strBtnCancelEnableCtrl",
						"dataType": "string"
					},
					{
						"name": "strDivPayStatRcd",
						"dataType": "string"
					},
					{
						"name": "strDivPayReqDt",
						"dataType": "string"
					},
					{
						"name": "strPayCloseDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsStudDivPayAply/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/ExtCrsStudDivPayAply/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCreateDivPay");
			submission_3.action = "/crs/ExtCrsStudDivPayAply/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subCancelDivPay");
			submission_4.action = "/crs/ExtCrsStudDivPayAply/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStudInfo");
				if(typeof onEmaStudInfoAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaStudInfoAppReady);
				}
				cpr.core.App.load("app/csr/impStudInf02", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "120px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "131px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/crs/impCrsYearSmt", function(app) {
					if(app){
						embeddedApp_2.app = app;
					}
				});
				container.addChild(embeddedApp_2, {
					"top": "5px",
					"left": "5px",
					"width": "331px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.visible = false;
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-DIVPAYOBJLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "315px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdDivPayApply");
				grid_1.init({
					"dataSet": app.lookup("dsDivPayApply"),
					"columns": [
						{"width": "40px"},
						{"width": "131px"},
						{"width": "140px"},
						{"width": "140px"},
						{"width": "140px"},
						{"width": "140px"},
						{
							"width": "158px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FIRST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SECOND");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-THIRD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FOURTH");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "ITEM_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "TOT_FEE";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptPayAmt");
										output_1.dataType = "number";
										output_1.format = "s#,###";
										output_1.style.css({
											"text-align" : "right"
										});
										output_1.bind("value").toDataColumn("TOT_FEE");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "FIRST_FEE";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptEntPay");
										output_2.dataType = "number";
										output_2.format = "s#,###";
										output_2.style.css({
											"text-align" : "right"
										});
										output_2.bind("value").toDataColumn("FIRST_FEE");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SECOND_FEE";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptTutPay");
										output_3.dataType = "number";
										output_3.format = "s#,###";
										output_3.style.css({
											"text-align" : "right"
										});
										output_3.bind("value").toDataColumn("SECOND_FEE");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "THIRD_FEE";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptScalAmt");
										output_4.dataType = "number";
										output_4.format = "s#,###";
										output_4.style.css({
											"text-align" : "right"
										});
										output_4.bind("value").toDataColumn("THIRD_FEE");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "FOURTH_FEE";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptScalAmt1");
										output_5.dataType = "number";
										output_5.format = "s#,###";
										output_5.style.css({
											"text-align" : "right"
										});
										output_5.bind("value").toDataColumn("FOURTH_FEE");
										return output_5;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "57px",
					"left": "5px",
					"width": "1210px",
					"height": "405px"
				});
				var output_6 = new cpr.controls.Output("optDivPayStatRcd");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-DIVPAYSTAT");
				container.addChild(output_6, {
					"top": "33px",
					"left": "5px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbDivPayStatRcd");
				comboBox_1.enabled = false;
				comboBox_1.hideButton = true;
				comboBox_1.bind("fieldLabel").toExpression("#optDivPayStatRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmResList"), "strDivPayStatRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListDivPayStatRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "33px",
					"left": "85px",
					"width": "80px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optDivPayReqDt");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-DB-DIV_PAY_REQ_DT");
				container.addChild(output_7, {
					"top": "33px",
					"left": "175px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipDivPayReqDt");
				dateInput_1.enabled = false;
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optDivPayReqDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmResList"), "strDivPayReqDt");
				container.addChild(dateInput_1, {
					"top": "33px",
					"left": "270px",
					"width": "105px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaveCancel");
				button_2.enabled = false;
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-SCR-DIVPAYCACL");
				if(typeof onBtnSaveCancelClick == "function") {
					button_2.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1155px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSaveApply");
				button_3.enabled = false;
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-DIV_PAY_REQ");
				if(typeof onBtnSaveApplyClick == "function") {
					button_3.addEventListener("click", onBtnSaveApplyClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1091px",
					"width": "60px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "208px",
				"left": "5px",
				"width": "1225px",
				"height": "467px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "분할납부신청";
	cpr.core.Platform.INSTANCE.register(app);
})();
