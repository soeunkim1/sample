/*
 * App URI: app/crs/extCrsCStudDivPayAprv
 * Source Location: app/crs/extCrsCStudDivPayAprv.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsCStudDivPayAprv", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsCStudDivPayAprv.xtm"/>
			
			
			var extCrsCStudDivPayAprv = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "",
					oObjDivRcd 	: "ipbDeptObjDivRcd",
					oCd 		: "ipbDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: ""
				}
				];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-24
				 */
				moPage.onModelConstructDone_ExtCrsCStudDivPayAprv = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptDivPayAprv");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					doOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */
				function doOnLoad(){
					doOnLoadImpNS("CRS");
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "cbbDivPayStatRcd");
							util.Control.redraw(app, "grdDivPayAprv");
							
							util.Control.setFocus(app, "ipbDeptNm");
						}
					}, true);
				};
			
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-24
				 */
				function doSetPopKeyDate() {
					var vsEndDt = ExtInstance.getValue("instance('impCommonN')/root/date/END_DT").substr(0,8);
					
					moPObject.moIdsForStdCmnPObjSch[0].iKeyDate = vsEndDt;
				};
				
				/**
				 * @desc 학과명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-24
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학과 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-24
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-24
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc  분납신청자 목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */
				function doList(poCallBackFunc) {
					
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", util.Control.getValue(app, "cbbYearImpNS"));
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", util.Control.getValue(app, "cbbSmtImpNS"));
					ExtInstance.setValue("/root/reqKey/strKeyDate", ExtInstance.getValue("instance('impCommonN')/root/date/END_DT"));
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdDivPayAprv");	
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc 분납신청자 목록에 체크된 리피트 인덱스 배열 리턴
				 * @return Array 리피트에 체크된 인덱스 배열
				 * @author Aeyoung Lee 2016-05-24
				 */
				function doGetSelRowIdx() {
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdDivPayAprv");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					return voPanelChk;
				};
				
				/**
				 * @desc 승인처리 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */	
				moPage.onClick_BtnSaveAprv = function() {
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptDivPayAprv/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdDivPayAprvDivPayAprv")]);
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsDivPayStatRcd = util.Grid.getCellValue(app, "grdDivPayAprv", "DIV_PAY_STAT_RCD", vnRow);
						
						if(vsDivPayStatRcd != "CR203REQ"){
							// 분납상태가 신청이 아닌 경우 승인이 불가능합니다.
							util.Msg.alert("NLS-CRS-M083");	
							util.Grid.selectRow(app, "grdDivPayAprv", vnRow);
							util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 승인처리 서브미션
					//strCommand: createDivPay 
					util.Submit.send(app, "subCreateDivPay", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){	
								if(pbListSuccess){		
									//분납승인 되었습니다.
									util.Msg.alert("NLS-CRS-M085");
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				};
				
				/**
				 * @desc 승인취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */	
				moPage.onClick_BtnSaveCancel = function() {
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptDivPayAprv/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdDivPayAprvDivPayAprv")]);
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsDivPayStatRcd = util.Grid.getCellValue(app, "grdDivPayAprv", "DIV_PAY_STAT_RCD", vnRow);
						
						if(vsDivPayStatRcd != "CR203CNF"){
							// 분납상태가 확정(승인)이 아닌 경우 승인취소가 불가능합니다.
							util.Msg.alert("NLS-CRS-M084");	
							util.Grid.selectRow(app, "grdDivPayAprv", vnRow);
							util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 승인취소 서브미션
					//strCommand: cancelDivPay 
					util.Submit.send(app, "subCancelDivPay", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){
								if(pbListSuccess){		
									//분납승인취소 되었습니다.
									util.Msg.alert("NLS-CRS-M086");
									util.Msg.notify(app, "NLS.INF.M025");
								}	
							});
						}else{
							util.Grid.setRowStateAll(app, "grdDivPayAprv", cpr.data.tabledata.RowState.UNCHANGED);	
						}	
					});
				};
			
				
				/**
				 * @desc   리피트 패널 체크
				 * @return void
				 * @author Aeyoung Lee 2016-05-24
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListDivPayStatRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListStatRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListDivPayTypeCd");
			dataSet_3.parseData({
				"columns": [
					{"name": "DIV_PAY_TYPE_CD"},
					{"name": "DIV_PAY_TYPE_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsDivPayAprv");
			dataSet_4.parseData({
				"info": "CRS_REG_FEE@STUD_ID,SCH_YEAR_RCD,SMT_RCD,REG_CLS_RCD",
				"columns": [
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "STAT_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "DIV_PAY_REQ_DT"},
					{"name": "DIV_PAY_DESC"},
					{"name": "DIV_PAY_TYPE_CD"},
					{"name": "DIV_PAY_STAT_RCD"},
					{"name": "DIV_PAY_NO"},
					{"name": "TUT_REG_FEE"},
					{"name": "ENT_REG_FEE"},
					{"name": "SCAL_YN"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDivPayStatRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsStudDivPayAprv/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/ExtCrsStudDivPayAprv/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCreateDivPay");
			submission_3.action = "/crs/ExtCrsStudDivPayAprv/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subCancelDivPay");
			submission_4.action = "/crs/ExtCrsStudDivPayAprv/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addRequestData(dataSet_4);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDeptNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-DEPT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "340px",
					"width": "75px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/crs/impCrsYearSmt", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "330px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "420px",
					"width": "140px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "560px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "582px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptObjDivRcd");
				inputBox_3.visible = false;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptObjDivRcd");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "588px",
					"width": "5px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optDivPayStatRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-DIVPAYSTAT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "590px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbDivPayStatRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optDivPayStatRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivPayStatRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListDivPayStatRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "670px",
					"width": "130px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-DIV_PAT_REQ_LIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSaveCancel");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-APRV_CANCEL");
				if(typeof onBtnSaveCancelClick == "function") {
					button_3.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdDivPayAprv");
				grid_1.init({
					"dataSet": app.lookup("dsDivPayAprv"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "237px"},
						{"width": "73px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "86px"},
						{"width": "80px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "94px"},
						{"width": "111px"},
						{"width": "107px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "장학생여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-LSNFEE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ENTRFEE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DIVPAYSTAT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIV_PAY_REQ_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYTYPE");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptProcRsltYear");
										output_3.dataType = "number";
										output_3.format = "###";
										output_3.style.css({
											"text-align" : "center"
										});
										output_3.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptStudNo");
										output_4.dataType = "number";
										output_4.format = "###";
										output_4.style.css({
											"text-align" : "center"
										});
										output_4.bind("value").toDataColumn("STUD_NO");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "STAT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbStatRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListStatRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("STAT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCAL_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "TUT_REG_FEE";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptTutRegFee");
										output_5.dataType = "number";
										output_5.format = "s#,###";
										output_5.style.css({
											"text-align" : "right"
										});
										output_5.bind("value").toDataColumn("TUT_REG_FEE");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ENT_REG_FEE";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptEntRegFee");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("ENT_REG_FEE");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_REQ_DT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_STAT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbDivPayStatRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsListDivPayStatRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("DIV_PAY_STAT_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_REQ_DT";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptDivPayReqDt");
										output_7.dataType = "date";
										output_7.format = "YYYY-MM-DD";
										output_7.style.css({
											"text-align" : "center"
										});
										output_7.bind("value").toDataColumn("DIV_PAY_REQ_DT");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_TYPE_CD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbDivPayTypeCd");
										comboBox_4.enabled = false;
										comboBox_4.hideButton = true;
										comboBox_4.style.css({
											"text-align" : "center"
										});
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListDivPayTypeCd"), {
												"label": "DIV_PAY_TYPE_NM",
												"value": "DIV_PAY_TYPE_CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("DIV_PAY_TYPE_CD");
										return comboBox_4;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "563px"
				});
				var button_4 = new cpr.controls.Button("btnSaveAprv");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-APRV_PROC");
				if(typeof onBtnSaveAprvClick == "function") {
					button_4.addEventListener("click", onBtnSaveAprvClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "676px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "분할납부승인";
	cpr.core.Platform.INSTANCE.register(app);
})();
