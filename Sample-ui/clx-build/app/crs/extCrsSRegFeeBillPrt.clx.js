/*
 * App URI: app/crs/extCrsSRegFeeBillPrt
 * Source Location: app/crs/extCrsSRegFeeBillPrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/extCrsSRegFeeBillPrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCrsSRegFeeBillPrt.xtm"/>
			
			
			var extCrsSRegFeeBillPrt = function() {
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009OG","CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "/root/reqKey/date/END_DT",
					oObjDivRcd 	: "ipbDeptObjDivRcd",
					oCd 		: "ipbDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: ""
				}
				];
				
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnStudPop",
					iStudNo 		: "ipbStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "/root/reqKey/date/END_DT",
					iObjDivRcd 		: "", 
					iObjCd 			: "", 
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbStudIdObj",
					oStudNo 		: "ipbStudId",
					oStudNm 		: "",
					oStatNm 		: "",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : null
				}
				];	
				
				
				/**
				 * @desc Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				}
				
				/**
				 * @desc 온로드
				 * @return void
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onModelConstructDone_ExtCrsSRegFeeBillPrt = function() {
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch",["grpData"]);
					doOnLoad();	
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				function doOnLoad(){
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
							
							// 납부기간, 납부장소 defalut 셋팅
							var vsDefPayDt = util.DataMap.getValue(app, "dmResOnLoad", "strDefPayDt");
							var vsDefPayPlace = util.DataMap.getValue(app, "dmResOnLoad", "strDefPayPlace");
							util.Control.setValue(app, "ipbPayDt", vsDefPayDt);
							util.Control.setValue(app, "ipbPayPlace", vsDefPayPlace);
							
							util.Control.setValue(app, "ckbPayTypeAll", "Y");
							// 학기, 납부형태에 따른 납부형태, 분납차수 제어
							doChangeExecCond();
						}
					});
				};
				
				/**
				 * @desc  기준날짜의 값을 리셋팅
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 6. 20
				 */
				function doChangeSchYearSmt() {
					util.DataMap.setValue(app, "dmDate", "ST_DT","");	
					util.DataMap.setValue(app, "dmDate", "END_DT","");	
					
					// 시점관련 컨트롤 초기화
					util.Control.reset(app, ["ipbDeptNm", "ipbDeptCd", "ipbDeptObjDivRcd", "ipbStudId", "ipbStudIdObj"]);
					
					// 해당학년도학기 표준일자 서브미션 호출
					ExtSubmission.sendEx("subDate", "date");
				};
				
				/**
				 * @desc  학년도 값변경 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 6. 20
				 */
				moPage.onValueChanged_CbbSchYear = function() {
					doChangeSchYearSmt();
				};
				
				/**
				 * @desc  학기 값변경 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 6. 20
				 */
				moPage.onValueChanged_CbbSmt = function() {
					doChangeSchYearSmt();
				};
				
				/**
				 * @desc 학과 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학과명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학생검샙팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onClick_BtnStudPop = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				}
				
				/**
				 * @desc 학번 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onValueChanged_IpbStudId = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 납부형태-분납 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-06-20
				 */
				moPage.onValueChanged_CkbPayTypeDiv = function() {
					// 학기, 납부형태에 따른 납부형태, 분납차수 제어
					doChangeExecCond();
				};
				
				/**
				 * @desc 실행조건 학기에 따른 납부형태, 분납차수 제어
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-06-20
				 */
				function doChangeExecCond() {
					var vsSmtCd = util.Control.getValue(app, "cbbSmt");
					var vsChkValue = vsSmtCd.substring(vsSmtCd.length - 2);
					
					//계절학기일경우 
					if ("91" == vsChkValue || "93" == vsChkValue) {
						util.Control.setEnable(app, false, ["ckbPayTypeAll", "ckbPayTypeDiv", "rdbDivPaySeq"]);
						
						util.Control.setValue(app, "ckbPayTypeDiv", "");
						util.Control.setValue(app, "rdbDivPaySeq", "");
						util.Control.setValue(app, "ckbPayTypeAll", "Y");
					} else {
						util.Control.setEnable(app, true, ["ckbPayTypeAll", "ckbPayTypeDiv"]);
						
						if(util.Control.getValue(app, "ckbPayTypeDiv") == "Y"){
							util.Control.setEnable(app, true, ["rdbDivPaySeq"]);
						}else{
							util.Control.setValue(app, "rdbDivPaySeq", "")	;
							util.Control.setEnable(app, false, ["rdbDivPaySeq"]);
						}	
					}
				};
				
				/**
				 * @desc 실행조건 검증
				 * @param 
				 * @return 
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				function doCondValidation() {
					var vbValid = true;
					
					var vsPayTypeAll = util.Control.getValue(app, "ckbPayTypeAll");	//납부형태(전액)
					var vsPayTypeDiv = util.Control.getValue(app, "ckbPayTypeDiv"); 	//납부형태(분납)
					
					// 납부형태 체크
					if (ValueUtil.isNull(vsPayTypeAll) && ValueUtil.isNull(vsPayTypeDiv)) {
						vbValid = false;
						util.Msg.alert("NLS-WRN-M100", [ExtControl.getTextValue("lblPayType")]);
					}
					else if (vsPayTypeDiv == "Y") {
						
						var vsDivPaySeq = util.Control.getValue(app, "rdbDivPaySeq"); 	//분납차수 
						
						//분납차수.
						if (ValueUtil.isNull(vsDivPaySeq)) {
							vbValid = false;
							// 분납선택시 차수는 필수항목입니다.
							util.Msg.alert("NLS-CRS-M098");
							util.Control.setFocus(app, "rdbDivPaySeq");
						}
					}
					
					return vbValid;
				};
				
				/**
				 * 조회조건 수행
				 * @member moPage
				 * @type void
				 * @author Aeyoung Lee at 2016. 6. 20
				 */
				moPage.onClick_BtnSearch = function() {
					//1.조회조건 필수 체크(학년도)
					if(!util.validate(app, ["cbbSchYear", "cbbSmt"])) return;
					
					// 필수외 조건유효성 체크
					if(!doCondValidation()) return;
					
					var vsStDt = util.DataMap.getValue(app, "dmDate", "ST_DT").substr(0,8);
					var vsEndDt = util.DataMap.getValue(app, "dmDate", "END_DT").substr(0,8);
					util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsEndDt);
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							//리퀘스트 셋팅
							var voParam = {
										p_strSchYearRcd : util.DataMap.getValue(app, "dmDate", "YEAR") 			// 학년도
									  , p_strSmtRcd : util.DataMap.getValue(app, "dmDate", "SMT") 				// 학기
									  , p_strStudId : util.DataMap.getValue(app, "dmReqKey", "strStudId") 				// 학생ObjId
									  , p_strPayTypeAll : util.DataMap.getValue(app, "dmReqKey", "strPayTypeAll") 		// 납부형태(전액)
									  , p_strPayTypeDiv : util.DataMap.getValue(app, "dmReqKey", "strPayTypeDiv") 		// 납부형태(분납)
									  , p_strDivPaySeq : util.DataMap.getValue(app, "dmReqKey", "strDivPaySeq") 			// 분납차수
									  , p_strPayDt : util.DataMap.getValue(app, "dmReqKey", "strPayDt") 					// 납부기간
									  , p_strPayPlace : util.DataMap.getValue(app, "dmReqKey", "strPayPlace") 			// 납부장소
									  , p_strSaList : util.DataMap.getValue(app, "dmResList", "strSaList")				// 학사부서 (in 조건)
									  , p_strKeyStDt : vsStDt 	// 해당학년도학기 시작일자
									  , p_strKeyEndDt : vsEndDt  // 해당학년도학기 종료일자
									  , p_strLandivRcd : msDefaultLocale
									}	
									
							 var voOzFormParam = {
										  TITLE : "등록금고지서" //리포트타이틀
										, SUB_TITLE : "" 		  //리포트서브타이틀		
										, FORM_TYPE : "flash"
										};	
										
							util.Report.open(app, "hojReport", "extCrsSRegFeeBill", voOzFormParam, voParam);
							
						}
					});
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsYearList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strDefPayDt",
						"dataType": "string"
					},
					{
						"name": "strDefPayPlace",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strSaList",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmDate");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqKey");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strPayTypeAll",
						"dataType": "string"
					},
					{
						"name": "strPayTypeDiv",
						"dataType": "string"
					},
					{
						"name": "strDivPaySeq",
						"dataType": "string"
					},
					{
						"name": "strPayDt",
						"dataType": "string"
					},
					{
						"name": "strPayPlace",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/ExtCrsRegFeeBillPrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/ExtCrsRegFeeBillPrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subDate");
			submission_3.action = "/cmn/StdCmnDateTime/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDeptNm");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-DEPT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "455px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 50;
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "540px",
					"width": "110px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "650px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "671px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptObjDivRcd");
				inputBox_3.visible = false;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptObjDivRcd");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "675px",
					"width": "5px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optPayType");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-PAYFORM");
				container.addChild(output_2, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optScalFeeCls2");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-DIV_PAY_SEQ");
				container.addChild(output_3, {
					"top": "30px",
					"left": "230px",
					"width": "80px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optPayDt");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-PAYPERIOD");
				container.addChild(output_4, {
					"top": "30px",
					"left": "685px",
					"width": "80px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optPayPlace");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-PAYPLACE");
				container.addChild(output_5, {
					"top": "30px",
					"left": "927px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmDate"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsYearList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "130px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optSchYear");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_6, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optSmt");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_7, {
					"top": "5px",
					"left": "230px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmDate"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "315px",
					"width": "130px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbPayTypeAll");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "전액";
				checkBox_1.bind("fieldLabel").toExpression("#optPayType.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayTypeAll");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "90px",
					"width": "65px",
					"height": "25px"
				});
				var checkBox_2 = new cpr.controls.CheckBox("ckbPayTypeDiv");
				checkBox_2.value = "";
				checkBox_2.trueValue = "Y";
				checkBox_2.falseValue = "";
				checkBox_2.text = "분납";
				checkBox_2.bind("fieldLabel").toExpression("#optPayType.value");
				checkBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayTypeDiv");
				if(typeof onCkbPayTypeDivValueChange == "function") {
					checkBox_2.addEventListener("value-change", onCkbPayTypeDivValueChange);
				}
				container.addChild(checkBox_2, {
					"top": "30px",
					"left": "154px",
					"width": "65px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbDivPaySeq");
				radioButton_1.bind("fieldLabel").toExpression("#optDivPaySeq.value");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDivPaySeq");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("1차", "1"));
					radioButton_1.addItem(new cpr.controls.Item("2차", "2"));
					radioButton_1.addItem(new cpr.controls.Item("3차", "3"));
					radioButton_1.addItem(new cpr.controls.Item("4차", "4"));
				})(radioButton_1);
				container.addChild(radioButton_1, {
					"top": "30px",
					"left": "316px",
					"width": "355px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optStudId");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-DEPT");
				container.addChild(output_8, {
					"top": "5px",
					"left": "685px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbStudId");
				inputBox_4.maxLength = 50;
				inputBox_4.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_4.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "770px",
					"width": "126px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnStudPop");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopClick == "function") {
					button_3.addEventListener("click", onBtnStudPopClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "897px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbStudIdObj");
				inputBox_5.visible = false;
				inputBox_5.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudId");
				container.addChild(inputBox_5, {
					"top": "5px",
					"left": "919px",
					"width": "5px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("ipbPayDt");
				numberEditor_1.visible = false;
				numberEditor_1.format = "9,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
				numberEditor_1.bind("fieldLabel").toExpression("#optPayDt.value");
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayDt");
				container.addChild(numberEditor_1, {
					"top": "30px",
					"left": "770px",
					"width": "147px",
					"height": "25px"
				});
				var numberEditor_2 = new cpr.controls.NumberEditor("ipbPayPlace");
				numberEditor_2.visible = false;
				numberEditor_2.format = "9,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
				numberEditor_2.bind("fieldLabel").toExpression("#optPayPlace.value");
				numberEditor_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strPayPlace");
				container.addChild(numberEditor_2, {
					"top": "30px",
					"left": "1012px",
					"width": "148px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "569px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "95px",
				"left": "5px",
				"width": "1225px",
				"height": "579px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "674px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "673px",
				"left": "114px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "등록금고지서(관리자용)";
	cpr.core.Platform.INSTANCE.register(app);
})();
