/*
 * App URI: app/crs/stdCrsCItem
 * Source Location: app/crs/stdCrsCItem.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/stdCrsCItem", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCrsCItem.xtm"/>
			
			
			var stdCrsCItem = function() {
					
				var moPage = new Page();
				
				var mbOnLoadFlag = false;
				
				moPage.TAB = {
					ITEM : "tpgItem",
					LANG : "tpgItemLan",
					COND : "tpgItemCond"
				};
				
				var TAB_BTN = {
					tpgItem     : "tabBtnItem",
					tpgItemLan  : "tabBtnItemLan",
					tpgItemCond : "tabBtnItemCond"
				};	
						
				var maChangeMod = ["btnNewItemCond", "btnDeleteItemCond", "btnRestoreItemCond", "btnSaveItemCond"];
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onLoad = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCrsItem", "rptCrsItemLan", "rptCrsItemCond"]);
					
					// 첫번째 탭으로 이동하도록
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.ITEM);
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Msg.notify(app, "NLS.INF.M024");
							util.Control.redraw(app, "grdCrsItem");
						}
						
						mbOnLoadFlag = true;
					}, true);
				};
				
				/**
				 * @desc  탭변경이벤트
				 * @param {String} psCaseId 탭ID
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doTabChange(psCaseId) {
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					
					// 최초 onLoad 이전에 호출됨으로 플래그를 두어 return처리 
					if (!mbOnLoadFlag) return;
					
					// 현재 선택된 탭의 상태 체크
					switch (vsSelTabId) {
						// 등록금항목
						case TAB.ITEM : {
							var vnSelIdx = util.Grid.getIndex(app, "grdCrsItem");
							
							if(!vnSelIdx) {
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								// "라인을 선택하세요." tab 이동 하지 않음
								util.Msg.alert("NLS-INF-M023");
								return false;
							}
							
							var vsItemCd = "";
							var vsRefKey = "";
							var vsLanDivRcd = "";
							var vsItemNm = "";
							
							if(vnSelIdx) {
								vsItemCd = util.Grid.getCellValue(app, "grdCrsItem", "ITEM_CD", vnSelIdx);
								vsRefKey = util.Grid.getCellValue(app, "grdCrsItem", "REF_KEY", vnSelIdx);
								vsLanDivRcd = util.Grid.getCellValue(app, "grdCrsItem", "LAN_DIV_RCD", vnSelIdx);
								vsItemNm = util.Grid.getCellValue(app, "grdCrsItem", "ITEM_NM", vnSelIdx);
							}
							
							util.DataMap.setValue(app, "dmReqKey", "strItemCd", vsItemCd);
							util.DataMap.setValue(app, "dmReqKey", "strRefKey", vsRefKey);
							util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", vsLanDivRcd);
							util.DataMap.setValue(app, "dmReqKey", "strItemNm", vsItemNm);
							
							// 리피터 변경사항 체크
							if(util.Grid.isModified(app, ["grdCrsItem"], "CRM")){
								
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								return false;
							}else{
								
								// 선택된 로우가 신규 로우일 경우 tab 이동 하지 않음 
								if (util.Grid.getRowState(app, "grdCrsItem") == cpr.data.tabledata.RowState.INSERTED) {
									util.Grid.restoreRow(app, "grdCrsItem");
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}
							}	
							
							break;
						}
						
						// 언어확장
						case TAB.LANG : {
							// 리피터 변경사항 체크
							if(util.Grid.isModified(app, ["grdCrsItemLan"], "CRM")){
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								return false;
							}
							
							break;
						}
						
						// 조건
						case TAB.COND : {
							// 리피터 변경사항 체크
							if(util.Grid.isModified(app, ["grdCrsItemCond"], "CRM")){
								// tab 이동 하지 않음
								ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
								return false;
							}
							
							break;
						}
						
					}
					
					// 탭변경
					util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
					
					//탭변경 후 처리 로직
					switch (psCaseId) {
						// 등록금 항목
						case TAB.ITEM : {
							doListItem(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
								
								var vsFindItemCd = util.DataMap.getValue(app, "dmReqKey", "strItemCd");
								util.Grid.selectRowByCondition(app, "grdCrsItem" , "/root/resList/rpt/rptItem/row/ITEM_CD", "==", vsFindItemCd, 0);
							});
							
							break;
						}
						// 언어
						case TAB.LANG : {
							doListItemLan(function(pbSuccess) {
								if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
							
							break;
						}
						// 조건
						case TAB.COND : {
							doListItemCond(function(pbSuccess) {
								if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
							
							break;
						}
					}
				}
				
				/**
				 * @desc 등록금항목 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doListItem(poCallBackFunc) {
					//strCommand: listItem 
					util.Submit.send(app, "subListItem", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCrsItem");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					}); 
				};
				
				/**
				 * @desc 등록금언어 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doListItemLan(poCallBackFunc) {
					//strCommand: listItemLan 
					util.Submit.send(app, "subListItemLan", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCrsItemLan");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
						}
					}); 
				};
				
				/**
				 * @desc 등록금항목별조건 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doListItemCond(poCallBackFunc) {
					//strCommand: listItemCond 
					util.Submit.send(app, "subListItemCond", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCrsItemCond");
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess); 
							
							var vsUsedFlag = util.DataMap.getValue(app, "dmResList", "strUsedFlag");
							
							if (vsUsedFlag == "Y") {
								util.Msg.notify(app, "NLS.CRS.M003");
								util.Control.setEnable(app, false, maChangeMod);
								doSetAttrRptReadOnly("rptCrsItemCond", false);
							} else {
								util.Control.setEnable(app, true, maChangeMod);
								doSetAttrRptReadOnly("rptCrsItemCond", true);
							}
						}
					}); 
				};
				
				/**
				 * @desc 리피트 비/활성화 제어
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */		
				function doSetAttrRptReadOnly(pcRpt, pbEnable) {
					var vsChild = ExtRepeat.getRepChildIDList(pcRpt, "detail", "" , ",");
					vsChild = vsChild.substring(0, vsChild.length-1);
					
					var voChilds = vsChild.split(",");
					
					util.Control.setEnable(app, pbEnable, voChilds);
				};
				
				/**
				 * @desc   등록금항목 리피트 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-02-02
				 */	
				function doAfterValueChangRptCrsItem(psDiv) {
					var vnRowIdx = util.Grid.getIndex(app, "grdCrsItem");
					var vsValue = util.Grid.getCellValue(app, "grdCrsItem", psDiv, vnRowIdx)	;
					
					// 폐기여부
					if(psDiv == "EXP_YN"){
						if (vsValue == "Y") {
							var vsCurrDate = util.DataMap.getValue(app, "dmResList", "strCurrentDt");
							util.Grid.setCellValue(app, "grdCrsItem", "EXP_DT", vsCurrDate, vnRowIdx);
						} else {
							util.Grid.setCellValue(app, "grdCrsItem", "EXP_DT", "", vnRowIdx);	
						}
						
						// 폐기여부에 따른 폐기일 bind 처리
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//			ExtControl.refreshBind("binRoItemExpDt");
					}
					
					// 항목명
					else if(psDiv == "ITEM_NM"){
						if(!ValueUtil.isNull(vsValue)){
							util.Grid.setCellValue(app, "grdCrsItem", "PRT_ITEM_NM", vsValue, vnRowIdx);
						}	
					}	
					
				};
				
				/**
				 * @desc 등록금항목 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnNewItem = function() {
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var voNewRow = util.Grid.insertRow(app, "grdCrsItem", "rdIpbItemCdItem");
					util.Grid.setCellValue(app, "grdCrsItem", "LAN_DIV_RCD" , util.getSystemLocale(), voNewRow);
				};
				
				/**
				 * @desc 등록금항목 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnDeleteItem = function() {
					if(!util.Grid.getIndex(app, "grdCrsItem")){
						util.Msg.notify(app, "NLS.INF.M005");
						return;		
					}
						
					// 선택된 로우를 가져옴
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCrsItem");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					// 등록금항목 코드 사용여부를 확인한다.
					// 관련 테이블 : 등록금기준금액/등록금환불기준/분납유형세부/등록금계산절차별항목/등록금세부
					// 관련테이블의 사용이 없을시엔 CRS_ITEM_COND를 함께 삭제가능하며, 확인창을 띄운다.
					var vsItemCd = "";
					for(var i = 0; i < voPanelChk.length; i++) {
						vsItemCd += util.Grid.getCellValue(app, "grdCrsItem", "ITEM_CD", voPanelChk[i]) + ",";
					}
					
					vsItemCd = vsItemCd.substring(0,(vsItemCd.length-1));
					util.DataMap.setValue(app, "dmReqKey", "strDelItemCd", vsItemCd);
					
					//2016.08.11 신규일경우 오류발생으로 조치
					if(ValueUtil.isNull(vsItemCd.simpleReplace(",",""))){
						util.Grid.deleteRow(app, "grdCrsItem");	
					}else{	
					
						//strCommand: checkUsed 
						util.Submit.send(app, "subCheckUsed", function(pbSuccess){
							if(pbSuccess){
								util.Grid.deleteRow(app, "grdCrsItem");	
								
								var vnNodeListLength = ExtInstance.getNodeListLength("/root/resList/rpt/rptItem/row[child::UPT_STATUS = 'D']");
								if(vnNodeListLength > 0) util.Msg.alert("NLS-CRS-M004");
							}
						});
					}
				};
				
				/**
				 * @desc 등록금항목 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnRestoreItem = function() {
					util.Grid.restoreRow(app, "grdCrsItem");
				};
				
				/**
				 * @desc 등록금항목 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnSaveItem = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCrsItem"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCrsItem")) return false;
					
					var vnRpnCnt = util.Grid.getRowCount(app, "grdCrsItem");
					
					for(var i = 1; i<vnRpnCnt+1; i++){
						
						var vsExpYnItem = util.Grid.getCellValue(app, "grdCrsItem", "EXP_YN", i);
						var vsExpDtItem = util.Grid.getCellValue(app, "grdCrsItem", "EXP_DT", i); 
						if (vsExpYnItem == "Y" && ValueUtil.isNull(vsExpDtItem)) {
							util.Msg.alert("NLS-CRS-M075", i+"");
							ExtRepeat.setColFocus("rptCrsItem", i, "rdDipExpDtItem");
							return false;
						}else if(vsExpYnItem != "Y" && !ValueUtil.isNull(vsExpDtItem)){
							util.Grid.setCellValue(app, "grdCrsItem", "EXP_DT", "", i);	
						}	
					}	
						
					//strCommand: saveItem 
					util.Submit.send(app, "subSaveItem", function(pbSuccess){
						if(pbSuccess){
							doListItem(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc 등록금언어 리피트 값변경
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doAfterValueChangRptCrsItemLang(psDiv) {
					var vnRowIdx = util.Grid.getIndex(app, "grdCrsItemLan");
					var vsValue = util.Grid.getCellValue(app, "grdCrsItemLan", psDiv, vnRowIdx)	;
					
					// 항목명
					if(psDiv == "ITEM_NM"){
						if(!ValueUtil.isNull(vsValue)){
							util.Grid.setCellValue(app, "grdCrsItemLan", "PRT_ITEM_NM", vsValue, vnRowIdx);
						}	
					}	
				};
				
				/**
				 * @desc 등록금언어 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnNewItemLan = function() {
					
					//해당 리피트 insertRow 	
					var vnNewRow = util.Grid.insertRow(app, "grdCrsItemLan");
					
					var vsItemCd = util.DataMap.getValue(app, "dmReqKey", "strItemCd");
					var vsRefKey = util.DataMap.getValue(app, "dmReqKey", "strRefKey");
					
					if(ValueUtil.isNull(vsRefKey)){
						//strCommand: refKey 
						util.Submit.send(app, "subRefKey", function(pbSuccess){
							if(pbSuccess){
								vsRefKey = util.DataMap.getValue(app, "dmReqKey", "strRefKey");
								
								util.Grid.setCellValue(app, "grdCrsItemLan", "ITEM_CD", vsItemCd, vnNewRow);
								util.Grid.setCellValue(app, "grdCrsItemLan", "REF_KEY", vsRefKey, vnNewRow);
								ExtRepeat.setColFocus("rptCrsItemLan", vnNewRow, "rdCbbLanDivRcd");
							}
						});
					}else{
						util.Grid.setCellValue(app, "grdCrsItemLan", "ITEM_CD", vsItemCd, vnNewRow);
						util.Grid.setCellValue(app, "grdCrsItemLan", "REF_KEY", vsRefKey, vnNewRow);
						ExtRepeat.setColFocus("rptCrsItemLan", vnNewRow, "rdCbbLanDivRcd");
					}
				};
				
				/**
				 * @desc 등록금언어 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnDeleteItemLan = function() {
					if(!util.Grid.getIndex(app, "grdCrsItemLan")){
						util.Msg.notify(app, "NLS.INF.M005");
						return;		
					}
					
					var vsDefaultLanDivRcd = util.DataMap.getValue(app, "dmReqKey", "strLanDivRcd");
					
					// 선택된 로우를 가져옴
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCrsItemLan");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					// 지우려고 하는 row가 main table에서 default LAN_DIV_RCD 과 동일하면 삭제할 수 없음
					// new를 지우려 하는 경우는 가능함
					for(var i = voPanelChk.length - 1; i >= 0; i--) {
						var vsLanDivRcd = util.Grid.getCellValue(app, "grdCrsItemLan", "LAN_DIV_RCD", voPanelChk[i]);
						var vsUptStatus = util.Grid.getRowState(app, "grdCrsItemLan", voPanelChk[i]); 
						
						if (vsDefaultLanDivRcd == vsLanDivRcd && vsUptStatus != "insert") {
							util.Msg.alert("NLS-WRN-M010");
							return false;
						}
					}
					
					util.Grid.deleteRow(app, "grdCrsItemLan");
				};
				
				/**
				 * @desc 등록금언어 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnRestoreItemLan = function() {
					util.Grid.restoreRow(app, "grdCrsItemLan");
				};
				
				/**
				 * @desc 등록금항목 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnSaveItemLan = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCrsItemLan"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCrsItemLan")) return false;
						
					//strCommand: saveItemLan 
					util.Submit.send(app, "subSaveItemLan", function(pbSuccess){
						if(pbSuccess){
							doListItemLan(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc 등록금항목별조건 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnNewItemCond = function() {
					//해당 리피트 insertRow 	
					var vnNewRow = util.Grid.insertRow(app, "grdCrsItemCond","rdCbbCondRcdCond");
					var vsItemCd = util.DataMap.getValue(app, "dmReqKey", "strItemCd");
					
					util.Grid.setCellValue(app, "grdCrsItemCond", "ITEM_CD", vsItemCd, vnNewRow);
				};
				
				/**
				 * @desc 등록금항목별조건 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnDeleteItemCond = function() {
					util.Grid.deleteRow(app, "grdCrsItemCond");
				};
				
				/**
				 * @desc 등록금항목별조건 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnRestoreItemCond = function() {
					util.Grid.restoreRow(app, "grdCrsItemCond");
				};
				
				/**
				 * @desc 등록금항목별조건 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */	
				moPage.onClick_BtnSaveItemCond = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCrsItemCond"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCrsItemCond")) return false;
						
					//strCommand: saveItemCond 
					util.Submit.send(app, "subSaveItemCond", function(pbSuccess){
						if(pbSuccess){
							doListItemCond(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListCalcTypeRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemTypeRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListLanDivRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListCondRcd");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListCondTypeRcd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsItem");
			dataSet_6.parseData({
				"info": "CRS_ITEM@ITEM_CD",
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "PRT_ORD"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_IP_MAC"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CRT_USER_ID"},
					{"name": "EXP_YN"},
					{"name": "EXP_DT"},
					{"name": "REF_KEY"},
					{"name": "CALC_TYPE_RCD"},
					{"name": "REMARK"},
					{"name": "UPD_USER_ID"},
					{"name": "ITEM_CD"},
					{"name": "PRT_ITEM_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "ITEM_NM"},
					{"name": "ITEM_TYPE_RCD"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsItemCond");
			dataSet_7.parseData({
				"info": "CRS_ITEM_COND@ITEM_CD,COND_RCD",
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "COND_RCD"},
					{"name": "COND_TYPE_RCD"},
					{"name": "UPD_DTHR"},
					{"name": "CRT_DTHR"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "UPD_USER_ID"},
					{"name": "CRT_PGM_ID"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsItemLan");
			dataSet_8.parseData({
				"info": "CRS_ITEM_LAN@REF_KEY,ITEM_CD,LAN_DIV_RCD",
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "CRT_IP_MAC"},
					{"name": "CRT_DTHR"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CRT_USER_ID"},
					{"name": "REF_KEY"},
					{"name": "UPD_USER_ID"},
					{"name": "ITEM_CD"},
					{"name": "PRT_ITEM_NM"},
					{"name": "CRT_PGM_ID"},
					{"name": "ITEM_NM"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strItemNm",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strItemCd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strDelItemCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strCurrentDt",
						"dataType": "string"
					},
					{
						"name": "strUsedFlag",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/StdCrsItem/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subCheckUsed");
			submission_2.action = "/crs/StdCrsItem/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subListItemLan");
			submission_3.action = "/crs/StdCrsItem/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_8, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListItemCond");
			submission_4.action = "/crs/StdCrsItem/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_7, false);
			submission_4.addResponseData(dataMap_2, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subListItem");
			submission_5.action = "/crs/StdCrsItem/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addResponseData(dataSet_6, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subSaveItem");
			submission_6.action = "/crs/StdCrsItem/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subSaveItemLan");
			submission_7.action = "/crs/StdCrsItem/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subSaveItemCond");
			submission_8.action = "/crs/StdCrsItem/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_8);
			
			var submission_9 = new cpr.protocols.Submission("subRefKey");
			submission_9.action = "/crs/StdCrsItem/";
			submission_9.mediaType = "application/x-www-form-urlencoded";
			submission_9.addRequestData(dataMap_1);
			submission_9.addResponseData(dataMap_1, false);
			app.register(submission_9);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tpgItem";
					var group_2 = new cpr.controls.Container("grptpgItem");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_2.setLayout(formLayout_1);
					(function(container){
						var button_1 = new cpr.controls.Button("btnSaveItem");
						button_1.value = "";
						button_1.style.setClasses(["btn-save"]);
						button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveItemClick == "function") {
							button_1.addEventListener("click", onBtnSaveItemClick);
						}
						container.addChild(button_1, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
						var button_2 = new cpr.controls.Button("btnRestoreItem");
						button_2.value = "";
						button_2.style.setClasses(["btn-restore"]);
						button_2.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreItemClick == "function") {
							button_2.addEventListener("click", onBtnRestoreItemClick);
						}
						container.addChild(button_2, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_3 = new cpr.controls.Button("btnDeleteItem");
						button_3.value = "";
						button_3.style.setClasses(["btn-delete"]);
						button_3.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDeleteItemClick == "function") {
							button_3.addEventListener("click", onBtnDeleteItemClick);
						}
						container.addChild(button_3, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_4 = new cpr.controls.Button("btnNewItem");
						button_4.value = "";
						button_4.style.setClasses(["btn-new"]);
						button_4.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewItemClick == "function") {
							button_4.addEventListener("click", onBtnNewItemClick);
						}
						container.addChild(button_4, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCrsItem");
						grid_1.init({
							"dataSet": app.lookup("dsItem"),
							"columns": [
								{"width": "25px"},
								{"width": "25px"},
								{"width": "40px"},
								{"width": "100px"},
								{"width": "148px"},
								{"width": "146px"},
								{"width": "143px"},
								{"width": "70px"},
								{"width": "120px"},
								{"width": "72px"},
								{"width": "104px"},
								{"width": "212px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ITEM_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ITEM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-PRT_ITEM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-CLAC_TYPE_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-ITEM_TYPE_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXP_YN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXP_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-REMARK");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.control = (function(){
												var output_1 = new cpr.controls.Output();
												output_1.style.css({
													"text-align" : "center"
												});
												return output_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ITEM_CD";
											cell.control = (function(){
												var inputBox_1 = new cpr.controls.InputBox("gdIpbItemCdItem");
												inputBox_1.maxLength = 10;
												inputBox_1.userAttr({"require": "Y"});
												inputBox_1.bind("value").toDataColumn("ITEM_CD");
												return inputBox_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ITEM_NM";
											cell.control = (function(){
												var inputBox_2 = new cpr.controls.InputBox("gdIpbItemNmItem");
												inputBox_2.maxLength = 100;
												inputBox_2.userAttr({"require": "Y"});
												inputBox_2.bind("value").toDataColumn("ITEM_NM");
												return inputBox_2;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "PRT_ITEM_NM";
											cell.control = (function(){
												var inputBox_3 = new cpr.controls.InputBox("gdIpbPrtItemNmItem");
												inputBox_3.maxLength = 100;
												inputBox_3.userAttr({"require": "Y"});
												inputBox_3.bind("value").toDataColumn("PRT_ITEM_NM");
												return inputBox_3;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "CALC_TYPE_RCD";
											cell.control = (function(){
												var comboBox_1 = new cpr.controls.ComboBox("gdCbbCalcTypeRcdItem");
												comboBox_1.userAttr({"require": "Y"});
												(function(comboBox_1){
													comboBox_1.addItem(new cpr.controls.Item("선택", ""));
													comboBox_1.setItemSet(app.lookup("dsListCalcTypeRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_1);
												comboBox_1.bind("value").toDataColumn("CALC_TYPE_RCD");
												return comboBox_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
											cell.control = (function(){
												var inputBox_4 = new cpr.controls.InputBox("gdIpbPrtOgdItem");
												inputBox_4.maxLength = 5;
												inputBox_4.userAttr({"require": "Y"});
												inputBox_4.bind("value").toDataColumn("PRT_ORD");
												return inputBox_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "ITEM_TYPE_RCD";
											cell.control = (function(){
												var comboBox_2 = new cpr.controls.ComboBox("gdCbbItemTypeRcd");
												(function(comboBox_2){
													comboBox_2.setItemSet(app.lookup("dsListItemTypeRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_2);
												comboBox_2.bind("value").toDataColumn("ITEM_TYPE_RCD");
												return comboBox_2;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "EXP_YN";
											cell.control = (function(){
												var checkBox_1 = new cpr.controls.CheckBox("gdChkExpYnItem");
												checkBox_1.value = "";
												checkBox_1.trueValue = "Y";
												checkBox_1.falseValue = "";
												checkBox_1.text = "";
												checkBox_1.style.css({
													"text-align" : "center"
												});
												checkBox_1.bind("value").toDataColumn("EXP_YN");
												return checkBox_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "EXP_DT";
											cell.control = (function(){
												var dateInput_1 = new cpr.controls.DateInput("gdDipExpDtItem");
												dateInput_1.bind("value").toDataColumn("EXP_DT");
												return dateInput_1;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "REMARK";
											cell.control = (function(){
												var inputBox_5 = new cpr.controls.InputBox("gdIpbRemarkItem");
												inputBox_5.maxLength = 1000;
												inputBox_5.bind("value").toDataColumn("REMARK");
												return inputBox_5;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdCrsItemSelectionChange == "function") {
							grid_1.addEventListener("selection-change", onGrdCrsItemSelectionChange);
						}
						container.addChild(grid_1, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "565px"
						});
						var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
						userDefinedControl_2.bind("title").toLanguage("UI-SCR-TUITITMLST");
						container.addChild(userDefinedControl_2, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
					})(group_2);
					tabItem_1.content = group_2;
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tpgItemLan";
					var group_3 = new cpr.controls.Container("grptpgItemLan");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_3.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-TUITLSTLANEXP");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCrsItemLan");
						grid_2.init({
							"dataSet": app.lookup("dsItemLan"),
							"columns": [
								{"width": "25px"},
								{"width": "25px"},
								{"width": "40px"},
								{"width": "189px"},
								{"width": "168px"},
								{"width": "203px"},
								{"width": "208px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ITEM_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-LAN_DIV_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ITEM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-PRT_ITEM_NM");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.control = (function(){
												var output_2 = new cpr.controls.Output();
												output_2.style.css({
													"text-align" : "center"
												});
												return output_2;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ITEM_CD";
											cell.control = (function(){
												var inputBox_6 = new cpr.controls.InputBox("gdIpbItemCd");
												inputBox_6.readOnly = true;
												inputBox_6.maxLength = 10;
												inputBox_6.bind("value").toDataColumn("ITEM_CD");
												return inputBox_6;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_3 = new cpr.controls.ComboBox("gdCbbLanDivRcd");
												comboBox_3.userAttr({"require": "Y"});
												(function(comboBox_3){
													comboBox_3.addItem(new cpr.controls.Item("선택", ""));
													comboBox_3.setItemSet(app.lookup("dsListLanDivRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_3);
												comboBox_3.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_3;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "ITEM_NM";
											cell.control = (function(){
												var inputBox_7 = new cpr.controls.InputBox("gdIpbItemNm");
												inputBox_7.maxLength = 100;
												inputBox_7.userAttr({"require": "Y"});
												inputBox_7.bind("value").toDataColumn("ITEM_NM");
												return inputBox_7;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "PRT_ITEM_NM";
											cell.control = (function(){
												var inputBox_8 = new cpr.controls.InputBox("gdIpbPrtItemNm");
												inputBox_8.maxLength = 100;
												inputBox_8.userAttr({"require": "Y"});
												inputBox_8.bind("value").toDataColumn("PRT_ITEM_NM");
												return inputBox_8;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdCrsItemLanSelectionChange == "function") {
							grid_2.addEventListener("selection-change", onGrdCrsItemLanSelectionChange);
						}
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "565px"
						});
						var button_5 = new cpr.controls.Button("btnNewItemLan");
						button_5.value = "";
						button_5.style.setClasses(["btn-new"]);
						button_5.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewItemLanClick == "function") {
							button_5.addEventListener("click", onBtnNewItemLanClick);
						}
						container.addChild(button_5, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_6 = new cpr.controls.Button("btnDeleteItemLan");
						button_6.value = "";
						button_6.style.setClasses(["btn-delete"]);
						button_6.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDeleteItemLanClick == "function") {
							button_6.addEventListener("click", onBtnDeleteItemLanClick);
						}
						container.addChild(button_6, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_7 = new cpr.controls.Button("btnRestoreItemLan");
						button_7.value = "";
						button_7.style.setClasses(["btn-restore"]);
						button_7.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreItemLanClick == "function") {
							button_7.addEventListener("click", onBtnRestoreItemLanClick);
						}
						container.addChild(button_7, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_8 = new cpr.controls.Button("btnSaveItemLan");
						button_8.value = "";
						button_8.style.setClasses(["btn-save"]);
						button_8.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveItemLanClick == "function") {
							button_8.addEventListener("click", onBtnSaveItemLanClick);
						}
						container.addChild(button_8, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
					})(group_3);
					tabItem_2.content = group_3;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tpgItemCond";
					var group_4 = new cpr.controls.Container("grptpgItemCond");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_4.setLayout(formLayout_3);
					(function(container){
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("UI-SCR-TUITLSTCDT");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCrsItemCond");
						grid_3.init({
							"dataSet": app.lookup("dsItemCond"),
							"columns": [
								{"width": "25px"},
								{"width": "25px"},
								{"width": "40px"},
								{"width": "260px"},
								{"width": "230px"},
								{"width": "253px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ITEM_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-COND_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-COND_TYPE_RCD");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.columnType = "checkbox";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.control = (function(){
												var output_3 = new cpr.controls.Output();
												output_3.style.css({
													"text-align" : "center"
												});
												return output_3;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ITEM_CD";
											cell.control = (function(){
												var inputBox_9 = new cpr.controls.InputBox("gdIpbItemCdCond");
												inputBox_9.readOnly = true;
												inputBox_9.maxLength = 10;
												inputBox_9.bind("value").toDataColumn("ITEM_CD");
												return inputBox_9;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "COND_RCD";
											cell.control = (function(){
												var comboBox_4 = new cpr.controls.ComboBox("gdCbbCondRcdCond");
												comboBox_4.userAttr({"require": "Y"});
												(function(comboBox_4){
													comboBox_4.addItem(new cpr.controls.Item("선택", ""));
													comboBox_4.setItemSet(app.lookup("dsListCondRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_4);
												comboBox_4.bind("value").toDataColumn("COND_RCD");
												return comboBox_4;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "COND_TYPE_RCD";
											cell.control = (function(){
												var comboBox_5 = new cpr.controls.ComboBox("gdCbbCondTypeRcdCond");
												comboBox_5.userAttr({"require": "Y"});
												(function(comboBox_5){
													comboBox_5.addItem(new cpr.controls.Item("선택", ""));
													comboBox_5.setItemSet(app.lookup("dsListCondTypeRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_5);
												comboBox_5.bind("value").toDataColumn("COND_TYPE_RCD");
												return comboBox_5;
											})();
										}
									}
								]
							}
						});
						container.addChild(grid_3, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "565px"
						});
						var button_9 = new cpr.controls.Button("btnNewItemCond");
						button_9.value = "";
						button_9.style.setClasses(["btn-new"]);
						button_9.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewItemCondClick == "function") {
							button_9.addEventListener("click", onBtnNewItemCondClick);
						}
						container.addChild(button_9, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_10 = new cpr.controls.Button("btnDeleteItemCond");
						button_10.value = "";
						button_10.style.setClasses(["btn-delete"]);
						button_10.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDeleteItemCondClick == "function") {
							button_10.addEventListener("click", onBtnDeleteItemCondClick);
						}
						container.addChild(button_10, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_11 = new cpr.controls.Button("btnRestoreItemCond");
						button_11.value = "";
						button_11.style.setClasses(["btn-restore"]);
						button_11.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreItemCondClick == "function") {
							button_11.addEventListener("click", onBtnRestoreItemCondClick);
						}
						container.addChild(button_11, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_12 = new cpr.controls.Button("btnSaveItemCond");
						button_12.value = "";
						button_12.style.setClasses(["btn-save"]);
						button_12.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveItemCondClick == "function") {
							button_12.addEventListener("click", onBtnSaveItemCondClick);
						}
						container.addChild(button_12, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
					})(group_4);
					tabItem_3.content = group_4;
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "34px",
					"left": "5px",
					"width": "1215px",
					"height": "600px"
				});
				var button_13 = new cpr.controls.Button("tabBtnItem");
				button_13.value = "";
				button_13.bind("value").toLanguage("UI-SCR-TUITIONITEM");
				if(typeof onTabBtnItemClick == "function") {
					button_13.addEventListener("click", onTabBtnItemClick);
				}
				container.addChild(button_13, {
					"top": "7px",
					"left": "5px",
					"width": "140px",
					"height": "28px"
				});
				var button_14 = new cpr.controls.Button("tabBtnItemLan");
				button_14.value = "";
				button_14.bind("value").toLanguage("UI-SCR-TUITLSTLANEXP");
				if(typeof onTabBtnItemLanClick == "function") {
					button_14.addEventListener("click", onTabBtnItemLanClick);
				}
				container.addChild(button_14, {
					"top": "7px",
					"left": "146px",
					"width": "140px",
					"height": "28px"
				});
				var button_15 = new cpr.controls.Button("tabBtnItemCond");
				button_15.value = "";
				button_15.bind("value").toLanguage("UI-SCR-TUITLSTCDT");
				if(typeof onTabBtnItemCondClick == "function") {
					button_15.addEventListener("click", onTabBtnItemCondClick);
				}
				container.addChild(button_15, {
					"top": "7px",
					"left": "287px",
					"width": "140px",
					"height": "28px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "640px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.userDefinedControl_3.ctrl = linker.grid_2;
			linker.userDefinedControl_4.ctrl = linker.grid_3;
		}
	});
	app.title = "stdCrsCItem";
	cpr.core.Platform.INSTANCE.register(app);
})();
