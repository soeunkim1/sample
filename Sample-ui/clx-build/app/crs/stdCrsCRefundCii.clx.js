/*
 * App URI: app/crs/stdCrsCRefundCii
 * Source Location: app/crs/stdCrsCRefundCii.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/stdCrsCRefundCii", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCrsCRefundCii.xtm"/>
			
			
			var stdCrsCRefundCii = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
					
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onLoad = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCrsRefundCii");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					doOnLoad();
					util.Control.setFocus(app, "cbbProcRsnRcd");
				};
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */		
				moPage.onClick_BtnNew = function() {
					doSetNewRow();
				};
				
				/**
				 * @desc 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */	
				moPage.onClick_BtnDel = function() {
					doDelRow();
				};
				
				/**
				 * @desc 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdCrsRefundCii");
				};
				
				/**
				 * @desc 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */	
				moPage.onClick_BtnSave = function() {
					doSave();
					
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 02. 01.
				 */
				function doOnLoad(){
					doOnLoadImpNS("CRS");
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbCrsMenuItem", "cbbProcRsnRcd"]);
							util.SelectCtl.selectItem(app, "cbbProcRsnRcd", 0);
							util.SelectCtl.selectItem(app, "cbbCrsMenuItem", 0);
							util.Control.redraw(app, "grdCrsRefundCii");
						}
					}, true);
				};
				
				
				/**
				 * @desc  등록금환불기준 목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doList(poCallBackFunc) {
					
					
					if(!util.validate(app, ["cbbProcRsnRcd", "cbbYearImpNS", "cbbSmtImpNS", "cbbCrsMenuItem"])){
						return false;
					}
					
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", util.Control.getValue(app, "cbbYearImpNS"));
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", util.Control.getValue(app, "cbbSmtImpNS"));
					util.DataMap.setValue(app, "dmReqKey", "YEAR", util.Control.getValue(app, "cbbYearImpNS"));
					util.DataMap.setValue(app, "dmReqKey", "SMT", util.Control.getValue(app, "cbbSmtImpNS"));
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCrsRefundCii");	
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc  신규로우를 추가한다.
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doSetNewRow() {
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var voNewRow = util.Grid.insertRow(app, "grdCrsRefundCii", "rdDipLsnStDt");	
					
					var vsProcRsnRcd = util.DataMap.getValue(app, "dmReqKey", "strProcRsnCd");
					var vsItemCd     = util.DataMap.getValue(app, "dmReqKey", "strItemCd");
					var vsSchYearRcd = util.DataMap.getValue(app, "dmReqKey", "strSchYearRcd");
					var vsSmtRcd     = util.DataMap.getValue(app, "dmReqKey", "strSmtRcd");
					
					util.Grid.setCellValue(app, "grdCrsRefundCii", "PROC_RSN_RCD", vsProcRsnRcd, voNewRow);
					util.Grid.setCellValue(app, "grdCrsRefundCii", "ITEM_CD"     , vsItemCd, voNewRow);
					util.Grid.setCellValue(app, "grdCrsRefundCii", "SCH_YEAR_RCD", vsSchYearRcd, voNewRow);
					util.Grid.setCellValue(app, "grdCrsRefundCii", "SMT_RCD"     , vsSmtRcd, voNewRow);
				};
				
				/**
				 * @desc  현재 로우를 삭제한다.
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doDelRow() {
					
					if(!util.Grid.getIndex(app, "grdCrsRefundCii")){
						util.Msg.alert("NLS-MSG-WRN-M004(NLS-SCR-RFDSTDLST"));  
						return;		
					}
					
					util.Grid.deleteRow(app, "grdCrsRefundCii");
				};
				
				/**
				 * @desc  강의실목록 리피트 저장 submission 실행
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doSave() {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCrsRefundCii"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCrsRefundCii")) return false;
					
					var vbSaved = false;
					
					if(!doCheckDate()){
						//strCommand: save 
						util.Submit.send(app, "subSave", function(pbSuccess){
							if(pbSuccess){
								doList(function(pbListSuccess){
									if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
								});
							}
						});
					}else{
						util.Msg.alert("NLS-CRS-M016");
					}	
					
					return vbSaved;
				};
				
				/**
				 * @desc  수업일자가 겹쳐지는체 체크
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doCheckDate() {
					var vsMLsnStDt, vsMLsnEndDt, vsSLsnStDt, vsSLsnEndDt;
					var vsMRowStatus, vsSRowStatus;
					var vnRpnCnt = util.Grid.getRowCount(app, "grdCrsRefundCii");
					
					for(var k = 1, l = vnRpnCnt+1; k < l; k++){
						
						vsMLsnStDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_ST_DT", k);
						vsMLsnEndDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_END_DT", k);
						
						vsMRowStatus = util.Grid.getRowState(app, "grdCrsRefundCii", k);
						
						if(vsMRowStatus == "delete") continue;
						for(var i = 1, j = vnRpnCnt+1; i < j; i++){
							
							if(i == k) continue;
							vsSRowStatus = util.Grid.getRowState(app, "grdCrsRefundCii", i);
							
							if(vsSRowStatus == "delete") continue;
							vsSLsnStDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_ST_DT", i);
							vsSLsnEndDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_END_DT", i);
							if(vsSLsnStDt.length == 0 || vsSLsnEndDt.length == 0) continue; 
							if(vsMLsnStDt >= vsSLsnStDt && vsMLsnStDt <= vsSLsnEndDt) return true;
							if(vsMLsnEndDt >= vsSLsnStDt && vsMLsnEndDt <= vsSLsnEndDt) return true;
							if(vsMLsnStDt != 0 && vsMLsnEndDt != 0){		
								if(vsMLsnStDt >= vsSLsnStDt && vsMLsnEndDt <= vsSLsnEndDt) return true;	
								if(vsSLsnStDt > vsMLsnStDt && vsSLsnStDt < vsMLsnEndDt) return true;
							}
						}
					}
					return false;
					
				}
				
				/**
				 * @desc   리피트 수업시작일자 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onValueChanged_RdDipLsnStDt = function() {
					doChkGrxValid("LSN_ST_DT");
				};
				
				/**
				 * @desc   리피트 수업종료일자 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onValueChanged_RdDipLsnEndDt = function() {
					doChkGrxValid("LSN_END_DT");
				};
				
				/**
				 * @desc   리피트 비율분자 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onValueChanged_RdIpbRateNur = function() {
					doChkGrxValid("RATE_NUR");
				};
				
				/**
				 * @desc   리피트 비율분모 변경 이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				moPage.onValueChanged_RdIpbRateDen = function() {
					doChkGrxValid("RATE_DEN");
				};
				
				/**
				 * @desc   그리드의 값이 변경되었을때 각컬럼별 유효성 체크
				 * @return void
				 * @author Aeyoung Lee 2016-02-01
				 */
				function doChkGrxValid(psDiv){
					var vnRowIdx = util.Grid.getIndex(app, "grdCrsRefundCii");
					var vnChkValue = util.Grid.getCellValue(app, "grdCrsRefundCii", psDiv, vnRowIdx)	;
					
					// 비율분자
					if(psDiv == "RATE_NUR"){
						if(vnChkValue.length != 0 && vnChkValue < 0){
							util.Msg.alert("NLS-CRS-M014");	
							util.Grid.setCellValue(app, "grdCrsRefundCii", psDiv, "", vnRowIdx);
							return;
						}	
					}
					// 비율분모
					else if(psDiv == "RATE_DEN"){
						if(vnChkValue.length != 0 && vnChkValue < 0){
							util.Msg.alert("NLS-CRS-M006(NLS-SCR-DEN"));
							util.Grid.setCellValue(app, "grdCrsRefundCii", psDiv, "", vnRowIdx);
							return;
						}	
					}	
					
					switch(psDiv){
						case "RATE_NUR" :
						case "RATE_DEN" :
							var vnRateNur = Number(util.Grid.getCellValue(app, "grdCrsRefundCii", "RATE_NUR", vnRowIdx));
							var vnRateDen = Number(util.Grid.getCellValue(app, "grdCrsRefundCii", "RATE_DEN", vnRowIdx));
							if(psDiv == "RATE_DEN" && vnChkValue.length != 0 && vnChkValue < 1){
								util.Msg.alert("NLS-CRS-M009");
								util.Grid.setCellValue(app, "grdCrsRefundCii", psDiv, "", vnRowIdx);
							}else if(vnRateDen != "" && vnRateDen < vnRateNur){
								util.Msg.alert("NLS-CRS-M010");
								util.Grid.setCellValue(app, "grdCrsRefundCii", psDiv, "", vnRowIdx);
							}
							break;
						case "LSN_ST_DT" :
						case "LSN_END_DT" :
							var vnStDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_ST_DT", vnRowIdx);
							var vnEndDt = util.Grid.getCellValue(app, "grdCrsRefundCii", "LSN_END_DT", vnRowIdx);
							if(vnStDt == "" || vnEndDt == "") break;
							if(vnStDt > vnEndDt){
								util.Msg.alert("NLS-CRS-M008");
								util.Grid.setCellValue(app, "grdCrsRefundCii", psDiv, "", vnRowIdx);
								break;
							}
							break;
						default :
						break;
					}	
						
				};	
				
				/**
				 * @desc   리피트 패널 체크
				 * @return void
				 * @author Aeyoung Lee 2016-02-02
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListProcRsnCd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListRndTypeRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListSchYear");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListSmtCd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsGrxMst");
			dataSet_6.parseData({
				"info": "CRS_REFUND_CII@PROC_RSN_RCD,ITEM_CD,SCH_YEAR_RCD,SMT_RCD,LSN_ST_DT,LSN_END_DT",
				"columns": [
					{"name": "UPD_DTHR"},
					{"name": "LSN_END_DT"},
					{"name": "CRT_DTHR"},
					{"name": "LSN_ST_DT"},
					{"name": "CRT_USER_ID"},
					{"name": "CRT_IP_MAC"},
					{"name": "RATE_DEN"},
					{"name": "RATE_NUR"},
					{"name": "UPD_USER_ID"},
					{"name": "ITEM_CD"},
					{"name": "REF_KEY"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "RND_TYPE_RCD"},
					{"name": "RND_LOC"},
					{"name": "SMT_RCD"},
					{"name": "PROC_RSN_RCD"},
					{"name": "CRT_PGM_ID"},
					{"name": "UPD_PGM_ID"},
					{"name": "UPD_IP_MAC"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strProcRsnCd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strItemCd",
						"dataType": "string"
					},
					{
						"name": "strSmtGrpRcd",
						"dataType": "string"
					},
					{
						"name": "strUnitSystem",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "schYear",
						"dataType": "string"
					},
					{
						"name": "schSmt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/StdCrsRefundCii/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/crs/StdCrsRefundCii/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_6, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/crs/StdCrsRefundCii/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optProcRsnRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-PRCSRS");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "71px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbProcRsnRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optProcRsnRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcRsnCd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListProcRsnCd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "79px",
					"width": "140px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optCrsItemCd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-TUITIONITEM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "229px",
					"width": "71px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbCrsMenuItem");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optCrsItemCd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strItemCd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListItemCd"), {
						"label": "ITEM_NM",
						"value": "ITEM_CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "303px",
					"width": "140px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/crs/impCrsYearSmt", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "453px",
					"width": "377px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-RFDSTDLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCrsRefundCii");
				grid_1.init({
					"dataSet": app.lookup("dsGrxMst"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "170px"},
						{"width": "170px"},
						{"width": "140px"},
						{"width": "140px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LSN_BEG_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-LSN_END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-RATE_NUR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-RATE_DEN");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "LSN_ST_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipLsnStDt");
										dateInput_1.userAttr({"require": "Y"});
										dateInput_1.style.css({
											"text-align" : "center"
										});
										dateInput_1.bind("value").toDataColumn("LSN_ST_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "LSN_END_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipLsnEndDt");
										dateInput_2.userAttr({"require": "Y"});
										dateInput_2.style.css({
											"text-align" : "center"
										});
										dateInput_2.bind("value").toDataColumn("LSN_END_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "RATE_NUR";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbRateNur");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "99";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.bind("value").toDataColumn("RATE_NUR");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "RATE_DEN";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbRateDen");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "99";
										numberEditor_2.userAttr({"require": "Y"});
										numberEditor_2.bind("value").toDataColumn("RATE_DEN");
										return numberEditor_2;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "563px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCrsCRefundCii";
	cpr.core.Platform.INSTANCE.register(app);
})();
