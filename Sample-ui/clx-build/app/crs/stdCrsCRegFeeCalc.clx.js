/*
 * App URI: app/crs/stdCrsCRegFeeCalc
 * Source Location: app/crs/stdCrsCRegFeeCalc.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/stdCrsCRegFeeCalc", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCrsCRegFeeCalc.xtm"/>
			
			
			var stdCrsCRegFeeCalc = function() {
					
				var moPage = new Page();
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc  조건 Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onLoadImportDone_ImpCssScalCollSch = function() {
					onLoadOptGrpImp("CB01901", "getStudGrpList", null);
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onModelConstructDone_StdCrsCRegFeeCalc = function() {
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {
							util.Control.redraw(app, ["cbbYear","cbbSmt","cbbRegCls","cbbPrcd","dipIfrDt","dipPayCloseDt"]);
							
							var vsDefaultRegCls = ExtInstance.getValue("/root/resList/listRegCls/row", "CD", "child::CD_PRP1='Y'");
							
							util.SelectCtl.selectItem(app, "cbbRegCls", vsDefaultRegCls);
							util.SelectCtl.selectItem(app, "cbbPrcd", 0);
						}
						
					});
				};
				
				/**
				 * @desc 학년도 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onValueChanged_CbbYear = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학기 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				moPage.onValueChanged_CbbSmt = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학년도학기 변경 이벤트 - 기준 시작일자, 종료일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				function doChangeDate() {
					util.DataMap.setValue(app, "dmDate", "ST_DT", "");
					util.DataMap.setValue(app, "dmDate", "END_DT", "");
					ExtSubmission.sendEx("subDate", "date"); 
				};
				
				/**
				 * @desc 실행버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-02-03
				 */
				 moPage.onClick_BtnSaveFeeCalc = function() {
					if(!doValidationImp()) return;
					
					if(!util.validate(app, ["cbbYear", "cbbSmt", "cbbRegCls", "cbbPrcd", "dipIfrDt"])) return;
					
					// 2016.10.14 배치처리전 커버페이지 씌우는 로직추가
					util.coverPage(app);
					
					//strCommand: saveFeeCalc 
					util.Submit.send(app, "subSaveFeeCalc", function(pbSuccess){
						if(pbSuccess){
							var vbRunStudCnt = util.DataMap.getValue(app, "dmResList", "strRunStudCnt");
							
							var vsFileDir = util.DataMap.getValue(app, "dmFileInfo", "strFileDir");		//파일디렉토리경로
							var vsFileNm = util.DataMap.getValue(app, "dmFileInfo", "strFileNm");		//파일명
							var vsFileChgNm = util.DataMap.getValue(app, "dmFileInfo", "strFileChgNm");	//변환파일명(실제 서버에 저장된 파일명)
							var strTmpFilePath = util.DataMap.getValue(app, "dmFileInfo", "strTmpFilePath");	
							
							// @1 명의 학생에 대해 수행했습니다. 로그 및 에러를 확인하세요.
							util.Msg.alert("NLS-CRS-M061", [vbRunStudCnt]);
							
							var voParam = {
								"strFileSubPath" : "",
								"strFileNm" : vsFileNm,
								"strOriFileNm" : vsFileNm,
								"strTmpFilePath" : strTmpFilePath,
								"strCommand" : "fileDownLoad"
							}
							
							//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
							FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
						}
						
						util.removeCover(app);
					}); 
				};
					
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListYear");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListSmt");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListRegCls");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListPrcdCd");
			dataSet_4.parseData({
				"columns": [
					{"name": "PRCD_CD"},
					{"name": "PRCD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strRegClsRcd",
						"dataType": "string"
					},
					{
						"name": "strPrcdCd",
						"dataType": "string"
					},
					{
						"name": "strRegClsReCrtFlag",
						"dataType": "string"
					},
					{
						"name": "strIfrDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFileInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strResultLog",
						"dataType": "string"
					},
					{
						"name": "strResultError",
						"dataType": "string"
					},
					{
						"name": "strFileNameError",
						"dataType": "string"
					},
					{
						"name": "strFileNameLog",
						"dataType": "string"
					},
					{
						"name": "strRunStudCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmDate");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/StdCrsRegFeeCalc/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/crs/StdCrsRegFeeCalc/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addResponseData(dataMap_4, false);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSaveFeeCalc");
			submission_3.action = "/crs/StdCrsRegFeeCalc/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_3, false);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpStudCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaCssScalCollSch");
				if(typeof onEmaCssScalCollSchAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaCssScalCollSchAppReady);
				}
				cpr.core.App.load("app/crs/impStdCrsCRegFeeCalc", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "1146px",
					"height": "50px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpExec");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSaveFeeCalc");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-GLS-EXEC");
				if(typeof onBtnSaveFeeCalcClick == "function") {
					button_1.addEventListener("click", onBtnSaveFeeCalcClick);
				}
				container.addChild(button_1, {
					"top": "0px",
					"left": "0px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "1165px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-STDTCHOI");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var userDefinedControl_3 = new udc.com.comFormTitle();
			userDefinedControl_3.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_3, {
				"top": "130px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_3 = new cpr.controls.Container("grpExecCond");
			group_3.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var output_1 = new cpr.controls.Output("optYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optIfrDt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-DB-IFR_DT");
				container.addChild(output_2, {
					"top": "30px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optPrcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-TUITCALPRC");
				container.addChild(output_3, {
					"top": "30px",
					"left": "370px",
					"width": "140px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSmt");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "370px",
					"width": "140px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optRegClsReCrtFlag");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-TUITRECRATPER");
				container.addChild(output_5, {
					"top": "30px",
					"left": "735px",
					"width": "140px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optRegCls");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-SCR-REGDIV");
				container.addChild(output_6, {
					"top": "5px",
					"left": "735px",
					"width": "140px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmDate"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListYear"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbYearSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbYearSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "150px",
					"width": "210px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmDate"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListSmt"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "515px",
					"width": "210px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbPrcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optPrcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strPrcdCd");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsListPrcdCd"), {
						"label": "PRCD_NM",
						"value": "PRCD_CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "515px",
					"width": "210px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbRegCls");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optRegCls.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strRegClsRcd");
				(function(comboBox_4){
					comboBox_4.setItemSet(app.lookup("dsListRegCls"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "880px",
					"width": "210px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipIfrDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optIfrDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strIfrDt");
				container.addChild(dateInput_1, {
					"top": "30px",
					"left": "150px",
					"width": "210px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbRegClsReCrtFlag");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.style.css({
					"text-align" : "center"
				});
				checkBox_1.bind("fieldLabel").toExpression("#optRegClsReCrtFlag.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRegClsReCrtFlag");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "880px",
					"width": "30px",
					"height": "25px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "155px",
				"left": "5px",
				"width": "1225px",
				"height": "55px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCrsSimul");
			cpr.core.App.load("app/crs/impDialogCrsSimulResult", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "30px",
				"left": "1240px",
				"width": "379px",
				"height": "398px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCrsParm");
			cpr.core.App.load("app/crs/impDialogCrsParam", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "437px",
				"left": "1240px",
				"width": "360px",
				"height": "237px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "등록금계산";
	cpr.core.Platform.INSTANCE.register(app);
})();
