/*
 * App URI: app/crs/stdCrsCRegFeePay
 * Source Location: app/crs/stdCrsCRegFeePay.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/crs/stdCrsCRegFeePay", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCrsCRegFeePay.xtm"/>
			
			var stdCrsCRegFeePay = function() {
			
				var moPage = new Page();
				var moPObject = new PObject();
				
				/**
				 * 등록금납입신규 팝업 관련 설정사항
				 */
				moPObject.moRegFeePayCrtParam = {
					studId : "",
					schYearRcd : "",
					smtRcd : "",
					regCls : "",
				};
			
				/**
				 * @desc import 서브페이지 초기화
				 * @member stdCrsCRegFeePay
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				
				/**
				 * @desc 화면 온로드
				 * @member stdCrsCRegFeePay
				 * @param
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.onModelConstructDone_StdCrsCRegFeePay = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptRegFeePay");
					
					// 부모창에 있는 값 셋팅
					var voParentInfo = moPage.parent.moCmnInfo;
					
					util.DataMap.setValue(app, "dmReqKey", "strStudId"	 , voParentInfo.studId);
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", voParentInfo.schYearRcd);
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd"	 , voParentInfo.smtRcd);
					util.DataMap.setValue(app, "dmReqKey", "strRegClsRcd" , voParentInfo.regClsRcd);
						
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							moPage.setParentMsg(NLS.INF.M024);		
						}
					});
				};
			
				/**
				 * @desc 등록금납부내역 목록을 조회한다.
				 * @member stdCrsCRegFeePay
				 * @param poCallBackFunc 콜백 함수
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, ["rptRegFeePay"]);
						}
						
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 납입신규등록 팝업 호출
				 * @member stdCrsCRegFeePay
				 * @param   
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.onClick_BtnNew = function() {
					//납입신규생성팝업 호출
					var voMapNode = moPObject.moRegFeePayCrtParam;
					voMapNode.studId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
					voMapNode.schYearRcd = util.DataMap.getValue(app, "dmReqKey", "strSchYearRcd");
					voMapNode.smtRcd = util.DataMap.getValue(app, "dmReqKey", "strSmtRcd");
					voMapNode.regCls = util.DataMap.getValue(app, "dmReqKey", "strRegClsRcd");
					
					ExtPopUp.openLayeredPopup("/xtm/crs/stdCrsCRegFeePayCrt.xtm", 935, 445);
				};
				
				/**
				 * @desc 납입생성 팝업 콜백함수
				 * @member stdCrsCRegFeePay
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.callbackRegFeePayCrt = function(pbSuccess) {
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// 등록사항 재조회
							ExtSubPage.getParent().callScript("doSetRegInfo");
							// "납부처리 되었습니다."
							moPage.setParentMsg(NLS.CRS.M058);		
						}
					});
				};
				
				/**
				 * @desc 납입취소버튼 클릭 이벤트
				 * @member stdCrsCRegFeePay
				 * @param   
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.onClick_BtnSaveDel = function() {
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptRegFeePay/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						var vsMsgParam = util.Grid.getTitle(app, "grdRegFeePayRegFeePay");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdRegFeePay");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					var vsPayGrpKey = null;
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						
						var vsTempPayGrpKey = util.Grid.getCellValue(app, "grdRegFeePay", "PAY_GRP_KEY", vnRow);
						if (i == 0) vsPayGrpKey = vsTempPayGrpKey;
						else vsPayGrpKey += ("," + vsTempPayGrpKey);
					}
					util.DataMap.setValue(app, "dmReqKey", "strPayGrpKey", vsPayGrpKey);
					
					//취소는 납입그룹키 단위로 모두 취소됩니다. 취소하시겠습니까?
					if(!util.Msg.confirm("NLS-CRS-M049") ) return;
					
					//납입취소 서브미션 호출
					//strCommand: cancel 
					util.Submit.send(app, "subCancel", function(pbSuccess) {
						if(pbSuccess) {
							
							doList(function(pbSuccessList) {
								if(pbSuccessList) {
									// 등록사항 재조회
									ExtSubPage.getParent().callScript("doSetRegInfo");
									// "납입취소 되었습니다."
									this.setParentMsg(NLS.CRS.M050);
								}
							});
						}
					});
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @member stdCrsCRegFeePay
				 * @param psMsgCode 메시지 코드
				 * @param  paMsg 메시지 변수 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				moPage.setParentMsg = function(psMsgCode, paMsg) {
					util.Msg.notify(app, psMsgCode, paMsg);	
				};
				
				/**
				 * @desc 변경사항체크 - 부모창에서 호출용
				 * @member stdCrsCRegFeePay
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 28.
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdRegFeePay"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListPayAcctRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsRegFeePay");
			dataSet_3.parseData({
				"info": "CRS_REG_FEE_PAY@ITEM_CD,SERIAL_NO,STUD_ID,SCH_YEAR_RCD,SMT_RCD,REG_CLS_RCD,DESC_TYPE_RCD",
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"},
					{"name": "SERIAL_NO"},
					{"name": "AMT"},
					{"name": "PROC_DT"},
					{"name": "PAY_ACCT_RCD"},
					{"name": "DIV_PAY_NO"},
					{"name": "DIV_PAY_SERIAL_NO"},
					{"name": "PAY_GRP_KEY"},
					{"name": "REMARK"},
					{"name": "REG_CLS_RCD"},
					{"name": "STUD_ID"},
					{"name": "DESC_TYPE_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strRegClsRcd",
						"dataType": "string"
					},
					{
						"name": "strItemCd",
						"dataType": "string"
					},
					{
						"name": "strPayGrpKey",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/crs/StdCrsRegFeePay/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subCancel");
			submission_2.action = "/crs/StdCrsRegFeePay/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearchRegi");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.visible = false;
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "0px",
					"left": "110px",
					"width": "15px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "5px",
				"left": "465px",
				"width": "115px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "415px",
				"left": "0px",
				"width": "96px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-PAYRECLST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-PAYNEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "894px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-commit"]);
				button_3.bind("value").toLanguage("UI-SCR-PAYCANCEL");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "959px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdRegFeePay");
				grid_1.init({
					"dataSet": app.lookup("dsRegFeePay"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "95px"},
						{"width": "51px"},
						{"width": "98px"},
						{"width": "86px"},
						{"width": "117px"},
						{"width": "134px"},
						{"width": "68px"},
						{"width": "134px"},
						{"width": "162px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TUITIONITEM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYACT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-DIVPAYNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DIV_PAY_SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYGRPKEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REMARK");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbItemCd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsListItemCd"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("ITEM_CD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptAmt");
										output_1.dataType = "number";
										output_1.format = "s#,###";
										output_1.style.css({
											"text-align" : "right"
										});
										output_1.bind("value").toDataColumn("AMT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptProcDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("PROC_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PAY_ACCT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbPayAcctRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListPayAcctRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("PAY_ACCT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_SERIAL_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PAY_GRP_KEY";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"합계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "getSum(\"AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1014px",
					"height": "394px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "430px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCrsCRegFeePay";
	cpr.core.Platform.INSTANCE.register(app);
})();
