/*
 * App URI: app/csr/extCsrCAltAplyRecog
 * Source Location: app/csr/extCsrCAltAplyRecog.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltAplyRecog", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCAltAplyRecog.xtm"/>
			
			var extCsrCAltAplyRecog = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{   //교직원검색 조회조건 행정부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbDeptNm",
						iObjDivRcd			:	["CC009SA", "CC009OG"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqList/strKeyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"/root/reqList/strObjDivRcd",
						oCd					:	"/root/reqList/strDeptCd",
						oCdNm				:	"ipbDeptNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					:  null
					}
				];
				
				/**
				 * 학생검색팝업 관련 설정사항
				 * 설정가능 유형 : 
				 *   1. 인스턴스((/root/시작))
				 *   2. 그리드의 셀 (ghc시작)
				 *   3. 컨트롤 id
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  1. controlId 			: 최초 이벤트의 버튼이나 그리드 id	(필수)
				 *  2. iStudNo 			: 검색조건 학번								(선택) (값이 존재할 경우 4자리 이상)
				 *  3. iStudId 				: 검색조건 학번오브젝트					(선택)
				 *  4. iStudNm 			: 이름        									(선택) (값이 존재할 경우 2자리 이상)
				 *  5. iKeyDate 			: 기준일 										(필수)
				 *  6. iObjDivRcd 		: 객체구분코드 								(선택)
				 *  7. iObjCd 				: 부서코드										(선택)
				 *  8. iObjNm 			: 부서명											(선택) 
				 *  10. iStatRcd			: 학적상태										(선택) 
				 *  11. iStudDivRcd		: 학생구분										(선택) 
				 *  12. oStudId			: 학번오브젝트
				 *  13. oStudNo 			: 학번
				 *  14. oStudNm 		: 이름
				 *  15. oStatNm 			: 학적상태명
				 *  16. oStatRcd 			: 학적상태코드
				 *  17. oProcRslt 		: 진급학기
				 *  18. oProcRsltYear 	: 진급학년
				 *  19. oSaCd 			: 학사부서코드명
				 *  20. oSaNm 			: 학사부서명
				 *  21. oSpCd 			: 이수과정코드명
				 *  22. oSpNm 			: 이수과정명
				 *  23. oOgCd 			: 행정부서코드명
				 *  24. oOgNm 			: 행정부서명
				 *  25. oStudDivRcd		: 학생구분코드
				 *  26. oStudDivNm		: 학생구분명
				 *  27. oBirthday			: 생년월일
				 *  28. oGenderRcd		: 성별코드
				 *  29. oGenderNm		: 성별명
				 *  30. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnStudPopSearch",
					iStudNo 					: "ipbStudNo",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/reqList/strKeyDate",
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					: "",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqList/strStudId",
					oStudNo 					: "ipbStudNo",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
					}
				}
				];
			
				/******************************************************************************************************
				 *  공통파일업로드 관련 설정사항 사용법
				 *
				 * 예시)
				 * var moIdsForStdCmnFileUtil = [{
				 *		controlId 					: "btnFileUpLoad",
				 *		iFileSerialNo 				: "rdOptFileSerialNo",
				 *		iFileSubPath 				:  model.getTitle(),
				 *		iTableName 				: "CMN_TMP_REG",
				 *		iIsDirectUpLoad			: null,
				 *     isFileSelectorOnly       : null,
				 *		iIsHideDelete 				: null,			
				 *		iIsDownloadOnly 		: null,
				 *		iFileExtFilter 				: null,
				 *		oFileSerailNo				: "rdOptFileSerialNo",
				 *		oTmpFilePath			: null,			//리피트일경우 null로 지정
				 *		oFileCnt					: null,		
				 *		oFileDataChanged		: null,
				 *		func							: function(poRtnFileInfo){
				 *											ex)
				 *											if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
																util.FreeForm.setValue(app, "frfCmnDevStd", "FILE_SERIAL_NO", "", true); 
																doSave();
															}
				 *										}
				 *	}];
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 			: 최초 이벤트의 버튼이나 그리드 id             						(필수)
				 *  	2. iFileSerialNo		: 파일순번                                										(선택) 
				 *  	3. iFileSubPath 		: 저장될 파일 폴더(appworks.properties에 정의된 폴더 경로)	(필수)	
				 *  	4. iTableName 		: 파일업로드에 사용될 업무단 테이블명								(필수)
				 *  	5. iIsHideDelete 		: 삭제버튼 숨기기 여부 													(선택)
				 *								  	  default : false;
				 *		6. iIsDownloadOnly	: 다운로드만 가능할지 여부(업로드X)									(선택)
				 *								      default : false;
				 *		7. iIsDirectUpLoad   : auto save기능을 사용하지 않고 파일업로드 팝업을 이용하여 업로드 후 업로드된 정보만 리턴받아 제어 할 경우 사용
				 *									  default : false;
				 *		8. isFileSelectorOnly : 파일 셀럭터를 이용하여 응용프로그램에서 탬프 파일 경로만 취득하여 제어할 경우경우 사용
				 *									  default : false;
				 *		9. iFileExtFilter		: 업로드가능 확장자(배열) 												(선택)
				 *								  	  ex)["jpg","png"]
				 *  	10. oFileSerailNo 		: 파일순번																		(필수)
				 *  	11. oFileCnt 			: 저장된 파일 갯수															(선택)
				 *									  (	func의 args 대체 가능 poRtnFileInfo.strFileCnt)
				 *									  리피트내 컬럼 지정시 updatable="False" 지정
				 *  	12. oTmpFilePath 	: 임시폴더파일경로															(선택)
				 *									  리피트일경우 null로 지정, TMP_FILE_PATH 데이터셋 생성됨
				 *									  
				 *		13.oFileDataChanged	: 파일업로드 변경 여부 판단											(필수)		
				 *									  (	func의 args 대체 가능 poRtnFileInfo.isFileDataChanged)
				 *
				 *  	14. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  args..
				 * 									  poRtnFileInfo.IS_FILE_CHG 			파일업로드 리피트 변경 여부
				 *															 FILE_CNT					업로드 파일 갯수
				 *															 TMP_FILE_PATH		임시파일경로
				 *									  						 FILE_SERAIL_NO		파일순번
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnFileUtil = [{
					controlId 					: "rdImgFileDown",
					iFileSerialNo 				: "rdIpbFileSerialNo",
					iFileSubPath 				:  "extCsrCFileMng",
					iTableName 				: "EXT_CSR_SHREG_ALT_APLY",
					iIsDirectUpLoad			: true,
					isFileSelectorOnly       : null,
					iIsHideDelete 				: true,			
					iIsDownloadOnly 		: true,
					iFileExtFilter 				: null,
					oFileSerailNo				: "rdIpbFileSerialNo",
					oTmpFilePath			: null,			//리피트일경우 null로 지정
					oFileCnt					: "rdOptFileCnt",		
					oFileDataChanged		: null,
					func							: function(poRtnFileInfo){
														if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
															util.Grid.setCellValue(app, "grdExtCsrFile", "FILE_SERIAL_NO", "", null, true);
														}else{
															util.Grid.setCellValue(app, "grdExtCsrFile", "FILE_SERIAL_NO", poRtnFileInfo.FILE_SERAIL_NO, null, true);
														}
													}
				}];
				
				/**
				 * @desc Header Import onLoad
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
							
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onModelConstructDone_extCsrCAltAplyRecog = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptExtCsrShregAltAply"]);
					// 2. 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.DataMap.setValue(app, "dmReqList", "strSchYearRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSchYearRcd"));
							util.DataMap.setValue(app, "dmReqList", "strSmtRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcd"));
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate"));	
							util.DataMap.setValue(app, "dmReqList", "strAplyStatRcd", "CSR10310");	
							util.DataMap.setValue(app, "dmReqList", "strAltDt", util.DataMap.getValue(app, "dmResOnLoad", "strCutDt"));
							util.DataMap.setValue(app, "dmReqList", "strAltDivRcd", "CT401RETU");	
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbAltDivRcd", "cbbAplyStatRcd", "dipAltDt"]);
						}
					});
				}
			
				/**
				 * @desc 학적변동 신청 목록 조회버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_BtnSearch = function() {
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbAltDivRcd", "ipbDeptNm"])){
						return false;
					}
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
			
				/**
				 * @desc 학적변동 신청 목록 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptExtCsrShregAltAply"]);
							//승인된 군휴학원서만 리포트 호출 가능
							var vsAltDivRcd = util.DataMap.getValue(app, "dmReqList", "strAltDivRcd");
							var vsAplyStatRcd = util.DataMap.getValue(app, "dmReqList", "strAplyStatRcd");
							if(vsAltDivRcd=="CT401ABSE"&&vsAplyStatRcd=="CSR10320"){
								util.Control.setEnable(app, true, "btnPrint");
							}else{
								util.Control.setEnable(app, false, "btnPrint");
							}
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
					
				}
			
				/**
				 * @desc 학적변동 신청 목록 저장버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_BtnSave = function() {
					util.coverPage(app);
					doSave();
				};
				
				/**
				 * @desc 학적변동 신청 목록 저장
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				function doSave() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdExtCsrShregAltAply"], "MSG")){
						util.removeCover(app);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdExtCsrShregAltAply")){
						util.removeCover(app);
						return false;
					}
					
					var vsAltDt = ExtInput.getText("dipAltDt");
					
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
					var vsAplyStatRcd = util.Control.getValue(app, "cbbAplyStatRcd");
					
					// 승인구분이 신청일시만 승인 여부 체크 호출 
					if(vsAplyStatRcd=="CSR10310"){
						//승인 여부 체크
						if(!util.Msg.confirm("NLS-CRM-EXT003", [vsAltDt]) ){
							util.removeCover(app);
							return false;
						}	
					}		
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
						
							if(pbSuccessSave) {
								
								//이관 성공건수
								var vnTotCnt = util.DataMap.getValue(app, "dmResProc", "iTotCnt");
								var vnSuccessCnt = util.DataMap.getValue(app, "dmResProc", "iSuccessCnt");
								var vnFailCnt = util.DataMap.getValue(app, "dmResProc", "iFailCnt");
								
								// 승인구분이 신청일시만 성공 여부 메시지를 호출한다.
								if(vsAplyStatRcd=="CSR10310"){
									//처리하였습니다.(총:@, 성공:@, 실패:@)
									util.Msg.alert("NLS-CSR-M017", [vnTotCnt, vnSuccessCnt, vnFailCnt]);
								}
								util.removeCover(app);
								doList(function(pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessList) {
										util.Msg.notify(app, "NLS.INF.M025");
										
										// 승인구분이 신청일시만 파일을 체크한다.
										if(vsAplyStatRcd=="CSR10310"){
											//파일디렉토리경로
											var vsErrorFileDir = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileDir");
											//파일명
											var vsErrorFileNm = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileNm");
											//변환파일명(실제 서버에 저장된 파일명)
											var vsErrorFileChgNm = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileChgNm");
											var vsTmpFilePath = util.DataMap.getValue(app, "dmErrorFileInfo", "strTmpFilePath");
			
											// 에러파일 다운로드
											if(!(ValueUtil.isNull(vsErrorFileNm) || vsErrorFileNm=="")){
												var voParam = {
															"strFileSubPath" : "",
															"strFileNm" : vsErrorFileChgNm,
															"strOriFileNm" : vsErrorFileNm,
															"strTmpFilePath" : vsTmpFilePath,
															"strCommand" : "fileDownLoad"
												}								
												FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex", voParam);								
													// 에러파일 초기화
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileDir","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileNm","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileChgNm","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strTmpFilePath","");
											} else{
												// 에러파일 초기화
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileDir","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileNm","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strFileChgNm","");
												util.DataMap.setValue(app, "dmErrorFileInfo", "strTmpFilePath","");
												return false;
											}
										}
									}
								});
							}else{
								util.removeCover(app);
							}
						}
					);
				}
			
				/**
				 * @desc 학적변동 신청 작업취소
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdExtCsrShregAltAply");
				};
				
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
			
				/**
				 * @desc 파일업로드 팝업 호출(다운로드만 사용)
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_RdImgFileUpload = function(sender) {
					
					doOnClickStdCmnPFileUtil(sender);
				}
			
				/**
				 * @desc 소속 검색 팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				}
				
			
				/**
				 * @desc 소속 권한 처리
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				}
			
				/**
				 * @desc 학생검색 팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onClick_BtnStudPopSearch = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				}
				
				/**
				 * @desc 학생검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				}
				
				/**
				 * @desc 소속 검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */	
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 표준일자 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */	
				moPage.onValueChanged_CbbSchYearRcd = function() {
					doGetKeyDate();
				};
				
				/**
				 * @desc 표준일자 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */	
				moPage.onValueChanged_CbbSmtRcd = function() {
					doGetKeyDate();
				};
				
				/**
				 * @desc 학년도 학기 변경에 따른 표준일자 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 11
				 */
				function doGetKeyDate() {
					
					//1. 서브미션 수행
					//strCommand: getKeyDate 
					util.Submit.send(app, "subGetKeyDate", function(pbSuccess){
						if(pbSuccess) {
							var strDeptCd = util.DataMap.getValue(app, "dmReqList", "strDeptCd");
							if(moPageInfo.authRngRcd == "CC00102"){
								if(strDeptCd != ExtInstance.getValue("instance('insStdCmnPObjSch')/root/resListObjInfo/strObjCd")){
									util.Control.reset(app, ["ipbDeptNm", "ipbDeptCd", "ipbStudNo", "ipbStudId"]);
									util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
								}
							}else if(moPageInfo.authRngRcd == "CC00101" || moPageInfo.authRngRcd == "CC00105" || moPageInfo.authRngRcd == "CC00106" || moPageInfo.authRngRcd == "CC00107"){
								if(strDeptCd != moUserInfo.asgnDeptCd){
									util.Control.reset(app, ["ipbDeptNm", "ipbDeptCd", "ipbStudNo", "ipbStudId"]);
									util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
								}
							}
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmResGetKeyDate", "strKeyDate"));
						}else{
							util.Control.reset(app, ["ipbDeptNm", "ipbDeptCd", "ipbStudNo", "ipbStudId"]);
							util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmResGetKeyDate", "strKeyDate"));
						}
					});
				};
				
				/**
				 * @desc 선택승인클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 29
				 */
				moPage.onClick_BtnSaveAprv = function() {
					doBatch("aprv");
				};
				
				/**
				 * @desc 선택반려클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 29
				 */
				moPage.onClick_BtnSaveCancel = function() {
					doBatch("cancel");
				};
				
				/**
				 * @desc 선택승인,반려 
				 *            선택한 신청중인 데이터만 승인구분을 '승인'또는 '반려', 변동일자를 변동일자로 셋팅한다.
				 *            저장을 해야만 반영된다.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 29
				 */
				function doBatch(psSelDiv) {
					var voRpt = ExtControl.getControl("rptExtCsrShregAltAply");
					var vsPath = voRpt.getRepeatAttr().getNodeSet();
					var vbPanel = false;
					var vsResult = "";
					var psUpdStatusId = AppConstants.DEL_COL_REF;
					// 리피트 패널 존재 여부 체크
					if(ExtInstance.getNodeObj(vsPath + "/" + AppConstants.DEL_COL_REF) != null){
						vbPanel = true;
					}
					
					if(ExtControl.getControl(psUpdStatusId)){
						 var vsRef = ExtControl.getControl(psUpdStatusId).getAttr("ref");
			             vsRef = vsRef.substr(vsRef.lastIndexOf("/")+1, vsRef.length);
			             psUpdStatusId = vsRef;
					}   
					
					if(vbPanel) {
			
						vsResult = voRpt.dataSet.find(psUpdStatusId + ":Y");
						
						if(vsResult == ""){
							// 라인을 선택하세요.
							util.Msg.alert("NLS-INF-M023");
							return false;
						}
						
					}else{
						// 라인을 선택하세요.
						util.Msg.alert("NLS-INF-M023");
						return false;
					}
					
					if(!util.validate(app, ["dipAltDt"])){
						return false;
					}
					
					var vsAltDt = util.Control.getValue(app, "dipAltDt");
					var voPanelChk;
					
					if(String(vsResult).indexOf(",") != -1){
						voPanelChk = vsResult.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsResult;
					}
					var vsAplyStatRcd;
					//신청인 데이터만 선택 승인 실행
					for(var i = voPanelChk.length - 1; i >= 0; i--) {
						vsAplyStatRcd = util.Grid.getCellValue(app, "grdExtCsrShregAltAply", "APLY_STAT_RCD", voPanelChk[i]);
						
						if(vsAplyStatRcd == "CSR10310"){
							
							util.Grid.setRowState(app, "grdExtCsrShregAltAply", cpr.data.tabledata.RowState.UPDATED, voPanelChk[i]);
							util.Grid.setCellValue(app, "grdExtCsrShregAltAply", "UPT_STATUS", "U",  voPanelChk[i], true);
							
							if(psSelDiv =="aprv"){ //승인
								util.Grid.setCellValue(app, "grdExtCsrShregAltAply", "APLY_STAT_RCD", "CSR10320",  voPanelChk[i], true);
								util.Grid.setCellValue(app, "grdExtCsrShregAltAply", "ALT_DT", vsAltDt,  voPanelChk[i], true);
							}else if(psSelDiv=="cancel"){//반려
								util.Grid.setCellValue(app, "grdExtCsrShregAltAply", "APLY_STAT_RCD", "CSR10330",  voPanelChk[i], true);
								util.Grid.setCellValue(app, "grdExtCsrShregAltAply", "ALT_DT", "",  voPanelChk[i], true);
							}
						}
					}
				}
				
				/**
				 * @desc 군휴학원서 출력
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 12
				 */
				moPage.onClick_BtnPrint = function() {
					var voRpt = ExtControl.getControl("rptExtCsrShregAltAply");
					var vsPath = voRpt.getRepeatAttr().getNodeSet();
					var vbPanel = false;
					var vsResult = "";
					var psUpdStatusId = AppConstants.DEL_COL_REF;
					// 리피트 패널 존재 여부 체크
					if(ExtInstance.getNodeObj(vsPath + "/" + AppConstants.DEL_COL_REF) != null){
						vbPanel = true;
					}
					
					if(ExtControl.getControl(psUpdStatusId)){
						 var vsRef = ExtControl.getControl(psUpdStatusId).getAttr("ref");
			             vsRef = vsRef.substr(vsRef.lastIndexOf("/")+1, vsRef.length);
			             psUpdStatusId = vsRef;
					}   
					
					if(vbPanel) {
			
						vsResult = voRpt.dataSet.find(psUpdStatusId + ":Y");
						
						if(vsResult == ""){
							// 라인을 선택하세요.
							util.Msg.alert("NLS-INF-M023");
							return false;
						}
						
					}else{
						// 라인을 선택하세요.
						util.Msg.alert("NLS-INF-M023");
						return false;
					}
					
					var vsPStudId        		= "";
					var voPanelChk;
					
					if(String(vsResult).indexOf(",") != -1){
						voPanelChk = vsResult.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsResult;
					}
					var vsAplyStatRcd;
					
					for(var i = 0; i < voPanelChk.length; i++){
						if(i > 0){
							vsPStudId = vsPStudId + ",";
						}
						vsPStudId = vsPStudId + "'" + util.Grid.getCellValue(app, "grdExtCsrShregAltAply", "STUD_ID", voPanelChk[i]) + "'";
					}
			
					var vsSmtRcd = util.DataMap.getValue(app, "dmReqList", "strSmtRcd");
					var vsCrsSmtRcd = ExtInstance.getValue("/root/resOnLoad/smtRcdList/row", "CD_PRP5", "child::CD='" + vsSmtRcd + "'");
			
					//리퀘스트 셋팅
					var voParam = {
								p_strDeptCd     			: util.DataMap.getValue(app, "dmReqList", "strDeptCd"),
								p_strObjDivRcd  			: util.DataMap.getValue(app, "dmReqList", "strObjDivRcd"),
								p_strSchYearRcd 		: util.DataMap.getValue(app, "dmReqList", "strSchYearRcd"),
								p_strSmtRcd       		: vsSmtRcd,
								p_strCrsSmtRcd      	: vsCrsSmtRcd,
								p_strStudId        		: vsPStudId,
								p_strLandivRcd   		: msDefaultLocale
							}	
							
						 var voOzFormParam = {
								  TITLE : "휴학변경(군입대)원서" //리포트타이틀
								, SUB_TITLE : "" //리포트서브타이틀		
								, FORM_TYPE : "flash"
							};	
							
					ReportUtil.fOzPopupOpen("군휴학원서", "extCsrSChgMilAbsSheetPrt", voOzFormParam, voParam);
				};
				
				
				
				/**
				 * @desc 통폐합이력이 있는 경우, 해당 부서 필터및 설정 
				 * @param
				 * @return void
				 * @author Sunyoung, PARK 2017.1.2
				 */
				moPage.onRowSelect_RptExtCsrShregAltAply = function() {
					
					var vnRow = util.Grid.getIndex(app, "grdExtCsrShregAltAply");
					var vsPreSaCd = util.Grid.getCellValue(app, "grdExtCsrShregAltAply","SA_CD",vnRow);
					
					ExtControl.setAttr("rdCbbChgSa", "nodeset", "/root/resOnLoad/expSaList/row[child::PRE_SA_CD='"+ vsPreSaCd +"'] ");
					
					util.Control.redraw(app, "rdCbbChgSa");
					
				};
				
				
				/**
				 * @desc 통폐합이력이 있는 경우, 해당 부서 필터및 설정 
				 * @param
				 * @return void
				 * @author Sunyoung, PARK 2017.1.2
				 */
				moPage.onValueChanged_RdCbbChgSa = function() {
					
					var vnRow = util.Grid.getIndex(app, "grdExtCsrShregAltAply");
					
					var vsSpCd = util.Grid.getCellValue(app, "grdExtCsrShregAltAply","CHG_SP_CD",vnRow);
					var vsChgSaCd = ExtInstance.getValue("/root/resOnLoad/expSaList/row", "CHG_SA_CD", "child::SP_CD='" + vsSpCd  + "'");
					util.Grid.setCellValue(app, "grdExtCsrShregAltAply","CHG_SA_CD",vsChgSaCd,vnRow);
				};
				
				
				
				
				/**
				 * @desc 신청일자변경시 해당하는 신청일자를 학적변동일자에 자동설정되도록 
				 * @param
				 * @return void
				 * @author Sunyoung, PARK 2017.2.23
				 */
				moPage.onValueChanged_DipAplyStDt = function() {
					
							util.DataMap.setValue(app, "dmReqList", "strAltDt", util.DataMap.getValue(app, "dmReqList", "strAplyStDt"));
							util.Control.redraw(app, "dipAltDt");
					
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP5"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP5"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsAltDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsAplyStatRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAbsSmtCntRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsExpSaList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CHG_SA_CD"},
					{"name": "PRE_SA_NM"},
					{"name": "PRE_SA_CD"},
					{"name": "CHG_SA_NM"},
					{"name": "SP_CD"},
					{"name": "SP_SHORT_NM"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsExtCsrShregAltAply");
			dataSet_7.parseData({
				"info": "EXT_CSR_SHREG_ALT_APLY@STUD_ID,SERIAL_NO",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "SERIAL_NO"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "ALT_DIV_RCD"},
					{"name": "ALT_DIV_NM"},
					{"name": "ALT_RSN_DIV_RCD"},
					{"name": "ALT_RSN_DIV_NM"},
					{"name": "ALT_RSN_RCD"},
					{"name": "ALT_RSN_NM"},
					{"name": "ALT_DT"},
					{"name": "REG_TRANS_RCD"},
					{"name": "FILE_SERIAL_NO"},
					{"name": "ALT_DTL_RSN_RCD"},
					{"name": "ALT_DTL_RSN_NM"},
					{"name": "ABS_SMT_CNT_RCD"},
					{"name": "ABS_SMT_CNT_NM"},
					{"name": "CST_DT"},
					{"name": "APLY_STAT_RCD"},
					{"name": "PROC_STAT_RCD"},
					{"name": "APLY_DT"},
					{"name": "APRV_DT"},
					{"name": "CANCEL_DT"},
					{"name": "CANCEL_RSN_RCD"},
					{"name": "REMARK"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_NM"},
					{"name": "RTN_SCH_YEAR_NM"},
					{"name": "RTN_SMT_NM"},
					{"name": "REC_RCOG_YN"},
					{"name": "RTN_DT"},
					{"name": "FILE_CNT"},
					{"name": "REG_TRANS_NM"},
					{"name": "STUD_YEAR_SMT_CNT"},
					{"name": "CHG_SA_CD"},
					{"name": "CHG_SP_CD"},
					{"name": "newElement"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strCutDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strAplyStDt",
						"dataType": "string"
					},
					{
						"name": "strAplyEndDt",
						"dataType": "string"
					},
					{
						"name": "strAltStDt",
						"dataType": "string"
					},
					{
						"name": "strAltEndDt",
						"dataType": "string"
					},
					{
						"name": "strAltDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAplyStatRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strAltDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResGetKeyDate");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmErrorFileInfo");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResProc");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "iTotCnt",
						"dataType": "string"
					},
					{
						"name": "iSuccessCnt",
						"dataType": "string"
					},
					{
						"name": "iFailCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltAplyRecog/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrAltAplyRecog/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/ExtCsrAltAplyRecog/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_4, false);
			submission_3.addResponseData(dataMap_5, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subGetKeyDate");
			submission_4.action = "/csr/ExtCsrAltAplyRecog/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "275px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optAplyStDt");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-REQ_DT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "405px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipAplyStDt");
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optAplyStDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strAplyStDt");
				if(typeof onDipAplyStDtValueChange == "function") {
					dateInput_1.addEventListener("value-change", onDipAplyStDtValueChange);
				}
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "490px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optAplyEndDt");
				output_4.value = "~";
				container.addChild(output_4, {
					"top": "5px",
					"left": "580px",
					"width": "15px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optAltStDt");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-DB-ALT_DT");
				container.addChild(output_5, {
					"top": "5px",
					"left": "695px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipAltStDt");
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optProcStDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqList"), "strAltStDt");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "780px",
					"width": "90px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optProcEndDt");
				output_6.value = "~";
				container.addChild(output_6, {
					"top": "5px",
					"left": "870px",
					"width": "15px",
					"height": "25px"
				});
				var dateInput_3 = new cpr.controls.DateInput("dipAltEndDt");
				dateInput_3.style.css({
					"text-align" : "center"
				});
				dateInput_3.bind("fieldLabel").toExpression("#optProcEndDt.value");
				dateInput_3.bind("value").toDataMap(app.lookup("dmReqList"), "strAltEndDt");
				container.addChild(dateInput_3, {
					"top": "5px",
					"left": "885px",
					"width": "90px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optAltDivRcd");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-SCR-CHGDIV");
				container.addChild(output_7, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbAltDivRcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optAltDivRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strAltDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("복학", "CT401RETU"));
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optAplyStatRcd");
				output_8.value = "";
				output_8.style.setClasses(["require"]);
				output_8.bind("value").toLanguage("UI-SCR-APRVDIV");
				container.addChild(output_8, {
					"top": "30px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbAplyStatRcd");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optAplyStatRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqList"), "strAplyStatRcd");
				(function(comboBox_4){
					comboBox_4.setItemSet(app.lookup("dsAplyStatRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "275px",
					"width": "120px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optDeptCd");
				output_9.value = "";
				output_9.style.setClasses(["require"]);
				output_9.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_9, {
					"top": "30px",
					"left": "405px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_4 = new cpr.controls.DateInput("dipAplyEndDt");
				dateInput_4.style.css({
					"text-align" : "center"
				});
				dateInput_4.bind("fieldLabel").toExpression("#optAplyStDt.value");
				dateInput_4.bind("value").toDataMap(app.lookup("dmReqList"), "strAplyEndDt");
				container.addChild(dateInput_4, {
					"top": "5px",
					"left": "595px",
					"width": "90px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "30px",
					"left": "490px",
					"width": "145px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnPopSearch");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopSearchClick == "function") {
					button_2.addEventListener("click", onBtnPopSearchClick);
				}
				container.addChild(button_2, {
					"top": "30px",
					"left": "636px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "30px",
					"left": "655px",
					"width": "15px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_3.userAttr({"require": "Y"});
				inputBox_3.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "30px",
					"left": "780px",
					"width": "100px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnStudPopSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopSearchClick == "function") {
					button_3.addEventListener("click", onBtnStudPopSearchClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "881px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbStudId");
				inputBox_4.visible = false;
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqList"), "strStudId");
				container.addChild(inputBox_4, {
					"top": "30px",
					"left": "900px",
					"width": "10px",
					"height": "25px"
				});
				var output_10 = new cpr.controls.Output("optStudNo");
				output_10.value = "";
				output_10.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_10, {
					"top": "30px",
					"left": "695px",
					"width": "80px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "30px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SCHREGCHGREQLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "285px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnPrint");
				button_4.visible = false;
				button_4.enabled = false;
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-MILABSPRT");
				if(typeof onBtnPrintClick == "function") {
					button_4.addEventListener("click", onBtnPrintClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "486px",
					"width": "100px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnRestore");
				button_5.value = "";
				button_5.style.setClasses(["btn-restore"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_5.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnSave");
				button_6.value = "";
				button_6.style.setClasses(["btn-save"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_6.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExtCsrShregAltAply");
				grid_1.init({
					"dataSet": app.lookup("dsExtCsrShregAltAply"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "65px"},
						{"width": "78px"},
						{"width": "134px"},
						{"width": "38px"},
						{"width": "63px"},
						{"width": "70px"},
						{"width": "60px"},
						{"width": "273px"},
						{"width": "63px"},
						{"width": "70px"},
						{"width": "108px"},
						{"width": "62px"},
						{"width": "61px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "93px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{"width": "70px"},
						{"width": "95px"},
						{
							"width": "55px",
							"visible": false
						},
						{
							"width": "53px",
							"visible": false
						},
						{
							"width": "101px",
							"visible": false
						},
						{
							"width": "109px",
							"visible": false
						},
						{
							"width": "108px",
							"visible": false
						},
						{
							"width": "144px",
							"visible": false
						},
						{
							"width": "106px",
							"visible": false
						},
						{
							"width": "128px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "133px",
							"visible": false
						},
						{
							"width": "117px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "111px",
							"visible": false
						},
						{
							"width": "94px",
							"visible": false
						},
						{
							"width": "113px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQ_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REGTRANSZ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "통폐합학과";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-APRVDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ALT_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "반려사유";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ATCHFILE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FILECNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHGRSNNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RTRSCHYS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RTRSCHSMSTR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "휴학학기수";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_RCOG_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.text = "학생오브젝트ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.text = "순번";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.text = "학년도코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.text = "처리상태코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.text = "변동구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.text = "변동사유구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.text = "변동사유코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.text = "등록이월코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.text = "파일순번";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.text = "변동상세사유코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.text = "신청상태코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.text = "승인일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.text = "취소일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.text = "취소사유코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DETAILWHY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHGDTLRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ABSSMSTRS");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_11 = new cpr.controls.Output();
										output_11.style.css({
											"text-align" : "center"
										});
										return output_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "STUD_YEAR_SMT_CNT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "APLY_DT";
									cell.control = (function(){
										var output_12 = new cpr.controls.Output("gdOptAplyDt");
										output_12.dataType = "date";
										output_12.format = "YYYY-MM-DD";
										output_12.style.css({
											"text-align" : "center"
										});
										output_12.bind("value").toDataColumn("APLY_DT");
										return output_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "REG_TRANS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CHG_SP_CD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbChgSa");
										comboBox_5.style.css({
											"text-align" : "center"
										});
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsExpSaList"), {
												"label": "SP_NM",
												"value": "SP_CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("CHG_SP_CD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "APLY_STAT_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbAplyStatNm");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										comboBox_6.style.css({
											"text-align" : "center"
										});
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsAplyStatRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("APLY_STAT_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.control = (function(){
										var dateInput_5 = new cpr.controls.DateInput("gdDipAltDt");
										dateInput_5.enabled = false;
										dateInput_5.format = "YYYY-MM-DD";
										dateInput_5.style.css({
											"text-align" : "center"
										});
										dateInput_5.bind("value").toDataColumn("ALT_DT");
										return dateInput_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_5.maxLength = 30;
										inputBox_5.bind("value").toDataColumn("REMARK");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "FILE_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "CHG_SA_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "RTN_SCH_YEAR_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "RTN_SMT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "ABS_SMT_CNT_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbAbsSmtCntRcd");
										comboBox_7.style.css({
											"text-align" : "center"
										});
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsAbsSmtCntRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("ABS_SMT_CNT_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "CST_DT";
									cell.control = (function(){
										var output_13 = new cpr.controls.Output("gdOptCstDt");
										output_13.dataType = "date";
										output_13.format = "YYYY-MM-DD";
										output_13.style.css({
											"text-align" : "center"
										});
										output_13.bind("value").toDataColumn("CST_DT");
										return output_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "REC_RCOG_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbStudId");
										inputBox_6.maxLength = 10;
										inputBox_6.bind("value").toDataColumn("STUD_ID");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbSerialNo");
										inputBox_7.maxLength = 15;
										inputBox_7.bind("value").toDataColumn("SERIAL_NO");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "PROC_STAT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "ALT_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 31},
								"configurator": function(cell){
									cell.columnName = "REG_TRANS_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 32},
								"configurator": function(cell){
									cell.columnName = "FILE_SERIAL_NO";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbFileSerialNo");
										inputBox_8.maxLength = 15;
										inputBox_8.bind("value").toDataColumn("FILE_SERIAL_NO");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 33},
								"configurator": function(cell){
									cell.columnName = "ALT_DTL_RSN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 34},
								"configurator": function(cell){
									cell.columnName = "APLY_STAT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 35},
								"configurator": function(cell){
									cell.columnName = "APLY_DT";
									cell.control = (function(){
										var dateInput_6 = new cpr.controls.DateInput("gdDipAprvDt");
										dateInput_6.bind("value").toDataColumn("APLY_DT");
										return dateInput_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 36},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DT";
									cell.control = (function(){
										var dateInput_7 = new cpr.controls.DateInput("gdDipCancelDt");
										dateInput_7.bind("value").toDataColumn("CANCEL_DT");
										return dateInput_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 37},
								"configurator": function(cell){
									cell.columnName = "CANCEL_RSN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 38},
								"configurator": function(cell){
									cell.columnName = "ALT_DTL_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 39},
								"configurator": function(cell){
									cell.columnName = "REG_TRANS_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 40},
								"configurator": function(cell){
									cell.columnName = "ABS_SMT_CNT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdExtCsrShregAltAplySelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdExtCsrShregAltAplySelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "548px"
				});
				var dateInput_8 = new cpr.controls.DateInput("dipAltDt");
				dateInput_8.userAttr({"require": "Y"});
				dateInput_8.style.css({
					"text-align" : "center"
				});
				dateInput_8.bind("fieldLabel").toExpression("#optAltDt.value");
				dateInput_8.bind("value").toDataMap(app.lookup("dmReqList"), "strAltDt");
				container.addChild(dateInput_8, {
					"top": "5px",
					"left": "860px",
					"width": "90px",
					"height": "25px"
				});
				var output_14 = new cpr.controls.Output("optAltDt");
				output_14.value = "";
				output_14.bind("value").toLanguage("UI-DB-ALT_DT");
				container.addChild(output_14, {
					"top": "5px",
					"left": "775px",
					"width": "80px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnSaveAprv");
				button_7.value = "선택승인";
				if(typeof onBtnSaveAprvClick == "function") {
					button_7.addEventListener("click", onBtnSaveAprvClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "955px",
					"width": "60px",
					"height": "25px"
				});
				var button_8 = new cpr.controls.Button("btnSaveCancel");
				button_8.value = "선택반려";
				if(typeof onBtnSaveCancelClick == "function") {
					button_8.addEventListener("click", onBtnSaveCancelClick);
				}
				container.addChild(button_8, {
					"top": "5px",
					"left": "1020px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "92px",
				"left": "5px",
				"width": "1225px",
				"height": "583px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "676px",
				"left": "100px",
				"width": "95px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaort2");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "674px",
				"left": "210px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaFile");
			cpr.core.App.load("app/imp/impFileUtil", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "674px",
				"left": "320px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrCAltAplyRecog";
	cpr.core.Platform.INSTANCE.register(app);
})();
