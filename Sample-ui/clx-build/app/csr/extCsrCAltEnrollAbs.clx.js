/*
 * App URI: app/csr/extCsrCAltEnrollAbs
 * Source Location: app/csr/extCsrCAltEnrollAbs.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltEnrollAbs", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrCAltEnrollAbs.xtm"/>
			
			
			var extCsrCAltEnrollAbs = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				var bErrChk = true;
				
				moPage.reqInputCbb = ["cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfAltRsnRcd", "cbbFrfAltDivRcd", "cbbFrfRtnPlanYearRcd", "cbbFrfRtnPlanSmtRcd", "cbbFrfAbsSmtCntRcd", "cbbFrfRegTransRcd"];
			
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.onModelConstructDone_ExtCsrCAltEnrollAbs = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("frfCsrShregAlt");
					//화면 온로드 서브미션 호출
					doOnLoad();
					
				};
				
				
				/**
				 * @desc 부모창에서 받아온 변수 조회조건에 셋팅
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doOnLoad() {
					var voAltObj = moPage.parent.moParentObj;
					
					// 부모멤버변수에담긴학번받음
					util.DataMap.setValue(app, "dmReqList", "strStudId", voAltObj.strStudId );
					util.DataMap.setValue(app, "dmReqList", "strSchYearRcd", voAltObj.strSchYearRcd);
					util.DataMap.setValue(app, "dmReqList", "strSmtRcd", voAltObj.strSmtRcd);
					util.DataMap.setValue(app, "dmReqList", "strAltDt", voAltObj.strAltDt);
					util.DataMap.setValue(app, "dmReqList", "strAltDivRcd", voAltObj.strAltDivRcd);
					util.DataMap.setValue(app, "dmReqList", "strAltRsnRcd", voAltObj.strAltRsnRcd);
					util.DataMap.setValue(app, "dmReqList", "strAbsSmtCntRcd", voAltObj.strAbsSmtCntRcd);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, ["frfCsrShregAlt"]);
							util.Control.redraw(app, moPage.reqInputCbb);
							//신규입력이 아님
							moPage.mbIsInsertRowFrf = false;
							if(ValueUtil.isNull(voAltObj.strStudId)){
								util.Control.setEnable(app, false, ["frfCsrShregAlt"]);
							}
						} 
					});
				}
			
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doNewAlt() {
					
					var voAltObj = moPage.parent.moParentObj;
					util.DataMap.setValue(app, "dmReqList", "strStudId", voAltObj.strStudId );
					util.DataMap.setValue(app, "dmReqList", "strAbsSmtCntRcd", voAltObj.strAbsSmtCntRcd);
					
					util.DataMap.setValue(app, "dmReqList", "strPopTarget", "extCsrPMstAltAbs");
					//strCommand: popupMnu 
					util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
							util.FreeForm.setValue(app, "frfCsrShregAlt",AppConstants.CUD_COL_REF, "I");
							//프리폼 신규
							util.FreeForm.insertRow(app, "frfCsrShregAlt");
							
							util.Control.setEnable(app, false, ["cbbFrfRegTransRcd"]);
					//		ExtRepeat.setRowStatus("frfCsrShregAlt","insert",1);
							util.Grid.setRowState(app, "frfCsrShregAlt",cpr.data.tabledata.RowState.UNCHANGED,'1');
							moPage.mbIsInsertRowFrf = true;
					
					
							//신규입력이 Ok
							util.Control.setEnable(app, true, ["frfCsrShregAlt", "btnSaveAbs"]);
			
							// 휴학신규
							//부모창의 변동정보 셋팅
							util.FreeForm.setValue(app, "frfCsrShregAlt", "STUD_ID", util.DataMap.getValue(app, "dmReqList", "strStudId"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", util.DataMap.getValue(app, "dmResList", "strRegTransRcd"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD", util.DataMap.getValue(app, "dmReqList", "strSchYearRcd"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SMT_RCD", util.DataMap.getValue(app, "dmReqList", "strSmtRcd"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_DIV_RCD", util.DataMap.getValue(app, "dmReqList", "strAltDivRcd"));
			
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_RSN_RCD", util.DataMap.getValue(app, "dmReqList", "strAltRsnRcd"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", util.DataMap.getValue(app, "dmReqList", "strAbsSmtCntRcd")); // 휴학학기수 추가 (2016.10.24) 
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_DT", util.DataMap.getValue(app, "dmReqList", "strAltDt"));
							moPage.getYearSmtDtChk();
						}else{
										util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSaveAbs"]);
						}
					});
				}
				
				/**
				 * @desc 휴학신규 저장 버튼 event
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.onClick_BtnSaveAbs = function() {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrShregAlt"], null)){
						moPage.parentSendMsg("lblTitleRptCsrShregAlt",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, ["frfCsrShregAlt"])){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					
					
					util.DataMap.setValue(app, "dmReqList", "strPopTarget", "extCsrPMstAltAbs");
					//strCommand: popupMnu 
					util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
							doSave();
						}
					});
				};
				
				/**
				 * @desc 저장 SF에서 오류 메시지가 있으면 확인창 띄움.
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */	
				function doSave(pnStep, poCallbackFunc) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					//strCommand: saveGlobal 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									return doSave(vnStep, poCallbackFunc);
								} else {
									return false;
								}
							}else{
								var voCallBackSaveAfter = function(pbSuccess) {
									if(pbSuccess) {
										//저장성공 메세지 출력
										// 조회 : "조회되었습니다." header 메세지 표시
										moPage.parentSendMsg(NLS.INF.M025);
										
										doDataClear();
										util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSaveAbs"]);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
							}
						}else{
							return false;
						}
					});
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 리피트 라벨 id
				 * @param psMsgCode 메시지
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psMsgCodeNm) {
					util.Msg.notify(app, psMsgCodeNm);	
				};
				
				/**
				 * @desc 휴학정보 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.02.12
				 */
				function doCheckDataChange() {
					
					if(util.Grid.isModified(app, ["frfCsrShregAlt"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				/**
				 * @desc 휴학사유 changeEvent 휴학사유에 설정된 휴학학기수 셋팅
				               학년도, 학기, 휴학사유, 성적인정여부로 등록이월코드 셋팅
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_CbbFrfAltRsnRcd = function() {
					
					var vsSmtCnt = util.Control.getValue(app, "cbbFrfAbsSmtCntRcd");
					
					if(ValueUtil.isNull(vsSmtCnt)) {
						util.Control.setValue(app, "cbbFrfAbsSmtCntRcd", "");
					} else {
						util.Control.setValue(app, "cbbFrfAbsSmtCntRcd", vsSmtCnt);
						moPage.getRtnYearSmt();
					}
					
					moPage.getRegTransRcd();
				};
				
				/**
				 * @desc 성적인정여부 변경
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_CkbFrfRecRcogYn = function() {
					
					moPage.getRegTransRcd();
					
				};
				
				/**
				 * @desc 해당 학년도 학기의 수업일수 3/4와 변동일자 체크
				               현재일자가 클경우 성적인정여부 수정 가능
							   현재일자가 작거나 같을경우 값 초기화 후 수정 불가능
							   학년도, 학기, 휴학사유, 성적인정여부로 등록이월코드 셋팅
							   휴학학기수를 학생에 해당하는 마지막 최초 휴학학기수로 맞추도록 재설정 (2016.11.1 추가  ) 
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.getYearSmtDtChk = function() {
					
					var vsSmt 			= util.FreeForm.getValue(app, "frfCsrShregAlt", "SMT_RCD");
					var vsYear			= util.FreeForm.getValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD");
					var vsAltDt         = util.FreeForm.getValue(app, "frfCsrShregAlt", "ALT_DT");
					
					if (ValueUtil.isNull(vsYear)||ValueUtil.isNull(vsSmt)||ValueUtil.isNull(vsAltDt)) return;
					
					util.DataMap.setValue(app, "dmReqList", "strAltDt", vsAltDt);
					util.DataMap.setValue(app, "dmSessionDate", "strStDt", "");
					util.DataMap.setValue(app, "dmSessionDate", "strEndDt", "");
					
					//strCommand: getDateCompare 
					util.Submit.send(app, "subDateFromSession", function(pbSuccess) {
						
						if (pbSuccess) {
							
							// 3/4 수업일수 체크 결과
							var vsChkYn = util.DataMap.getValue(app, "dmSessionDate", "strChkYn");
							if(vsChkYn == "N"){
								util.FreeForm.setValue(app, "frfCsrShregAlt", "REC_RCOG_YN", "");
								util.Control.setEnable(app, false, ["ckbFrfRecRcogYn"]);
							} else{
								util.Control.setEnable(app, true, ["ckbFrfRecRcogYn"]);		
								util.FreeForm.setValue(app, "frfCsrShregAlt", "REC_RCOG_YN", "Y");		// 성적인정에 자동체크되도록 추가 (2017.1.3 김진웅선생님요청 2016.12.30)
							}
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", util.DataMap.getValue(app, "dmSessionDate", "strAbsSmtCntRcd")); // 휴학학기수 추가 (2016.11.1)
							util.Control.redraw(app, "cbbFrfAbsSmtCntRcd");
							
							//20160513 등록이월코드 셋팅 여부 체크
							moPage.getRegTransRcd();				
			
						} else {
							util.FreeForm.setValue(app, "frfCsrShregAlt", "REC_RCOG_YN", "");
							util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", "");
							util.Control.setEnable(app, false, ["ckbFrfRecRcogYn"]);
							
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", util.DataMap.getValue(app, "dmSessionDate", "strAbsSmtCntRcd")); // 휴학학기수 추가 (2016.11.1)
							util.Control.redraw(app, "cbbFrfAbsSmtCntRcd");
							return;
						}
					});
				};
				
				/**
				 * @desc 학년도, 학기, 휴학사유, 성적인정여부, 변동일자로 등록이월코드 셋팅
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.getRegTransRcd = function() {
					
					var vsSmt 			          = util.FreeForm.getValue(app, "frfCsrShregAlt", "SMT_RCD");
					var vsYear			          = util.FreeForm.getValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD");
					var vsAltRsnRcd           = util.FreeForm.getValue(app, "frfCsrShregAlt","ALT_RSN_RCD");
					var vsRecRcogYn         = util.FreeForm.getValue(app, "frfCsrShregAlt","REC_RCOG_YN");
					var vsAltDt                   = util.FreeForm.getValue(app, "frfCsrShregAlt","ALT_DT");
					
					if (ValueUtil.isNull(vsYear)||ValueUtil.isNull(vsSmt)||ValueUtil.isNull(vsAltRsnRcd)||ValueUtil.isNull(vsAltDt)){
						util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", "");
						return;
					}
				
					util.DataMap.setValue(app, "dmReqList", "strAltRsnRcd", vsAltRsnRcd);
					util.DataMap.setValue(app, "dmReqList", "strRecRcogYn", vsRecRcogYn);
					util.DataMap.setValue(app, "dmReqList", "strAltDt", vsAltDt);
					// 오류발생 후 수업일수 조회 막음
					if(bErrChk){
						//strCommand: getRegTrans 
						util.Submit.send(app, "subRegTrans", function(pbSuccess) {
							
							if (pbSuccess) {
								util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", util.DataMap.getValue(app, "dmResList", "strRegTransRcd"));
							}else{
								bErrChk = false;
								util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", "");
								util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSave"]);
							}
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ACT_DT12", util.DataMap.getValue(app, "dmResList", "strActDt12"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ACT_DT34", util.DataMap.getValue(app, "dmResList", "strActDt34"));
							util.FreeForm.setValue(app, "frfCsrShregAlt", "STD_DT", util.DataMap.getValue(app, "dmResList", "strStdDt"));
						});
					}
				};
				
				/**
				 * @desc 휴학 학기수 변경
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_CbbFrfAbsSmtCntRcd = function() {
					moPage.getRtnYearSmt();
				};
				
				moPage.mbIsChangedByYearSmt = false;
				moPage.mbIsChangedByAbsSmtCnt = false;
				
				/**
				 * @desc 휴학 학기수에 따른 복학예정 학년도 학기반환
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				moPage.getRtnYearSmt = function() {
					//복학학년도학기 변경에 따른 이벤트 호출일 경우는 동작안함 2017.02.20
					if(moPage.mbIsChangedByYearSmt) return;
					
					var vsAbsSmtCntRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD");
					if(ValueUtil.isNull(vsAbsSmtCntRcd)){
						var vsRtnYearRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "RTN_PLAN_YEAR_RCD");
						var vsRtnSmtRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "RTN_PLAN_SMT_RCD");
						moPage.mbIsChangedByAbsSmtCnt = true;
						if( !ValueUtil.isNull(vsRtnYearRcd) ){
							util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_YEAR_RCD", "");
						}
						if( !ValueUtil.isNull(vsRtnSmtRcd) ){
							util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_SMT_RCD", "");
						}
						moPage.mbIsChangedByAbsSmtCnt = false;
						return;
						
					}else{
						util.DataMap.setValue(app, "dmReqList", "strAbsSmtCntRcd", vsAbsSmtCntRcd);
						//strCommand: getRtnYearSmt 
						util.Submit.send(app, "subRtnYearSmt", function(pbSuccess) {
							moPage.mbIsChangedByAbsSmtCnt = true;
							if (pbSuccess) {
								util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_YEAR_RCD", util.DataMap.getValue(app, "dmResList", "strRtnYearRcd"));
								util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_SMT_RCD", util.DataMap.getValue(app, "dmResList", "strRtnSmtRcd"));
							}else{
								util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_YEAR_RCD", "");
								util.FreeForm.setValue(app, "frfCsrShregAlt", "RTN_PLAN_SMT_RCD", "");
								util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSave"]);
							}
							
							moPage.mbIsChangedByAbsSmtCnt = false;
						});
					}
					
					return;
				};
				
				moPage.getAbsSmtCntRcdByYearSmt = function(){
					
					//복학학기수 변경에 따른 이벤트 호출일 경우는 동작안함 2017.02.20
					if(moPage.mbIsChangedByAbsSmtCnt) return;
					
					var vsRtnYearRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "RTN_PLAN_YEAR_RCD");
					var vsRtnSmtRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "RTN_PLAN_SMT_RCD");
					var vsAbsSmtCntRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD");
					
					if( ValueUtil.isNull(vsRtnYearRcd) || ValueUtil.isNull(vsRtnSmtRcd) ){
						moPage.mbIsChangedByYearSmt = true;
						if( !ValueUtil.isNull(vsAbsSmtCntRcd) ){
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", "");
						}
						moPage.mbIsChangedByYearSmt = false;
						return;
					} else {
						util.DataMap.setValue(app, "dmReqAbsSmtCnt", "strRtnYearRcd", vsRtnYearRcd);
						util.DataMap.setValue(app, "dmReqAbsSmtCnt", "strRtnSmtRcd", vsRtnSmtRcd);
						
						//strCommand: getAbsSmtCnt 
						util.Submit.send(app, "subAbsSmtCnt", function(pbSuccess) {
							moPage.mbIsChangedByYearSmt = true;
							if (pbSuccess) {
								util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", util.DataMap.getValue(app, "dmResAbsSmtCnt", "strAbsSmtCntRcd"));
								
							}else{
								util.FreeForm.setValue(app, "frfCsrShregAlt", "ABS_SMT_CNT_RCD", "");
								util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSave"]);
							}
							
							moPage.mbIsChangedByYearSmt = false;
						});
					}
					return;
				};
				
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
			
				/**
				 * @desc 프리폼 초기화
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doDataClear() {
					util.Control.reset(app, ["frfCsrShregAlt"]);
				};
				
				
				
				moPage.onValueChanged_CbbFrfRtnPlanYearRcd = function() {
					moPage.getAbsSmtCntRcdByYearSmt();
				};
				
				
				moPage.onValueChanged_CbbFrfRtnPlanSmtRcd = function() {
					moPage.getAbsSmtCntRcdByYearSmt();
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsYearList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsReasonList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP4"},
					{"name": "CD_PRP5"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsAbsCntList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAltDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsRegTransRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRsnList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strAltDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAltRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strAltDt",
						"dataType": "string"
					},
					{
						"name": "strPopTarget",
						"dataType": "string"
					},
					{
						"name": "strRecRcogYn",
						"dataType": "string"
					},
					{
						"name": "strAbsSmtCntRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCsrShregAlt");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "BEF_ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_RCD",
						"dataType": "string"
					},
					{
						"name": "REC_RCOG_YN",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ACT_DT12",
						"dataType": "string"
					},
					{
						"name": "ACT_DT34",
						"dataType": "string"
					},
					{
						"name": "STD_DT",
						"dataType": "string"
					},
					{
						"name": "ACT_DT14",
						"dataType": "string"
					},
					{
						"name": "RTN_PLAN_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "RTN_PLAN_SMT_RCD",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "rptRowCnt",
						"dataType": "string"
					},
					{
						"name": "strRegTransRcd",
						"dataType": "string"
					},
					{
						"name": "strActDt12",
						"dataType": "string"
					},
					{
						"name": "strActDt34",
						"dataType": "string"
					},
					{
						"name": "strStdDt",
						"dataType": "string"
					},
					{
						"name": "strActDt14",
						"dataType": "string"
					},
					{
						"name": "strRtnYearRcd",
						"dataType": "string"
					},
					{
						"name": "strRtnSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strRegTransRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					},
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmSessionDate");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strYear",
						"dataType": "string"
					},
					{
						"name": "strSmt",
						"dataType": "string"
					},
					{
						"name": "strChkYn",
						"dataType": "string"
					},
					{
						"name": "strAbsSmtCntRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmReqAbsSmtCnt");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "strRtnYearRcd",
						"dataType": "string"
					},
					{
						"name": "strRtnSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			
			var dataMap_8 = new cpr.data.DataMap("dmResAbsSmtCnt");
			dataMap_8.parseData({
				"columns" : [{
					"name": "strAbsSmtCntRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_8);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_5);
			submission_2.addResponseData(dataMap_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subMstAltPopupMnu");
			submission_3.action = "/csr/StdCsrMstAlt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDateFromSession");
			submission_4.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_6, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subRegTrans");
			submission_5.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataMap_3, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subRtnYearSmt");
			submission_6.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataMap_3, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subAbsSmtCnt");
			submission_7.action = "/csr/ExtCsrAltEnrollAbs/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_7);
			submission_7.addRequestData(dataMap_1);
			submission_7.addResponseData(dataMap_8, false);
			app.register(submission_7);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShregAlt");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfSchYearRcd");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_1, {
						"top": "5px",
						"left": "500px",
						"width": "45px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_1.visible = false;
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "550px",
						"width": "55px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_1.visible = false;
					inputBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "STUD_ID");
					container.addChild(inputBox_1, {
						"top": "80px",
						"left": "505px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("iptFrfSerialNo");
					inputBox_2.visible = false;
					inputBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SERIAL_NO");
					container.addChild(inputBox_2, {
						"top": "80px",
						"left": "520px",
						"width": "10px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfRegTransRcd");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-DB-REG_TRANS_RCD");
					container.addChild(output_2, {
						"top": "80px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfAltDt");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_3, {
						"top": "29px",
						"left": "610px",
						"width": "45px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfRegTransRcd");
					comboBox_2.enabled = false;
					comboBox_2.bind("fieldLabel").toExpression("#optFrfRegTransRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REG_TRANS_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsRegTransRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "80px",
						"left": "100px",
						"width": "140px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("iptFrfAltDt");
					dateInput_1.visible = false;
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAltDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DT");
					container.addChild(dateInput_1, {
						"top": "29px",
						"left": "660px",
						"width": "60px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfSmtRcd");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-ABSSMSTR");
					container.addChild(output_4, {
						"top": "5px",
						"left": "610px",
						"width": "45px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_3.visible = false;
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SMT_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "5px",
						"left": "660px",
						"width": "60px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfAltRsnRcd");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_5, {
						"top": "30px",
						"left": "500px",
						"width": "45px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfAltRsnRcd");
					comboBox_4.visible = false;
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optFrfAltRsnRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_RSN_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsReasonList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					if(typeof onCbbFrfAltRsnRcdSelectionChange == "function") {
						comboBox_4.addEventListener("selection-change", onCbbFrfAltRsnRcdSelectionChange);
					}
					container.addChild(comboBox_4, {
						"top": "31px",
						"left": "550px",
						"width": "55px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfAbsSmtCntRcd");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-SCR-ABSSMSTRS");
					container.addChild(output_6, {
						"top": "30px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfAbsSmtCntRcd");
					comboBox_5.userAttr({"require": "Y"});
					comboBox_5.bind("fieldLabel").toExpression("#optFrfAbsSmtCntRcd.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ABS_SMT_CNT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsAbsCntList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					if(typeof onCbbFrfAbsSmtCntRcdSelectionChange == "function") {
						comboBox_5.addEventListener("selection-change", onCbbFrfAbsSmtCntRcdSelectionChange);
					}
					container.addChild(comboBox_5, {
						"top": "30px",
						"left": "100px",
						"width": "140px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfCstDt");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-DB-CST_DT");
					container.addChild(output_7, {
						"top": "30px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("iptFrfCstDt");
					dateInput_2.format = "YYYY-MM-DD";
					dateInput_2.bind("fieldLabel").toExpression("#optFrfCstDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CST_DT");
					container.addChild(dateInput_2, {
						"top": "30px",
						"left": "345px",
						"width": "90px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfRecRcogYn");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-REC_RCOG_YN");
					container.addChild(output_8, {
						"top": "80px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("ckbFrfRecRcogYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "Y";
					checkBox_1.bind("fieldLabel").toExpression("#optFrfRecRcogYn.value");
					checkBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REC_RCOG_YN");
					if(typeof onCkbFrfRecRcogYnValueChange == "function") {
						checkBox_1.addEventListener("value-change", onCkbFrfRecRcogYnValueChange);
					}
					container.addChild(checkBox_1, {
						"top": "80px",
						"left": "345px",
						"width": "30px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("inputbox1");
					inputBox_3.visible = false;
					inputBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DIV_RCD");
					container.addChild(inputBox_3, {
						"top": "80px",
						"left": "535px",
						"width": "10px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfRemark");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_9, {
						"top": "55px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_4.maxLength = 300;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REMARK");
					container.addChild(inputBox_4, {
						"top": "55px",
						"left": "100px",
						"width": "385px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfActDt12");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_10, {
						"top": "105px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfActDt34");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_11, {
						"top": "105px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var dateInput_3 = new cpr.controls.DateInput("iptFrfActDt12");
					dateInput_3.enabled = false;
					dateInput_3.format = "YYYY-MM-DD";
					dateInput_3.bind("fieldLabel").toExpression("#optFrfActDt12.value");
					dateInput_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ACT_DT12");
					container.addChild(dateInput_3, {
						"top": "105px",
						"left": "100px",
						"width": "70px",
						"height": "25px"
					});
					var dateInput_4 = new cpr.controls.DateInput("iptFrfActDt34");
					dateInput_4.enabled = false;
					dateInput_4.format = "YYYY-MM-DD";
					dateInput_4.bind("fieldLabel").toExpression("#optFrfActDt34.value");
					dateInput_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ACT_DT34");
					container.addChild(dateInput_4, {
						"top": "105px",
						"left": "345px",
						"width": "70px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfStdDt");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_12, {
						"top": "130px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var dateInput_5 = new cpr.controls.DateInput("iptFrfStdDt");
					dateInput_5.enabled = false;
					dateInput_5.format = "YYYY-MM-DD";
					dateInput_5.bind("fieldLabel").toExpression("#optFrfStdDt.value");
					dateInput_5.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "STD_DT");
					container.addChild(dateInput_5, {
						"top": "130px",
						"left": "100px",
						"width": "70px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfRtnPlanYearRcd");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_13, {
						"top": "5px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfRtnPlanYearRcd");
					comboBox_6.userAttr({"require": "Y"});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfRtnPlanYearRcd.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "RTN_PLAN_YEAR_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					if(typeof onCbbFrfRtnPlanYearRcdSelectionChange == "function") {
						comboBox_6.addEventListener("selection-change", onCbbFrfRtnPlanYearRcdSelectionChange);
					}
					container.addChild(comboBox_6, {
						"top": "5px",
						"left": "100px",
						"width": "140px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfRtnPlanSmtRcd");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-ABSSMSTRS");
					container.addChild(output_14, {
						"top": "5px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfRtnPlanSmtRcd");
					comboBox_7.userAttr({"require": "Y"});
					comboBox_7.bind("fieldLabel").toExpression("#optFrfRtnPlanSmtRcd.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "RTN_PLAN_SMT_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					if(typeof onCbbFrfRtnPlanSmtRcdSelectionChange == "function") {
						comboBox_7.addEventListener("selection-change", onCbbFrfRtnPlanSmtRcdSelectionChange);
					}
					container.addChild(comboBox_7, {
						"top": "5px",
						"left": "345px",
						"width": "140px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfAltDivRcd");
					comboBox_8.visible = false;
					comboBox_8.bind("fieldLabel").toExpression("#optFrfAltDivRcd.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DIV_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsReasonList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "55px",
						"left": "549px",
						"width": "55px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfAltDivRcd");
					output_15.value = "";
					output_15.style.setClasses(["require"]);
					output_15.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_15, {
						"top": "55px",
						"left": "499px",
						"width": "45px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "25px",
					"left": "0px",
					"width": "490px",
					"height": "155px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCsrShregAlt");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-NEWABSMK");
				container.addChild(userDefinedControl_1, {
					"top": "0px",
					"left": "0px",
					"width": "250px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "492px",
				"height": "185px"
			});
			
			var button_1 = new cpr.controls.Button("btnSaveAbs");
			button_1.enabled = false;
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveAbsClick == "function") {
				button_1.addEventListener("click", onBtnSaveAbsClick);
			}
			container.addChild(button_1, {
				"top": "185px",
				"left": "215px",
				"width": "60px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "290px",
				"left": "0px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCAltEnrollAbs";
	cpr.core.Platform.INSTANCE.register(app);
})();
