/*
 * App URI: app/csr/extCsrCAltEnrollMng
 * Source Location: app/csr/extCsrCAltEnrollMng.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltEnrollMng", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCAltEnrollMng.xtm"/>
			
			var extCsrCAltEnrollMng = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * 학생검색팝업 관련 설정사항
				 * 설정가능 유형 : 
				 *   1. 인스턴스((/root/시작))
				 *   2. 그리드의 셀 (ghc시작)
				 *   3. 컨트롤 id
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  1. controlId 			: 최초 이벤트의 버튼이나 그리드 id	(필수)
				 *  2. iStudNo 			: 검색조건 학번								(선택) (값이 존재할 경우 4자리 이상)
				 *  3. iStudId 				: 검색조건 학번오브젝트					(선택)
				 *  4. iStudNm 			: 이름        									(선택) (값이 존재할 경우 2자리 이상)
				 *  5. iKeyDate 			: 기준일 										(필수)
				 *  6. iObjDivRcd 		: 객체구분코드 								(선택)
				 *  7. iObjCd 				: 부서코드										(선택)
				 *  8. iObjNm 			: 부서명											(선택) 
				 *  10. iStatRcd			: 학적상태										(선택) 
				 *  11. iStudDivRcd		: 학생구분										(선택) 
				 *  12. oStudId			: 학번오브젝트
				 *  13. oStudNo 			: 학번
				 *  14. oStudNm 		: 이름
				 *  15. oStatNm 			: 학적상태명
				 *  16. oStatRcd 			: 학적상태코드
				 *  17. oProcRslt 		: 진급학기
				 *  18. oProcRsltYear 	: 진급학년
				 *  19. oSaCd 			: 학사부서코드명
				 *  20. oSaNm 			: 학사부서명
				 *  21. oSpCd 			: 이수과정코드명
				 *  22. oSpNm 			: 이수과정명
				 *  23. oOgCd 			: 행정부서코드명
				 *  24. oOgNm 			: 행정부서명
				 *  25. oStudDivRcd		: 학생구분코드
				 *  26. oStudDivNm		: 학생구분명
				 *  27. oBirthday			: 생년월일
				 *  28. oGenderRcd		: 성별코드
				 *  29. oGenderNm		: 성별명
				 *  30. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnStudPopSearch",
					iStudNo 					: "ipbStudNo",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "dipKeyDate", 
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					:"",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqList/strStudId",
					oStudNo 					: "ipbStudNo",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						
						//팝업끝난후  후처리가 필요할때 입력 
						var vsStudId = util.DataMap.getValue(app, "dmReqList", "strStudId");
						var voParam = moPage.moParentObj;
						if(!ValueUtil.isNull(vsStudId)) {
							util.Control.redraw(app, ["ipbSchStudId"]);
							util.Control.setEnable(app, true,  ["htmlObjMst"]);
							voParam.strStudId = util.DataMap.getValue(app, "dmReqList", "strStudId");
							doSearch();
						}else{
							voParam.strStudId = "";
							util.Control.setEnable(app, false, ["htmlObjMst"]);
							
							var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
							var vsXtmValue = moPage.getSubPageID(vsAltDivRcd);
							
							// 서브페이지 데이터 초기화
							var voSbpMstPage = ExtSubPage.getSubPage("htmlObjMst", vsXtmValue);
							if(voSbpMstPage != null){			
								voSbpMstPage.callScript("doDataClear", null);
							}
							var voSbpSubPage = ExtSubPage.getSubPage("htmlObjSub", "extCsrSAltInfo");
							if(voSbpSubPage != null){			
								voSbpSubPage.callScript("doDataClear", null);
							}
						}
					}
				}
				];
				
				/**
				 * 학적변동 정보
				 * @author Choi In Seong 2016. 1. 13
				 */	
				moPage.moParentObj = {
					strStudId				: "", 					// 학생 ID
					strSchYearRcd		: "", 					// 학적변동 학년도
					strSmtRcd 			: "", 					// 학적변동 학기
					strAltDt			 		: "", 					// 학적변동일
					strAltDivRcd	 		: "", 					// 학적변동구분
					strAltDivNm	 		: "", 					// 학적변동구분명
					strAltRsnRcd	 		: "",					// 학적변동사유
					strAbsSmtCntRcd    : "" ,					// 휴학학기수 (휴학인 경우에만 이용) 
					strAltYn					: "Y"                  // 학적변동처리용여부(다른프로그램에서 서브페이지를 사용시 학적변동처리에서 호출 여부를 확인하기위한 구분자)
				};
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
							
				/**
				 * @desc 
				 * @return 
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onModelConstructDone_extCsrCAltEnrollMng = function() {
					
					doOnLoad();
					//impStudInf02(학생정보 임포트) 초기화
					initSizeAlt();
				
				}
			
				/**
				 * @desc 공통코드 호출 및 화면 초기화
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */	
				function doOnLoad() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptExtCsrShregAlt");
					
					// 서브페이지 비활성화 세팅
					ExtSubPage.setPage("htmlObjMst", "/xtm/cmn/blank.html");
					// 서브페이지 비활성화 세팅
					ExtSubPage.setPage("htmlObjSub", "/xtm/cmn/blank.html");
					
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.setValue(app, "cbbSchYearRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSchYearRcd"));
							util.Control.setValue(app, "cbbSmtRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcd"));
							util.Control.setValue(app, "dipAltDt", util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate"));
							
							util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipAltDt", "cbbAltDivRcd", "cbbAltRsnRcd","cbbAbsCntRcd"]);
							ExtRepeat.refresh("rptExtCsrShregAlt");
							util.Control.redraw(app, ["frfStud"]);
							
							ExtSubPage.setPage("htmlObjSub", "xtm/csr/extCsrSAltInfo.xtm");
						}
					});
				}
				
			   /**
				 * @desc 조회
				 *
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onClick_BtnSearch = function() {
					
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
					var vsXtmValue = moPage.getSubPageID(vsAltDivRcd);
			
					
			//alert(vsXtmValue);	
					//** 서브페이지 함수에 접근하는지 확인
					//데이타 변경여부를 확인하고 저장여부 컨펌: 저장실패시 상태변경 불가
					var voSbpMstPage = ExtSubPage.getSubPage("htmlObjMst", vsXtmValue);
					
			//alert("voSbpMstPage="+voSbpMstPage);		
			
					if(voSbpMstPage != null){			
						if(!voSbpMstPage.callScript("doCheckDataChange", null)) {
							return false;
						}
					}
					
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");		
					var vsAltEnrollDiv = moPage.getAltEnrollDiv(vsAltDivRcd);
					util.DataMap.setValue(app, "dmReqList", "strAltEnrollDiv", vsAltEnrollDiv);
					if(vsAltEnrollDiv == "ENROLL"){
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipAltDt", "cbbAltDivRcd"])){		
							return false;
						}			
					}else{
						if(!util.validate(app, ["cbbSchYearRcd", "cbbSmtRcd", "dipAltDt", "cbbAltDivRcd", "cbbAltRsnRcd"])){
							return false;
						}
					}
			
					clearImpStudInfo02();
					util.Control.reset(app, ["ipbStudNo","ipbStudId"]);
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
			
				/**
				 * @desc 학적변동 처리내역을 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 10. 11.
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdExtCsrShregAlt");
							util.Control.redraw(app, ["frfStud"]);
							//PARENT 변동 정보 셋팅
							var voParam = moPage.moParentObj;
							voParam.strStudId     				= util.DataMap.getValue(app, "dmReqList", "strStudId");
							voParam.strSchYearRcd     	= util.Control.getValue(app, "cbbSchYearRcd"); 
							voParam.strSmtRcd 				= util.Control.getValue(app, "cbbSmtRcd");
							voParam.strAltDt 					= util.Control.getValue(app, "dipAltDt");
							voParam.strAltDivRcd   			= util.Control.getValue(app, "cbbAltDivRcd");
							voParam.strAltDivNm  			= util.SelectCtl.getLabel(app, "cbbAltDivRcd", util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd"));
							voParam.strAltRsnRcd 			= util.Control.getValue(app, "cbbAltRsnRcd");
							if ( voParam.strAltDivRcd == "CT401ABSE") {
								voParam.strAbsSmtCntRcd		= util.Control.getValue(app, "cbbAbsCntRcd");
							} else {
								voParam.strAbsSmtCntRcd		= "";
							}
							
							var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
							var vsXtmValue = moPage.getSubPageName(vsAltDivRcd);
							
							ExtSubPage.setPage("htmlObjMst", vsXtmValue, true); // no scroll 
							
							var voSbpSubPage = ExtSubPage.getSubPage("htmlObjSub", "extCsrSAltInfo");
							if(voSbpSubPage != null){			
								voSbpSubPage.callScript("doDataClear", null);
							}
							if(vsAltDivRcd.indexOf("CT401") != -1)
							{//담당자취소
								util.DataMap.setValue(app, "dmReqList", "strCancelResRcd","CT41501");
							}else
							{//시스템취소
								util.DataMap.setValue(app, "dmReqList", "strCancelResRcd","CT107SYST");
							}
							
							
							
							util.DataMap.setValue(app, "dmReqList", "strCancelDt",util.Control.getValue(app, "dipAltDt"));
							util.Control.redraw(app, ["cbbFrfCancelRsnRcd","ipbFrfCancelDt","dipKeyDate"]);
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc 변동사유 구분 값을 가져온다.
				 * @param
				 * @return {String} 용도코드4에 해당하는 값 반환
				 * @author Choi In Seong 2016. 10. 11.
				 */  
				moPage.getAltRsnDiv = function(psVal) {
					
					var vsXtmValue = ExtInstance.getValue("/root/resOnLoad/altDivRcdList/row", "CD_PRP4", "child::CD='" + psVal + "'");
					
					return vsXtmValue;
					
				};
			
				/**
				 * @desc CD값에 대한 프로그램 ID를 가져온다.
				 * @param
				 * @return {String} 용도코드5에 해당하는 값 반환
				 * @author Choi In Seong 2016. 10. 11.
				 */ 
				moPage.getSubPageID = function(psVal) {
					
					var vsXtmValue = ExtInstance.getValue("/root/resOnLoad/altDivRcdList/row", "CD_PRP5", "child::CD='" + psVal + "'");
					
					return vsXtmValue;
					
				};
				
				/**
				 * @desc 호출할 서브페이지의 호출페이지값을 가져온다.
				 * @param
				 * @return {String} 용도코드6에 해당하는 값 반환
				 * @author Choi In Seong 2016. 10. 11.
				 */  
				moPage.getSubPageName = function(psVal) {
					
					var vsXtmValue = ExtInstance.getValue("/root/resOnLoad/altDivRcdList/row", "CD_PRP6", "child::CD='" + psVal + "'");
					
					return vsXtmValue;
					
				};
				
				/**
				 * @desc 학적, 등록 변동 구분 값을 가져온다.
				 * @param
				 * @return {String} 용도코드8에 해당하는 값 반환
				 * @author Choi In Seong 2016. 10. 11.
				 */  
				moPage.getAltEnrollDiv = function(psVal) {
					
					var vsXtmValue = ExtInstance.getValue("/root/resOnLoad/altDivRcdList/row", "CD_PRP8", "child::CD='" + psVal + "'");
					
					return vsXtmValue;
					
				};
				
				/**
				 * @desc 입력된 학번으로 조회한다.
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */	
				function doSearch() {
					
					//학번&기준일자 입력확인
					if(!util.validate(app, "ipbStudNo")) return false;
					
					//(IMPORT)학번전달
					var vsStudId  = util.DataMap.getValue(app, "dmReqList", "strStudId");
					var vsKeyDate = util.Control.getValue(app, "dipKeyDate");
					
					var voImpStudInfoCallbackFunc = function(pbImpStudInfoCallBack) {
						if (pbImpStudInfoCallBack) {
			
							// 이미지 업로드 버튼 보이기 여부 설정
							setVisibleUploadStudImgBtn(false);
							
							var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
							var vsXtmValue = moPage.getSubPageID(vsAltDivRcd);
							
							// 학번 조회 후 신규 변동
							var voSbpMstPage = ExtSubPage.getSubPage("htmlObjMst", vsXtmValue);
							
							if (voSbpMstPage != null) {
								voSbpMstPage.callScript("doNewAlt", null);
							}
							// 학번 조회 후 변동정보 조회
							var voSbpSubPage = ExtSubPage.getSubPage("htmlObjSub", "extCsrSAltInfo");
							
							if (voSbpSubPage != null) {
								voSbpSubPage.callScript("doListAlt", null);
							}
						} 
					};
					// 학생정보imp 조회
					setImpStudInfo(vsStudId, vsKeyDate, null, voImpStudInfoCallbackFunc);
					
				};
				
				/**
				 * @desc 헤더 메시지 설정
				 * @param vsMsg 헤더 메시지
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				function doSetMsg(vsMsg){
					util.Msg.notify(app, "vsMsg");
				}
				
				/**
				 * @desc 저장 후 임포트 재조회 & 서브페이지 재조회
				 * @param stdCsrMstFrame 콜백함수
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doSaveAfter(poCallBackSaveAfter) {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdExtCsrShregAlt");
						
							var vsStudId  = util.DataMap.getValue(app, "dmReqList", "strStudId");
							var vsKeyDate = util.Control.getValue(app, "dipAltDt");
			
							var voImpStudInfoCallbackFunc = function(pbImpStudInfoCallBack) {
								if (pbImpStudInfoCallBack) {
									// 학번 조회 후 변동정보 조회
									var voSbpSubPage = ExtSubPage.getSubPage("htmlObjSub", "extCsrSAltInfo");
									
									if (voSbpSubPage != null) {
										voSbpSubPage.callScript("doListAlt", null);
									}
								} 
							};
							if(ValueUtil.fixNull(vsStudId) !="")
							{
									// 학적변동에 따른 학생정보imp 조회
									setImpStudInfo(vsStudId, vsKeyDate, null, voImpStudInfoCallbackFunc);
							}
							
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackSaveAfter)) poCallBackSaveAfter(pbSuccess);
						}
					});
				};
				
				moPage.onLoadImportDone_ImpStudInfo = function() {
					impStudInfo();
				}
				
				moPage.onClick_RdImgFileDown = function(sender) {
					doOnClickStdCmnPFileUtil(sender);
				}
				
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				}
				
				/**
				 * @desc 변동구분에 따른 변동사유 필터
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_CbbAltDivRcd = function() {
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
					var vsAltRsnDiv = moPage.getAltRsnDiv(vsAltDivRcd);
					
					
					if (vsAltDivRcd == "CT401ABSE" ) {
							util.Control.setVisible(app, true, "lblAbsCntRcd"); 
							util.Control.setVisible(app, true, "cbbAbsCntRcd"); 
					}else {
							util.Control.setVisible(app, false, "lblAbsCntRcd"); 
							util.Control.setVisible(app, false, "cbbAbsCntRcd"); 
					}
					util.Control.redraw(app, ["lblAbsCntRcd","cbbAbsCntRcd"]);
					
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");		
					var vsAltEnrollDiv = moPage.getAltEnrollDiv(vsAltDivRcd);
					//변동구분에 따른 변동 사유 필터 및 Visible 체크
					if(vsAltEnrollDiv == "ENROLL"){
						util.DataMap.setValue(app, "dmReqList", "strAltRsnRcd","");
						util.DataMap.setValue(app, "dmReqList", "strAbsCntRcd","");
						util.Control.setVisible(app, false,[ "lblAltRsnRcd","cbbAltRsnRcd"]); 	
					}else{
						util.Control.setVisible(app, true,[ "lblAltRsnRcd","cbbAltRsnRcd"]); 	
						doAltRsnRcdFilter(vsAltRsnDiv);
					}
				};
				
				/**
				 * @desc 변동구분에 따른 변동사유 필터
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				function doAltRsnRcdFilter(psAltDivRcd) {
					var vcAltRsnRcd = ExtControl.getControl("cbbAltRsnRcd");
					var vsNodeSet = vcAltRsnRcd.getAttr("nodeset");
					var vsOriRef = vsNodeSet;
					vsNodeSet += "[child::CD_CLS='" + psAltDivRcd + "']";
					vcAltRsnRcd.setAttr("nodeset", vsNodeSet);
					vcAltRsnRcd.refresh();
					util.SelectCtl.selectItem(app, "cbbAltRsnRcd", 0);
					vcAltRsnRcd.setAttr("nodeset", vsOriRef);
				}
				
				/**
				 * @desc 변동신규
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onClick_BtnNew = function() {
					
					var vsStudNo = util.DataMap.getValue(app, "dmReqList", "strStudNo");
					if(ValueUtil.isNull(vsStudNo)){
						if(!util.validate(app, ["ipbStudNo"])){
							return false;
						}
					}
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
					var vsXtmValue = moPage.getSubPageID(vsAltDivRcd);
					
					// 학번 조회 후 신규 변동
					var voSbpMstPage = ExtSubPage.getSubPage("htmlObjMst", vsXtmValue);
			
					if (voSbpMstPage != null) {
						if(!voSbpMstPage.callScript("doCheckDataChange", null)) {
							return false;
						}	
						
						voSbpMstPage.callScript("doNewAlt", null);
					}
				}
				/**
				 * 취소
				 * @member moPage
				 * @type Boolean
				 * @return 
				 * @author hyunteak at 16. 11. 2 오후 3:09
				 */
				moPage.onClick_BtnNewCancel = function() {
					if(!util.validate(app, ["cbbFrfCancelRsnRcd", "ipbFrfCancelDt"])){		
						return false;
					}else{
						//커버 실행
						util.coverPage(app);
						//취소
						doRptChk();
					
					}
				}
				/**
				 * 리피트 체크박스 체크여부 확인
				 * @member moPage
				 * @type Boolean
				 * @return 
				 * @author hyunteak at 16. 11. 2 오후 3:10
				 */
				function doRptChk(){
					var vnCancelListRow 	= util.Grid.getCheckOrSelectedRowIndex(app, "grdExtCsrShregAlt");
					var vsRptTitle = ExtRepeat.getLableIdValue("rptExtCsrShregAlt");
					var vaIdxsDel = null;
					var voCancelRow;
			
					//이동할 행이 없을 경우 리턴
					if(ValueUtil.fixNull(vnCancelListRow)  == ""){
						//@ 중 취소 할 행을 선택하여 주십시오
						util.Msg.alert("NLS-CSR-M125",[vsRptTitle]);
						//커버해제 
						util.removeCover(app);
						return false;
					}
					//삭제될 리피트의 선택된 행이 단건 or 다건 일 경우
					if(String(vnCancelListRow).indexOf(",") != -1){
						//다건일경우
						vaIdxsDel = vnCancelListRow.split(",");
					}else{
						//단건일경우
						vaIdxsDel = new Array();
						vaIdxsDel[0] = vnCancelListRow;
					}
					//셋팅
				   for(var i=0; i< vaIdxsDel.length; i++) {
					   voCancelRow = vaIdxsDel[i];
					   if(util.Grid.getCellValue(app, "grdExtCsrShregAlt","DEL_CKB",voCancelRow) =="")
						{
							//@ 중 취소 할 행을 선택하여 주십시오
							util.Msg.alert("NLS-CSR-M125",[vsRptTitle]);
							//커버해제 
							util.removeCover(app);
							return false;
						}
				   }
				   ExtRepeat.setCRUDAttr("rptExtCsrShregAlt", "alltype", "true");
			
					
				   //취소 저장
				   doSaveCancel();
				
				}
				/**
				 * 취소저장
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 11. 2 오후 3:10
				 */
				function doSaveCancel(){
					var vsRptTitle = ExtRepeat.getLableIdValue("rptExtCsrShregAlt");
					var vsMsg = ComMsg.getMsg("NLS.CSR.M126",[vsRptTitle]);
					if(util.Msg.confirm("NLS-CRM-M010",[vsMsg])  ==MsgBox.IDOK)
					{
						var vsAltDivNm = util.SelectCtl.getLabel(app, "cbbAltDivRcd",util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd"));
						util.DataMap.setValue(app, "dmReqList", "strAltDivNm",vsAltDivNm);
						//1..취소  작업자장 서브미션 호출
						//strCommand: save 
						util.Submit.send(app, "subSave", function(pbSuccess){
							//1.1성공시
							if(pbSuccess){
								
								doSaveAfter(function(pbSuccess) {
									
									if (pbSuccess){
										 util.Msg.notify(app, "NLS.INF.M025");
									}
								});
							}
							ExtRepeat.setCRUDAttr("rptExtCsrShregAlt", "alltype", "false");
							//커버해제 
							util.removeCover(app);
						});
					}else{
						
						ExtRepeat.setCRUDAttr("rptExtCsrShregAlt", "alltype", "false");
							//커버해제 
							util.removeCover(app);
					}
					
				
				}	
				
				
				
				/**
				 * @desc 학생검색팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onClick_BtnStudPopSearch = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				}
				
				/**
				 * @desc 학생검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 10. 11.
				 */
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				}
				
				
				/**
				 * @desc 변동사유변경시 (휴학의 경우, 해당하는 휴학학기수를 자동설정) 
				 * @param 
				 * @return void
				 * @author Sunyoung, park 2016.10.24
				*/
				moPage.onValueChanged_CbbAltRsnRcd = function() {
					
					var vsAltRsnRcd = util.Control.getValue(app, "cbbAltRsnRcd");
					
					if(!ValueUtil.isNull(vsAltRsnRcd)) {
						var vsSmtCnt = ExtInstance.getValue("/root/resOnLoad/altRsnRcdList/row", "CD_PRP5", "child::CD='"+vsAltRsnRcd+"'");
					
						if(ValueUtil.isNull(vsSmtCnt)) {
							util.Control.setValue(app, "cbbAbsCntRcd", "");
						} else {
							util.Control.setValue(app, "cbbAbsCntRcd", vsSmtCnt);
						}
					}
				};
				
				moPage.onValueChanged_CbbFrfCancelRsnRcd = function() {
					
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAltRsnRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "CD_PRP5"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAltDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP4"},
					{"name": "CD_PRP5"},
					{"name": "CD_PRP6"},
					{"name": "CD_PRP8"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAbsCntList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsCnlRsnList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "FILTER_KEY"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCsrShregAlt");
			dataSet_7.parseData({
				"info": "EXT_CSR_SHREG_ALT@STUD_ID,ALT_DIV_RCD,SERIAL_NO",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "ALT_DIV_RCD"},
					{"name": "ALT_RSN_DIV_RCD"},
					{"name": "ALT_RSN_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "STUD_NO"},
					{"name": "STUD_NM"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT"},
					{"name": "CLASS_NM"},
					{"name": "BEF_STAT_NM"},
					{"name": "STAT_NM"},
					{"name": "REG_TRANS_NM"},
					{"name": "REC_RCOG_YN"},
					{"name": "ALT_DT"},
					{"name": "ABS_SMT_CNT_NM"},
					{"name": "RTN_DT"},
					{"name": "CST_DT"},
					{"name": "CHG_BEF_DESC_DISP"},
					{"name": "CHG_DESC_DISP"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "CANCEL_RSN_RCD"},
					{"name": "REF_KEY"},
					{"name": "REFUND_SCH_YEAR_RCD"},
					{"name": "REFUND_SMT_RCD"},
					{"name": "REFUND_CII_DT"},
					{"name": "REFUND_AMT"},
					{"name": "UREF_KEY"},
					{"name": "REG_STAT_RCD"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "SP_CD"},
					{"name": "PROC_DT"},
					{"name": "SP_DIV_RCD"},
					{"name": "ENROLL_RSN_RCD"},
					{"name": "ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strAltDt",
						"dataType": "string"
					},
					{
						"name": "strAltDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAltRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strAltEnrollDiv",
						"dataType": "string"
					},
					{
						"name": "strAbsCntRcd",
						"dataType": "string"
					},
					{
						"name": "strCancelDt",
						"dataType": "string"
					},
					{
						"name": "strCancelResRcd",
						"dataType": "string"
					},
					{
						"name": "strAltDivNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strCancelCnt",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltEnrollMng/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_5, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrAltEnrollMng/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_7, false);
			submission_2.addResponseData(dataSet_6, false);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/ExtCsrAltEnrollMng/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbAltRsnRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optAltRsnRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strAltRsnRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsAltRsnRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbAltRsnRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbAltRsnRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "874px",
					"width": "92px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optAltRsnRcd");
				output_1.value = "변동사유";
				output_1.style.setClasses(["require"]);
				container.addChild(output_1, {
					"top": "5px",
					"left": "789px",
					"width": "77px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optAltDivRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-CHGDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "589px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbAltDivRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optAltDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strAltDivRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsAltDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbAltDivRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbAltDivRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "674px",
					"width": "105px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipAltDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optAltDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strAltDt");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "489px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optAltDt");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-DB-ALT_DT");
				container.addChild(output_3, {
					"top": "5px",
					"left": "404px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "275px",
					"width": "120px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSmtRcd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_4.userAttr({"require": "Y"});
				comboBox_4.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_4){
					comboBox_4.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optSchYearRcd");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_5, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbAbsCntRcd");
				comboBox_5.visible = false;
				comboBox_5.bind("fieldLabel").toExpression("#optAbsCntRcd.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqList"), "strAbsCntRcd");
				(function(comboBox_5){
					comboBox_5.setItemSet(app.lookup("dsAbsCntList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "5px",
					"left": "1059px",
					"width": "92px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optAbsCntRcd");
				output_6.value = "휴학학기수";
				container.addChild(output_6, {
					"top": "5px",
					"left": "974px",
					"width": "77px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStudInfo");
				if(typeof onEmaStudInfoAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaStudInfoAppReady);
				}
				cpr.core.App.load("app/csr/impStudInf02", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "30px",
					"left": "2px",
					"width": "500px",
					"height": "120px"
				});
				var output_7 = new cpr.controls.Output("optStudNo");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_7, {
					"top": "5px",
					"left": "5px",
					"width": "75px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "신규";
				button_2.style.setClasses(["btn-new"]);
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "375px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnNewCancel");
				button_3.value = "취소";
				button_3.style.setClasses(["btn-new"]);
				if(typeof onBtnNewCancelClick == "function") {
					button_3.addEventListener("click", onBtnNewCancelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "440px",
					"width": "60px",
					"height": "25px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "505px",
					"width": "275px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExtCsrShregAlt");
				grid_1.init({
					"dataSet": app.lookup("dsCsrShregAlt"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "61px"},
						{"width": "58px"},
						{"width": "134px"},
						{"width": "37px"},
						{"width": "41px"},
						{"width": "87px"},
						{"width": "75px"},
						{"width": "80px"},
						{"width": "70px"},
						{"width": "100px"},
						{"width": "70px"},
						{"width": "80px"},
						{"width": "70px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "80px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DEPT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "이전학적상태";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "복학예정일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "등록이월";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REC_RCOG_YN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ALT_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ABSSMSTRS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "변경내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "변경전내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "환불금액";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "첨부파일구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "첨부파일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "변동구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "변동사유";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "BEF_STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "RTN_DT";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptRtnPlanDt");
										output_8.dataType = "date";
										output_8.format = "YYYY-MM-DD";
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("RTN_DT");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REG_TRANS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "REC_RCOG_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptAltDt");
										output_9.dataType = "date";
										output_9.format = "YYYY-MM-DD";
										output_9.style.css({
											"text-align" : "center"
										});
										output_9.bind("value").toDataColumn("ALT_DT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ABS_SMT_CNT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CST_DT";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("gdOptCstDt");
										output_10.dataType = "date";
										output_10.format = "YYYY-MM-DD";
										output_10.style.css({
											"text-align" : "center"
										});
										output_10.bind("value").toDataColumn("CST_DT");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "CHG_DESC_DISP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "CHG_BEF_DESC_DISP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "REFUND_AMT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "FILE_DIV";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "FILE_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "ALT_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_RCD";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "505px",
					"width": "715px",
					"height": "565px"
				});
				var hTMLObject_1 = new cpr.controls.HTMLObject("htmlObjMst");
				container.addChild(hTMLObject_1, {
					"top": "155px",
					"left": "5px",
					"width": "495px",
					"height": "299px"
				});
				var hTMLObject_2 = new cpr.controls.HTMLObject("htmlObjSub");
				container.addChild(hTMLObject_2, {
					"top": "459px",
					"left": "5px",
					"width": "495px",
					"height": "136px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "85px",
					"width": "100px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnStudPopSearch");
				button_4.value = "";
				button_4.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnStudPopSearchClick == "function") {
					button_4.addEventListener("click", onBtnStudPopSearchClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "186px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudId");
				inputBox_2.visible = false;
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strStudId");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "205px",
					"width": "10px",
					"height": "25px"
				});
				var output_11 = new cpr.controls.Output("optFrfCancelRsnRcd");
				output_11.value = "";
				output_11.style.setClasses(["require"]);
				output_11.bind("value").toLanguage("UI-SCR-CANCLWHY");
				container.addChild(output_11, {
					"top": "5px",
					"left": "850px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_6 = new cpr.controls.ComboBox("cbbFrfCancelRsnRcd");
				comboBox_6.userAttr({"require": "Y"});
				comboBox_6.bind("fieldLabel").toExpression("#optFrfCancelRsnRcd.value");
				comboBox_6.bind("value").toDataMap(app.lookup("dmReqList"), "strCancelResRcd");
				(function(comboBox_6){
					comboBox_6.setItemSet(app.lookup("dsCnlRsnList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_6);
				if(typeof onCbbFrfCancelRsnRcdSelectionChange == "function") {
					comboBox_6.addEventListener("selection-change", onCbbFrfCancelRsnRcdSelectionChange);
				}
				container.addChild(comboBox_6, {
					"top": "5px",
					"left": "935px",
					"width": "100px",
					"height": "25px"
				});
				var output_12 = new cpr.controls.Output("optFrfCancelDt");
				output_12.value = "";
				output_12.style.setClasses(["require"]);
				output_12.bind("value").toLanguage("UI-DB-CANCEL_DT");
				container.addChild(output_12, {
					"top": "5px",
					"left": "1045px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("ipbFrfCancelDt");
				dateInput_2.userAttr({"require": "Y"});
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optFrfCancelDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqList"), "strCancelDt");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "1130px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_3 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_3.userAttr({"require": "Y"});
				dateInput_3.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_3.bind("value").toDataMap(app.lookup("dmResList"), "strKeyDate");
				container.addChild(dateInput_3, {
					"top": "5px",
					"left": "225px",
					"width": "90px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaort2");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "120px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrCAltEnrollMng";
	cpr.core.Platform.INSTANCE.register(app);
})();
