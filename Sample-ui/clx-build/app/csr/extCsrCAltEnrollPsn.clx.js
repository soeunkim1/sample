/*
 * App URI: app/csr/extCsrCAltEnrollPsn
 * Source Location: app/csr/extCsrCAltEnrollPsn.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltEnrollPsn", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrCAltEnrollPsn.xtm"/>
			
			
			var extCsrCAltEnrollPsn = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				moPage.maAltPsn = ["cbbFrfAltRsnRcd", "ipbFrfPerNm", "ipbSsn"];
				moPage.maCancelCtl = ["cbbFrfCancelRsnRcd", "ipbFrfCancelDt"];
				
				//사용자 정의 변수
				// 신규. 취소 구분
				var mbCheck;
			
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 2. 2.
				 */
				moPage.onModelConstructDone_StdCsrPMstAltPsn = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("frfCsrShregAlt");
					ExtRepeat.addOriginCol("frfCsrShregAlt", ["SSN"]);
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				/**
				 * @desc 받아온 변수 조회조건에 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doOnLoad() {
					var voAltObj = moPage.parent.moParentObj;
					
			//		
				
					// 부모멤버변수에담긴학번받음
			//		ExtInstance.setValue("/root/reqKey/strStudNo", voAltObj["studNo"]);
			//		ExtInstance.setValue("/root/reqKey/strHeaderCourse", voAltObj["headerCourse"]);
			//		ExtInstance.setValue("/root/reqKey/strStudInfo", voAltObj["headerStud"]);
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", voAltObj.strSchYearRcd);
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", voAltObj.strSmtRcd);
					
					mbCheck ="true";
			//		var vbCheck = voAltObj["altPsn"] ? "true" : "false";
			//		ExtInstance.setValue("/root/reqKey/strNewFlag", vbCheck);
			        util.DataMap.setValue(app, "dmReqKey", "strNewFlag", "true");
			
					
						util.Control.setEnable(app, false, ["frfCsrShregAlt","btnSave"]);
						
						//strCommand: onLoad 
						util.Submit.send(app, "subOnLoad", function(pbSuccess) {
							if (pbSuccess) {
								
								util.Control.redraw(app, ["frfCsrShregAlt"]);
								
								
								var vsValue =voAltObj.strAltRsnRcd;
								if (vsValue == "CT41301") {
									util.Control.setVisible(app, true,["lblFrfPerNm","ipbFrfPerNm"]);
									util.Control.setVisible(app, false,["lblSsn","ipbSsn"]);
									
								}else{
									util.Control.setVisible(app, false,["lblFrfPerNm","ipbFrfPerNm"]);
									util.Control.setVisible(app, true,["lblSsn","ipbSsn"]);
								}
								
							} 
						});
				
							
							
					
				}
				
				
				
				
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doNewAlt() {
					var voAltObj = moPage.parent.moParentObj;
					//학생id 셋팅
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj.strStudId);
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
							if (pbSuccess) {
			//					debugger;
								util.Control.setEnable(app, true, ["frfCsrShregAlt","btnSave"]);
								
								util.Control.redraw(app, ["frfCsrShregAlt"]);
								
							
								var vsRowCnt = util.DataMap.getValue(app, "dmResList", "rptRowCnt");
								if (vsRowCnt == "0") {
									doSubInsertRow();
								}
								
								// 학생의 학번정보를 화면에 입력
								//ExtControl.setValue("optStudNo", voAltObj["studNo"]);
								//ExtControl.setValue("optStud", voAltObj["headerStud"]);
								//ExtControl.setValue("optCourse", voAltObj["headerCourse"]);
								
								if(mbCheck) {
									// 신규 인적사항 변경
									util.Control.setEnable(app, false, moPage.maCancelCtl);
									util.Control.setEnable(app, false, ["ipbName", "ipbSsn"]);
									
									ExtControl.setAttr("lblFrfAltDt", "class", "lblFrfReq");
									ExtControl.setAttr("iptFrfAltDt", "class", "ipbFrfReq");
									
									util.Control.setEnable(app, true, ["iptFrfAltDt"]);
								} else {
									// 취소 인적사항 변경
									util.Control.setEnable(app, false, moPage.maAltPsn);
									util.Control.setEnable(app, true, moPage.maCancelCtl);
									
									//변경 취소 css 제어
									ExtControl.setAttr("cbbFrfAltRsnRcd", "class", "cbbFrf");
									ExtControl.setAttr("lblFrfAltRsnRcd", "class", "lblFrf");
									
									ExtControl.setAttr("lblFrfCancelRsnRcd", "class", "lblFrfReq");
									ExtControl.setAttr("cbbFrfCancelRsnRcd", "class", "cbbFrfReq");
									ExtControl.setAttr("lblFrfCancelDt", "class", "lblFrfReq");
									ExtControl.setAttr("ipbFrfCancelDt", "class", "ipbFrfReq");
									
									util.Control.setEnable(app, false, ["iptFrfAltDt"]);
									
									//취소일자 셋팅
									util.FreeForm.setValue(app, "frfCsrShregAlt", "CANCEL_DT", util.DataMap.getValue(app, "dmResOnLoad", "currentDate"));
									util.Control.redraw(app, "ipbFrfCancelDt");
								}
								util.Control.setValue(app, "cbbFrfAltRsnRcd",voAltObj.strAltRsnRcd);
								doAltRsnRcdChange();
								util.Control.setEnable(app, false, ["cbbFrfAltRsnRcd"]);
							} 
						});
					
				}
				
				
				/**
				 * @desc //입력받은 날짜에 초를 000000으로 세팅
				 * @param psDate 시분초를 추가할 날짜
				 * @return vsDate 시분초가 추가된 날짜
				 * @author Choi In Seong 2016. 2. 2
				 */
				moPage.addZoreDate = function(psDate) {
					var vsDate = psDate.substring(0, 8);
					vsDate += "000000";
					return vsDate;
				};
				
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 2
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCsrShregAlt",AppConstants.CUD_COL_REF, "U");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrShregAlt");
					var vsStudId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCsrShregAlt", "STUD_ID", vsStudId);
					util.Grid.setRowState(app, "frfCsrShregAlt",cpr.data.tabledata.RowState.UPDATED,1);
					//신규입력이 Ok
					util.Control.setEnable(app, true, ["frfCsrShregAlt"]);
				};
				
				/**
				 * @desc 학적등록 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onClick_BtnSave = function() {
			//		debugger;
					// 신규
					if (mbCheck) {
						var vsValue = util.FreeForm.getValue(app, "frfCsrShregAlt", "ALT_RSN_RCD");
						if (vsValue == "CT41301") {
							if(!util.validate(app, ["ipbFrfPerNm","cbbFrfAltRsnRcd", "iptFrfAltDt"])){
								return;
							}
						} else if(vsValue == "CT41302"){
							if(!util.validate(app, ["ipbSsn","cbbFrfAltRsnRcd", "iptFrfAltDt"])){
								return;
							}
						}
						doSave();
					//취소
					} else {
						// 취소 인적사항변경 저장 - 취소사유, 취소일자를 입력했는지 체크
						if(!util.validate(app, ["cbbFrfCancelRsnRcd","ipbFrfCancelDt"])){
							return;
						}
						doSave();
					}
				};
				
				/**
				 * @desc 학적등록 저장
				 * @param pnStep 저장 차수
				 * @return boolean
				 * @author Choi In Seong 2016. 2. 2.
				 */
				function doSave(poCallbackFunc) {
					
					
					
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var voCallBackSaveAfter = function(pbSuccess) {
									if(pbSuccess) {
										//저장성공 메세지 출력
										// 조회 : "조회되었습니다." header 메세지 표시
										moPage.parentSendMsg(NLS.INF.M025);
										
										doDataClear();
										util.Control.setEnable(app, false, ["frfCsrShregAlt", "btnSave"]);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
						}
					});
				};
				
				
				/**
				 * @desc 선택닫기 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onClick_BtnCloseOk = function() {
					doCloseOk();
				};
				
				/**
				 * @desc 학년도, 학기 변경 시 기준일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onValueChanged_CbbFrfSchYearRcd = function() {		
					
					doAltRsnRcdChange();
				};
				
				
				function doAltRsnRcdChange(){
					var voAltObj = moPage.parent.moParentObj;
					
					var vsSchYearRcd = util.DataMap.getValue(app, "dmReqKey", "strSchYearRcd");
					var vsSmtRcd = util.DataMap.getValue(app, "dmReqKey", "strSmtRcd");
					
					util.FreeForm.setValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD", vsSchYearRcd);
					util.FreeForm.setValue(app, "frfCsrShregAlt", "SMT_RCD", vsSmtRcd);
					util.FreeForm.setValue(app, "frfCsrShregAlt", "SCH_YEAR_NM", util.DataMap.getValue(app, "dmResOnLoad", "schYearNm"));
					util.FreeForm.setValue(app, "frfCsrShregAlt", "SMT_NM", util.DataMap.getValue(app, "dmResOnLoad", "smtNm"));
					util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_DT", voAltObj.strAltDt);
			
					var vsValue = util.FreeForm.getValue(app, "frfCsrShregAlt", "ALT_RSN_RCD");
					if (vsValue == "CT41301") {
						// 이름변경
						util.FreeForm.setValue(app, "frfCsrShregAlt", "SSN", "");
						util.Control.setFocus(app, "ipbFrfPerNm");
						util.Control.setEnable(app, true, ["ipbFrfPerNm"]);
						util.Control.setEnable(app, false, ["ipbSsn"]);
						
						var vsStudNm = util.DataMap.getValue(app, "dmResOnLoad", "studNm");
						//보여주는 컬럼과 숨긴컬럼 둘다 초기화
						util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_BEF_DESC", vsStudNm);
						util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_BEF_DESC_DISP", vsStudNm);
						
						ExtControl.setAttr("lblFrfPerNm", "class", "lblFrfReq");
						ExtControl.setAttr("ipbFrfPerNm", "class", "ipbFrfReq");
						ExtControl.setAttr("lblSsn", "class", "lblFrf");
						ExtControl.setAttr("ipbSsn", "class", "ipbFrf");
						
						util.Control.setVisible(app, true,["lblFrfPerNm","ipbFrfPerNm"]);
						util.Control.setVisible(app, false,["lblSsn","ipbSsn"]);
					} else if (vsValue == "CT41302") {
						// 주민번호 변경
						util.FreeForm.setValue(app, "frfCsrShregAlt", "PER_NM", "");
						util.Control.setFocus(app, "ipbSsn");
						util.Control.setEnable(app, false, ["ipbFrfPerNm"]);
						util.Control.setEnable(app, true, ["ipbSsn"]);
						
						var vsSsn    = util.DataMap.getValue(app, "dmResOnLoad", "ssn");
						//보여주는 컬럼과 숨긴컬럼 둘다 초기화
						util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_BEF_DESC", vsSsn);
						util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_BEF_DESC_DISP", vsSsn);
						
						ExtControl.setAttr("lblFrfPerNm", "class", "lblFrf");
						ExtControl.setAttr("ipbFrfPerNm", "class", "ipbFrf");
						ExtControl.setAttr("lblSsn", "class", "lblFrfReq");
						ExtControl.setAttr("ipbSsn", "class", "ipbFrfReq");
						
						util.Control.setVisible(app, false,["lblFrfPerNm","ipbFrfPerNm"]);
						util.Control.setVisible(app, true,["lblSsn","ipbSsn"]);
						
					}
					//보여주는 컬럼과 숨긴컬럼 둘다 초기화
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC", "");
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC_DISP", "");
					util.Control.redraw(app, ["ipbFrfChgDescDisp", "ipbFrfChgBefDescDisp"]);
					
					util.Control.setEnable(app, true, moPage.maAltPsnDetail);
					
					
				}
				
				/**
				 * @desc 이름 변경내역을 변경후 내용에 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onValueChanged_IpbFrfPerNm = function() {
					var vsName = util.FreeForm.getValue(app, "frfCsrShregAlt", "PER_NM");
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC", vsName);
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC_DISP", vsName);
					util.Control.redraw(app, "ipbFrfChgDescDisp");
				};
				
				/**
				 * @desc 주민등록번호 변경내역을 변경후 내용에 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onValueChanged_IpbSsn = function() {
					var vsSsn = util.FreeForm.getValue(app, "frfCsrShregAlt", "SSN");
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC", vsSsn);
					util.FreeForm.setValue(app, "frfCsrShregAlt", "CHG_DESC_DISP", vsSsn);
					util.Control.redraw(app, "ipbFrfChgDescDisp");
				};
				
				
				
			//	moPage.onValueChanged_CkbFrfRecRcogYn = function() {
			//		
			//		moPage.getRegTransRcd();
			//		
			//	}
				
				
				
			//	moPage.onValueChanged_CbbFrfAbsSmtCntRcd = function() {
			//		moPage.getRtnYearSmt();
			//	}
				
				
				
			//	moPage.onValueChanged_CbbFrfAltRsnRcd1 = function() {
			//		
			//		var vsAltRsnRcd = ExtFreeForm.getValue("frfCsrShregAlt", "ALT_RSN_RCD");
			//		var vsSmtCnt = ExtInstance.getValue("/root/resOnLoad/reasonList/row", "CD_PRP5", "child::CD='"+vsAltRsnRcd+"'");
			//		
			//		if(ValueUtil.isNull(vsSmtCnt)) {
			//			ExtControl.setValue("cbbFrfAbsSmtCntRcd", "");
			//		} else {
			//			ExtControl.setValue("cbbFrfAbsSmtCntRcd", vsSmtCnt);
			//			moPage.getRtnYearSmt();
			//		}
			//		
			//		moPage.getRegTransRcd();
			//	}
				
				
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 리피트 라벨 id
				 * @param psMsgCode 메시지
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psMsgCodeNm) {
					util.Msg.notify(app, psMsgCodeNm);	
				};
				
				/**
				 * @desc 휴학정보 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.02.12
				 */
				function doCheckDataChange() {
					
					if(util.Grid.isModified(app, ["frfCsrShregAlt"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				/**
				 * @desc 프리폼 초기화
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doDataClear() {
					util.Control.reset(app, ["frfCsrShregAlt"]);
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsChgDivList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsCnlRsnList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strStudViewId",
						"dataType": "string"
					},
					{
						"name": "strCdPrp1",
						"dataType": "string"
					},
					{
						"name": "strNewFlag",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strHeaderCourse",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCsrShregAlt");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_NM",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_NM",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "BEF_ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "CHG_BEF_DESC",
						"dataType": "string"
					},
					{
						"name": "CHG_DESC",
						"dataType": "string"
					},
					{
						"name": "ENROLL_SHREG_KEY",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "PER_NM",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "CHG_BEF_DESC_DISP",
						"dataType": "string"
					},
					{
						"name": "CHG_DESC_DISP",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "rptRowCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "stDt",
						"dataType": "string"
					},
					{
						"name": "studNm",
						"dataType": "string"
					},
					{
						"name": "smtNm",
						"dataType": "string"
					},
					{
						"name": "ssn",
						"dataType": "string"
					},
					{
						"name": "schYearNm",
						"dataType": "string"
					},
					{
						"name": "currentDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltEnrollPsn/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrAltEnrollPsn/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_4, false);
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/ExtCsrAltEnrollPsn/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShregAlt");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfAltRsnRcd");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-CHANGEDIV");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfPerNm");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-DB-PER_NM");
					container.addChild(output_2, {
						"top": "30px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optSsn");
					output_3.value = "";
					output_3.bind("value").toLanguage("UI-DB-SSN");
					container.addChild(output_3, {
						"top": "30px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfSchYearNm");
					output_4.value = "";
					output_4.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_4, {
						"top": "30px",
						"left": "239px",
						"width": "55px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfAltDt");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_5, {
						"top": "55px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfChgBefDesc");
					output_6.visible = false;
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-SCR-CONTBFCHG");
					container.addChild(output_6, {
						"top": "80px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfChgDesc");
					output_7.visible = false;
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-SCR-CONTAFCHG");
					container.addChild(output_7, {
						"top": "80px",
						"left": "240px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfAltRsnRcd");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfAltRsnRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_RSN_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsChgDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					if(typeof onCbbFrfAltRsnRcdSelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCbbFrfAltRsnRcdSelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "100px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfPerNm");
					inputBox_1.enabled = false;
					inputBox_1.maxLength = 100;
					inputBox_1.userAttr({"require": "Y"});
					inputBox_1.bind("fieldLabel").toExpression("#optFrfPerNm.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "PER_NM");
					if(typeof onIpbFrfPerNmValueChange == "function") {
						inputBox_1.addEventListener("value-change", onIpbFrfPerNmValueChange);
					}
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "100px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbSsn");
					inputBox_2.enabled = false;
					inputBox_2.maxLength = 13;
					inputBox_2.bind("fieldLabel").toExpression("#optSsn.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SSN");
					if(typeof onIpbSsnValueChange == "function") {
						inputBox_2.addEventListener("value-change", onIpbSsnValueChange);
					}
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "100px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfSchYearNm");
					inputBox_3.visible = false;
					inputBox_3.enabled = false;
					inputBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SCH_YEAR_NM");
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "299px",
						"width": "55px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("iptFrfAltDt");
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAltDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DT");
					container.addChild(dateInput_1, {
						"top": "55px",
						"left": "100px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfChgBefDescDisp");
					inputBox_4.enabled = false;
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CHG_BEF_DESC_DISP");
					container.addChild(inputBox_4, {
						"top": "80px",
						"left": "100px",
						"width": "130px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfChgDescDisp");
					inputBox_5.enabled = false;
					inputBox_5.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CHG_DESC_DISP");
					container.addChild(inputBox_5, {
						"top": "80px",
						"left": "335px",
						"width": "130px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfSmtNm");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_8, {
						"top": "5px",
						"left": "325px",
						"width": "60px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfChgBefDesc");
					output_9.visible = false;
					output_9.value = "";
					output_9.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CHG_BEF_DESC");
					container.addChild(output_9, {
						"top": "0px",
						"left": "285px",
						"width": "10px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfChgDesc");
					output_10.visible = false;
					output_10.value = "";
					output_10.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CHG_DESC");
					container.addChild(output_10, {
						"top": "45px",
						"left": "455px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_6.visible = false;
					inputBox_6.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "STUD_ID");
					container.addChild(inputBox_6, {
						"top": "0px",
						"left": "250px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("iptFrfSerialNo");
					inputBox_7.visible = false;
					inputBox_7.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SERIAL_NO");
					container.addChild(inputBox_7, {
						"top": "0px",
						"left": "265px",
						"width": "7px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfSmtNm");
					inputBox_8.visible = false;
					inputBox_8.enabled = false;
					inputBox_8.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SMT_NM");
					container.addChild(inputBox_8, {
						"top": "5px",
						"left": "384px",
						"width": "45px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "25px",
					"left": "0px",
					"width": "490px",
					"height": "105"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCsrShregAlt");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-PERSDTACHGPRC");
				container.addChild(userDefinedControl_1, {
					"top": "0px",
					"left": "0px",
					"width": "250px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "492px",
				"height": "135"
			});
			
			var button_1 = new cpr.controls.Button("btnSave");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_1.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_1, {
				"top": "140px",
				"left": "220px",
				"width": "60px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "270px",
				"left": "0px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCAltEnrollPsn";
	cpr.core.Platform.INSTANCE.register(app);
})();
