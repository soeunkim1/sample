/*
 * App URI: app/csr/extCsrCAltEnrollRegChg
 * Source Location: app/csr/extCsrCAltEnrollRegChg.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltEnrollRegChg", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrCAltEnrollRegChg.xtm"/>
			
			
			var extCsrCAltEnrollRegChg = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var msStudNo = null; // STUD_ID -> STUD_NO로 변경되면서 추가된 부분 (정정호 2011.08.05)
				var msHeaderStud = null;
				
				// 조회완료여부
				var mbSearchYn = false;
				
				var maCheckInsVal = ["cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfEnrollRsnRcd",
								"ipbSaNm", "cbbFrfSpCd", "cbbFrfSpCd1", "ipbFrfStDt","ipbFrfProcDt"];
								
				var maCheckInsValExtr = ["cbbFrfSchYearRcd", "cbbFrfSmtRcd",
								"ipbSaNm", "cbbFrfSpCd", "cbbFrfSpCd1", "ipbFrfStDt","ipbFrfProcDt"];
				
				moPObject.moIdsForStdCmnPObjSch = [
					{   // 행정부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbSaNm",
						iObjDivRcd			:	["CC009SA"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"ipbFrfStDt",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"",
						oCd					:	"ipbFrfSaCd",
						oCdNm				:	"ipbSaNm",
						oStDt					:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"/root/reqKey/strLanDivRcd",
						func : function() {
							doGetSpCdList();
						}
					}
				];
			
				/**
				 * @desc 이수과정구분, 학사코드로 이수과정 필터링
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */
				function doGetSpCdList() {
			
					// 이수과정 초기화
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD1", "", false);
			
					var vsSaCd =util.FreeForm.getValue(app, "frfCsrEnrollChg", "SA_CD");
					var vsOriSpCd =  util.DataSet.getValue(app, "dsFrfCsrEnroll","SP_CD","1"); 
					// 전과 이면서 학사부서가 같으면 초기화 후 작업중단
					if(!doEnlRsnChk()){
						return;
					}
					
					if (ValueUtil.isNull(vsSaCd)) return;
			
					//기준일자 /SACD
					var vsKeyDate = util.FreeForm.getValue(app, "frfCsrEnrollChg", "ST_DT");
					var vsSpDivRcd = util.FreeForm.getValue(app, "frfCsrEnrollChg", "SP_DIV_RCD");
					
					util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsKeyDate);
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsSaCd);
					util.DataMap.setValue(app, "dmReqKey", "strObjCd", vsSaCd);
					util.DataMap.setValue(app, "dmReqKey", "strOriSpCd", vsOriSpCd);
					util.DataMap.setValue(app, "dmReqKey", "strSpDivRcd", vsSpDivRcd);
					
					//strCommand: selCourse 
					util.Submit.send(app, "subSelCourse", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["cbbFrfSpCd","cbbFrfSpCd1"]);
							
							// 학사부서 선택시 상위 행정부서를 가져옴
							var vsOgtCdNm = util.DataMap.getValue(app, "dmResOnLoad", "strOgNm");
							var vsOgtCd = util.DataMap.getValue(app, "dmResOnLoad", "strOgCd");
							var vsResultSpCd= util.DataMap.getValue(app, "dmResOnLoad", "strResultSpCd");
							
							
							if (vsOgtCdNm == null) {
								vsOgtCdNm = "";
							}
							if (vsOgtCd == null) {
								vsOgtCd = "";
							}
							//ExtFreeForm.setValue("frfCsrEnrollChg", "OG_NM", vsOgtCdNm);
							util.FreeForm.setValue(app, "frfCsrEnrollChg", "OG_CD", vsOgtCd);
							
							if(ValueUtil.fixNull(vsResultSpCd)!=""){
								util.Control.setValue(app, "cbbFrfSpCd",vsResultSpCd);
								util.Control.setValue(app, "cbbFrfSpCd1",vsResultSpCd);
								
							}else{
								util.Control.setValue(app, "cbbFrfSpCd","");
								util.Control.setValue(app, "cbbFrfSpCd1","");
								
							}
			//				ExtControl.setStyleAttr("cbbFrfSpCd","bgcolor","#FFFFFF");
							util.Control.redraw(app, ["cbbFrfSpCd","cbbFrfSpCd1"]);
						}
					});
				};
				
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 2. 2.
				 */
				moPage.onModelConstructDone_StdCsrPMstRegChg = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrEnrollChg"]);
					
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				/**
				 * @desc 화면 온로드
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doOnLoad() {
					var voAltObj = moPage.parent.moParentObj;
					
					util.DataMap.setValue(app, "dmReqKey", "strUnitSystem", "CSR");
			
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["frfCsrEnroll", "frfCsrEnrollChg"]);
							// 부모창에서 값을 기본 정보 셋팅
							util.DataMap.setValue(app, "dmKeyColumn", "strStudId", 			voAltObj.strStudId);
							//ExtInstance.setValue("/root/resOnLoad/keyColumn/strEnrollDivRcd",	voAltObj.strAltDivRcd);
							//ExtInstance.setValue("/root/resOnLoad/keyColumn/strSchYearRcd",	voAltObj.strSchYearRcd);
							//ExtInstance.setValue("/root/resOnLoad/keyColumn/strProcDt",			voAltObj.strAltDt);
							util.DataMap.setValue(app, "dmKeyColumn", "strSaCd",			"");
							util.DataMap.setValue(app, "dmKeyColumn", "strSpDivRcd",		"");
							//ExtInstance.setValue("/root/resOnLoad/keyColumn/strSmtRcd",			voAltObj.strSmtRcd);
							util.DataMap.setValue(app, "dmKeyColumn", "strSpCd",			"");
							util.DataMap.setValue(app, "dmKeyColumn", "strRegStatRcd",	"");
							
							
								util.Control.setEnable(app, false, ["frfCsrEnrollChg","btnSave"]);
							// 학생의 학번정보를 화면에 입력
							//ExtControl.setValue("optStudNo",	voRegiObj["studNo"]);
							//ExtControl.setValue("optStud", 	voRegiObj["headerStud"]);
							
							//ExtControl.setEnable(false,["cbbFrfEnrollRsnRcd"]);
			
							// 키정보를 이용하여 해당 데이터 추출
							//moPage.doList();
						} else {
							// 실패시 팝업 닫기
							ExtModel.dispatch("btnCloseCancel", "DOMActivate");
						}
					});
				}
			
				/**
				 * @desc 학적등록정보 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doList() {
					var voAltObj = moPage.parent.moParentObj;
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
						if(pbSuccess){
			
							util.Control.redraw(app, ["frfCsrEnrollChg"]);
							
							var vsEnrollStat = util.FreeForm.getValue(app, "frfCsrEnrollChg", "REG_STAT_RCD");
				
							// 등록상태가 아니면 변경불가 불가
							if (vsEnrollStat != "CT109ENRO") {
								var vsEnrollStatNm =voAltObj.strAltDivNm; //등록
								var vsRegiChg = NLS.CSR.M051; //변경
			//					ComMsg.alert(NLS.CSR.M002, [vsEnrollStatNm, vsRegiChg]);
								util.Msg.alert("NLS-CSR-M128",[vsEnrollStatNm]);
								
			
								doDataClear();
								util.Control.setEnable(app, false, ["frfCsrEnrollChg","btnSave"]);
								//ExtPopUp.closeLayeredPopup("onClick_BtnSearch");
							}else{
			
								//변경후 등록정보 프리폼에 새로운 row를 보이도록 함
								doSetNewRow();
								
								//데이터 조회 후 - 변경전 등록정보, 변경후 등록정보 데이터 setting
								//moPage.doSetBefCtlsVal();
								doSetAftCtlsVal();
								
								util.FreeForm.setValue(app, "frfCsrEnrollChg", "ENROLL_DT", voAltObj.strAltDt);
							
								util.Control.setEnable(app, true, ["frfCsrEnrollChg","btnSave"]);
								util.Control.setEnable(app, false, ["cbbFrfSchYearRcd","cbbFrfSmtRcd","ipbFrfStDt"]);
								
								
							}
							
						} else {
							// 실패시 팝업 닫기
							ExtModel.dispatch("btnCloseCancel", "DOMActivate");
						}
					});
				};
				
				/**
				 * @desc 변경 후 학적등록정보 프리폼 신규 
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */
				function doSetNewRow() {
					util.FreeForm.setValue(app, "frfCsrEnrollChg",AppConstants.CUD_COL_REF, "N");
					//vcRpt.setCellVal(vnInsRowIdx, AppConstants.CUD_COL_REF, "N", true, true);
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrEnrollChg");
					//학생 ObjectId 셋팅
					var vsStudId = util.DataMap.getValue(app, "dmKeyColumn", "strStudId");
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "STUD_ID", vsStudId);
					//신규입력이 Ok
					util.Control.setEnable(app, true, ["frfCsrEnrollChg"]);
				};
				
				/**
				 * @desc 변경 전 학적등록정보 값 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */
				function doSetBefCtlsVal() {
					var strProcDt = util.DataMap.getValue(app, "dmResOnLoad", "strProcDt");
					
					util.FreeForm.setValue(app, "frfCsrEnroll", "REG_STAT_NM", NLS.NSCR.CANCEL);
					util.FreeForm.setValue(app, "frfCsrEnroll", "ENROLL_CANCEL_RSN_RCD", "CT107CHGC");
					util.FreeForm.setValue(app, "frfCsrEnroll", "ENROLL_CANCEL_RSN_NM", NLS.NSCR.CHGCANCL);
					util.FreeForm.setValue(app, "frfCsrEnroll", "CANCEL_DT", strProcDt);
					
					var vdBefEndDt = util.DataMap.getValue(app, "dmCalendarList", "BEF_DT");
					
					util.FreeForm.setValue(app, "frfCsrEnroll", "END_DT", vdBefEndDt);
				};
				
				/**
				 * @desc 변경 후 학적등록정보 값 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */
				function doSetAftCtlsVal() {
					var voAltObj = moPage.parent.moParentObj;
					
			
					//학년도, 학기, 학적등록구분, 전공
					//loading시 추출된 시스템 학년도 학기로 세팅
					var vsAftYear = voAltObj.strSchYearRcd;
					var vsAftSmt = voAltObj.strSmtRcd;
			
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SCH_YEAR_RCD", vsAftYear);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SMT_RCD", vsAftSmt);
					util.Control.setValue(app, "cbbFrfEnrollRsnRcd",voAltObj.strAltDivRcd);
			
					//학적등록구분, 이수과정구분 세팅
					//var vsAftEnrolDivRcdNm = ExtFreeForm.getValue("frfCsrEnroll", "ENROLL_DIV_NM");
					//var vsAftSpDivNm = ExtFreeForm.getValue("frfCsrEnroll", "SP_DIV_NM");
					//ExtFreeForm.setValue("frfCsrEnrollChg", "ENROLL_DIV_NM", vsAftEnrolDivRcdNm);
					//ExtFreeForm.setValue("frfCsrEnrollChg", "SP_DIV_NM", vsAftSpDivNm);
			
					//학사부서, 이수과정, 학적등록사유 초기화
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_NM", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_CD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD", "", false);
					//ExtFreeForm.setValue("frfCsrEnrollChg", "ENROLL_RSN_RCD", "");
					
					//주과정등록/주전공인 경우 변경전학적등록정보의 교과과정적용년도를 세팅, 수정가능하도록 처리
					var vsBefEnrollDiv =  util.DataSet.getValue(app, "dsFrfCsrEnroll","ENROLL_DIV_RCD","1"); 
					var vsBefPgmDiv =  util.DataSet.getValue(app, "dsFrfCsrEnroll","SP_DIV_RCD","1");  
			
			
					
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "ENROLL_DIV_RCD", vsBefEnrollDiv);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_DIV_RCD", vsBefPgmDiv);
			
					//변경전 참조키를 상위참조키로
					var vsRefKey = util.DataSet.getValue(app, "dsFrfCsrEnroll","REF_KEY","1");
				
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "UREF_KEY", vsRefKey); 
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "REG_STAT_RCD", "CT109ENRO");//등록상태로
					
					//추가정보
					var vdAddInfoStarDt = voAltObj.strAltDt;
					
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "ST_DT", vdAddInfoStarDt);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "END_DT", "99991231000000");
			
					// 처리일자에 기본세팅할 현재일자를  가져온다. (2011.08.22 JJH 추가)
					//var strProcDt = ExtInstance.getValue("/root/resOnLoad/strProcDt");
					//ExtFreeForm.setValue("frfCsrEnrollChg", "PROC_DT", strProcDt);
					var strClassRcd = util.DataSet.getValue(app, "dsFrfCsrEnroll","CLASS_RCD","1");  
					var strGudProfNm = util.DataSet.getValue(app, "dsFrfCsrEnroll","GUD_PROF_NM","1");  
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "CLASS_RCD",strClassRcd);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "GUD_PROF_NM", strGudProfNm);
				};
				
				/**
				 * @desc 학년도 학기 값변경에 따른 시작일,종료일 가져오기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */	
				function doSetDate() {
					var vsYear = util.FreeForm.getValue(app, "frfCsrEnrollChg", "SCH_YEAR_RCD");
					var vsSmt = util.FreeForm.getValue(app, "frfCsrEnrollChg", "SMT_RCD");
					
					doGetDate(vsYear, vsSmt);
				};
				
				/**
				 * @desc 입력받은 학년도학기에 대해 시작일 종료일 세팅
				 * @param {?} psYear 학년도
				 * @param {?} psSmt 학기
				 * @return void
				 * @author Choi In Seong 2016. 2. 3.
				 */	
				function doGetDate(psYear, psSmt) {
			
					if (ValueUtil.isNull(psYear) && ValueUtil.isNull(psSmt)) {
						//입력필드초기화
						doClearDt();
						//moPage.doInitEndDt();
						return;
					} else if (ValueUtil.isNull(psYear) || ValueUtil.isNull(psSmt)) {
						//학년도, 학기 둘중 하나의 값이라도 없으면 
						return;
					}
					
					util.DataMap.setValue(app, "dmReqKey", "strUnitSystem", "CSR");
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", psYear);
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", psSmt);
					
					// 학사, 이수과정, 행정부서 초기화
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_NM", "");
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_CD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "OG_NM", "");
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "OG_CD", "");
					
					//strCommand: selCal 
					util.Submit.send(app, "subSelCal", function (pbSuccess) {
						if (pbSuccess) {
							var vsAddStDt = util.DataMap.getValue(app, "dmCalendarList", "ST_DT");
							var vsAddEndDt = util.DataMap.getValue(app, "dmCalendarList", "END_DT");
							var vsBefEndDt = util.DataMap.getValue(app, "dmCalendarList", "BEF_DT");
							
							//선택한 학년도 학기가 이전데이터보다 이후인지 CHECK 
							var vsBefStDt =util.DataSet.getValue(app, "dsFrfCsrEnroll","ST_DT","1"); 
							if (vsAddStDt >= vsBefStDt) {
								
								//크면 시작일, 종료일값 넣어줌. 이전등록값 종료일 넣어줌 
								util.FreeForm.setValue(app, "frfCsrEnrollChg", "ST_DT", vsAddStDt);
								util.FreeForm.setValue(app, "frfCsrEnrollChg", "END_DT", "99991231000000");
			
								
							} else {
								//선택한 학년도 학기가 이전데이터보다 이전이면 메시지 뿌려줌
								var vsBefYear =util.DataSet.getValue(app, "dsFrfCsrEnroll","SCH_YEAR_NM","1");  
								var vsBefSmt =util.DataSet.getValue(app, "dsFrfCsrEnroll","SMT_NM","1");  
								//입력필드 초기화 
								doClearDt();
			
								util.Msg.alert("NLS-CSR-M020", [vsBefYear, vsBefSmt]);
							}
						} else {
							//입력필드 초기화
							doClearDt();
						}
					});
				};
				
				/**
				 * @desc 학년도 학기가 없을 시 날짜 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 3
				 */
				function doClearDt() {
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SCH_YEAR_RCD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SMT_RCD", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "ST_DT", "", false);
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "END_DT", "", false);
				};
				
				/**
				 * @desc 이전 등록정보 종료일 9999.12.31로 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 3
				 */
				function doInitEndDt() {
					util.FreeForm.setValue(app, "frfCsrEnroll", "END_DT", "99991231000000");
				};
				
				/**
				 * @desc 학년도, 학기 변경 시 기준일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onValueChanged_CbbFrfSchYearRcd = function() {
					doSetDate();
				};
				
				/**
				 * @desc 학년도, 학기 변경 시 기준일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */	
				moPage.onValueChanged_CbbFrfSmtRcd = function() {
					doSetDate();
				};
				
				/**
				 * @desc 학적등록 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onClick_BtnSave = function() {		
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrEnrollChg"], "MSG")){
						return false;
					}
					
					// 주과정등록의 경우 학적등록사유를 반드시 입력해야함
					if (util.FreeForm.getValue(app, "frfCsrEnrollChg", "ENROLL_DIV_RCD") == "CT103EXTR") {
						if(!util.validate(app, maCheckInsValExtr)) return false;
					} else {
						if(!util.validate(app, maCheckInsVal)) return false;
					}
					// save call
					doSave();
				};
				
				
				
				/**
				 * @desc저장 SF에서 오류 메시지가 있으면 확인창 띄움
				 * @param {?} pnStep
				 * @return Boolean
				 * @author Choi In Seong 2016. 2. 3.
				 */	
				function doSave(pnStep) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									return doSave(vnStep);
								} else {
									return false;
								}
							} else {
								
								moPage.parentSendMsg(NLS.INF.M025);
								doDataClear();
								util.Control.setEnable(app, false, ["frfCsrEnrollChg", "btnSave"]);
			
								ExtSubPage.getParent().callScript("doSaveAfter", null);
								return true;
							}
						}
					});
				};
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 리피트 라벨 id
				 * @param psMsgCode 메시지
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psMsgCodeNm) {
					util.Msg.notify(app, psMsgCodeNm);	
				};
				/**
				 * @desc 선택닫기 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onClick_BtnCloseOk = function() {
					doCloseOk();
				};
				
			
				
				/**
				 * @desc 객체팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
			
					var vsKeyDate = util.DataMap.getValue(app, "dmCalendarList", "ST_DT");
					
					if (ValueUtil.isNull(vsKeyDate)) {
						//학년도, 학기를 선택하세요.
						util.Msg.alert("NLS-INF-M028");
						return;
					}
					
					doOnClickStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 객체검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 2.
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					var vsKeyDate = util.DataMap.getValue(app, "dmCalendarList", "ST_DT");
					
					if (ValueUtil.isNull(vsKeyDate)) {
						//학년도, 학기를 선택하세요.
						util.Msg.alert("NLS-INF-M028");
						return;
					}
					
					doOnChangeStdCmnPObjSch(sender);
				}
			
				/**
				 * @desc 전과이면서 학과가 같으면 작업중단
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 9. 12.
				 */
				moPage.onValueChanged_CbbFrfEnrollRsnRcd = function() {
					doEnlRsnChk();
				};
				
				/**
				 * @desc 전과이면서 학과가 같으면 작업중단
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 9. 12.
				 */
				function doEnlRsnChk() {
					var vsBefSaCd = util.DataSet.getValue(app, "dsFrfCsrEnroll","SA_CD","1");  
					
					var vsEnrollRsnRcd = util.FreeForm.getValue(app, "frfCsrEnrollChg", "ENROLL_RSN_RCD");
					var vsSaCd = util.FreeForm.getValue(app, "frfCsrEnrollChg", "SA_CD");
					// 전과 이면서 학사부서가 같으면 초기화 후 작업중단
					if(vsEnrollRsnRcd == "CT105CHAN"&&vsBefSaCd==vsSaCd){
						util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_CD", "");
						util.FreeForm.setValue(app, "frfCsrEnrollChg", "SA_NM", "");
						util.FreeForm.setValue(app, "frfCsrEnrollChg", "OG_NM", "");
						util.FreeForm.setValue(app, "frfCsrEnrollChg", "OG_CD", "");
						util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD", "");
						util.Msg.alert("NLS-CSR-M124");
						return false;
					}
					return true;
				};
				
				
				/**
				 * 초기화
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 11. 11 오전 11:16
				 */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				/**
				 * @desc 프리폼 초기화
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doDataClear() {
					util.Control.reset(app, ["frfCsrEnrollChg"]);
				};
				
				function doNewAlt(){
					var voAltObj = moPage.parent.moParentObj;
					// 부모창에서 값을 기본 정보 셋팅
					util.DataMap.setValue(app, "dmKeyColumn", "strStudId", 			voAltObj.strStudId);
			
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj.strStudId);
					util.DataMap.setValue(app, "dmReqKey", "strCancelYn", "N");
					
					//strCommand: listStudInfo 
					util.Submit.send(app, "subStudInfo", function(pbSuccess) {
							if (pbSuccess) {
								doList();
							}
							
						}
					);
						
				}
				
				/**
				 * 변경사항체크
				 * @member moPage
				 * @type Boolean
				 * @return 
				 * @author hyunteak at 16. 11. 11 오전 11:15
				 */
				function doCheckDataChange() {
					
					if(util.Grid.isModified(app, ["frfCsrEnrollChg"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				
				moPage.onValueChanged_CbbFrfSpCd1 = function() {
					
					var vsSpCd = util.FreeForm.getValue(app, "frfCsrEnrollChg", "SP_CD1");
					util.FreeForm.setValue(app, "frfCsrEnrollChg", "SP_CD", vsSpCd);
					
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsFrfCsrEnroll");
			dataSet_1.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "REG_STAT_RCD"},
					{"name": "REG_STAT_NM"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "ENROLL_DIV_NM"},
					{"name": "SP_DIV_RCD"},
					{"name": "SP_DIV_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "PROC_DT"},
					{"name": "SHREG_ALT_KEY"},
					{"name": "ENROLL_RSN_RCD"},
					{"name": "ENROLL_RSN_NM"},
					{"name": "PRI"},
					{"name": "ENROLL_CANCEL_RSN_RCD"},
					{"name": "ENROLL_CANCEL_RSN_NM"},
					{"name": "CANCEL_DT"},
					{"name": "OG_CD"},
					{"name": "OG_NM"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "UREF_KEY"},
					{"name": "REF_KEY"},
					{"name": "CUR_APLY_YEAR_RCD"},
					{"name": "CUR_APLY_YEAR_NM"},
					{"name": "CLASS_RCD"},
					{"name": "GUD_PROF_NM"},
					{"name": "ENROLL_DT"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsFrfCsrEnrollChg");
			dataSet_2.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "REG_STAT_RCD"},
					{"name": "REG_STAT_NM"},
					{"name": "ENROLL_DIV_RCD"},
					{"name": "ENROLL_DIV_NM"},
					{"name": "SP_DIV_RCD"},
					{"name": "SP_DIV_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "PROC_DT"},
					{"name": "SHREG_ALT_KEY"},
					{"name": "ENROLL_RSN_RCD"},
					{"name": "ENROLL_RSN_NM"},
					{"name": "PRI"},
					{"name": "ENROLL_CANCEL_RSN_RCD"},
					{"name": "ENROLL_CANCEL_RSN_NM"},
					{"name": "CANCEL_DT"},
					{"name": "OG_CD"},
					{"name": "OG_NM"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "UREF_KEY"},
					{"name": "REF_KEY"},
					{"name": "CUR_APLY_YEAR_RCD"},
					{"name": "CUR_APLY_YEAR_NM"},
					{"name": "CLASS_RCD"},
					{"name": "GUD_PROF_NM"},
					{"name": "ENROLL_DT"},
					{"name": "SP_CD1"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsYearList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsEnrollDivList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSpDivList");
			dataSet_5.parseData({
				"columns": [
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "CD_NM"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "CD_PRP1"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "CD_CLS"},
					{"name": "CD"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsSmtList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsSptList");
			dataSet_7.parseData({
				"columns": [
					{"name": "SP_CD"},
					{"name": "SP_DIV_RCD"},
					{"name": "SP_NM"},
					{"name": "SHORT_NM"},
					{"name": "ASS"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsEnrollRsnRcdList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsClassRcdList");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strUnitSystem",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strStudViewId",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strCancelYn",
						"dataType": "string"
					},
					{
						"name": "strOriSpCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmKeyColumn");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strEnrollDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strProcDt",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSpDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSpCd",
						"dataType": "string"
					},
					{
						"name": "strRegStatRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmCalendarList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "ST_TIME",
						"dataType": "string"
					},
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_TIME",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strKeyDt",
						"dataType": "string"
					},
					{
						"name": "strOgCd",
						"dataType": "string"
					},
					{
						"name": "strOgNm",
						"dataType": "string"
					},
					{
						"name": "strProcDt",
						"dataType": "string"
					},
					{
						"name": "strResultSpCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_9, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_2);
			submission_2.addRequestData(dataMap_5);
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataMap_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSelCourse");
			submission_3.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_7, false);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSelCal");
			submission_4.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subList");
			submission_5.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_2);
			submission_5.addResponseData(dataSet_1, false);
			submission_5.addResponseData(dataSet_2, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subStudInfo");
			submission_6.action = "/csr/ExtCsrAltEnrollRegChg/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataMap_2, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrEnrollChg");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optSaNmChg");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-GLS-SA");
					container.addChild(output_1, {
						"top": "30px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
					inputBox_1.userAttr({"require": "Y"});
					inputBox_1.bind("fieldLabel").toExpression("#optSaNmChg.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmRow"), "SA_NM");
					if(typeof onIpbSaNmValueChange == "function") {
						inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
					}
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "100px",
						"width": "270px",
						"height": "25px"
					});
					var button_1 = new cpr.controls.Button("btnPopSearch");
					button_1.value = "";
					button_1.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnPopSearchClick == "function") {
						button_1.addEventListener("click", onBtnPopSearchClick);
					}
					container.addChild(button_1, {
						"top": "30px",
						"left": "370px",
						"width": "20px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfSchYearRcdChg");
					output_2.value = "";
					output_2.style.setClasses(["require"]);
					output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_2, {
						"top": "5px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfEnrollDivRcdChg");
					output_3.visible = false;
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-SCREGDIV");
					container.addChild(output_3, {
						"top": "80px",
						"left": "260px",
						"width": "50px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfEnrollRsnRcdChg");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-SCHREGRSN");
					container.addChild(output_4, {
						"top": "80px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfStDtChg");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-SCR-EFETSTDT");
					container.addChild(output_5, {
						"top": "105px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfSmtRcdChg");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_6, {
						"top": "5px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfSpDivRcdChg");
					output_7.visible = false;
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-SCR-SPCORSDIV");
					container.addChild(output_7, {
						"top": "80px",
						"left": "348px",
						"width": "50px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfSpCdChg");
					output_8.value = "";
					output_8.style.setClasses(["require"]);
					output_8.bind("value").toLanguage("UI-GLS-SP");
					container.addChild(output_8, {
						"top": "55px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfProcDtChg");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-DB-PROC_DT");
					container.addChild(output_9, {
						"top": "105px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfEndDtChg");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_10, {
						"top": "124px",
						"left": "285px",
						"width": "55px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_1.enabled = false;
					comboBox_1.hideButton = true;
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmRow"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					if(typeof onCbbFrfSchYearRcdSelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCbbFrfSchYearRcdSelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "100px",
						"width": "140px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_2.enabled = false;
					comboBox_2.hideButton = true;
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmRow"), "SMT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					if(typeof onCbbFrfSmtRcdSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCbbFrfSmtRcdSelectionChange);
					}
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "345px",
						"width": "140px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfEnrollRsnRcd");
					comboBox_3.enabled = false;
					comboBox_3.hideButton = true;
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfEnrollRsnRcdChg.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmRow"), "ENROLL_RSN_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsEnrollRsnRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					if(typeof onCbbFrfEnrollRsnRcdSelectionChange == "function") {
						comboBox_3.addEventListener("selection-change", onCbbFrfEnrollRsnRcdSelectionChange);
					}
					container.addChild(comboBox_3, {
						"top": "80px",
						"left": "100px",
						"width": "145px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("ipbFrfStDt");
					dateInput_1.enabled = false;
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfStDtChg.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmRow"), "ST_DT");
					container.addChild(dateInput_1, {
						"top": "105px",
						"left": "345px",
						"width": "90px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("ipbFrfEndDt");
					dateInput_2.visible = false;
					dateInput_2.enabled = false;
					dateInput_2.bind("fieldLabel").toExpression("#optFrfEndDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmRow"), "END_DT");
					container.addChild(dateInput_2, {
						"top": "124px",
						"left": "345px",
						"width": "35px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfSaCd");
					inputBox_2.visible = false;
					inputBox_2.bind("fieldLabel").toExpression("#optSaNm.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmRow"), "SA_CD");
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "385px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_3.visible = false;
					inputBox_3.bind("value").toDataMap(app.lookup("dmRow"), "STUD_ID");
					container.addChild(inputBox_3, {
						"top": "124px",
						"left": "235px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfOgCd");
					inputBox_4.visible = false;
					inputBox_4.bind("value").toDataMap(app.lookup("dmRow"), "OG_CD");
					container.addChild(inputBox_4, {
						"top": "124px",
						"left": "259px",
						"width": "16px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfEnrollDivRcdChg");
					output_11.visible = false;
					output_11.value = "";
					output_11.bind("value").toDataMap(app.lookup("dmRow"), "ENROLL_DIV_NM");
					container.addChild(output_11, {
						"top": "28px",
						"left": "413px",
						"width": "25px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfSpDivRcdChg");
					output_12.visible = false;
					output_12.value = "";
					output_12.bind("value").toDataMap(app.lookup("dmRow"), "SP_DIV_NM");
					container.addChild(output_12, {
						"top": "73px",
						"left": "413px",
						"width": "8px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfEnrollDivRcdChg");
					inputBox_5.visible = false;
					inputBox_5.bind("value").toDataMap(app.lookup("dmRow"), "ENROLL_DIV_RCD");
					container.addChild(inputBox_5, {
						"top": "80px",
						"left": "315px",
						"width": "34px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfSpDivRcdChg");
					inputBox_6.visible = false;
					inputBox_6.bind("value").toDataMap(app.lookup("dmRow"), "SP_DIV_RCD");
					container.addChild(inputBox_6, {
						"top": "73px",
						"left": "428px",
						"width": "10px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfClassRcd");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-SCHREGRSN");
					container.addChild(output_13, {
						"top": "155px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfProfNm");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_14, {
						"top": "155px",
						"left": "250px",
						"width": "90px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("frfOptProfNm");
					output_15.value = "";
					output_15.bind("value").toDataMap(app.lookup("dmRow"), "GUD_PROF_NM");
					container.addChild(output_15, {
						"top": "155px",
						"left": "345px",
						"width": "140px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfRegStatRcd");
					inputBox_7.visible = false;
					inputBox_7.bind("value").toDataMap(app.lookup("dmRow"), "REG_STAT_RCD");
					container.addChild(inputBox_7, {
						"top": "70px",
						"left": "455px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfRefKey");
					inputBox_8.visible = false;
					inputBox_8.bind("value").toDataMap(app.lookup("dmRow"), "REF_KEY");
					container.addChild(inputBox_8, {
						"top": "24px",
						"left": "440px",
						"width": "30px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfURefKey");
					inputBox_9.visible = false;
					inputBox_9.bind("value").toDataMap(app.lookup("dmRow"), "UREF_KEY");
					container.addChild(inputBox_9, {
						"top": "43px",
						"left": "448px",
						"width": "30px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfOgNm");
					inputBox_10.visible = false;
					inputBox_10.bind("value").toDataMap(app.lookup("dmRow"), "OG_NM");
					container.addChild(inputBox_10, {
						"top": "124px",
						"left": "274px",
						"width": "10px",
						"height": "25px"
					});
					var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
					userDefinedControl_1.ctrl = app.lookup("grdCsrShregAltRe1");
					userDefinedControl_1.bind("title").toLanguage("UI-SCR-NEWRTRN");
					container.addChild(userDefinedControl_1, {
						"top": "130px",
						"left": "5px",
						"width": "250px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbBatchClassRcd");
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optClassRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmRow"), "CLASS_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsClassRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "155px",
						"left": "100px",
						"width": "140px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfSpCd");
					comboBox_5.visible = false;
					comboBox_5.bind("fieldLabel").toExpression("#optFrfSpCdChg.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmRow"), "SP_CD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsSptList"), {
							"label": "SHORT_NM",
							"value": "SP_CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "55px",
						"left": "325px",
						"width": "88px",
						"height": "25px"
					});
					var dateInput_3 = new cpr.controls.DateInput("ipbFrfProcDt");
					dateInput_3.userAttr({"require": "Y"});
					dateInput_3.bind("fieldLabel").toExpression("#optFrfProcDtChg.value");
					dateInput_3.bind("value").toDataMap(app.lookup("dmRow"), "ENROLL_DT");
					container.addChild(dateInput_3, {
						"top": "105px",
						"left": "100px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfSpCd1");
					comboBox_6.userAttr({"require": "Y"});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfSpCdChg.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmRow"), "SP_CD1");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsSptList"), {
							"label": "SHORT_NM",
							"value": "SP_CD"
						});
					})(comboBox_6);
					if(typeof onCbbFrfSpCd1SelectionChange == "function") {
						comboBox_6.addEventListener("selection-change", onCbbFrfSpCd1SelectionChange);
					}
					container.addChild(comboBox_6, {
						"top": "54px",
						"left": "100px",
						"width": "215px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "25px",
					"left": "0px",
					"width": "490px",
					"height": "180px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCsrEnroll");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-STUDTINFO");
				container.addChild(userDefinedControl_2, {
					"top": "0px",
					"left": "0px",
					"width": "280px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "492px",
				"height": "210px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "240px",
				"left": "0px",
				"width": "50px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnSave");
			button_2.value = "";
			button_2.style.setClasses(["btn-save"]);
			button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_2.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_2, {
				"top": "215px",
				"left": "205px",
				"width": "60px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_2.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "265px",
				"left": "0px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCAltEnrollRegChg";
	cpr.core.Platform.INSTANCE.register(app);
})();
