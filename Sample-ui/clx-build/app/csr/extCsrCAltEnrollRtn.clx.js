/*
 * App URI: app/csr/extCsrCAltEnrollRtn
 * Source Location: app/csr/extCsrCAltEnrollRtn.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCAltEnrollRtn", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrCAltEnrollRtn.xtm"/>
			
			var extCsrCAltEnrollRtn = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				
			
				moPage.onModelConstructDone_ExtCsrCAltEnrollRtn = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrShregAlt"]);
					//화면 온로드 서브미션 호출
					doOnLoad();
					
				};
					
				function doOnLoad() {
					var voAltObj = moPage.parent.moParentObj;
			
						// 부모멤버변수에담긴학번받음
						util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", voAltObj.strSchYearRcd);
						util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", voAltObj.strSmtRcd);
						util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj.strStudId);
						util.DataMap.setValue(app, "dmReqKey", "strRtnSchYearRcd", voAltObj.strSchYearRcd);
						util.DataMap.setValue(app, "dmReqKey", "strRtnSmtRcd", voAltObj.strSmtRcd);
						util.DataMap.setValue(app, "dmReqKey", "strAltRsnRcd",voAltObj.strAltRsnRcd);
						util.DataMap.setValue(app, "dmReqKey", "strAltDt", voAltObj.strAltDt);
						
						//strCommand: onLoad 
						util.Submit.send(app, "subOnLoad", function (pbSuccess) {
							if (pbSuccess){				
								
								util.Control.redraw(app, ["cbbFrfClassRcd","cbbFrfAltRsnRcdRtn","cbbFrfTranRegRcd",""]);
												
								//신규입력이 아님
								moPage.mbIsInsertRowFrf = false;
								if(ValueUtil.isNull(voAltObj.strStudId)){
									util.Control.setEnable(app, false, ["grp_frfCsrShregAlt","btnSave"]);
								}
							}
						})
				};
				
				
				
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doNewAlt() {
					
					var voAltObj = moPage.parent.moParentObj;
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj.strStudId );
					
					if(!ValueUtil.isNull(voAltObj.strStudId)){
					
						util.DataMap.setValue(app, "dmReqKey", "strPopTarget", "stdCsrPMstAltRtn");
						//strCommand: popupMnu 
						util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
								util.FreeForm.setValue(app, "frfCsrShregAlt",AppConstants.CUD_COL_REF, "I");
								//프리폼 신규
								util.FreeForm.insertRow(app, "frfCsrShregAlt");
								
								util.Control.setEnable(app, false, ["cbbFrfRegTransRcd"]);
								util.Grid.setRowState(app, "frfCsrShregAlt",cpr.data.tabledata.RowState.INSERTED,1);
								//ExtRepeat.setRowStatus("frfCsrShregAlt","open",'1');
								moPage.mbIsInsertRowFrf = true;
													
								//신규입력이 Ok0
								util.Control.setEnable(app, true, ["grp_frfCsrShregAlt",  "btnSave"]);
								// 신규
								
								//strCommand: list 
								util.Submit.send(app, "subList", function (pbSuccess) {
									if (pbSuccess){				
										
										util.Control.redraw(app, ["frfCsrShregAlt","frfCsrSmtGiveUp"]);
										doSaChgChk();				
																		
									}
								});		
																		
							}else{
									util.Control.setEnable(app, false, ["grp_frfCsrShregAlt","btnSave"]);
							}
						});
					}
				}
				
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var vbSaChgChk = false;
				
				/**
				 * @desc 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 2. 26
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["frfCsrShregAlt"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				 
				/**
				 * @desc  학사부서 변경이력(통폐합) 유무 체크한다.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				function doSaChgChk() {
					// 학사부서 변경이력 유무 체크.
					var vnChgListCnt = util.DataSet.getRowCount(app, "dsExpSaList");
					if (vnChgListCnt > 0) {
						vbSaChgChk = true;
					}else{
						vbSaChgChk = false;
					}
					
					if (vbSaChgChk) {
						// 학사부서 변경이력이 있으면.			
						util.Control.setEnable(app, true, ["cbbFrfSaSpCdEnr"]);
						
						
						// 학적등록정보(주전공등록으로), 이수과정구분(전공으로) Setting.
						util.DataMap.setValue(app, "dmRptCsrEnroll", "ENROLL_DIV_RCD", "CT103MAIN");
						util.DataMap.setValue(app, "dmRptCsrEnroll", "SP_DIV_RCD", "CA10701");			
						//퍠과 처리일자는 표준학기의 시작일로 설정
						var vsChgDt = util.DataMap.getValue(app, "dmResOnLoad", "chgDt");
						util.DataMap.setValue(app, "dmRptCsrEnroll", "ST_DT", vsChgDt);			
						util.DataMap.setValue(app, "dmRptCsrEnroll", "END_DT", "99991231000000");
						
					} else {
						// 학적등록 FreeForm 전체 비활성화.
						util.Control.setEnable(app, false, ["cbbFrfSaSpCdEnr"] );
						
						// 학생의 원소속
						var vsOrgSaCd = util.DataMap.getValue(app, "dmReqKey", "strOrgSaCd");
						util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsOrgSaCd);
					}
				};
			
				
				 /**
				 * @desc 학사부서 선택시, 이수과정 LIST, 행정부서 SETTING
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				function doGetSpList() {
					
					var vsSaCd = util.FreeForm.getValue(app, "frfCsrShregAlt", "SA_CD");
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsSaCd);
					
					//strCommand: selCourse 
					util.Submit.send(app, "subSelCourse", function(pbSuccess) {
						if(pbSuccess){
							var vsOgCd = util.DataMap.getValue(app, "dmResOnLoad", "ogCd");
							var vsOgNm = util.DataMap.getValue(app, "dmResOnLoad", "ogNm");
							
							//학과부서, 이수과정 필수값 
							util.Control.setUserAttr(app, "cbbFrfSaCdEnr", "require", "Y");
							ExtControl.setAttr("cbbFrfSaCdEnr", "class", "cbbSchReq");
							ExtControl.setAttr("lblFrfSaCdEnr", "class", "lblSchReq");
							
							util.Control.setUserAttr(app, "cbbFrfSpCdEnr", "require", "Y");
							ExtControl.setAttr("cbbFrfSpCdEnr", "class", "cbbSchReq");
							ExtControl.setAttr("lblFrfSpCdEnr", "class", "lblSchReq");
							
							util.FreeForm.setValue(app, "frfCsrShregAlt", "OG_CD", vsOgCd);
							util.FreeForm.setValue(app, "frfCsrShregAlt", "OG_NM", vsOgNm);
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SP_CD", "");
							util.Control.redraw(app, ["cbbFrfSpCdEnr", "ipbFrfOgNmEnr", "ipbFrfOgCd"]);
						} else {
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SP_CD", "");
							util.FreeForm.setValue(app, "frfCsrShregAlt", "OG_CD", "");
							util.FreeForm.setValue(app, "frfCsrShregAlt", "OG_NM", "");
							//학과부서, 이수과정 필수값 해제
							util.Control.setUserAttr(app, "cbbFrfSaCdEnr", "require", "notNull=no");
							ExtControl.setAttr("cbbFrfSaCdEnr", "class", "cbbSch");
							ExtControl.setAttr("lblFrfSaCdEnr", "class", "lblSch");
							
							util.Control.setUserAttr(app, "cbbFrfSpCdEnr", "require", "notNull=no");
							ExtControl.setAttr("cbbFrfSpCdEnr", "class", "cbbSch");
							ExtControl.setAttr("lblFrfSpCdEnr", "class", "lblSch");
							util.Control.redraw(app, ["cbbFrfSpCdEnr", "ipbFrfOgNmEnr", "ipbFrfOgCd"]);
						}
					});
				};	
				
				 /**
				 * @desc 저장 SF에서 오류 메시지가 있으면 확인창 띄움.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				function doSave(pnStep) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					var vsSaChg = (vbSaChgChk)? "1":"0";	
					
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					util.DataMap.setValue(app, "dmReqSave", "strSaChg", vsSaChg);
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {		
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									return doSave(vnStep, poCallbackFunc);
								} else {
									return false;		
								}
							}else{
								var voCallBackSaveAfter = function(pbSuccess) {
									if(pbSuccess) {
										//저장성공 메세지 출력
										// 조회 : "조회되었습니다." header 메세지 표시
										moPage.parentSendMsg(NLS.INF.M025);
										doDataClear();
										util.Control.setEnable(app, false, ["grp_frfCsrShregAlt", "btnSave"]);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								};
								doDataClear();
								util.Control.setEnable(app, false, ["grp_frfCsrShregAlt","btnSave"]);
								
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
							}
						}else{
							return false;
						}
					});
					
				};	
				
				
				/**
				 * @desc 복학신규 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onClick_BtnSave = function() {
							
					var voAltObj = moPage.parent.moParentObj;
					
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrShregAlt"], null)){
						moPage.parentSendMsg("lblTitleRptCsrShregAlt",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, ["frfCsrShregAlt"])){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					util.DataMap.setValue(app, "dmRptCsrShregAlt", "ENROLL_DIV_RCD", "CT103MAIN");
					util.DataMap.setValue(app, "dmRptCsrShregAlt", "SP_DIV_RCD", "CA10701");
					util.DataMap.setValue(app, "dmRptCsrShregAlt", "STUD_ID", voAltObj.strStudId);
					
			//		if (vbSaChgChk) {
			////			var vsSaCd = ExtFreeForm.getValue("rptCsrShregAlt", "SA_CD");
			//			var vsSaCd = ExtInstance.getValue("/root/resList/rptCsrShregAlt/SA_CD");
			//			if(!ValueUtil.isNull(vsSaCd)){
			//				//리피트 validation check
			//				if(ValueUtil.isNull(ExtInstance.getValue("/root/resList/rptCsrShregAlt/SP_CD"))){
			//					ComMsg.alert("이수과정은 필수항목입니다.");  // 필수항목체크 변경 (2016.12.7)
			//					
			//					return false;
			//				}
			//			}
			//			
			//		} 
					
					util.DataMap.setValue(app, "dmReqKey", "strPopTarget", "stdCsrPMstAltRtn");
					//strCommand: popupMnu 
					util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
							doSave();
						}
					});
				};
			
				moPage.onValueChanged_CbbFrfSaCdEnr = function() {
					//var vsSaCd = ExtFreeForm.getValue("frfCsrShregAlt", "SA_CD");
					
					//if ( vsSaCd == "" ) { 
					//	//학과부서, 이수과정 필수값 해제
					//	ExtControl.setAttr("cbbFrfSaCdEnr", "udattr", "notNull=no");
					//	ExtControl.setAttr("cbbFrfSaCdEnr", "class", "cbbSch");
					//	ExtControl.setAttr("lblFrfSaCdEnr", "class", "lblSch");
					//	
					//	ExtControl.setAttr("cbbFrfSpCdEnr", "udattr", "notNull=no");
					//	ExtControl.setAttr("cbbFrfSpCdEnr", "class", "cbbSch");
					//	ExtControl.setAttr("lblFrfSpCdEnr", "class", "lblSch");
					//}else{
					//	moPage.doGetSpList();
					//}
				}
				
				
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				
				
				
				/**
				 * @desc 복학- 학기취소 버튼 event
				 * @param
				 * @return void
				 * @author 박선영 2016.10.31 
				*/
				moPage.onClick_BtnSaveSmtGiveUp = function() {
					
					var voAltObj = moPage.parent.moParentObj;
					var vsBtnNm = ExtControl.getTextValue("btnSaveSmtGiveUp");
					
					// @1\n  계속하시겠습니까?
					if (util.Msg.confirm("NLS-CRM-M034", [vsBtnNm]) ) {
						
						if(!ValueUtil.isNull(voAltObj.strStudId)){	
								//strCommand: giveUp 
								util.Submit.send(app, "subGvpProc", function(pbSuccess){
									if (pbSuccess) {							
										moPage.getGvupInfo();
									}
								});
						}
					}
				};
				
				
			
				/**
				 * @desc 프리폼 초기화
				 * @param
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doDataClear() {
					util.Control.reset(app, ["frfCsrShregAlt","frfCsrSmtGiveUp"]);
				};
				
				/**
				 * @desc 학기포기 정보 재조회
				 * @param
				 * @return void
				 * @author Choi Kyung Min 2016. 10. 26
				 */
				moPage.getGvupInfo = function(){
						
					
					//strCommand: getGvupInfo 
					util.Submit.send(app, "subGvupInfo", function(pbSuccess) {
						if(pbSuccess){
							util.FreeForm.setValue(app, "frfCsrSmtGiveUp", "PRE_SHYR", util.DataMap.getValue(app, "dmResList", "strPreShyr"));
							util.FreeForm.setValue(app, "frfCsrSmtGiveUp", "CHG_SHYR", util.DataMap.getValue(app, "dmResList", "strChgShyr"));
							util.FreeForm.setValue(app, "frfCsrSmtGiveUp", "GVUP_CNT", util.DataMap.getValue(app, "dmResList", "strGvupCnt"));
							
						} 
					});
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 리피트 라벨 id
				 * @param psMsgCode 메시지
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psMsgCodeNm) {
					util.Msg.notify(app, psMsgCodeNm);	
				};
				
				
				
				/**
				 * @desc 통폐합이력가져오는 부분변경 
				 * @param 
				 * @param 
				 * @return void
				 * @author Sunyoung park 2017.1.3 
				 */
				moPage.onValueChanged_CbbFrfSaSpCdEnr = function() {
							
					var vsSpCd = util.FreeForm.getValue(app, "frfCsrShregAlt", "SP_CD");
							
					var vsChgSaCd = ExtInstance.getValue("/root/resList/expSaList/row", "CHG_SA_CD", "child::SP_CD='" + vsSpCd  + "'");
					util.FreeForm.setValue(app, "frfCsrShregAlt", "SA_CD", vsChgSaCd);
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSaList");
			dataSet_1.parseData({
				"columns": [
					{"name": "SA_CD"},
					{"name": "SA_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSpList");
			dataSet_2.parseData({
				"columns": [
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "SHORT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsEnrollDivList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSpDivList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsEnrollRsnList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsExpSaList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CHG_SA_CD"},
					{"name": "PRE_SA_NM"},
					{"name": "PRE_SA_CD"},
					{"name": "CHG_SA_NM"},
					{"name": "SP_CD"},
					{"name": "SP_SHORT_NM"},
					{"name": "SP_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsYearList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSmtList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsRegTransRcdList");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsCanRsnList");
			dataSet_10.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsClassList");
			dataSet_11.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsRsnList");
			dataSet_12.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strPopTarget",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strHeaderCourse",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSaChg",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strPageId",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "stdPgmNm",
						"dataType": "string"
					},
					{
						"name": "strRtnSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strRtnSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strRtnPlanYear",
						"dataType": "string"
					},
					{
						"name": "strRtnPlanSmt",
						"dataType": "string"
					},
					{
						"name": "strOrgSaCd",
						"dataType": "string"
					},
					{
						"name": "strAltDt",
						"dataType": "string"
					},
					{
						"name": "strAltRsnRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strPreShyr",
						"dataType": "string"
					},
					{
						"name": "strAftShyr",
						"dataType": "string"
					},
					{
						"name": "strGvupCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmCsrEnroll");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "SA_NM",
						"dataType": "string"
					},
					{
						"name": "SHREG_ALT_KEY",
						"dataType": "string"
					},
					{
						"name": "ENROLL_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ENROLL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SP_CD",
						"dataType": "string"
					},
					{
						"name": "ENROLL_CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "OG_CD",
						"dataType": "string"
					},
					{
						"name": "OG_NM",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "CUR_APLY_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PROC_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmCsrShregAlt");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_RCD",
						"dataType": "string"
					},
					{
						"name": "RTN_PLAN_DT",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ENROLL_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SP_CD",
						"dataType": "string"
					},
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "CLASS_RCD",
						"dataType": "string"
					},
					{
						"name": "GUD_PROF_NM",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "OG_CD",
						"dataType": "string"
					},
					{
						"name": "OG_NM",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "ogCd",
						"dataType": "string"
					},
					{
						"name": "ogNm",
						"dataType": "string"
					},
					{
						"name": "chgDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmDateMain");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					},
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			
			var dataMap_8 = new cpr.data.DataMap("dmReqSave");
			dataMap_8.parseData({
				"columns" : [{
					"name": "strSaChg",
					"dataType": "string"
				}]
			});
			app.register(dataMap_8);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAltEnrollRtn/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_12, false);
			submission_1.addResponseData(dataMap_5, false);
			submission_1.addResponseData(dataSet_11, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/ExtCsrAltEnrollRtn/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_4);
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_8);
			submission_2.addRequestData(dataMap_7);
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSelCourse");
			submission_3.action = "/csr/ExtCsrAltEnrollRtn/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_2, false);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSaCdList");
			submission_4.action = "/csr/ExtCsrAltEnrollRtn/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_1, false);
			submission_4.addResponseData(dataSet_3, false);
			submission_4.addResponseData(dataSet_4, false);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSelCal");
			submission_5.action = "/cmn/StdCmnDateTime/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_6);
			submission_5.addResponseData(dataMap_6, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subList");
			submission_6.action = "/csr/ExtCsrAltEnrollRtn/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataMap_4, false);
			submission_6.addResponseData(dataMap_2, false);
			submission_6.addResponseData(dataSet_2, false);
			submission_6.addResponseData(dataSet_6, false);
			submission_6.addResponseData(dataSet_3, false);
			submission_6.addResponseData(dataSet_4, false);
			submission_6.addResponseData(dataSet_5, false);
			submission_6.addResponseData(dataMap_1, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subGvpProc");
			submission_7.action = "/cgd/ExtCgdCRec/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_1);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subMstAltPopupMnu");
			submission_8.action = "/csr/StdCsrMstAlt/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataMap_1);
			app.register(submission_8);
			
			var submission_9 = new cpr.protocols.Submission("subGvupInfo");
			submission_9.action = "/csr/ExtCsrAltEnrollReEn/";
			submission_9.mediaType = "application/x-www-form-urlencoded";
			submission_9.addRequestData(dataMap_1);
			submission_9.addResponseData(dataMap_2, false);
			app.register(submission_9);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrShregAlt");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShregAlt");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfSchYearRcdRtn");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-RTRYRS");
					container.addChild(output_1, {
						"top": "5px",
						"left": "500px",
						"width": "35px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcdRtn");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcdRtn.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "540px",
						"width": "60px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudIdRtn");
					inputBox_1.visible = false;
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "555px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("iptFrfSerialNoRtn");
					inputBox_2.visible = false;
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "570px",
						"width": "10px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfAltDtRtn");
					output_2.value = "";
					output_2.style.setClasses(["require"]);
					output_2.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_2, {
						"top": "5px",
						"left": "249px",
						"width": "105px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipFrfAltDtRtn");
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAltDtRtn.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DT");
					container.addChild(dateInput_1, {
						"top": "5px",
						"left": "359px",
						"width": "90px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfSmtRcdRtn");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-RTRSMSTR");
					container.addChild(output_3, {
						"top": "5px",
						"left": "605px",
						"width": "40px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfSmtRcdRtn");
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfSmtRcdRtn.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SMT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					if(typeof onCbbFrfSmtRcdRtnSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCbbFrfSmtRcdRtnSelectionChange);
					}
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "650px",
						"width": "55px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfAltRsnRcdRtn");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-RTRNWHY");
					container.addChild(output_4, {
						"top": "5px",
						"left": "5px",
						"width": "105px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfAltRsnRcdRtn");
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfAltRsnRcdRtn.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_RSN_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsRsnList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "5px",
						"left": "115px",
						"width": "125px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfAtlDivRcdRtn");
					inputBox_3.visible = false;
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "585px",
						"width": "10px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfRemarkRtn");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_5, {
						"top": "55px",
						"left": "5px",
						"width": "105px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfRemarkRtn");
					inputBox_4.maxLength = 300;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfRemarkRtn.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REMARK");
					container.addChild(inputBox_4, {
						"top": "55px",
						"left": "115px",
						"width": "365px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfTranRegRcd");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-SCR-RTRNWHY");
					container.addChild(output_6, {
						"top": "30px",
						"left": "5px",
						"width": "105px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfTranRegRcd");
					comboBox_4.enabled = false;
					comboBox_4.hideButton = true;
					comboBox_4.bind("fieldLabel").toExpression("#optFrfTranRegRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REG_TRANS_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsRegTransRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "30px",
						"left": "115px",
						"width": "125px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfEnrollDivRcdEnr");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-SCR-SCREGDIV");
					container.addChild(output_7, {
						"top": "55px",
						"left": "500px",
						"width": "35px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfEnrollDivRcdEnr");
					comboBox_5.hideButton = true;
					comboBox_5.bind("fieldLabel").toExpression("#optFrfEnrollDivRcdEnr.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ENROLL_DIV_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsEnrollDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "55px",
						"left": "535px",
						"width": "65px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfSpDivRcdEnr");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-SCR-SPCORSDIV");
					container.addChild(output_8, {
						"top": "55px",
						"left": "605px",
						"width": "50px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfSpDivRcdEnr");
					comboBox_6.hideButton = true;
					comboBox_6.bind("fieldLabel").toExpression("#optFrfSpDivRcdEnr.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SP_DIV_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsSpDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "55px",
						"left": "660px",
						"width": "90px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfSaCdEnr");
					output_9.value = "통폐합부서";
					container.addChild(output_9, {
						"top": "80px",
						"left": "5px",
						"width": "105px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfSaCdEnr");
					comboBox_7.visible = false;
					comboBox_7.enabled = false;
					comboBox_7.bind("fieldLabel").toExpression("#optFrfSaCdEnr.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SA_CD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsSaList"), {
							"label": "SA_NM",
							"value": "SA_CD"
						});
					})(comboBox_7);
					if(typeof onCbbFrfSaCdEnrSelectionChange == "function") {
						comboBox_7.addEventListener("selection-change", onCbbFrfSaCdEnrSelectionChange);
					}
					container.addChild(comboBox_7, {
						"top": "86px",
						"left": "500px",
						"width": "125px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfSpCdEnr");
					output_10.value = "통폐합이수과정";
					container.addChild(output_10, {
						"top": "115px",
						"left": "500px",
						"width": "105px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfClassRcd");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-GLS-CLASSZ");
					container.addChild(output_11, {
						"top": "127px",
						"left": "4px",
						"width": "105px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfClassRcd");
					comboBox_8.userAttr({"require": "Y"});
					comboBox_8.bind("fieldLabel").toExpression("#optFrfClassRcd.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CLASS_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsClassList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "127px",
						"left": "114px",
						"width": "125px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfProfNm");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_12, {
						"top": "127px",
						"left": "246px",
						"width": "105px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfProfNm");
					output_13.value = "";
					output_13.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "GUD_PROF_NM");
					container.addChild(output_13, {
						"top": "127px",
						"left": "356px",
						"width": "123px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfRtnPlanDt");
					output_14.value = "";
					output_14.style.setClasses(["require"]);
					output_14.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_14, {
						"top": "30px",
						"left": "249px",
						"width": "105px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("dipFrfRtnPlanDt");
					dateInput_2.enabled = false;
					dateInput_2.format = "YYYY-MM-DD";
					dateInput_2.bind("fieldLabel").toExpression("#optFrfAltDtRtn.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "RTN_PLAN_DT");
					container.addChild(dateInput_2, {
						"top": "30px",
						"left": "359px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfSaSpCdEnr");
					comboBox_9.bind("fieldLabel").toExpression("#optFrfSaCdEnr.value");
					comboBox_9.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SP_CD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsExpSaList"), {
							"label": "SP_NM",
							"value": "SP_CD"
						});
					})(comboBox_9);
					if(typeof onCbbFrfSaSpCdEnrSelectionChange == "function") {
						comboBox_9.addEventListener("selection-change", onCbbFrfSaSpCdEnrSelectionChange);
					}
					container.addChild(comboBox_9, {
						"top": "80px",
						"left": "115px",
						"width": "334px",
						"height": "157px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "101px",
					"left": "2px",
					"width": "487px",
					"height": "152px"
				});
				var group_3 = new cpr.controls.Container("frfCsrSmtGiveUp");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_15 = new cpr.controls.Output("optFrfEndDtEnr3");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_15, {
						"top": "5px",
						"left": "4px",
						"width": "85px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("oBefShyr");
					output_16.value = "";
					output_16.style.css({
						"text-align" : "center"
					});
					output_16.bind("value").toDataMap(app.lookup("dmResList"), "strPreShyr");
					container.addChild(output_16, {
						"top": "5px",
						"left": "94px",
						"width": "35px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfEndDtEnr2");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_17, {
						"top": "5px",
						"left": "137px",
						"width": "85px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("oAftShyr");
					output_18.value = "";
					output_18.style.css({
						"text-align" : "center"
					});
					output_18.bind("value").toDataMap(app.lookup("dmResList"), "strAftShyr");
					container.addChild(output_18, {
						"top": "5px",
						"left": "228px",
						"width": "35px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfGvupCnt");
					output_19.value = "포기학기수";
					container.addChild(output_19, {
						"top": "5px",
						"left": "273px",
						"width": "85px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("oGvupCnt");
					output_20.value = "";
					output_20.style.css({
						"text-align" : "center"
					});
					output_20.bind("value").toDataMap(app.lookup("dmResList"), "strGvupCnt");
					container.addChild(output_20, {
						"top": "5px",
						"left": "365px",
						"width": "35px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "25px",
					"left": "3px",
					"width": "413px",
					"height": "30px"
				});
				var button_1 = new cpr.controls.Button("btnSaveSmtGiveUp");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveSmtGiveUpClick == "function") {
					button_1.addEventListener("click", onBtnSaveSmtGiveUpClick);
				}
				container.addChild(button_1, {
					"top": "30px",
					"left": "420px",
					"width": "60px",
					"height": "25px"
				});
				var output_21 = new cpr.controls.Output("label1");
				output_21.value = "복학 전 학기포기를 우선적으로 처리하십시오.";
				container.addChild(output_21, {
					"top": "55px",
					"left": "5px",
					"width": "480px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
				if(typeof onEmaSbpHeaderAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
				}
				cpr.core.App.load("app/imp/impSbpHeader", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "295px",
					"left": "5px",
					"width": "96px",
					"height": "25px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCsrShregAltRtn");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-NEWRTRN");
				container.addChild(userDefinedControl_1, {
					"top": "80px",
					"left": "5px",
					"width": "250px",
					"height": "25px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCsrEnroll");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-MAINSCHREGINF");
				container.addChild(userDefinedControl_2, {
					"top": "204px",
					"left": "5px",
					"width": "305px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-NEWRTRN");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "135px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "492px",
				"height": "257px"
			});
			
			var button_2 = new cpr.controls.Button("btnSave");
			button_2.value = "";
			button_2.style.setClasses(["btn-save"]);
			button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_2.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_2, {
				"top": "266px",
				"left": "207px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCAltEnrollRtn";
	cpr.core.Platform.INSTANCE.register(app);
})();
