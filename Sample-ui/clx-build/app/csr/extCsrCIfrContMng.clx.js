/*
 * App URI: app/csr/extCsrCIfrContMng
 * Source Location: app/csr/extCsrCIfrContMng.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCIfrContMng", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCIfrContMng.xtm"/>
			
			var extCsrCIfrContMng = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc 화면 타이틀 초기화
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 화면 온로드
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onModelConstructDone_extCsrCIfrContMng = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptExtCsrIfrCont", "frfExtCsrIfrCont"]);
					
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
								util.Control.setValue(app, "cbbSchYearRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSchYearRcd"));
								util.Control.setValue(app, "cbbSmtRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcd"));
								ExtRepeat.refresh("frfExtCsrIfrCont");
								util.Control.redraw(app, ["cbbSchYearRcd", "cbbSmtRcd", "cbbIfrSheetDivRcd"]);
								ExtControl.setBind(["rdCbbSchYearRcd","rdCbbSmtRcd","rdCbbIfrSheetDivRcd"], "bndNew");
						}
					});
				}
			
				/**
				 * @desc 조회 버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnSearch = function() {
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
			
				/**
				 * @desc 통지서 문구 목록 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdExtCsrIfrCont", "frfExtCsrIfrCont");
							doCompareFrfEnable();
							// 조회 내역이 없으면 프리폼 초기화
							var vnRptCnt = util.DataSet.getRowCount(app, "dsRptExtCsrIfrCont");
							if(vnRptCnt == 0){
								util.Control.reset(app, "frfExtCsrIfrCont");
							}
							
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
				
				/**
				 * @desc 신규버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnNew = function() {
					var vsSchYearRcd = util.Control.getValue(app, "cbbSchYearRcd");
					var vsSmtRcd = util.Control.getValue(app, "cbbSmtRcd");
					var vsIfrSheetDivRcd = util.Control.getValue(app, "cbbIfrSheetDivRcd");
					
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정
					util.Grid.insertRow(app, "grdExtCsrIfrCont");
					util.FreeForm.setValue(app, "frfExtCsrIfrCont", "SCH_YEAR_RCD", vsSchYearRcd);
					util.FreeForm.setValue(app, "frfExtCsrIfrCont", "SMT_RCD", vsSmtRcd);
					util.FreeForm.setValue(app, "frfExtCsrIfrCont", "IFR_SHEET_DIV_RCD", vsIfrSheetDivRcd);
				};
			
				/**
				 * @desc 삭제버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnDel = function() {
					util.Grid.deleteRow(app, "grdExtCsrIfrCont");
					util.Control.reset(app, "frfExtCsrIfrCont");
					doCompareFrfEnable();
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCsrIfrCont", "frfExtCsrIfrCont");
				};
			
				/**
				 * @desc 작업취소
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdExtCsrIfrCont");
					util.Control.reset(app, "frfExtCsrIfrCont");
					doCompareFrfEnable();
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCsrIfrCont", "frfExtCsrIfrCont");
				};
			
				/**
				 * @desc 저장버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnSave = function() {
					doSave();
				};
			
			
			
				/**
				 * @desc 통지서 문구 저장
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				function doSave() {
			
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, "grdExtCsrIfrCont", "MSG")){
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdExtCsrIfrCont")) return false;
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				}
			
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};	
				
				
				/**
				 * @desc 마스터 리피트 상태에 따른 프리폼 비활성화 제어
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				function doCompareFrfEnable() {
			
					if( (!util.Grid.getIndex(app, "grdExtCsrIfrCont"))
						|| util.Grid.getRowState(app, "grdExtCsrIfrCont") == cpr.data.tabledata.RowState.DELETED) {
						util.Control.setEnable(app, false, ["frfExtCsrIfrCont"]);	
					} else {
						util.Control.setEnable(app, true, ["frfExtCsrIfrCont"]);	
					}
				}
			
				/**
				 * @desc 리피트 rowSelect event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onRowSelect_RptExtCsrIfrCont = function() {
					// 리피트 현재 index get
					var vnIndex = util.Grid.getIndex(app, "grdExtCsrIfrCont");
					//리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCsrIfrCont", "frfExtCsrIfrCont", vnIndex);
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtControl.refreshBind("bndNew");
					//프리폼 비활성화 제어
					doCompareFrfEnable();
				};
			
				/**
				 * @desc 프리폼 update event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onUpdate_FrfExtCsrIfrCont = function() {
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptExtCsrIfrCont", "frfExtCsrIfrCont");
				};
			
				/**
				 * @desc 선택된 행을 복사한다.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnNewCopy = function() {
					var voRpt = ExtControl.getControl("rptExtCsrIfrCont");
					vsSelIdx = voRpt.getSelectedRowPos("", "");
			
								
					if(vsSelIdx == ""){
						// 라인을 선택하세요.
						util.Msg.notify(app, "NLS.INF.M023");
						return false;
					}
					
					var vnNewIdx =  util.Grid.insertRow(app, "grdExtCsrIfrCont");
					//선택된 행 복사
					ExtRepeat.copyToRowData("rptExtCsrIfrCont", vsSelIdx, "rptExtCsrIfrCont", vnNewIdx);
					util.Grid.setCellValue(app, "grdExtCsrIfrCont", "UPT_STATUS", "N", vnNewIdx);
					//리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptExtCsrIfrCont", "frfExtCsrIfrCont", vnNewIdx);
				};
				
				/**
				 * @desc 선택한 통지서를 볼수 있는 팝업 호출
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 25
				 */
				moPage.onClick_BtnPreView = function() {
					var vsUpt = util.Grid.getCellValue(app, "grdExtCsrIfrCont", "UPT_STATUS");
					if(vsUpt == "N" || vsUpt  == "U" || vsUpt  == "D"){
						return;
					}
					var vsReportId = util.Grid.getCellValue(app, "grdExtCsrIfrCont", "REPORT_ID");
					
					var vsSchYearRcd    = util.Grid.getCellValue(app, "grdExtCsrIfrCont", "SCH_YEAR_RCD");
					var vsSmtRcd          = util.Grid.getCellValue(app, "grdExtCsrIfrCont", "SMT_RCD");
					var vsIfrSheetDivRcd = util.Grid.getCellValue(app, "grdExtCsrIfrCont", "IFR_SHEET_DIV_RCD");
					//리퀘스트 셋팅
					var voParam = {
								p_strSchYearRcd 		: vsSchYearRcd,
								p_strSmtRcd       		: vsSmtRcd,
								p_strIfrSheetDivRcd    	: vsIfrSheetDivRcd,
								p_strStudId        		: "('')",
								p_strLandivRcd   		: msDefaultLocale,
								p_strListSaCd        	: "('')"
							}	
							
						 var voOzFormParam = {
								  TITLE : "" //리포트타이틀
								, SUB_TITLE : "" //리포트서브타이틀		
								, FORM_TYPE : "flash"
							};	
							
					ReportUtil.fOzPopupOpen("미리보기", vsReportId, voOzFormParam, voParam);
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsIfrSheetDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsExtCsrIfrCont");
			dataSet_4.parseData({
				"info": "EXT_CSR_IFR_CONT@SCH_YEAR_RCD,SMT_RCD,IFR_SHEET_DIV_RCD",
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "IFR_SHEET_DIV_RCD"},
					{"name": "CONT"},
					{"name": "ITEM1"},
					{"name": "ITEM2"},
					{"name": "ITEM3"},
					{"name": "ITEM4"},
					{"name": "ITEM5"},
					{"name": "ITEM6"},
					{"name": "ITEM7"},
					{"name": "ITEM8"},
					{"name": "ITEM9"},
					{"name": "ITEM10"},
					{"name": "ITEM11"},
					{"name": "ITEM12"},
					{"name": "ITEM13"},
					{"name": "DISP_CONT"},
					{"name": "REPORT_ID"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsFrfExtCsrIfrCont");
			dataSet_5.parseData({
				"columns": [
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "IFR_SHEET_DIV_RCD"},
					{"name": "CONT"},
					{"name": "ITEM1"},
					{"name": "ITEM2"},
					{"name": "ITEM3"},
					{"name": "ITEM4"},
					{"name": "ITEM5"},
					{"name": "ITEM6"},
					{"name": "ITEM7"},
					{"name": "ITEM8"},
					{"name": "ITEM9"},
					{"name": "ITEM10"},
					{"name": "ITEM11"},
					{"name": "ITEM12"},
					{"name": "ITEM13"},
					{"name": "DISP_CONT"},
					{"name": "REPORT_ID"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strIfrSheetDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrIfrContMng/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrIfrContMng/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/ExtCsrIfrContMng/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "275px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optIfrSheetDivRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-NOTICE");
				container.addChild(output_3, {
					"top": "5px",
					"left": "405px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbIfrSheetDivRcd");
				comboBox_3.bind("fieldLabel").toExpression("#optIfrSheetDivRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strIfrSheetDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsIfrSheetDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "490px",
					"width": "180px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdExtCsrIfrCont");
				grid_1.init({
					"dataSet": app.lookup("dsExtCsrIfrCont"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "75px"},
						{"width": "101px"},
						{"width": "155px"},
						{"width": "179px"},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{"width": "45px"},
						{
							"width": "45px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-NOTICE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CONTENT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "항목1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "항목2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "항목3";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "항목4";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "항목5";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "항목6";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "항목7";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "항목8";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "항목9";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "항목10";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "항목11";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.text = "항목12";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.text = "항목13";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.text = "내용";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.text = "Button";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output();
										output_4.style.css({
											"text-align" : "center"
										});
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbSchYearRcd");
										comboBox_4.hideButton = true;
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsSchYearRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_5.hideButton = true;
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsSmtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("SMT_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "IFR_SHEET_DIV_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbIfrSheetDivRcd");
										comboBox_6.hideButton = true;
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsIfrSheetDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("IFR_SHEET_DIV_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "DISP_CONT";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbCont");
										inputBox_1.readOnly = true;
										inputBox_1.bind("value").toDataColumn("DISP_CONT");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ITEM1";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbItem1");
										inputBox_2.maxLength = 300;
										inputBox_2.bind("value").toDataColumn("ITEM1");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ITEM2";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbItem2");
										inputBox_3.maxLength = 300;
										inputBox_3.bind("value").toDataColumn("ITEM2");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ITEM3";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbItem3");
										inputBox_4.maxLength = 300;
										inputBox_4.bind("value").toDataColumn("ITEM3");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "ITEM4";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbItem4");
										inputBox_5.maxLength = 300;
										inputBox_5.bind("value").toDataColumn("ITEM4");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "ITEM5";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbItem5");
										inputBox_6.maxLength = 300;
										inputBox_6.bind("value").toDataColumn("ITEM5");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ITEM6";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbItem6");
										inputBox_7.maxLength = 300;
										inputBox_7.bind("value").toDataColumn("ITEM6");
										return inputBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ITEM7";
									cell.control = (function(){
										var inputBox_8 = new cpr.controls.InputBox("gdIpbItem7");
										inputBox_8.maxLength = 300;
										inputBox_8.bind("value").toDataColumn("ITEM7");
										return inputBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "ITEM8";
									cell.control = (function(){
										var inputBox_9 = new cpr.controls.InputBox("gdIpbItem8");
										inputBox_9.maxLength = 300;
										inputBox_9.bind("value").toDataColumn("ITEM8");
										return inputBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "ITEM9";
									cell.control = (function(){
										var inputBox_10 = new cpr.controls.InputBox("gdIpbItem9");
										inputBox_10.bind("value").toDataColumn("ITEM9");
										return inputBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "ITEM10";
									cell.control = (function(){
										var inputBox_11 = new cpr.controls.InputBox("gdIpbItem10");
										inputBox_11.bind("value").toDataColumn("ITEM10");
										return inputBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "ITEM11";
									cell.control = (function(){
										var inputBox_12 = new cpr.controls.InputBox("gdIpbItem11");
										inputBox_12.bind("value").toDataColumn("ITEM11");
										return inputBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "ITEM12";
									cell.control = (function(){
										var inputBox_13 = new cpr.controls.InputBox("gdIpbItem12");
										inputBox_13.bind("value").toDataColumn("ITEM12");
										return inputBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "ITEM13";
									cell.control = (function(){
										var inputBox_14 = new cpr.controls.InputBox("gdIpbItem13");
										inputBox_14.bind("value").toDataColumn("ITEM13");
										return inputBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "CONT";
									cell.control = (function(){
										var textArea_1 = new cpr.controls.TextArea("gdTatCont");
										textArea_1.maxLength = 1000;
										textArea_1.bind("value").toDataColumn("CONT");
										return textArea_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "REPORT_ID";
								}
							}
						]
					}
				});
				if(typeof onGrdExtCsrIfrContSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdExtCsrIfrContSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "605px",
					"height": "565px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfExtCsrIfrCont");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_5 = new cpr.controls.Output("optFrfSchYearRcd");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_5, {
						"top": "5px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_7.userAttr({"require": "Y"});
					comboBox_7.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_7.bind("value").toDataColumn("SCH_YEAR_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "5px",
						"left": "75px",
						"width": "90px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfSmtRcd");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_6, {
						"top": "5px",
						"left": "175px",
						"width": "50px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_8.userAttr({"require": "Y"});
					comboBox_8.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_8.bind("value").toDataColumn("SMT_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "5px",
						"left": "230px",
						"width": "120px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfIfrSheetDivRcd");
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-SCR-NOTICE");
					container.addChild(output_7, {
						"top": "5px",
						"left": "360px",
						"width": "65px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfIfrSheetDivRcd");
					comboBox_9.userAttr({"require": "Y"});
					comboBox_9.bind("fieldLabel").toExpression("#optFrfIfrSheetDivRcd.value");
					comboBox_9.bind("value").toDataColumn("IFR_SHEET_DIV_RCD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsIfrSheetDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"top": "5px",
						"left": "430px",
						"width": "170px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfCont");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-CONTENT");
					container.addChild(output_8, {
						"top": "30px",
						"left": "5px",
						"width": "65px",
						"height": "205px"
					});
					var output_9 = new cpr.controls.Output("optFrfItem1");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-SCR-ITEM1");
					container.addChild(output_9, {
						"top": "240px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfItem1");
					inputBox_15.maxLength = 100;
					inputBox_15.bind("fieldLabel").toExpression("#optFrfItem1.value");
					inputBox_15.bind("value").toDataColumn("ITEM1");
					container.addChild(inputBox_15, {
						"top": "240px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfItem2");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-SCR-ITEM2");
					container.addChild(output_10, {
						"top": "265px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbFrfItem2");
					inputBox_16.maxLength = 100;
					inputBox_16.bind("fieldLabel").toExpression("#optFrfItem2.value");
					inputBox_16.bind("value").toDataColumn("ITEM2");
					container.addChild(inputBox_16, {
						"top": "265px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfItem3");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-SCR-ITEM3");
					container.addChild(output_11, {
						"top": "290px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_17 = new cpr.controls.InputBox("ipbFrfItem3");
					inputBox_17.maxLength = 100;
					inputBox_17.bind("fieldLabel").toExpression("#optFrfItem3.value");
					inputBox_17.bind("value").toDataColumn("ITEM3");
					container.addChild(inputBox_17, {
						"top": "290px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var textArea_2 = new cpr.controls.TextArea("ttaCont");
					textArea_2.maxLength = 1000;
					textArea_2.bind("value").toDataColumn("CONT");
					container.addChild(textArea_2, {
						"top": "30px",
						"left": "75px",
						"width": "525px",
						"height": "205px"
					});
					var output_12 = new cpr.controls.Output("optFrfItem4");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-ITEM4");
					container.addChild(output_12, {
						"top": "315px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_18 = new cpr.controls.InputBox("ipbFrfItem4");
					inputBox_18.maxLength = 100;
					inputBox_18.bind("fieldLabel").toExpression("#optFrfItem4.value");
					inputBox_18.bind("value").toDataColumn("ITEM4");
					container.addChild(inputBox_18, {
						"top": "315px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfItem5");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-ITEM5");
					container.addChild(output_13, {
						"top": "340px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_19 = new cpr.controls.InputBox("ipbFrfItem5");
					inputBox_19.maxLength = 100;
					inputBox_19.bind("fieldLabel").toExpression("#optFrfItem5.value");
					inputBox_19.bind("value").toDataColumn("ITEM5");
					container.addChild(inputBox_19, {
						"top": "340px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfItem6");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-ITEM6");
					container.addChild(output_14, {
						"top": "365px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_20 = new cpr.controls.InputBox("ipbFrfItem6");
					inputBox_20.maxLength = 100;
					inputBox_20.bind("fieldLabel").toExpression("#optFrfItem6.value");
					inputBox_20.bind("value").toDataColumn("ITEM6");
					container.addChild(inputBox_20, {
						"top": "365px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfItem7");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-ITEM7");
					container.addChild(output_15, {
						"top": "390px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_21 = new cpr.controls.InputBox("ipbFrfItem7");
					inputBox_21.maxLength = 100;
					inputBox_21.bind("fieldLabel").toExpression("#optFrfItem7.value");
					inputBox_21.bind("value").toDataColumn("ITEM7");
					container.addChild(inputBox_21, {
						"top": "390px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfItem8");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-SCR-ITEM8");
					container.addChild(output_16, {
						"top": "415px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_22 = new cpr.controls.InputBox("ipbFrfItem8");
					inputBox_22.maxLength = 100;
					inputBox_22.bind("fieldLabel").toExpression("#optFrfItem8.value");
					inputBox_22.bind("value").toDataColumn("ITEM8");
					container.addChild(inputBox_22, {
						"top": "415px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfItem9");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-SCR-ITEM9");
					container.addChild(output_17, {
						"top": "440px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_23 = new cpr.controls.InputBox("ipbFrfItem9");
					inputBox_23.maxLength = 100;
					inputBox_23.bind("fieldLabel").toExpression("#optFrfItem9.value");
					inputBox_23.bind("value").toDataColumn("ITEM9");
					container.addChild(inputBox_23, {
						"top": "440px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfItem10");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-SCR-ITEM10");
					container.addChild(output_18, {
						"top": "465px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_24 = new cpr.controls.InputBox("ipbFrfItem10");
					inputBox_24.maxLength = 100;
					inputBox_24.bind("fieldLabel").toExpression("#optFrfItem10.value");
					inputBox_24.bind("value").toDataColumn("ITEM10");
					container.addChild(inputBox_24, {
						"top": "465px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfItem11");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-SCR-ITEM11");
					container.addChild(output_19, {
						"top": "490px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_25 = new cpr.controls.InputBox("ipbFrfItem11");
					inputBox_25.maxLength = 100;
					inputBox_25.bind("fieldLabel").toExpression("#optFrfItem11.value");
					inputBox_25.bind("value").toDataColumn("ITEM11");
					container.addChild(inputBox_25, {
						"top": "490px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfItem12");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-ITEM12");
					container.addChild(output_20, {
						"top": "515px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_26 = new cpr.controls.InputBox("ipbFrfItem12");
					inputBox_26.maxLength = 100;
					inputBox_26.bind("fieldLabel").toExpression("#optFrfItem12.value");
					inputBox_26.bind("value").toDataColumn("ITEM12");
					container.addChild(inputBox_26, {
						"top": "515px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfItem13");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-SCR-ITEM13");
					container.addChild(output_21, {
						"top": "540px",
						"left": "5px",
						"width": "65px",
						"height": "25px"
					});
					var inputBox_27 = new cpr.controls.InputBox("ipbFrfItem13");
					inputBox_27.maxLength = 100;
					inputBox_27.bind("fieldLabel").toExpression("#optFrfItem13.value");
					inputBox_27.bind("value").toDataColumn("ITEM13");
					container.addChild(inputBox_27, {
						"top": "540px",
						"left": "75px",
						"width": "525px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "30px",
					"left": "615px",
					"width": "605px",
					"height": "565px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCsrEnroll");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NOTICEMSGLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnNewCopy");
				button_6.value = "";
				button_6.style.setClasses(["btn-new"]);
				button_6.bind("value").toLanguage("UI-SCR-COPY");
				if(typeof onBtnNewCopyClick == "function") {
					button_6.addEventListener("click", onBtnNewCopyClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "900px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnPreView");
				button_7.value = "";
				button_7.bind("value").toLanguage("UI-SCR-PREVIEW");
				if(typeof onBtnPreViewClick == "function") {
					button_7.addEventListener("click", onBtnPreViewClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "835px",
					"width": "60px",
					"height": "25px"
				});
				var output_22 = new cpr.controls.Output("optGrdTxt");
				output_22.value = "";
				output_22.bind("value").toLanguage("UI-SCR-CSRMSGMNGGUID1");
				container.addChild(output_22, {
					"top": "5px",
					"left": "350px",
					"width": "475px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
		}
	});
	app.title = "extCsrCIfrContMng";
	cpr.core.Platform.INSTANCE.register(app);
})();
