/*
 * App URI: app/csr/extCsrCMstPromBatch
 * Source Location: app/csr/extCsrCMstPromBatch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCMstPromBatch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCMstPromBatch.xtm"/>
			
			var extCsrCMstPromBatch = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Choi In Seong 2016.05.13
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
							
				/**
				 * @desc 화면 온로드
				 * @param  
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				moPage.onModelConstructDone_extCsrCMstPromBatch = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptSaTargetCnt"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.DataMap.setValue(app, "dmReqList", "strSchYearRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSchYearRcd"));
							util.DataMap.setValue(app, "dmReqList", "strSmtRcd", util.DataMap.getValue(app, "dmResOnLoad", "strSmtRcd"));
							
							util.Control.redraw(app, ["rptSaTargetCnt", "cbbSchYearRcd", "cbbSmtRcd"]);
							
							doList(function(pbSuccess) {
							// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccess) {
									util.Msg.notify(app, "NLS.INF.M024");
								}
							});
						}
					});
				}
			
				/**
				 * @desc 학과별 대상인원수조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				function doList(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptSaTargetCnt"]);
							var vnRowCnt = util.DataSet.getRowCount(app, "dsRptSaTargetCnt");
							var vsTotalCnt = 0;
							for(var i =1 ; i<=vnRowCnt ; i++){
								vsTotalCnt = vsTotalCnt + Number(util.Grid.getCellValue(app, "grdSaTargetCnt", "ATTE_STUD_CNT",i));
							}
							util.Control.setValue(app, "optTargetCnt", vsTotalCnt);
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
			
				/**
				 * @desc 일괄진급처리 실행
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				function doSave(pnStep) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					util.DataMap.setValue(app, "dmReqList", "iStepNo", pnStep);
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmResSave", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmResSave", "iStepNo");
									return doSave(vnStep);
								} else {
									util.removeCover(app);
									return false;
								}
							} else {
								
								var vnProcCnt = util.DataMap.getValue(app, "dmResSave", "iProcCnt");
								util.Control.setValue(app, "optProcCnt", vnProcCnt);
								util.Msg.notify(app, "NLS.CSR.EXT010", [vnProcCnt]);
								util.removeCover(app);
								return true;
							}
						}else{
							util.removeCover(app);
							return false;
						}
					});
				}
			
				/**
				 * @desc 일괄진급처리 실행 버튼 클릭
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				moPage.onClick_BtnSave = function() {
					util.coverPage(app);
					var vsSchYearRcd = util.SelectCtl.getLabel(app, "cbbSchYearRcd", util.SelectCtl.getSelectedIndex(app, "cbbSchYearRcd"));
					var vsSmtRcd = util.SelectCtl.getLabel(app, "cbbSmtRcd", util.SelectCtl.getSelectedIndex(app, "cbbSmtRcd"));
					//진급처리 실행 여부
					if(!util.Msg.confirm("NLS-CRM-EXT004", [vsSchYearRcd, vsSmtRcd]) ){
						util.removeCover(app);
						return false;
					}
					doSave();
				};
				
				/**
				 * @desc 학년도 변경시 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				moPage.onValueChanged_CbbSchYearRcd = function() {
					doList(function(pbSuccess) {
					// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				
				/**
				 * @desc 학기변경시 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.05.13
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					doList(function(pbSuccess) {
					// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSaTargetCnt");
			dataSet_3.parseData({
				"columns": [
					{"name": "SA_NM"},
					{"name": "ATTE_STUD_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "iStepNo",
						"dataType": "string"
					},
					{
						"name": "strAtteStudSum",
						"dataType": "string"
					},
					{
						"name": "strPorcCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResSave");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strMsg",
						"dataType": "string"
					},
					{
						"name": "iStepNo",
						"dataType": "string"
					},
					{
						"name": "iProcCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrMstPromBatch/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrMstPromBatch/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/ExtCsrMstPromBatch/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptExtCsrFile");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "60px",
					"left": "5px",
					"width": "310px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "실행";
				button_1.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "30px",
					"left": "610px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdSaTargetCnt");
				grid_1.init({
					"dataSet": app.lookup("dsSaTargetCnt"),
					"columns": [
						{"width": "40px"},
						{"width": "479px"},
						{"width": "121px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "학과";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "대상학생수";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ATTE_STUD_CNT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptAtteCnt");
										output_1.dataType = "number";
										output_1.format = "s#,##0";
										output_1.style.css({
											"text-align" : "right"
										});
										output_1.bind("value").toDataColumn("ATTE_STUD_CNT");
										return output_1;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "85px",
					"left": "5px",
					"width": "1215px",
					"height": "272px"
				});
				var output_2 = new cpr.controls.Output("optSchYearRcd");
				output_2.value = "학년도";
				output_2.style.setClasses(["require"]);
				container.addChild(output_2, {
					"top": "30px",
					"left": "5px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "30px",
					"left": "85px",
					"width": "100px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optSmtRcd");
				output_3.value = "학기";
				output_3.style.setClasses(["require"]);
				container.addChild(output_3, {
					"top": "30px",
					"left": "270px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "30px",
					"left": "350px",
					"width": "120px",
					"height": "25px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.ctrl = app.lookup("grdExtCsrFile1");
				userDefinedControl_3.bind("title").toLanguage("");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "5px",
					"width": "225px",
					"height": "25px"
				});
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("");
				container.addChild(userDefinedControl_4, {
					"top": "362px",
					"left": "5px",
					"width": "110px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optTargetCnt");
				output_4.value = "대상자 수";
				container.addChild(output_4, {
					"top": "387px",
					"left": "5px",
					"width": "95px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optProcCnt");
				output_5.value = "처리건수";
				container.addChild(output_5, {
					"top": "387px",
					"left": "255px",
					"width": "95px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optTargetCnt");
				output_6.value = "";
				output_6.dataType = "number";
				output_6.format = "s#,##0";
				output_6.style.css({
					"text-align" : "right"
				});
				output_6.bind("value").toDataMap(app.lookup("dmReqList"), "strAtteStudSum");
				container.addChild(output_6, {
					"top": "387px",
					"left": "105px",
					"width": "140px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optProcCnt");
				output_7.value = "";
				output_7.dataType = "number";
				output_7.format = "s#,##0";
				output_7.style.css({
					"text-align" : "right"
				});
				output_7.bind("value").toDataMap(app.lookup("dmReqList"), "strPorcCnt");
				container.addChild(output_7, {
					"top": "387px",
					"left": "355px",
					"width": "140px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrCMstPromBatch";
	cpr.core.Platform.INSTANCE.register(app);
})();
