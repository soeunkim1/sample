/*
 * App URI: app/csr/extCsrCRemoIfrSnd
 * Source Location: app/csr/extCsrCRemoIfrSnd.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCRemoIfrSnd", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCRemoIfrSnd.xtm"/>
			
			var extCsrCRemoIfrSnd = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{   //소속 조회조건 행정,학사부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbSaNm",
						iObjDivRcd			:	["CC009SA", "CC009OG"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqList/strKeyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"/root/reqList/strObjDivRcd",
						oCd					:	"/root/reqList/strSaCd",
						oCdNm				:	"ipbSaNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					:  null
					}
				];
					
				/**
				 * @desc 헤더 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onModelConstructDone_extCsrCRemoIfrSnd = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptRemoIfrSnd");
					// 2. 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.setValue(app, "cbbYearRcd", util.DataMap.getValue(app, "dmDefYearSmtRcdInfo", "YEAR"));
							util.Control.setValue(app, "cbbSmtRcd", util.DataMap.getValue(app, "dmDefYearSmtRcdInfo", "SMT"));
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate"));
							
							util.Control.redraw(app, ["cbbYearRcd", "cbbSmtRcd", "cbbAltRsnRcd"]);
							
							// 통지서발송임포트 init 함수
							doInitByImpExtCsrIfrSndCommon("", "rptRemoIfrSnd", function(pbSuccess){
								if(pbSuccess){
									doList();
								}
							}, "Y", null, util.DataMap.getValue(app, "dmReqList", "strKeyDate"), util.DataMap.getValue(app, "/root/reqList/strSchYearRcd"), util.DataMap.getValue(app, "/root/reqList/strSmtRcd"));
							
						}
					});
				}
			
				/**
				 * @desc 학년도 변경시 표훈학기 날짜 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				moPage.onValueChanged_CbbYearRcd = function() {
					doGetKeyDate();
				};
				
				/**
				 * @desc 학기 변경시 표훈학기 날짜 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				moPage.onValueChanged_CbbSmtRcd = function() {
					doGetKeyDate();
				};
				
				/**
				 * @desc 학년도, 학기에 해당되는 기준일을 조회한다.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 11.
				 */
				function doGetKeyDate() {
				
					//strCommand: getKeyDate 
					util.Submit.send(app, "subGetKeyDate", function(pbSuccess) {
			
						if (pbSuccess) {
							//전체권한일시 최상위 부서가 셋팅 되어 있으면 초기화 하지 않음
							var strSaCd = util.DataMap.getValue(app, "dmReqList", "strSaCd");
							if(moPageInfo.authRngRcd == "CC00102"){
								if(strSaCd != ExtInstance.getValue("instance('insStdCmnPObjSch')/root/resListObjInfo/strObjCd")){
									util.Control.setValue(app, "ipbSaNm", "");
									util.Control.setValue(app, "ipbSaCd", "");
									util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
									
								}
							// 전체권한 이외의 권한일시 자신의 소속 부서가 셋팅되어 있으면 초기화 하지 않음
							}else if(moPageInfo.authRngRcd == "CC00101" || moPageInfo.authRngRcd == "CC00105" || moPageInfo.authRngRcd == "CC00106" || moPageInfo.authRngRcd == "CC00107"){
								if(strSaCd != moUserInfo.asgnDeptCd){
									util.Control.setValue(app, "ipbSaNm", "");
									util.Control.setValue(app, "ipbSaCd", "");
									util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
								}
							}
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmResGetKeyDate", "strKeyDate"));
						} else {
							util.DataMap.setValue(app, "dmReqList", "strSchYearRcd", "");
							util.DataMap.setValue(app, "dmReqList", "strSmtRcd", "");
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", "");
							util.Control.setValue(app, "cbbYearRcd", "");
							util.Control.setValue(app, "cbbSmtRcd", "");
						}
						
						// 통지서출력시 사용될 값을 다시 세팅한다.
						setKeyDateByImpExtCsrIfrSndCommon(util.DataMap.getValue(app, "dmReqList", "strKeyDate"));
						setSchYearRcdByImpExtCsrIfrSndCommon(util.DataMap.getValue(app, "dmReqList", "strSchYearRcd"));
						setSmtRcdByImpExtCsrIfrSndCommon(util.DataMap.getValue(app, "dmReqList", "strSmtRcd"));
					});
				};
				
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 11.
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
			
				/**
				 * @desc 소속 검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onValueChanged_IpbSaCd = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 객체검색 팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 소속 검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				}
					
				/**
				 * @desc 조회 버튼 클릭 이밴트
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onClick_BtnSearch = function() {
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["cbbYearRcd", "cbbSmtRcd", "ipbSaNm", "cbbAltRsnRcd"])){
						return false;
					}
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							util.Msg.notify(app, "NLS.INF.M024");
						}
					});
				};
					
				/**
				 * @desc 제적생 목록 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				function doList(poFunc) {
					// submission call 
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptRemoIfrSnd"]);
						}
						
						if(util.isFunc(poFunc)) poFunc(pbSuccess);
					});
						
				};
			
				/**
				 * @desc 제적사유 콤보박스 값 변경시 실행되는 함수
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onValueChanged_CbbAltRsnRcd = function() {
					var vsAltRsnRcd = util.Control.getValue(app, "cbbAltRsnRcd");
					setIfrSheetDivRcdByImpExtCsrIfrSndCommon(ExtInstance.getValue("/root/resOnLoad/altRsnRcdList/row[ child:: CD='"+ vsAltRsnRcd +"' ]/CD_PRP2"));
				};
			
				/**
				 * @desc 객체검색 팝업 전체권한 최상위부서 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 11
				 */
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsAltRsnRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsStatRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsRemoIfrSnd");
			dataSet_5.parseData({
				"info": "EXT_CSR_IFR_SND@STUD_ID",
				"columns": [
					{"name": "SA_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "STAT_RCD"},
					{"name": "CLP_NO"},
					{"name": "ADDR"},
					{"name": "SND_YN"},
					{"name": "SND_DT"},
					{"name": "STUD_ID"},
					{"name": "SA_CD"},
					{"name": "STAT_NM"},
					{"name": "ALT_DT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmDefYearSmtRcdInfo");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAltRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResGetKeyDate");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrRemoIfrSnd/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrRemoIfrSnd/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subGetKeyDate");
			submission_3.action = "/csr/ExtCsrRemoIfrSnd/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optYearRcd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "190px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "275px",
					"width": "115px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optAltRsnRcd");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-REMRSN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "660px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbAltRsnRcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optAltRsnRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strAltRsnRcd");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsAltRsnRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				if(typeof onCbbAltRsnRcdSelectionChange == "function") {
					comboBox_3.addEventListener("selection-change", onCbbAltRsnRcdSelectionChange);
				}
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "745px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optSaCd");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_4, {
					"top": "5px",
					"left": "400px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "485px",
					"width": "145px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnPopSearch");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopSearchClick == "function") {
					button_2.addEventListener("click", onBtnPopSearchClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "631px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSaCd");
				inputBox_2.visible = false;
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSaCd");
				if(typeof onIpbSaCdValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSaCdValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "650px",
					"width": "15px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCsrShreg");
				userDefinedControl_2.bind("title").toLanguage("");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdRemoIfrSnd");
				grid_1.init({
					"dataSet": app.lookup("dsRemoIfrSnd"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "212px"},
						{"width": "57px"},
						{"width": "80px"},
						{"width": "90px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "120px"},
						{"width": "270px"},
						{"width": "69px"},
						{"width": "70px"},
						{
							"width": "60px",
							"visible": false
						},
						{
							"width": "60px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-REMDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CTTP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ADDR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "발송여부";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SNDDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "오브젝트ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "부서코드";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CLP_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "ADDR";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SND_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SND_DT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptBtnSndDt");
										output_6.dataType = "date";
										output_6.format = "YYYY-MM-DD";
										output_6.style.css({
											"text-align" : "center"
										});
										output_6.bind("value").toDataColumn("SND_DT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "SA_CD";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "565px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaExtCsrIfrSnd");
				cpr.core.App.load("app/csr/impExtCsrIfrSndCommon", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "900px",
					"width": "320px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_2.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "671px",
				"left": "90px",
				"width": "95px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCRemoIfrSnd";
	cpr.core.Platform.INSTANCE.register(app);
})();
