/*
 * App URI: app/csr/extCsrCStudBase
 * Source Location: app/csr/extCsrCStudBase.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCStudBase", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrCStudBase.xtm"/>
			
			
			var extCsrCStudBase = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
					
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var msStudId = "";
				var msUseTabNm = "";
				
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				moPage.mbIsInsertRowFrfGuard = false;
				
				/**
				 * 우편번호검색팝업 관련 설정사항
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  [IN]
				 *   1. controlId					: (필수) 최초 이벤트의 버튼id
				 *  [OUT]
				 *  2. oZipCode					: 우편번호
				 *  3. oZipSeq					: 우편일련번호
				 *  4. oBdMno                    : 건물번호
				 *  5. oAddr						: 주소
				 *  6. func						: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 * @member impStdCmnPZipSearch
				 * @type Array
				 * @author Choi In Seong at 16. 1. 26
				 */ 
				moPObject.moIdsForStdCmnPZipSearch = [
					 { 
						 controlId					: "btnNewPopZipcodeSearch",		//(필수)우편번호검색
						 oZipCode					: "ipbFrfZipcode",	//리턴 우편번호
						 oAddr						: "ipbFrfAddr1",		//리턴 주소
						 oAddrDtl					: "ipbFrfAddr2",		//리턴 주소
						 func				 			: null
					 },
					{ 
						 controlId					: "btnNewPopZipcodeSearchGuard",		//(필수)우편번호검색
						 oZipCode					: "ipbFrfZipcodeGuard",	//리턴 우편번호
						 oAddr						: "ipbFrfAddrGuard1",		//리턴 주소
						 oAddrDtl					: "ipbFrfAddrGuard2",		//리턴 주소
						 func				 			: null
					 }
				 ];
				
				moPage.onLoadImportDone_impSbpHeader = function() {
					doSbpHeaderOnLoad();
				};
				
				moPage.onModelConstructDone_StdCsrCMstBase = function() {
					doOnLoad();
				};
				
				/**
				 * @desc 프리폼 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doCheckDataChange() {
			
					if(util.Grid.isModified(app, ["frfCmnAddr"], "CRM") || util.Grid.isModified(app, ["frfCmnAddrGuard"], "CRM")){
						return false;
					}else{
						return true;
					}
					
				}
				
				/**
				 * @desc doOnLoad 화면 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doOnLoad(){
					
					//리피트 초기화
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrShreg", "frfCsrEntrInfo", "frfCmnAddr", "frfCmnAddrGuard"]);
					
					//암호화 관련 컬럼 Origin 데이터 설정
					ExtRepeat.addOriginCol("frfCsrShreg", ["SSN", "ACCT_NO"]);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							
							// 부모멤버변수에담긴학번받음
							msStudId = moPage.parent.moParentObj.studId;
							msUseTabNm = moPage.parent.moParentObj.USE_TAB_NM;
							
							util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
							util.DataMap.setValue(app, "dmReqList", "strUseTabNm", msUseTabNm);
							util.DataMap.setValue(app, "dmReqList", "strKeyDate", moPage.parent.moParentObj.keyDate);
					
							//기본정보, 주소정보 조회
							doList(function(pbSuccess) {
								if (pbSuccess) {
									util.Control.redraw(app, ["frfCsrShreg", "frfCsrEntrInfo","frfCmnAddr", "frfCmnAddrGuard"]);
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccess) moPage.parentSendMsg("lblTitle", NLS.INF.M024);
								}
							});
						}
					});
				}
				
				/**
				 * @desc 해당 학생의 기본정보, 주소정보 데이터를 가져온다.
				 * @param poFunc 콜백함수
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doList(poFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
						if (pbSuccess) {
							
							
							util.Control.redraw(app, ["frfCsrShreg","frfCsrEntrInfo","frfCmnAddr", "frfCmnAddrGuard"]);
							
							// 입학동기의 값이 존재하는 경우, 수정할 수 없도록 처리 (2016.11.23 )
							var vEntrMotive = util.DataMap.getValue(app, "dmFrfCsrEntrInfo", "ENTR_MOTIVE_RCD"); 
							
							if (vEntrMotive != "" ) 
							{ 	// 기타인 경우에만 텍스트창이 보이도록 
								if (vEntrMotive == "CSR00199" ) {
									util.Control.setVisible(app, true, ["ipbEntrMotive"]);
								}else{
									util.Control.setVisible(app, false, ["ipbEntrMotive"]);
								}
								util.Control.setEnable(app, false, ["frfCsrEntrInfo"]);
							}else{					
								util.Control.setEnable(app, true, ["frfCsrEntrInfo"]);
							}			
							
							// 기본주소 데이터 존재여부 체크
							var vsRowCnt = util.DataMap.getValue(app, "dmResList", "rowAddrCnt");
							if (vsRowCnt == "0") {
								doSubInsertRow(); 
							}else{
								moPage.mbIsInsertRowFrf = false;
								util.Control.setEnable(app, true, ["frfCmnAddr"]);
							}
							
							// 보호자주소 데이터 존재여부 체크
							var vsRowGuardCnt = util.DataMap.getValue(app, "dmResList", "rowGuardCnt");
							if (vsRowGuardCnt == "0") {
								doSubInsertGuardRow();
							}else{
								moPage.mbIsInsertRowFrfGuard = false;
								util.Control.setEnable(app, true, ["frfCmnAddrGuard"]);
							}
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poFunc)) poFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doSubSave(poCallbackFunc) {
					
					
					var vEntrMotive = util.DataMap.getValue(app, "dmFrfCsrEntrInfo", "ENTR_MOTIVE_RCD"); 
					if (vEntrMotive =="" ) {
									util.Msg.alert("입학동기를 입력하여주십시오.");
									return false; 
					}
					
					// 필수값 체크
					if(!util.validate(app, ["frfCsrShreg", "frfCsrEntrInfo", "frfCmnAddr", "frfCmnAddrGuard"])){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					// 프리폼 변경사항 체크
					if(!(util.Grid.isModified(app, ["frfCsrShreg"], null)
						||util.Grid.isModified(app, ["frfCsrEntrInfo"], null)
						||util.Grid.isModified(app, ["frfCmnAddr"], null)
						||util.Grid.isModified(app, ["frfCmnAddrGuard"], null)
					)){
						moPage.parentSendMsg("lblTitle",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					doSave(poCallbackFunc);
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doSave(poCallbackFunc) {
			
					//신규일 경우 fiag insert 로 변경
					if( moPage.mbIsInsertRowFrf && util.Grid.isModified(app, ["frfCmnAddr"], null)){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCmnAddr",cpr.data.tabledata.RowState.INSERTED,'1');
					}
					if( moPage.mbIsInsertRowFrfGuard && util.Grid.isModified(app, ["frfCmnAddrGuard"], null)){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCmnAddrGuard",cpr.data.tabledata.RowState.INSERTED,'1');
					}
					
					//save submission call
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								var voCallBackSaveAfter = function(pbSuccessAfter) {
									if(pbSuccessAfter) {
										//저장성공 메세지 출력
										moPage.parentSendMsg("lblTitle", NLS.INF.M025);
																		
										if(util.isFunc(poCallbackFunc))	poCallbackFunc(true);
									}
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
								
								return true;
							}else{
								return false;
							}
						}
					);
				};
			
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCmnAddr",AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCmnAddr");
					//주소 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCmnAddr", "KEY_TAB_NM", msStudId);
					util.FreeForm.setValue(app, "frfCmnAddr", "USE_TAB_NM", msUseTabNm);
					util.FreeForm.setValue(app, "frfCmnAddr", "ADDR_PRP_DIV_RCD", "CB011BASE");
					util.FreeForm.setValue(app, "frfCmnAddr", "ST_DT", "19000101");
					util.FreeForm.setValue(app, "frfCmnAddr", "END_DT", "99991231");
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCmnAddr",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrf = true;
					util.Control.setEnable(app, true, ["frfCmnAddr"]);
				};
				
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				function doSubInsertGuardRow() {
					util.FreeForm.setValue(app, "frfCmnAddrGuard",AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCmnAddrGuard");
					//보호자 주소 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "KEY_TAB_NM", msStudId);
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "USE_TAB_NM", msUseTabNm);
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "ADDR_PRP_DIV_RCD", "CB011SPON");
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "ST_DT", "19000101");
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "END_DT", "99991231");
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCmnAddrGuard",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrfGuard = true;
					util.Control.setEnable(app, true, ["frfCmnAddrGuard"]);
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 저장 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				moPage.onClick_BtnSave = function() {
					doSubSave();
				};
				
				/**
				 * @desc 우편번호 팝업호출
				 * @param sender
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				moPage.onClick_BtnPopZipcodeSearch = function(sender) {
					//우편번호검색 돋보기버튼 Click 이벤트 
					doOnClickStdCmnPZipSearch(sender);
				}
				
				/**
				 * @desc 우편번호 팝업호출
				 * @param sender
				 * @return void
				 * @author Choi In Seong 2016. 3. 28
				 */
				moPage.onClick_BtnPopZipcodeSearchGuard = function(sender) {
					//우편번호검색 돋보기버튼 Click 이벤트 
					doOnClickStdCmnPZipSearch(sender);
				};
				
				
				moPage.onValueChanged_CbbFrfMotive = function() {
					
					var vEntrMotive = util.DataMap.getValue(app, "dmFrfCsrEntrInfo", "ENTR_MOTIVE_RCD"); 
				// 기타인 경우에만 텍스트창이 보이도록 
						if (vEntrMotive == "CSR00199" ) {
							util.Control.setVisible(app, true, ["ipbEntrMotive"]);
						}else{
							util.Control.setVisible(app, false, ["ipbEntrMotive"]);
						}
						
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSexList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsMotiveList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strUseTabNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfCsrShreg");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BANK_RCD",
						"dataType": "string"
					},
					{
						"name": "SUR_NM",
						"dataType": "string"
					},
					{
						"name": "DAY_NIGHT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "GAZETTE",
						"dataType": "string"
					},
					{
						"name": "RCOG_SMT_CNT",
						"dataType": "string"
					},
					{
						"name": "SPON_REL",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "MID_NM",
						"dataType": "string"
					},
					{
						"name": "GENDER_RCD",
						"dataType": "string"
					},
					{
						"name": "CLASS_RCD",
						"dataType": "string"
					},
					{
						"name": "SPON_JOB_NM",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "BIRTHDAY",
						"dataType": "string"
					},
					{
						"name": "ENG_NM",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "CHA_NM",
						"dataType": "string"
					},
					{
						"name": "REG_FEE_CAT_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PER_NM",
						"dataType": "string"
					},
					{
						"name": "PHOTO_FILE_PATH",
						"dataType": "string"
					},
					{
						"name": "SPON_NM",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "DMN_CD",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "FELLOW_YN",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFrfCmnAddr");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "HOMEPAGE1",
						"dataType": "string"
					},
					{
						"name": "KEY_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "MESSENGER2",
						"dataType": "string"
					},
					{
						"name": "FAX_EXT_NO",
						"dataType": "string"
					},
					{
						"name": "MESSENGER1",
						"dataType": "string"
					},
					{
						"name": "HOMEPAGE2",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REP_ADDR_YN",
						"dataType": "string"
					},
					{
						"name": "ZIPSEQ",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "RGN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "REP_CTTP_RCD",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "USE_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "ADDR_PRP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "CITY_NM",
						"dataType": "string"
					},
					{
						"name": "REP_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "POB_ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "FAX_NO",
						"dataType": "string"
					},
					{
						"name": "PAGER_NO",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "POB",
						"dataType": "string"
					},
					{
						"name": "FLAG_GBN",
						"dataType": "string"
					},
					{
						"name": "DRT_TEL_NO",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmFrfCmnAddrGuard");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "HOMEPAGE1",
						"dataType": "string"
					},
					{
						"name": "KEY_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "MESSENGER2",
						"dataType": "string"
					},
					{
						"name": "FAX_EXT_NO",
						"dataType": "string"
					},
					{
						"name": "MESSENGER1",
						"dataType": "string"
					},
					{
						"name": "HOMEPAGE2",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REP_ADDR_YN",
						"dataType": "string"
					},
					{
						"name": "ZIPSEQ",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "RGN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "REP_CTTP_RCD",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "USE_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "ADDR_PRP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DRT_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "CITY_NM",
						"dataType": "string"
					},
					{
						"name": "REP_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "POB_ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "FAX_NO",
						"dataType": "string"
					},
					{
						"name": "PAGER_NO",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "POB",
						"dataType": "string"
					},
					{
						"name": "FLAG_GBN",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResList");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "rowAddrCnt",
						"dataType": "string"
					},
					{
						"name": "rowGuardCnt",
						"dataType": "string"
					},
					{
						"name": "rowBaseCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmFrfCsrEntrInfo");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "ENTR_MOTIVE_RCD",
						"dataType": "string"
					},
					{
						"name": "PSRV_COL3",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrStudBase/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/ExtCsrStudBase/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_2);
			submission_2.addRequestData(dataMap_3);
			submission_2.addRequestData(dataMap_4);
			submission_2.addRequestData(dataMap_6);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/csr/ExtCsrStudBase/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_4, false);
			submission_3.addResponseData(dataMap_5, false);
			submission_3.addResponseData(dataMap_2, false);
			submission_3.addResponseData(dataMap_6, false);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrShreg");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShreg");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfHdcType");
					output_1.value = "";
					output_1.bind("value").toLanguage("UI-SCR-NAME");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfHdcGrdRcd");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-GLS-GENDER");
					container.addChild(output_2, {
						"top": "5px",
						"left": "415px",
						"width": "95px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfHdcpId");
					output_3.value = "";
					output_3.bind("value").toLanguage("UI-DB-CHA_NM");
					container.addChild(output_3, {
						"top": "30px",
						"left": "235px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfHdcType");
					inputBox_1.enabled = false;
					inputBox_1.maxLength = 100;
					inputBox_1.style.css({
						"text-align" : "center"
					});
					inputBox_1.bind("fieldLabel").toExpression("#optFrfHdcType.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "REP_NM");
					container.addChild(inputBox_1, {
						"top": "5px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfHdcGrdRcd");
					comboBox_1.enabled = false;
					comboBox_1.hideButton = true;
					comboBox_1.style.css({
						"text-align" : "center"
					});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfHdcGrdRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "GENDER_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsSexList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "515px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfHdcpId");
					inputBox_2.maxLength = 100;
					inputBox_2.bind("fieldLabel").toExpression("#optFrfHdcpId.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "CHA_NM");
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "335px",
						"width": "120px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfHdcpIdEndDt");
					output_4.value = "";
					output_4.bind("value").toLanguage("UI-DB-BIRTHDAY");
					container.addChild(output_4, {
						"top": "5px",
						"left": "235px",
						"width": "95px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfHdcDeg");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-DB-ENG_NM");
					container.addChild(output_5, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipFrfHdcpIdEndDt");
					dateInput_1.enabled = false;
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfHdcpIdEndDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "BIRTHDAY");
					container.addChild(dateInput_1, {
						"top": "5px",
						"left": "335px",
						"width": "70px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfHdcDeg");
					inputBox_3.maxLength = 100;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfHdcDeg.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "ENG_NM");
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfStudId");
					output_6.value = "오브젝트번호";
					output_6.style.setClasses(["require"]);
					container.addChild(output_6, {
						"top": "5px",
						"left": "715px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbStudId");
					inputBox_4.visible = false;
					inputBox_4.enabled = false;
					inputBox_4.userAttr({"require": "Y"});
					inputBox_4.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmFrfCsrShreg"), "STUD_ID");
					container.addChild(inputBox_4, {
						"top": "5px",
						"left": "820px",
						"width": "75px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "57px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-BASEINFO");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "436px",
					"left": "480px",
					"width": "60px",
					"height": "25px"
				});
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-BASEADDR");
				container.addChild(userDefinedControl_2, {
					"top": "152px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-GUARDADDR");
				container.addChild(userDefinedControl_3, {
					"top": "152px",
					"left": "515px",
					"width": "136px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfCmnAddr");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_7 = new cpr.controls.Output("optAddr1");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-DB-ADDR1");
					container.addChild(output_7, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optZipcode");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-GLS-ZIPCODE");
					container.addChild(output_8, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfAddr1");
					inputBox_5.enabled = false;
					inputBox_5.maxLength = 30;
					inputBox_5.bind("fieldLabel").toExpression("#optAddr1.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR1");
					container.addChild(inputBox_5, {
						"top": "30px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optClpNo");
					output_9.value = "휴대전화1";
					container.addChild(output_9, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfClpNo");
					numberEditor_1.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optClpNo.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "CLP_NO");
					container.addChild(numberEditor_1, {
						"top": "80px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbZipSeq");
					inputBox_6.visible = false;
					inputBox_6.maxLength = 50;
					inputBox_6.bind("fieldLabel").toExpression("#optZipSeq.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ZIPSEQ");
					container.addChild(inputBox_6, {
						"top": "4px",
						"left": "190px",
						"width": "10px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optAddr2");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-DB-ADDR2");
					container.addChild(output_10, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfAddr2");
					numberEditor_2.enabled = false;
					numberEditor_2.format = "99,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optAddr2.value");
					numberEditor_2.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR2");
					container.addChild(numberEditor_2, {
						"top": "55px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optDrtTelNo");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-DB-HOME_TEL_NO");
					container.addChild(output_11, {
						"top": "130px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfDrtTelNo");
					numberEditor_3.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_3.bind("fieldLabel").toExpression("#optDrtTelNo.value");
					numberEditor_3.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "DRT_TEL_NO");
					container.addChild(numberEditor_3, {
						"top": "130px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optEmail");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-DB-EMAIL");
					container.addChild(output_12, {
						"top": "155px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfEmail");
					inputBox_7.maxLength = 100;
					inputBox_7.bind("fieldLabel").toExpression("#optEmail.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "EMAIL");
					container.addChild(inputBox_7, {
						"top": "155px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfFlagGbn");
					inputBox_8.visible = false;
					inputBox_8.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "FLAG_GBN");
					container.addChild(inputBox_8, {
						"top": "4px",
						"left": "420px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfUseTabNm");
					inputBox_9.visible = false;
					inputBox_9.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "USE_TAB_NM");
					container.addChild(inputBox_9, {
						"top": "4px",
						"left": "440px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("iipbFrfKeyTabNm");
					inputBox_10.visible = false;
					inputBox_10.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "KEY_TAB_NM");
					container.addChild(inputBox_10, {
						"top": "4px",
						"left": "465px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfZipcode");
					inputBox_11.enabled = false;
					inputBox_11.maxLength = 50;
					inputBox_11.bind("fieldLabel").toExpression("#optZipcode.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ZIPCODE");
					container.addChild(inputBox_11, {
						"top": "5px",
						"left": "105px",
						"width": "65px",
						"height": "25px"
					});
					var button_2 = new cpr.controls.Button("btnNewPopZipcodeSearch");
					button_2.value = "";
					button_2.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnNewPopZipcodeSearchClick == "function") {
						button_2.addEventListener("click", onBtnNewPopZipcodeSearchClick);
					}
					container.addChild(button_2, {
						"top": "5px",
						"left": "170px",
						"width": "20px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("label2");
					output_13.value = "주소는 아이콘 클릭 후 팝업에서 입력";
					container.addChild(output_13, {
						"top": "5px",
						"left": "205px",
						"width": "210px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("inputbox1");
					inputBox_12.visible = false;
					inputBox_12.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ST_DT");
					container.addChild(inputBox_12, {
						"top": "80px",
						"left": "410px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("inputbox2");
					inputBox_13.visible = false;
					inputBox_13.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "END_DT");
					container.addChild(inputBox_13, {
						"top": "80px",
						"left": "425px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("inputbox3");
					inputBox_14.visible = false;
					inputBox_14.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR_PRP_DIV_RCD");
					container.addChild(inputBox_14, {
						"top": "80px",
						"left": "440px",
						"width": "15px",
						"height": "25px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("ipbFrfClpNo1");
					numberEditor_4.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_4.bind("fieldLabel").toExpression("#optClpNo.value");
					numberEditor_4.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "REP_TEL_NO");
					container.addChild(numberEditor_4, {
						"top": "106px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optClpNo1");
					output_14.value = "휴대전화2";
					container.addChild(output_14, {
						"top": "106px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "175px",
					"left": "5px",
					"width": "505px",
					"height": "256px"
				});
				var group_4 = new cpr.controls.Container("frfCmnAddrGuard");
				group_4.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_15 = new cpr.controls.Output("optAddrGuard1");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-ADDR1");
					container.addChild(output_15, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optZipcodeGuard");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-GLS-ZIPCODE");
					container.addChild(output_16, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfAddrGuard1");
					inputBox_15.enabled = false;
					inputBox_15.maxLength = 30;
					inputBox_15.bind("fieldLabel").toExpression("#optAddrGuard1.value");
					inputBox_15.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR1");
					container.addChild(inputBox_15, {
						"top": "30px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optClpNoGuard");
					output_17.value = "휴대전화1";
					container.addChild(output_17, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfClpNoGuard");
					numberEditor_5.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_5.bind("fieldLabel").toExpression("#optClpNoGuard.value");
					numberEditor_5.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "CLP_NO");
					container.addChild(numberEditor_5, {
						"top": "80px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbZipSeqGuard");
					inputBox_16.visible = false;
					inputBox_16.maxLength = 50;
					inputBox_16.bind("fieldLabel").toExpression("#optZipSeq.value");
					inputBox_16.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ZIPSEQ");
					container.addChild(inputBox_16, {
						"top": "4px",
						"left": "190px",
						"width": "10px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optAddrGuard2");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-DB-ADDR2");
					container.addChild(output_18, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_6 = new cpr.controls.NumberEditor("ipbFrfAddrGuard2");
					numberEditor_6.enabled = false;
					numberEditor_6.format = "99,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_6.bind("fieldLabel").toExpression("#optAddrGuard2.value");
					numberEditor_6.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR2");
					container.addChild(numberEditor_6, {
						"top": "55px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optDrtTelNoGuard");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-DB-HOME_TEL_NO");
					container.addChild(output_19, {
						"top": "130px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_7 = new cpr.controls.NumberEditor("ipbFrfDrtTelNoGuard");
					numberEditor_7.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_7.bind("fieldLabel").toExpression("#optDrtTelNoGuard.value");
					numberEditor_7.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "DRT_TEL_NO");
					container.addChild(numberEditor_7, {
						"top": "130px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optCompTelNoGuard");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-COMP_TEL_NO");
					container.addChild(output_20, {
						"top": "155px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_17 = new cpr.controls.InputBox("ipbFrfCompTelNoGuard");
					inputBox_17.maxLength = 30;
					inputBox_17.bind("fieldLabel").toExpression("#optCompTelNoGuard.value");
					inputBox_17.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "PAGER_NO");
					container.addChild(inputBox_17, {
						"top": "155px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_18 = new cpr.controls.InputBox("ipbFrfFlagGbnGuard");
					inputBox_18.visible = false;
					inputBox_18.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "FLAG_GBN");
					container.addChild(inputBox_18, {
						"top": "4px",
						"left": "430px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_19 = new cpr.controls.InputBox("ipbFrfUseTabNmGuard");
					inputBox_19.visible = false;
					inputBox_19.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "USE_TAB_NM");
					container.addChild(inputBox_19, {
						"top": "4px",
						"left": "450px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_20 = new cpr.controls.InputBox("iipbFrfKeyTabNmGuard");
					inputBox_20.visible = false;
					inputBox_20.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "KEY_TAB_NM");
					container.addChild(inputBox_20, {
						"top": "4px",
						"left": "475px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_21 = new cpr.controls.InputBox("ipbFrfZipcodeGuard");
					inputBox_21.enabled = false;
					inputBox_21.maxLength = 50;
					inputBox_21.bind("fieldLabel").toExpression("#optZipcodeGuard.value");
					inputBox_21.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ZIPCODE");
					container.addChild(inputBox_21, {
						"top": "5px",
						"left": "105px",
						"width": "65px",
						"height": "25px"
					});
					var button_3 = new cpr.controls.Button("btnNewPopZipcodeSearchGuard");
					button_3.value = "";
					button_3.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnNewPopZipcodeSearchGuardClick == "function") {
						button_3.addEventListener("click", onBtnNewPopZipcodeSearchGuardClick);
					}
					container.addChild(button_3, {
						"top": "5px",
						"left": "170px",
						"width": "20px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("label3");
					output_21.value = "주소는 아이콘 클릭 후 팝업에서 입력";
					container.addChild(output_21, {
						"top": "5px",
						"left": "205px",
						"width": "210px",
						"height": "25px"
					});
					var inputBox_22 = new cpr.controls.InputBox("inputbox4");
					inputBox_22.visible = false;
					inputBox_22.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ST_DT");
					container.addChild(inputBox_22, {
						"top": "80px",
						"left": "370px",
						"width": "16px",
						"height": "25px"
					});
					var inputBox_23 = new cpr.controls.InputBox("inputbox5");
					inputBox_23.visible = false;
					inputBox_23.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "END_DT");
					container.addChild(inputBox_23, {
						"top": "80px",
						"left": "385px",
						"width": "16px",
						"height": "25px"
					});
					var inputBox_24 = new cpr.controls.InputBox("inputbox6");
					inputBox_24.visible = false;
					inputBox_24.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR_PRP_DIV_RCD");
					container.addChild(inputBox_24, {
						"top": "80px",
						"left": "400px",
						"width": "16px",
						"height": "25px"
					});
					var numberEditor_8 = new cpr.controls.NumberEditor("ipbFrfClpNoGuard1");
					numberEditor_8.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_8.bind("fieldLabel").toExpression("#optClpNoGuard.value");
					numberEditor_8.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "REP_TEL_NO");
					container.addChild(numberEditor_8, {
						"top": "104px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optClpNoGuard1");
					output_22.value = "휴대전화2";
					container.addChild(output_22, {
						"top": "104px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "175px",
					"left": "515px",
					"width": "505px",
					"height": "256px"
				});
				var output_23 = new cpr.controls.Output("optTitle");
				output_23.value = "영문명 및 주소수정";
				container.addChild(output_23, {
					"top": "5px",
					"left": "145px",
					"width": "145px",
					"height": "25px"
				});
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("");
				container.addChild(userDefinedControl_4, {
					"top": "91px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var group_5 = new cpr.controls.Container("frfCsrEntrInfo");
				group_5.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_5.setLayout(xYLayout_6);
				(function(container){
					var output_24 = new cpr.controls.Output("optFrfEntrMotive");
					output_24.value = "입학동기";
					output_24.style.setClasses(["require"]);
					container.addChild(output_24, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfMotive");
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfMotive.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfo"), "ENTR_MOTIVE_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsMotiveList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					if(typeof onCbbFrfMotiveSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCbbFrfMotiveSelectionChange);
					}
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "110px",
						"width": "130px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optFrfStudId1");
					output_25.value = "오브젝트번호";
					output_25.style.setClasses(["require"]);
					container.addChild(output_25, {
						"top": "5px",
						"left": "730px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_25 = new cpr.controls.InputBox("ipbStudId1");
					inputBox_25.visible = false;
					inputBox_25.enabled = false;
					inputBox_25.userAttr({"require": "Y"});
					inputBox_25.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_25.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfo"), "STUD_ID");
					container.addChild(inputBox_25, {
						"top": "5px",
						"left": "835px",
						"width": "75px",
						"height": "25px"
					});
					var inputBox_26 = new cpr.controls.InputBox("ipbEntrMotive");
					inputBox_26.visible = false;
					inputBox_26.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfo"), "PSRV_COL3");
					container.addChild(inputBox_26, {
						"top": "5px",
						"left": "245px",
						"width": "454px",
						"height": "25px"
					});
				})(group_5);
				container.addChild(group_5, {
					"top": "114px",
					"left": "5px",
					"width": "1015px",
					"height": "32px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "455px",
				"left": "40px",
				"width": "96px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPZipSearch");
			cpr.core.App.load("app/cmn/impStdCmnPZipSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "455px",
				"left": "140px",
				"width": "50px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrCStudBase";
	cpr.core.Platform.INSTANCE.register(app);
})();
