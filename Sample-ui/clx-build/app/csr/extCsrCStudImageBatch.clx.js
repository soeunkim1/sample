/*
 * App URI: app/csr/extCsrCStudImageBatch
 * Source Location: app/csr/extCsrCStudImageBatch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrCStudImageBatch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrCStudImageBatch.xtm"/>
			
			var extCsrCStudImageBatch = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{   //조회조건 행정부서 학사부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbSaNm",
						iObjDivRcd			:	["CC009SA", "CC009OG"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqList/strKeyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"/root/reqList/strObjDivRcd",
						oCd					:	"/root/reqList/strSaCd",
						oCdNm				:	"ipbSaNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					:  null
					}
				];
				
				
				/**
				 * 학생검색팝업 관련 설정사항
				 * 설정가능 유형 : 
				 *   1. 인스턴스((/root/시작))
				 *   2. 그리드의 셀 (ghc시작)
				 *   3. 컨트롤 id
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  1. controlId 			: 최초 이벤트의 버튼이나 그리드 id	(필수)
				 *  2. iStudNo 			: 검색조건 학번								(선택) (값이 존재할 경우 4자리 이상)
				 *  3. iStudId 				: 검색조건 학번오브젝트					(선택)
				 *  4. iStudNm 			: 이름        									(선택) (값이 존재할 경우 2자리 이상)
				 *  5. iKeyDate 			: 기준일 										(필수)
				 *  6. iObjDivRcd 		: 객체구분코드 								(선택)
				 *  7. iObjCd 				: 부서코드										(선택)
				 *  8. iObjNm 			: 부서명											(선택) 
				 *  10. iStatRcd			: 학적상태										(선택) 
				 *  11. iStudDivRcd		: 학생구분										(선택) 
				 *  12. oStudId			: 학번오브젝트
				 *  13. oStudNo 			: 학번
				 *  14. oStudNm 		: 이름
				 *  15. oStatNm 			: 학적상태명
				 *  16. oStatRcd 			: 학적상태코드
				 *  17. oProcRslt 		: 진급학기
				 *  18. oProcRsltYear 	: 진급학년
				 *  19. oSaCd 			: 학사부서코드명
				 *  20. oSaNm 			: 학사부서명
				 *  21. oSpCd 			: 이수과정코드명
				 *  22. oSpNm 			: 이수과정명
				 *  23. oOgCd 			: 행정부서코드명
				 *  24. oOgNm 			: 행정부서명
				 *  25. oStudDivRcd		: 학생구분코드
				 *  26. oStudDivNm		: 학생구분명
				 *  27. oBirthday			: 생년월일
				 *  28. oGenderRcd		: 성별코드
				 *  29. oGenderNm		: 성별명
				 *  30. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 					: "btnPopStudSearch",
					iStudNo 					: "ipbStudNo",	
					iStudId 						: "",
					iStudNm 					: "",
					iKeyDate 					: "/root/reqList/strKeyDate", 
					iObjDivRcd 				: "",
					iObjCd 						: "",
					iObjNm 					: "",
					iStatRcd 					:"",
					iStudDivRcd				: "",
					oStudId 					: "/root/reqList/strStudId",
					oStudNo 					: "ipbStudNo",
					oStudNm 					: "",
					oStatNm 					: "",
					oStatRcd 					: "",
					oProcRslt 					: "",
					oProcRsltYear 			: "",
					oSaNm						: "",
					oSaCd 						: "",
					oSpNm 					: "",
					oSpCd 						: "",
					oOgNm 					: "",
					oOgCd 						: "",
					oStudDivRcd				: "",
					oStudDivNm				: "",
					oBirthday					: "",
					oGenderRcd				: "",
					oGenderNm				: "",
					func : function() {
						//팝업끝난후  후처리가 필요할때 입력 
						var vsStudId = util.DataMap.getValue(app, "dmReqList", "strStudId");
						if(!ValueUtil.isNull(vsStudId)) {
							util.SelectCtl.selectItem(app, "cbbProcRslt", 0);
							util.SelectCtl.selectItem(app, "cbbNight", 0);
							util.SelectCtl.selectItem(app, "cbbClass", 0);
							util.SelectCtl.selectItem(app, "cbbStatRcd", 0);
						}
					}
				}
				];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author Choi In Seong at 2016.08.17
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
							
				/**
				 * @desc 화면 온로드
				 * @return 
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onModelConstructDone_extCsrCStudImageBatch = function() {
			
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCsrShreg", "frfCsrShreg"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
								ExtRepeat.refresh(["rptCsrShreg"]);
								util.Control.redraw(app, ["frfCsrShreg"]);
								util.Control.redraw(app, ["cbbStatRcd", "cbbNight", "cbbClass", "dipKeyDate"]);
						}
					});
				}
			
			   /**
				 * @desc 학생목록 조회버튼 클릭
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnSearch = function() {
					 //작업영역 리피트 변경 내역 체크
					if(!doSearchChk()){
						return false;
					}
					
					if(!util.validate(app, ["ipbSaNm", "dipKeyDate"])){
						return false;
					}
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if (pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
			
				/**
				 * @desc 학생목록 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016.08.17
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCsrShreg");
							//프리폼 비활성화 제어
							doCompareFrfEnable();
							
							var vnRptCnt = util.DataSet.getRowCount(app, "dsRptCsrShreg");
							if(vnRptCnt == 0){
								util.Control.reset(app, "frfCsrShreg");
							}
							// 조회 후 콜백함수 수행
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					});
				}
			
			
			   /**
				 * @desc 학생 사진 일괄 업로드 버튼 클릭
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnSave = function() {
					var voCallbackFunc = function(poFileBuilder) {
						var vaFileNm = poFileBuilder.split(",");
						
						if(vaFileNm.length > 2){
							util.Msg.alert("NLS-ERR-M008");
						} else {
							// image upload
							doSave();
						}
					};
					FileUtil.getFileName(true , ['zip'], voCallbackFunc, "", false);
				};
				
				/**
				 * @desc 학생 사진 일괄 업로드
				 *            학생 파일이 들어있는 압축파일을 올린다. ex) 사진명 : 1600001.jpg 
				 * @return 
				 * @author Choi In Seong 2016.08.17
				 */
				function doSave() {
					//strCommand: batchStudImage 
					util.Submit.send(app, "subBatch", function(pbSuccess) {
						
						if(pbSuccess) {
							//업로드 성공건수
							var vnTotCnt = util.DataMap.getValue(app, "dmResProc", "iTotCnt");
							var vnSuccessCnt = util.DataMap.getValue(app, "dmResProc", "iSuccessCnt");
							var vnFailCnt = util.DataMap.getValue(app, "dmResProc", "iFailCnt");
							
							//처리하였습니다.(총:@, 성공:@, 실패:@)
							util.Msg.alert("NLS-CSR-M017", [vnTotCnt, vnSuccessCnt, vnFailCnt]);
							
							//저장성공 메세지 출력
							doList(function(pbSuccessList) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccessList) {
									util.Msg.notify(app, "NLS.INF.M025");
									
									//파일디렉토리경로
									var vsErrorFileDir = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileDir");
									//파일명
									var vsErrorFileNm = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileNm");
									//변환파일명(실제 서버에 저장된 파일명)
									var vsErrorFileChgNm = util.DataMap.getValue(app, "dmErrorFileInfo", "strFileChgNm");
									var vsTmpFilePath = util.DataMap.getValue(app, "dmErrorFileInfo", "strTmpFilePath");
									// 에러파일 다운로드
									if(!(ValueUtil.isNull(vsErrorFileNm) || vsErrorFileNm=="")){
										var voParam = {
													"strFileSubPath" : "",
													"strFileNm" : vsErrorFileChgNm,
													"strOriFileNm" : vsErrorFileNm,
													"strTmpFilePath" : vsTmpFilePath,
													"strCommand" : "fileDownLoad"
										}								
										FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex", voParam);								
											// 에러파일 초기화
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileDir","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileNm","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileChgNm","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strTmpFilePath","");
									} else{
										// 에러파일 초기화
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileDir","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileNm","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strFileChgNm","");
										util.DataMap.setValue(app, "dmErrorFileInfo", "strTmpFilePath","");
										return false;
									}
								}
							});
						}
					});
				}
			
				/**
				 * @desc 마스터 리피트 상태에 따른 프리폼 비활성화 제어
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				function doCompareFrfEnable() {
			
					if( (!util.Grid.getIndex(app, "grdCsrShreg"))
						|| util.Grid.getRowState(app, "grdCsrShreg") == cpr.data.tabledata.RowState.DELETED) {
						util.Control.setEnable(app, false, ["frfCsrShreg"]);	
					} else {
						util.Control.setEnable(app, true, ["frfCsrShreg"]);	
					}
				}
			
				/**
				 * @desc 리피트 rowSelect event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onRowSelect_RptCsrShreg = function() {
					// 리피트 현재 행 파일 경로
					var vsImgSrc = "";
					var strPhoto = util.Grid.getCellValue(app, "grdCsrShreg", "PHOTO_FILE_PATH");
					util.DataMap.setValue(app, "dmReqFileDown", "strPhoto", strPhoto);
					
					// 파일존재여부 메시지 호출 여부
					util.DataMap.setValue(app, "dmReqFileDown", "strMsgYn", "N");
					
					//strCommand: fileExistCheck 
					util.Submit.send(app, "subFileDown", function(pbSuccess) {
						if(pbSuccess) {
							var vsExistYn = util.DataMap.getValue(app, "dmReqFileDown", "strExistYn");
							if (vsExistYn=="N") {
								vsImgSrc = "../../images/imgs/noimages.png";
							} else {
								vsImgSrc = "std.csr.StdCsrImage.ex?strCommand=getStudImage&imgName=" + strPhoto + "&seed=" + Math.random();
							}
							ExtControl.setAttr("imgPhoto_Imp","src",vsImgSrc);
							util.Control.redraw(app, ["frfCsrShreg"]);
							//프리폼 비활성화 제어
							doCompareFrfEnable();
						}
					});
				};
				
				/**
				 * @desc 학과조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onValueChanged_IpbSaCd = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 학과조회 팝업 호출
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 학과조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onValueChanged_IpbSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				}
			
				/**
				 * @desc 학생조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onValueChanged_IpbStudNo = function(sender) {
					doOnChangeStdCsrPStSearch(sender);
				}
				
				/**
				 * @desc 학생검색 팝업 호출
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnPopStudSearch = function(sender) {
					doOnClickStdCsrPStSearch(sender);
				};
				
				
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				};
				
				/**
				 * @desc 학생사진 개별 업로드
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnUploadStudImg = function() {
					var voCallbackFunc = function(poFileBuilder) {
						var vaFileNm = poFileBuilder.split(",");
						
						if(vaFileNm.length > 2){
							util.Msg.alert("NLS-ERR-M008");
						} else {
							// image upload
							if(ValueUtil.isNull(vaFileNm[0])) return false;
							
							util.DataMap.setValue(app, "dmReqUpload", "strStudId", util.Grid.getCellValue(app, "grdCsrShreg", "STUD_ID"));
							
							//strCommand: saveStudImage 
							util.Submit.send(app, "subUploadStudImg", function(pbSuccess) {
								
								if(pbSuccess) {
									var strPhoto = util.DataMap.getValue(app, "dmReqUpload", "fileName");
									if (!!strPhoto) {
										
										var vsImgName = "std.csr.StdCsrImage.ex?strCommand=getStudImage&imgName=" + strPhoto + "&seed=" + Math.random();
										
										// src 값이 이전과 같을지라도 캐시없이 서버로 새롭게 요청한다
										ExtControl.setAttr("imgPhoto_Imp","src",vsImgName);
										util.Control.redraw(app, ["frfCsrShreg"]);
										util.Grid.setCellValue(app, "grdCsrShreg", "FILE_EXIST_YN", "Y");
									}
								}
							});
						}
					};
					FileUtil.getFileName(true , ['jpg'], voCallbackFunc, "", false);
				};
				
				/**
				 * @desc 학생사진 다운로드
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.08.17
				 */
				moPage.onClick_BtnDownStudImg = function() {
					//파일명
					var strPhoto = util.Grid.getCellValue(app, "grdCsrShreg", "PHOTO_FILE_PATH");
					util.DataMap.setValue(app, "dmReqFileDown", "strPhoto", strPhoto);
					
					//strCommand: fileExistCheck 
					util.Submit.send(app, "subFileDown", function(pbSuccess) {
						if(pbSuccess) {
							//파일 확장자
							var arrStr = strPhoto.split(".");
							var extStr = arrStr[arrStr.length - 1];
							
							//학번
							var strStudNo = util.Grid.getCellValue(app, "grdCsrShreg", "STUD_NO");
							var strFileNm = strStudNo + "." + extStr;
							
							var voParam = {
										"strFileSubPath" :"stdCsrImage",
										"strFileNm" :strPhoto,
										"strOriFileNm" : strFileNm,
										"strTmpFilePath" :"",
										"strCommand" : "fileDownLoad"
							}
							//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
							FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
						}
					});
				};
				
				/**
				 * @desc 조회조건 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 08. 10.
				 */
				function doSearchChk() {
					var vsDayNight = util.Control.getValue(app, "cbbNight");
					var vsStatus = util.Control.getValue(app, "cbbStatRcd");
					var vsProcYear = util.Control.getValue(app, "cbbProcRslt");
					var vsClass = util.Control.getValue(app, "cbbClass");
					var vsStudNo = util.Control.getValue(app, "ipbStudNo");
					
					var iSchCnt = 0;
					var iSchCnt2 = 0;
			
					if(!ValueUtil.isNull(vsDayNight)){
						iSchCnt = iSchCnt +1;
					}
					
					if(!ValueUtil.isNull(vsStatus)){
						iSchCnt = iSchCnt +1;
					}
					
					if(!ValueUtil.isNull(vsProcYear)){
						iSchCnt = iSchCnt +1;
					}
					
					if(!ValueUtil.isNull(vsClass)){
						iSchCnt = iSchCnt +1;
					}
					
					if(!ValueUtil.isNull(vsStudNo)){
						iSchCnt2 = iSchCnt2 +1;
					}
			
					if (iSchCnt < 2 && iSchCnt2 < 1) {
						util.Msg.alert("NLS-CSR-EXT026"); // 3가지는 필수 입력해야 합니다.
						return false;
					}
					
					return true;
				}
				
				
				moPage.onValueChanged_DipKeyDate = function() {
					//전체권한일시 최상위 부서가 셋팅 되어 있으면 초기화 하지 않음
					var stDeptCd = util.DataMap.getValue(app, "dmReqList", "strSaCd");
					if(moPageInfo.authRngRcd == "CC00102"){
						if(stDeptCd != ExtInstance.getValue("instance('insStdCmnPObjSch')/root/resListObjInfo/strObjCd")){
							util.Control.reset(app, ["ipbSaNm", "ipbSaCd"]);
							util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
						}
					// 전체권한 이외의 권한일시 자신의 소속 부서가 셋팅되어 있으면 초기화 하지 않음
					}else if(moPageInfo.authRngRcd == "CC00101" || moPageInfo.authRngRcd == "CC00105" || moPageInfo.authRngRcd == "CC00106" || moPageInfo.authRngRcd == "CC00107"){
						if(strSaCd != moUserInfo.asgnDeptCd){
							util.Control.reset(app, ["ipbSaNm", "ipbSaCd"]);
							util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");				
						}
					}
					util.Control.reset(app, ["ipbStudNo", "ipbStudId"]);
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsStatRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsNightDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsClassRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCsrShreg");
			dataSet_4.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "REP_NM"},
					{"name": "PHOTO_FILE_PATH"},
					{"name": "STUD_NO"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT"},
					{"name": "DAY_NIGHT_NM"},
					{"name": "STATUS_NM"},
					{"name": "CLASS_NM"},
					{"name": "FILE_EXIST_YN"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStatRcd",
						"dataType": "string"
					},
					{
						"name": "strProcRslt",
						"dataType": "string"
					},
					{
						"name": "strNightDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strClassRcd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfCsrShreg");
			dataMap_2.parseData({
				"columns" : [{
					"name": "PHOTO_FILE_PATH",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqUpload");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "fileName",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmReqFileDown");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strPhoto",
						"dataType": "string"
					},
					{
						"name": "strExistYn",
						"dataType": "string"
					},
					{
						"name": "strMsgYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResProc");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "iTotCnt",
						"dataType": "string"
					},
					{
						"name": "iSuccessCnt",
						"dataType": "string"
					},
					{
						"name": "iFailCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmErrorFileInfo");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrStudImageBatch/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrStudImageBatch/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subBatch");
			submission_3.action = "/csr/ExtCsrStudImageBatch/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_5, false);
			submission_3.addResponseData(dataMap_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subUploadStudImg");
			submission_4.action = "/csr/StdCsrImage/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subFileDown");
			submission_5.action = "/csr/ExtCsrStudImageBatch/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_4);
			submission_5.addResponseData(dataMap_4, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optStatRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-SCHREGST");
				container.addChild(output_1, {
					"top": "5px",
					"left": "810px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbStatRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optStatRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStatRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsStatRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "890px",
					"width": "60px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSaNm");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_2, {
					"top": "5px",
					"left": "180px",
					"width": "70px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSaNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "255px",
					"width": "110px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnPopSearch");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopSearchClick == "function") {
					button_2.addEventListener("click", onBtnPopSearchClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "366px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbSaCd");
				inputBox_2.visible = false;
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSaCd");
				if(typeof onIpbSaCdValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbSaCdValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "385px",
					"width": "10px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optProcRslt");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_3, {
					"top": "5px",
					"left": "395px",
					"width": "65px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbProcRslt");
				comboBox_2.bind("fieldLabel").toExpression("#optProcRslt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strProcRslt");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("1", "1"));
					comboBox_2.addItem(new cpr.controls.Item("2", "2"));
					comboBox_2.addItem(new cpr.controls.Item("3", "3"));
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "465px",
					"width": "55px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optNight");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-DB-DAN-DIV-RCD");
				container.addChild(output_4, {
					"top": "5px",
					"left": "530px",
					"width": "65px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbNight");
				comboBox_3.bind("fieldLabel").toExpression("#optNight.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strNightDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsNightDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "600px",
					"width": "60px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optClass");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-CLASSZ");
				container.addChild(output_5, {
					"top": "5px",
					"left": "670px",
					"width": "65px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbClass");
				comboBox_4.bind("fieldLabel").toExpression("#optClass.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqList"), "strClassRcd");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsClassRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "5px",
					"left": "740px",
					"width": "60px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optStudNo");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_6, {
					"top": "5px",
					"left": "960px",
					"width": "75px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbStudNo");
				inputBox_3.bind("fieldLabel").toExpression("#optStudNo.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strStudNo");
				if(typeof onIpbStudNoValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbStudNoValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "1040px",
					"width": "80px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnPopStudSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopStudSearchClick == "function") {
					button_3.addEventListener("click", onBtnPopStudSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1121px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbStudId");
				inputBox_4.visible = false;
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqList"), "strStudId");
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "1140px",
					"width": "10px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optKeyDate");
				output_7.value = "";
				output_7.style.setClasses(["require"]);
				output_7.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_7, {
					"top": "5px",
					"left": "5px",
					"width": "70px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strKeyDate");
				if(typeof onDipKeyDateValueChange == "function") {
					dateInput_1.addEventListener("value-change", onDipKeyDateValueChange);
				}
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "80px",
					"width": "90px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "일괄업로드";
				button_4.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1130px",
					"width": "90px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrShreg");
				grid_1.init({
					"dataSet": app.lookup("dsCsrShreg"),
					"columns": [
						{"width": "40px"},
						{"width": "305px"},
						{"width": "55px"},
						{"width": "55px"},
						{"width": "55px"},
						{"width": "70px"},
						{"width": "85px"},
						{"width": "85px"},
						{"width": "80px"},
						{
							"width": "118px",
							"visible": false
						},
						{
							"width": "103px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-DAN-DIV-RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CLASSZ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "사진유무";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "File Name";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "오브젝트ID";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "STATUS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "FILE_EXIST_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PHOTO_FILE_PATH";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbPhotoFilePath");
										inputBox_5.maxLength = 1000;
										inputBox_5.bind("value").toDataColumn("PHOTO_FILE_PATH");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbStudId");
										inputBox_6.maxLength = 10;
										inputBox_6.userAttr({"require": "Y"});
										inputBox_6.bind("value").toDataColumn("STUD_ID");
										return inputBox_6;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCsrShregSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCsrShregSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "845px",
					"height": "565px"
				});
				var group_3 = new cpr.controls.Container("frfCsrShreg");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var image_1 = new cpr.controls.Image("imgPhoto_Imp");
					image_1.src = "images/imgs/noimages.png";
					(function(image_1){
					})(image_1);
					container.addChild(image_1, {
						"top": "95px",
						"left": "50px",
						"width": "265px",
						"height": "360px"
					});
					var button_5 = new cpr.controls.Button("btnUploadStudImg");
					button_5.value = "up";
					if(typeof onBtnUploadStudImgClick == "function") {
						button_5.addEventListener("click", onBtnUploadStudImgClick);
					}
					container.addChild(button_5, {
						"top": "455px",
						"left": "50px",
						"width": "110px",
						"height": "25px"
					});
					var button_6 = new cpr.controls.Button("btnDownStudImg");
					button_6.value = "down";
					if(typeof onBtnDownStudImgClick == "function") {
						button_6.addEventListener("click", onBtnDownStudImgClick);
					}
					container.addChild(button_6, {
						"top": "455px",
						"left": "205px",
						"width": "110px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("label3");
					output_8.value = "jpg 확장자로 업로드 하세요.";
					container.addChild(output_8, {
						"top": "480px",
						"left": "50px",
						"width": "265px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "30px",
					"left": "860px",
					"width": "360px",
					"height": "565px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-STUDLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "215px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("label2");
				output_9.value = "\u203b 학생사진들을 압축(zip)해서 올려주십시오.";
				container.addChild(output_9, {
					"top": "5px",
					"left": "860px",
					"width": "265px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "676px",
				"left": "110px",
				"width": "95px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaort2");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "220px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrCStudImageBatch";
	cpr.core.Platform.INSTANCE.register(app);
})();
