/*
 * App URI: app/csr/extCsrPAplyRetu
 * Source Location: app/csr/extCsrPAplyRetu.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrPAplyRetu", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrPAplyRetu.xtm"/>
			
			var extCsrPAplyRetu = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
					
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var msStudId = "";
				var msUseTabNm = "";
				var mskeyDate = "";
				//서브페이지 팝업구분
				var msPageDiv = "";
				
				var maControls =  ["ipbFrfCstDt", "btnSave", "btnNewPopZipcodeSearch", "ipbFrfClpNo", "ipbFrfDrtTelNo", "ipbFrfEmail", "btnNewPopZipcodeSearchGuard", "ipbFrfClpNoGuard", "ipbFrfDrtTelNoGuard", "ipbFrfCompTelNoGuard"];
				
				moPObject.moExtCsrAplyRetu = {
					// 팝업 작동 내부사용
					controlId 						: "",			//  최초 이벤트의 버튼이나 그리드 id
					openedByChange           : false, 
					strStudId 						: "",			// (필수) 검색조건 학번오브젝트
					strUseTabNm				: ""            // (필수) 사용테이블
				};
				
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				moPage.mbIsInsertRowFrfGuard = false;
				
				/**
				 * 우편번호검색팝업 관련 설정사항
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  [IN]
				 *   1. controlId					: (필수) 최초 이벤트의 버튼id
				 *  [OUT]
				 *  2. oZipCode					: 우편번호
				 *  3. oZipSeq					: 우편일련번호
				 *  4. oBdMno                    : 건물번호
				 *  5. oAddr						: 주소
				 *  6. func						: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 * @member impStdCmnPZipSearch
				 * @type Array
				 * @author Choi In Seong at 16. 4. 06
				 */ 
				moPObject.moIdsForStdCmnPZipSearch = [
					 { 
						 controlId					: "btnNewPopZipcodeSearch",		//(필수)우편번호검색
						 oZipCode					: "ipbFrfZipcode",	//리턴 우편번호
						 oAddr						: "ipbFrfAddr1",		//리턴 주소
						 oAddrDtl					: "ipbFrfAddr2",		//리턴 주소
						 func				 			: null
					 },
					{ 
						 controlId					: "btnNewPopZipcodeSearchGuard",		//(필수)우편번호검색
						 oZipCode					: "ipbFrfZipcodeGuard",	//리턴 우편번호
						 oAddr						: "ipbFrfAddrGuard1",		//리턴 주소
						 oAddrDtl					: "ipbFrfAddrGuard2",		//리턴 주소
						 func				 			: null
					 }
				 ];
				
				/******************************************************************************************************
				 *  공통파일업로드 관련 설정사항 사용법
				 *
				 * 예시)
				 * var moIdsForStdCmnFileUtil = [{
				 *		controlId 					: "btnFileUpLoad",
				 *		iFileSerialNo 				: "rdOptFileSerialNo",
				 *		iFileSubPath 				:  model.getTitle(),
				 *		iTableName 				: "CMN_TMP_REG",
				 *		iIsDirectUpLoad			: null,
				 *     isFileSelectorOnly       : null,
				 *		iIsHideDelete 				: null,			
				 *		iIsDownloadOnly 		: null,
				 *		iFileExtFilter 				: null,
				 *		oFileSerailNo				: "rdOptFileSerialNo",
				 *		oTmpFilePath			: null,			//리피트일경우 null로 지정
				 *		oFileCnt					: null,		
				 *		oFileDataChanged		: null,
				 *		func							: function(poRtnFileInfo){
				 *											ex)
				 *											if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
																util.FreeForm.setValue(app, "frfCmnDevStd", "FILE_SERIAL_NO", "", true); 
																doSave();
															}
				 *										}
				 *	}];
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 			: 최초 이벤트의 버튼이나 그리드 id             						(필수)
				 *  	2. iFileSerialNo		: 파일순번                                										(선택) 
				 *  	3. iFileSubPath 		: 저장될 파일 폴더(appworks.properties에 정의된 폴더 경로)	(필수)	
				 *  	4. iTableName 		: 파일업로드에 사용될 업무단 테이블명								(필수)
				 *  	5. iIsHideDelete 		: 삭제버튼 숨기기 여부 													(선택)
				 *								  	  default : false;
				 *		6. iIsDownloadOnly	: 다운로드만 가능할지 여부(업로드X)									(선택)
				 *								      default : false;
				 *		7. iIsDirectUpLoad   : auto save기능을 사용하지 않고 파일업로드 팝업을 이용하여 업로드 후 업로드된 정보만 리턴받아 제어 할 경우 사용
				 *									  default : false;
				 *		8. isFileSelectorOnly : 파일 셀럭터를 이용하여 응용프로그램에서 탬프 파일 경로만 취득하여 제어할 경우경우 사용
				 *									  default : false;
				 *		9. iFileExtFilter		: 업로드가능 확장자(배열) 												(선택)
				 *								  	  ex)["jpg","png"]
				 *  	10. oFileSerailNo 		: 파일순번																		(필수)
				 *  	11. oFileCnt 			: 저장된 파일 갯수															(선택)
				 *									  (	func의 args 대체 가능 poRtnFileInfo.strFileCnt)
				 *									  리피트내 컬럼 지정시 updatable="False" 지정
				 *  	12. oTmpFilePath 	: 임시폴더파일경로															(선택)
				 *									  리피트일경우 null로 지정, TMP_FILE_PATH 데이터셋 생성됨
				 *									  
				 *		13.oFileDataChanged	: 파일업로드 변경 여부 판단											(필수)		
				 *									  (	func의 args 대체 가능 poRtnFileInfo.isFileDataChanged)
				 *
				 *  	14. func 				: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  args..
				 * 									  poRtnFileInfo.IS_FILE_CHG 			파일업로드 리피트 변경 여부
				 *															 FILE_CNT					업로드 파일 갯수
				 *															 TMP_FILE_PATH		임시파일경로
				 *									  						 FILE_SERAIL_NO		파일순번
				 *******************************************************************************************************/	
			//	moPObject.moIdsForStdCmnFileUtil = [{
			//		controlId 					: "btnNewFileUpLoad",
			//		iFileSerialNo 				: "ipbFrfFileSerialNo",
			//		iFileSubPath 				:  "extCsrCFileMng",
			//		iTableName 				: "EXT_CSR_SHREG_ALT_APLY",
			//		iIsDirectUpLoad			: true,
			//		isFileSelectorOnly       : null,
			//		iIsHideDelete 				: null,			
			//		iIsDownloadOnly 		: null,
			//		iFileExtFilter 				: ["jpg","png","img","pdf"],
			//		oFileSerailNo				: "ipbFrfFileSerialNo",
			//		oTmpFilePath			: null,			//리피트일경우 null로 지정
			//		oFileCnt					: "ipbFrfFileCnt",		
			//		oFileDataChanged		: null,
			//		func							: function(poRtnFileInfo){
			//											if(poRtnFileInfo.IS_FILE_CHG && poRtnFileInfo.FILE_CNT == 0){
			//												ExtFreeForm.setValue("frfExtCsrShregAltAply", "FILE_SERIAL_NO", "");
			//												ExtFreeForm.setValue("frfExtCsrShregAltAply", "FILE_CNT", "0");
			//												var vsSerialNo = ExtFreeForm.getValue("frfExtCsrShregAltAply", "SERIAL_NO");
			//												// 신청데이터가 존재 할 때 파일건수 0건이 내려오면 파일순번 초기화
			//												if(!ValueUtil.isNull(vsSerialNo)){
			//													ExtInstance.setValue("/root/reqList/strFileSaveDiv", "Y");
			//													ExtInstance.setValue("/root/reqList/strSerialNo", vsSerialNo);
			//													ExtSubmission.sendEx("subSave", "save", function(pbSuccessSave) {
			//														ExtInstance.setValue("/root/reqList/strFileSaveDiv", "");
			//													});
			//												}
			//											}else{
			//												ExtFreeForm.setValue("frfExtCsrShregAltAply", "FILE_SERIAL_NO", poRtnFileInfo.FILE_SERAIL_NO);
			//												ExtFreeForm.setValue("frfExtCsrShregAltAply", "FILE_CNT", poRtnFileInfo.FILE_CNT);
			//											}
			//										}
			//	}];
				
				moPage.onLoadImportDone_impSbpHeader = function() {
					ExtModel.setTitle("extCsrPAplyRetu");
					doSbpHeaderOnLoad();
				};
				
				moPage.onLoadImportDone_ImpTitle = function() {
					ExtModel.setTitle("복학 신청");
					doHeaderOnLoad();
				}
				
				moPage.onModelConstructDone_ExtCsrPAplyRetu = function() {
					//호출한 페이지에서 파라미터 받기.
					doParentGet();
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				/**
				 * @desc 부모창에서 보낸 변수 받기
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 6.
				 */
				function doParentGet() {
					
					if(ExtPopUp.isPopUp()) {
						// 호출한 페이지에서 파라미터 받기.													
						var voExtCsrAplyRetu =  ExtPopUp.getParentVal("moExtCsrAplyRetu");
						// 파라미터  값복사 (deep copy)
						for (var key in voExtCsrAplyRetu) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moPObject.moExtCsrAplyRetu [key] = voExtCsrAplyRetu [key];
						}
						// 팝업이 뜬후에는 false로 고침.
						voExtCsrAplyRetu.openedByChange = false;
					}
				}
				
				
				/**
				 * @desc 프리폼 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doCheckDataChange() {
					
					if(util.Grid.isModified(app, ["frfCmnAddr"], "CRM") || util.Grid.isModified(app, ["frfCmnAddrGuard"], "CRM") ||
					   util.Grid.isModified(app, ["frfExtCsrShregAltAply"], "CRM")){
						return false;
					}else{
						return true;
					}
					
				}
				
				/**
				 * @desc doOnLoad 화면 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doOnLoad(){
					
					//리피트 초기화
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfExtCsrShregAltAply", "frfCmnAddr", "frfCmnAddrGuard", "frfCsrShregAltAbs"]);
					
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moPObject.moExtCsrAplyRetu;
					
					// 부모멤버변수에담긴학번받음
					if(moPage.parent.moParentObj != null){
						msStudId = moPage.parent.moParentObj.studId;
						msUseTabNm = moPage.parent.moParentObj.USE_TAB_NM;
						msPageDiv = "S";  //서브페이지
			
						util.Control.setVisible(app, false, "impTitle");
						
					} else if (!ValueUtil.isNull(voParam.strStudId)) {
						msStudId = voParam.strStudId;
						msUseTabNm = voParam.strUseTabNm;
						msPageDiv = "P" //팝업
						util.Control.setStyleAttr(app, "grp_frfExtCsrShregAltAply", "top", '35px');
						util.Control.setStyleAttr(app, "grp_frfExtCsrShregAltAply", "left", '5px');
						util.Control.setStyleAttr(app, "btnSave", "left", '965px');
						util.Control.setVisible(app, true, "btnCloseCancel");
			
					} else {
						util.coverPage(app);
						return;
					}
					
					util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
					util.DataMap.setValue(app, "dmReqList", "strUseTabNm", msUseTabNm);
					util.DataMap.setValue(app, "dmReqList", "checkPgmId", "extCsrPAplyRetu");
					util.DataMap.setValue(app, "dmReqList", "checkUserId", moUserInfo.userId);  // 서브페이지 권한 체크시 userId 사용
					util.DataMap.setValue(app, "dmReqList", "checkMenuNm", ExtControl.getTextValue("lblTitle"));
					util.DataMap.setValue(app, "dmReqList", "strPageDiv", msPageDiv);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["frfExtCsrShregAltAply","frfCmnAddr", "frfCmnAddrGuard", "frfCsrShregAltAbs"]);
			
							//휴학신청, 주소정보 조회
							doList(function(pbSuccess) {
								if (pbSuccess) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(msPageDiv == "S"){
										//부모창에 메시지를 셋팅
										if(pbSuccess) moPage.parentSendMsg("lblTitle", NLS.INF.M024);
									}else{
										// 자신의 헤더에 메시지를 셋팅
										util.Msg.notify(app, "NLS.INF.M024"); // 조회되었습니다.
									}
								}
							});
						}
					});
				}
				
				/**
				 * @desc 해당 학생의 휴학정보, 복학신청, 주소정보 데이터를 가져온다.
				 * @param poFunc 콜백함수
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doList(poFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
			
						if (pbSuccess) {
							var vsErrMsg = util.DataMap.getValue(app, "dmResList", "strErrorMsg");
							
							if(!ValueUtil.isNull(vsErrMsg)){
								util.Msg.alert("vsErrMsg");
								setTimeout(function(){
									if(msPageDiv == "S"){
										util.Control.setEnable(app, false, ["frfCsrShregAltAbs", "frfExtCsrShregAltAply", "frfCmnAddr", "frfCmnAddrGuard", "btnSave"]);
									}else{
										ExtPopUp.closeLayeredPopup("callbackExtCsrPAplyRetu", moPObject.moExtCsrAplyRetu);
									}
								}, 500);
								return;
							}
							
							util.Control.redraw(app, ["frfExtCsrShregAltAply","frfCmnAddr", "frfCmnAddrGuard", "frfCsrShregAltAbs"]);
							
							// 휴학신청 데이터 존재여부 체크
							var vsRowCnt = util.DataMap.getValue(app, "dmResList", "rowRetuCnt");
							if (vsRowCnt == "0") {
								doSubInsertRetuRow();
							}else{
								var vsAplyStatRcd = util.FreeForm.getValue(app, "frfExtCsrShregAltAply", "APLY_STAT_RCD");
								// 신청상태에 따른 컨트롤 제어
								// 신청
								if(vsAplyStatRcd == "CSR10310"){
									util.Control.setEnable(app, true, maControls);
									
								// 승인
								} else if(vsAplyStatRcd == "CSR10320"){
									util.Control.setEnable(app, false, maControls);
									
								// 반려 시 신규 2016.04.22 choi in seong
								}else if(vsAplyStatRcd == "CSR10330"){
									util.FreeForm.insertRow(app, "frfExtCsrShregAltAply");
									doSubInsertRetuRow();
								}
							}
							
							// 기본주소 데이터 존재여부 체크
							var vsRowCnt = util.DataMap.getValue(app, "dmResList", "rowAddrCnt");
							if (vsRowCnt == "0") {
								doSubInsertRow();
							}else{
								moPage.mbIsInsertRowFrf = false;
							}
							
							// 보호자주소 데이터 존재여부 체크
							var vsRowGuardCnt = util.DataMap.getValue(app, "dmResList", "rowGuardCnt");
							if (vsRowGuardCnt == "0") {
								doSubInsertGuardRow();
							}else{
								moPage.mbIsInsertRowFrfGuard = false;
							}
							
							var vsAltRsnRcd = util.FreeForm.getValue(app, "frfCsrShregAltAbs", "ALT_RSN_RCD");//휴학사유
							// 군휴학이면 제대일자 필수
							if(vsAltRsnRcd == "CT40303"){
								ExtControl.setAttr("lblFrfCstDt", "class", "lblFrfReq");
								ExtControl.setAttr("ipbFrfCstDt", "class", "ipbFrfReqCenter");
								util.Control.setUserAttr(app, "ipbFrfCstDt", "require", "Y");
								
							}
							
							// 복학예정일을 지난 복학신청일 경우 휴학 연장 버튼 표시
			//				var vsIsLateReturnYn = ExtInstance.getValue("/root/resList/strIsLateReturnYn");
			//				if(vsIsLateReturnYn == "Y"){
			//					ExtControl.setVisible(true, ["btnChgBefAbs"]);
			//					ExtControl.setEnable(false, ["btnSave"]);
			//					
			//					//"예정되었던 복학시기보다 늦어 기일연기 휴학이 필요합니다.\n[휴학연장]을 먼저 실행해 주세요."
			//					ComMsg.alert(NLS.CSR.M129);
			//					
			//				} else {
			//					ExtControl.setVisible(false, ["btnChgBefAbs"]);
			//					ExtControl.setEnable(true, ["btnSave"]);
			//				}
							
						}else{
							util.Control.setEnable(app, false, ["frfCsrShregAltAbs", "frfExtCsrShregAltAply", "frfCmnAddr", "frfCmnAddrGuard", "btnSave"]);
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poFunc)) poFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doSubSave(poCallbackFunc) {
			
					var vZipcode = util.FreeForm.getValue(app, "frfCmnAddr", "ZIPCODE") ; 
					
					// 주소를 변경하도록 안내 메시지 추가 (2016.12.30 박선영) 
					if (vZipcode.length != 5 ) {				
							MsgBox.show("주소를 최신주소로 변경하여 주십시오.","ok","주소변경요청");		
							return false;
					}
					
			//		var vsIsLateReturnYn = ExtInstance.getValue("/root/resList/strIsLateReturnYn");
			//		if(vsIsLateReturnYn == "Y"){
			//			//"예정되었던 복학시기보다 늦어 기일연기 휴학이 필요합니다.\n[휴학연장]을 먼저 실행해 주세요."
			//			ComMsg.alert(NLS.CSR.M129);
			//			return false;
			//		}
					
					// 프리폼 변경사항 체크
					if(!(util.Grid.isModified(app, ["frfExtCsrShregAltAply"], null)
						||util.Grid.isModified(app, ["frfCmnAddr"], null)
						||util.Grid.isModified(app, ["frfCmnAddrGuard"], null)
					)){
						if(msPageDiv == "S"){
							moPage.parentSendMsg("lblTitle",NLS.WRN.M007);
						}else{
							// 자신의 헤더에 메시지를 셋팅
							util.Msg.notify(app, "NLS.WRN.M007"); // 변경된 데이터가 없습니다.
						}
			
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					// 필수값 체크
					if(!util.validate(app, ["frfExtCsrShregAltAply", "frfCmnAddr", "frfCmnAddrGuard"])){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					
					doSave(poCallbackFunc);
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doSave(poCallbackFunc) {
			
					//신규일 경우 fiag insert 로 변경
					if( moPage.mbIsInsertRowFrf && util.Grid.isModified(app, ["frfCmnAddr"], null)){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCmnAddr",cpr.data.tabledata.RowState.INSERTED,'1');
					}
					if( moPage.mbIsInsertRowFrfGuard && util.Grid.isModified(app, ["frfCmnAddrGuard"], null)){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCmnAddrGuard",cpr.data.tabledata.RowState.INSERTED,'1');
					}
					
					//save submission call
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								if(msPageDiv == "S"){
									var voCallBackSaveAfter = function(pbSuccessAfter) {
										if(pbSuccessAfter) {
											//저장성공 메세지 출력
											moPage.parentSendMsg("lblTitle", NLS.INF.M025);
																			
											if(util.isFunc(poCallbackFunc))	poCallbackFunc(true);
										}
									};
									ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
								} else {
									//저장 후 바로 팝업을 닫는다.
									ExtPopUp.closeLayeredPopup("callbackExtCsrPAplyRetu", moPObject.moExtCsrAplyRetu);
								}
								return true;
							}else{
								return false;
							}
						}
					);
				};
			
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doSubInsertRetuRow() {
					util.FreeForm.setValue(app, "frfExtCsrShregAltAply",AppConstants.CUD_COL_REF, "N");
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfExtCsrShregAltAply",cpr.data.tabledata.RowState.INSERTED,'1');
					//신규입력이 Ok
					util.Control.setEnable(app, true, ["frfExtCsrShregAltAply"]);
				};
				
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCmnAddr",AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCmnAddr");
					//주소 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCmnAddr", "KEY_TAB_NM", msStudId);
					util.FreeForm.setValue(app, "frfCmnAddr", "USE_TAB_NM", msUseTabNm);
					util.FreeForm.setValue(app, "frfCmnAddr", "ADDR_PRP_DIV_RCD", "CB011BASE");
					util.FreeForm.setValue(app, "frfCmnAddr", "ST_DT", "19000101");
					util.FreeForm.setValue(app, "frfCmnAddr", "END_DT", "99991231");
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCmnAddr",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrf = true;
					util.Control.setEnable(app, true, ["frfCmnAddr"]);
				};
				
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				function doSubInsertGuardRow() {
					util.FreeForm.setValue(app, "frfCmnAddrGuard",AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCmnAddrGuard");
					//보호자 주소 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "KEY_TAB_NM", msStudId);
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "USE_TAB_NM", msUseTabNm);
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "ADDR_PRP_DIV_RCD", "CB011SPON");
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "ST_DT", "19000101");
					util.FreeForm.setValue(app, "frfCmnAddrGuard", "END_DT", "99991231");
					
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCmnAddrGuard",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrfGuard = true;
					util.Control.setEnable(app, true, ["frfCmnAddrGuard"]);
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 저장 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				moPage.onClick_BtnSave = function() {
					doSubSave();
				};
				
				/**
				 * @desc 우편번호 팝업호출
				 * @param sender
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				moPage.onClick_BtnPopZipcodeSearch = function(sender) {
					//우편번호검색 돋보기버튼 Click 이벤트 
					doOnClickStdCmnPZipSearch(sender);
				}
				
				/**
				 * @desc 우편번호 팝업호출
				 * @param sender
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				moPage.onClick_BtnPopZipcodeSearchGuard = function(sender) {
					//우편번호검색 돋보기버튼 Click 이벤트 
					doOnClickStdCmnPZipSearch(sender);
				};
				
				
				/**
				 * @desc 파일업로드
				 * @param sender
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				
			//	moPage.onClick_BtnFileUpLoad = function(sender) {
			//		doOnClickStdCmnPFileUtil(sender);
			//	}
				
				
				/**
				 * @desc 팝업 닫기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 4. 6
				 */
				moPage.onClick_BtnCloseCancel = function() {
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					ExtPopUp.closeLayeredPopup("callbackExtCsrPAplyRetu", moPObject.moExtCsrAplyRetu);
				}
			
				
				/**
				 * @desc 휴학 연장 클릭
				 * @param 
				 * @return void
				 * @author Choi Kyung Min 2017. 2. 22
				 */
				moPage.onClick_BtnChgBefAbs = function() {
					
					var vsIsLateReturnYn = util.DataMap.getValue(app, "dmResList", "strIsLateReturnYn");
					if(vsIsLateReturnYn != "Y"){
						return false;
					}
					
					doChgBefAbs();
					
				};
				
				/**
				 * @desc 휴학 연장 실행
				 * @param 
				 * @return void
				 * @author Choi Kyung Min 2017. 2. 22
				 */
				function doChgBefAbs(){
					
					//strCommand: chgBefAbs 
					util.Submit.send(app, "subChgBefAbs", function(pbSuccess) {
						if (pbSuccess) {
							//"휴학기간이 연장되었습니다."
							util.Msg.alert("NLS-CSR-M130");
							
							//휴학신청, 주소정보 조회
							doList(function(pbSuccess) {
								if (pbSuccess) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(msPageDiv == "S"){
										//부모창에 메시지를 셋팅
										if(pbSuccess) moPage.parentSendMsg("lblTitle", NLS.INF.M024);
									}else{
										// 자신의 헤더에 메시지를 셋팅
										util.Msg.notify(app, "NLS.INF.M024"); // 조회되었습니다.
									}
								}
							});
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsAbsSmtCntRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsAltRsnDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAbsAltRsnDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsAplyStatRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strUseTabNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "checkPgmId",
						"dataType": "string"
					},
					{
						"name": "checkUserId",
						"dataType": "string"
					},
					{
						"name": "checkMenuNm",
						"dataType": "string"
					},
					{
						"name": "strPageDiv",
						"dataType": "string"
					},
					{
						"name": "strAbsSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strAbsSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strAbsSmtCntRcd",
						"dataType": "string"
					},
					{
						"name": "strFileSaveDiv",
						"dataType": "string"
					},
					{
						"name": "strSerialNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfCsrShregAltAbs");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_PAY_YN",
						"dataType": "string"
					},
					{
						"name": "RTN_SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "RTN_SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_NM",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFrfExtCsrShregAltAply");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_RCD",
						"dataType": "string"
					},
					{
						"name": "FILE_SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ALT_DTL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "PROC_STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "APLY_DT",
						"dataType": "string"
					},
					{
						"name": "APRV_DT",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_YN",
						"dataType": "string"
					},
					{
						"name": "FILE_CNT",
						"dataType": "string"
					},
					{
						"name": "APLY_STAT_RCD",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmFrfCmnAddr");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "HOMEPAGE1",
						"dataType": "string"
					},
					{
						"name": "KEY_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "MESSENGER2",
						"dataType": "string"
					},
					{
						"name": "FAX_EXT_NO",
						"dataType": "string"
					},
					{
						"name": "MESSENGER1",
						"dataType": "string"
					},
					{
						"name": "HOMEPAGE2",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REP_ADDR_YN",
						"dataType": "string"
					},
					{
						"name": "ZIPSEQ",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "RGN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "REP_CTTP_RCD",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "USE_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "ADDR_PRP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DRT_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "CITY_NM",
						"dataType": "string"
					},
					{
						"name": "REP_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "POB_ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "FAX_NO",
						"dataType": "string"
					},
					{
						"name": "PAGER_NO",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "POB",
						"dataType": "string"
					},
					{
						"name": "FLAG_GBN",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmFrfCmnAddrGuard");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "HOMEPAGE1",
						"dataType": "string"
					},
					{
						"name": "KEY_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "MESSENGER2",
						"dataType": "string"
					},
					{
						"name": "FAX_EXT_NO",
						"dataType": "string"
					},
					{
						"name": "MESSENGER1",
						"dataType": "string"
					},
					{
						"name": "HOMEPAGE2",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "REP_ADDR_YN",
						"dataType": "string"
					},
					{
						"name": "ZIPSEQ",
						"dataType": "string"
					},
					{
						"name": "CLP_NO",
						"dataType": "string"
					},
					{
						"name": "ADDR2",
						"dataType": "string"
					},
					{
						"name": "ADDR1",
						"dataType": "string"
					},
					{
						"name": "AEN",
						"dataType": "string"
					},
					{
						"name": "RGN",
						"dataType": "string"
					},
					{
						"name": "EMAIL",
						"dataType": "string"
					},
					{
						"name": "REP_CTTP_RCD",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "USE_TAB_NM",
						"dataType": "string"
					},
					{
						"name": "ADDR_PRP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DRT_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "CITY_NM",
						"dataType": "string"
					},
					{
						"name": "REP_TEL_NO",
						"dataType": "string"
					},
					{
						"name": "POB_ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "ZIPCODE",
						"dataType": "string"
					},
					{
						"name": "FAX_NO",
						"dataType": "string"
					},
					{
						"name": "PAGER_NO",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "POB",
						"dataType": "string"
					},
					{
						"name": "FLAG_GBN",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmResList");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "rowAddrCnt",
						"dataType": "string"
					},
					{
						"name": "rowGuardCnt",
						"dataType": "string"
					},
					{
						"name": "rowRetuCnt",
						"dataType": "string"
					},
					{
						"name": "strErrorMsg",
						"dataType": "string"
					},
					{
						"name": "strIsLateReturnYn",
						"dataType": "string"
					},
					{
						"name": "strAbsSmtCnt",
						"dataType": "string"
					},
					{
						"name": "strPlanSmtCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_7.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_7);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrAplyRetu/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataMap_7, false);
			submission_1.addResponseData(dataSet_5, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/ExtCsrAplyRetu/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_4);
			submission_2.addRequestData(dataMap_5);
			submission_2.addRequestData(dataMap_3);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/csr/ExtCsrAplyRetu/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_3, false);
			submission_3.addResponseData(dataMap_4, false);
			submission_3.addResponseData(dataMap_5, false);
			submission_3.addResponseData(dataMap_6, false);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subChgBefAbs");
			submission_4.action = "/csr/ExtCsrAplyRetu/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_frfExtCsrShregAltAply");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfExtCsrShregAltAply");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfSchYearRcd");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-RTRYRS");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfSmtRcd");
					output_2.value = "";
					output_2.style.setClasses(["require"]);
					output_2.bind("value").toLanguage("UI-SCR-RTRSMSTR");
					container.addChild(output_2, {
						"top": "5px",
						"left": "210px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_1.enabled = false;
					comboBox_1.hideButton = true;
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.style.css({
						"text-align" : "center"
					});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "SMT_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "310px",
						"width": "120px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfAplyDt");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-DB-REQ_DT");
					container.addChild(output_3, {
						"top": "5px",
						"left": "640px",
						"width": "95px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipFrfAplyDt");
					dateInput_1.enabled = false;
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAplyDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "APLY_DT");
					container.addChild(dateInput_1, {
						"top": "5px",
						"left": "740px",
						"width": "80px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfStudId");
					output_4.value = "오브젝트번호";
					output_4.style.setClasses(["require"]);
					container.addChild(output_4, {
						"top": "30px",
						"left": "860px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_1.visible = false;
					inputBox_1.enabled = false;
					inputBox_1.userAttr({"require": "Y"});
					inputBox_1.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "STUD_ID");
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "890px",
						"width": "10px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSerialNo");
					output_5.value = "순번";
					output_5.style.setClasses(["require"]);
					container.addChild(output_5, {
						"top": "30px",
						"left": "904px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfSerialNo");
					inputBox_2.visible = false;
					inputBox_2.enabled = false;
					inputBox_2.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "SERIAL_NO");
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "934px",
						"width": "10px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfAtlRsnDivRcd");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-SCR-RTRNWHY");
					container.addChild(output_6, {
						"top": "5px",
						"left": "440px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfAltRsnDivRcd");
					comboBox_2.enabled = false;
					comboBox_2.hideButton = true;
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.style.css({
						"text-align" : "center"
					});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfAtlRsnDivRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "ALT_RSN_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsAltRsnDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "540px",
						"width": "90px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfAplyStatRcd");
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-SCR-REQSTAT");
					container.addChild(output_7, {
						"top": "5px",
						"left": "830px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfAplyStatRcd");
					comboBox_3.enabled = false;
					comboBox_3.hideButton = true;
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.style.css({
						"text-align" : "center"
					});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfAplyStatRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "APLY_STAT_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsAplyStatRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "5px",
						"left": "930px",
						"width": "70px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_4.enabled = false;
					comboBox_4.hideButton = true;
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.style.css({
						"text-align" : "center"
					});
					comboBox_4.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "SCH_YEAR_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "5px",
						"left": "105px",
						"width": "95px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfCstDt");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-ENDMILDT");
					container.addChild(output_8, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("ipbFrfCstDt");
					dateInput_2.style.css({
						"text-align" : "center"
					});
					dateInput_2.bind("fieldLabel").toExpression("#optFrfCstDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "CST_DT");
					container.addChild(dateInput_2, {
						"top": "30px",
						"left": "105px",
						"width": "95px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfFileSerialNo");
					output_9.value = "파일순번";
					container.addChild(output_9, {
						"top": "30px",
						"left": "950px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfFileSerialNo");
					inputBox_3.visible = false;
					inputBox_3.enabled = false;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "FILE_SERIAL_NO");
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "980px",
						"width": "10px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfRegTransRcd");
					output_10.value = "등록이월코드";
					output_10.style.setClasses(["require"]);
					container.addChild(output_10, {
						"top": "50px",
						"left": "860px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfRegTransRcd");
					inputBox_4.visible = false;
					inputBox_4.enabled = false;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfRegTransRcd.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "REG_TRANS_RCD");
					container.addChild(inputBox_4, {
						"top": "50px",
						"left": "890px",
						"width": "10px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "117px",
					"left": "5px",
					"width": "1015px",
					"height": "82px"
				});
				var userDefinedControl_2 = new udc.com.comFormTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-RTRNAPL");
				container.addChild(userDefinedControl_2, {
					"top": "92px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "436px",
					"left": "480px",
					"width": "60px",
					"height": "25px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-BASEADDR");
				container.addChild(userDefinedControl_3, {
					"top": "204px",
					"left": "5px",
					"width": "96px",
					"height": "25px"
				});
				var userDefinedControl_4 = new udc.com.comFormTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-GUARDADDR");
				container.addChild(userDefinedControl_4, {
					"top": "204px",
					"left": "515px",
					"width": "136px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfCmnAddr");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_11 = new cpr.controls.Output("optAddr1");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-DB-ADDR1");
					container.addChild(output_11, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optZipcode");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-GLS-ZIPCODE");
					container.addChild(output_12, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfAddr1");
					inputBox_5.enabled = false;
					inputBox_5.maxLength = 30;
					inputBox_5.bind("fieldLabel").toExpression("#optAddr1.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR1");
					container.addChild(inputBox_5, {
						"top": "30px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optClpNo");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-GLS-CLP");
					container.addChild(output_13, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfClpNo");
					numberEditor_1.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optClpNo.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "CLP_NO");
					container.addChild(numberEditor_1, {
						"top": "80px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbZipSeq");
					inputBox_6.visible = false;
					inputBox_6.maxLength = 50;
					inputBox_6.bind("fieldLabel").toExpression("#optZipSeq.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ZIPSEQ");
					container.addChild(inputBox_6, {
						"top": "4px",
						"left": "190px",
						"width": "10px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optAddr2");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-DB-ADDR2");
					container.addChild(output_14, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfAddr2");
					numberEditor_2.enabled = false;
					numberEditor_2.format = "99,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optAddr2.value");
					numberEditor_2.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR2");
					container.addChild(numberEditor_2, {
						"top": "55px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optDrtTelNo");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-HOME_TEL_NO");
					container.addChild(output_15, {
						"top": "105px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfDrtTelNo");
					numberEditor_3.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_3.bind("fieldLabel").toExpression("#optDrtTelNo.value");
					numberEditor_3.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "DRT_TEL_NO");
					container.addChild(numberEditor_3, {
						"top": "105px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optEmail");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-DB-EMAIL");
					container.addChild(output_16, {
						"top": "130px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfEmail");
					inputBox_7.maxLength = 100;
					inputBox_7.bind("fieldLabel").toExpression("#optEmail.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "EMAIL");
					container.addChild(inputBox_7, {
						"top": "130px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfFlagGbn");
					inputBox_8.visible = false;
					inputBox_8.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "FLAG_GBN");
					container.addChild(inputBox_8, {
						"top": "4px",
						"left": "420px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfUseTabNm");
					inputBox_9.visible = false;
					inputBox_9.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "USE_TAB_NM");
					container.addChild(inputBox_9, {
						"top": "4px",
						"left": "440px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("iipbFrfKeyTabNm");
					inputBox_10.visible = false;
					inputBox_10.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "KEY_TAB_NM");
					container.addChild(inputBox_10, {
						"top": "4px",
						"left": "465px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfZipcode");
					inputBox_11.enabled = false;
					inputBox_11.maxLength = 50;
					inputBox_11.bind("fieldLabel").toExpression("#optZipcode.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ZIPCODE");
					container.addChild(inputBox_11, {
						"top": "5px",
						"left": "105px",
						"width": "65px",
						"height": "25px"
					});
					var button_2 = new cpr.controls.Button("btnNewPopZipcodeSearch");
					button_2.value = "";
					button_2.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnNewPopZipcodeSearchClick == "function") {
						button_2.addEventListener("click", onBtnNewPopZipcodeSearchClick);
					}
					container.addChild(button_2, {
						"top": "5px",
						"left": "170px",
						"width": "20px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("label2");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-SCR-CSRADDRGUIDMSG2");
					container.addChild(output_17, {
						"top": "5px",
						"left": "205px",
						"width": "210px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("inputbox1");
					inputBox_12.visible = false;
					inputBox_12.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ST_DT");
					container.addChild(inputBox_12, {
						"top": "80px",
						"left": "410px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("inputbox2");
					inputBox_13.visible = false;
					inputBox_13.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "END_DT");
					container.addChild(inputBox_13, {
						"top": "80px",
						"left": "425px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("inputbox3");
					inputBox_14.visible = false;
					inputBox_14.bind("value").toDataMap(app.lookup("dmFrfCmnAddr"), "ADDR_PRP_DIV_RCD");
					container.addChild(inputBox_14, {
						"top": "80px",
						"left": "440px",
						"width": "15px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "229px",
					"left": "5px",
					"width": "505px",
					"height": "202px"
				});
				var group_4 = new cpr.controls.Container("frfCmnAddrGuard");
				group_4.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_18 = new cpr.controls.Output("optAddrGuard1");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-DB-ADDR1");
					container.addChild(output_18, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optZipcodeGuard");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-GLS-ZIPCODE");
					container.addChild(output_19, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfAddrGuard1");
					inputBox_15.enabled = false;
					inputBox_15.maxLength = 30;
					inputBox_15.bind("fieldLabel").toExpression("#optAddrGuard1.value");
					inputBox_15.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR1");
					container.addChild(inputBox_15, {
						"top": "30px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optClpNoGuard");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-GLS-CLP");
					container.addChild(output_20, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("ipbFrfClpNoGuard");
					numberEditor_4.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_4.bind("fieldLabel").toExpression("#optClpNoGuard.value");
					numberEditor_4.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "CLP_NO");
					container.addChild(numberEditor_4, {
						"top": "80px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbZipSeqGuard");
					inputBox_16.visible = false;
					inputBox_16.maxLength = 50;
					inputBox_16.bind("fieldLabel").toExpression("#optZipSeq.value");
					inputBox_16.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ZIPSEQ");
					container.addChild(inputBox_16, {
						"top": "4px",
						"left": "190px",
						"width": "10px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optAddrGuard2");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-DB-ADDR2");
					container.addChild(output_21, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfAddrGuard2");
					numberEditor_5.enabled = false;
					numberEditor_5.format = "99,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_5.bind("fieldLabel").toExpression("#optAddrGuard2.value");
					numberEditor_5.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR2");
					container.addChild(numberEditor_5, {
						"top": "55px",
						"left": "105px",
						"width": "390px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optDrtTelNoGuard");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-DB-HOME_TEL_NO");
					container.addChild(output_22, {
						"top": "105px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_6 = new cpr.controls.NumberEditor("ipbFrfDrtTelNoGuard");
					numberEditor_6.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_6.bind("fieldLabel").toExpression("#optDrtTelNoGuard.value");
					numberEditor_6.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "DRT_TEL_NO");
					container.addChild(numberEditor_6, {
						"top": "105px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var output_23 = new cpr.controls.Output("optCompTelNoGuard");
					output_23.value = "";
					output_23.bind("value").toLanguage("UI-SCR-COMP_TEL_NO");
					container.addChild(output_23, {
						"top": "130px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_17 = new cpr.controls.InputBox("ipbFrfCompTelNoGuard");
					inputBox_17.maxLength = 30;
					inputBox_17.bind("fieldLabel").toExpression("#optCompTelNoGuard.value");
					inputBox_17.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "REP_TEL_NO");
					container.addChild(inputBox_17, {
						"top": "130px",
						"left": "105px",
						"width": "120px",
						"height": "25px"
					});
					var inputBox_18 = new cpr.controls.InputBox("ipbFrfFlagGbnGuard");
					inputBox_18.visible = false;
					inputBox_18.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "FLAG_GBN");
					container.addChild(inputBox_18, {
						"top": "4px",
						"left": "430px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_19 = new cpr.controls.InputBox("ipbFrfUseTabNmGuard");
					inputBox_19.visible = false;
					inputBox_19.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "USE_TAB_NM");
					container.addChild(inputBox_19, {
						"top": "4px",
						"left": "450px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_20 = new cpr.controls.InputBox("iipbFrfKeyTabNmGuard");
					inputBox_20.visible = false;
					inputBox_20.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "KEY_TAB_NM");
					container.addChild(inputBox_20, {
						"top": "4px",
						"left": "475px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_21 = new cpr.controls.InputBox("ipbFrfZipcodeGuard");
					inputBox_21.enabled = false;
					inputBox_21.maxLength = 50;
					inputBox_21.bind("fieldLabel").toExpression("#optZipcodeGuard.value");
					inputBox_21.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ZIPCODE");
					container.addChild(inputBox_21, {
						"top": "5px",
						"left": "105px",
						"width": "65px",
						"height": "25px"
					});
					var button_3 = new cpr.controls.Button("btnNewPopZipcodeSearchGuard");
					button_3.value = "";
					button_3.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnNewPopZipcodeSearchGuardClick == "function") {
						button_3.addEventListener("click", onBtnNewPopZipcodeSearchGuardClick);
					}
					container.addChild(button_3, {
						"top": "5px",
						"left": "170px",
						"width": "20px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("label3");
					output_24.value = "";
					output_24.bind("value").toLanguage("UI-SCR-CSRADDRGUIDMSG2");
					container.addChild(output_24, {
						"top": "5px",
						"left": "205px",
						"width": "210px",
						"height": "25px"
					});
					var inputBox_22 = new cpr.controls.InputBox("inputbox4");
					inputBox_22.visible = false;
					inputBox_22.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ST_DT");
					container.addChild(inputBox_22, {
						"top": "80px",
						"left": "370px",
						"width": "16px",
						"height": "25px"
					});
					var inputBox_23 = new cpr.controls.InputBox("inputbox5");
					inputBox_23.visible = false;
					inputBox_23.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "END_DT");
					container.addChild(inputBox_23, {
						"top": "80px",
						"left": "385px",
						"width": "16px",
						"height": "25px"
					});
					var inputBox_24 = new cpr.controls.InputBox("inputbox6");
					inputBox_24.visible = false;
					inputBox_24.bind("value").toDataMap(app.lookup("dmFrfCmnAddrGuard"), "ADDR_PRP_DIV_RCD");
					container.addChild(inputBox_24, {
						"top": "80px",
						"left": "400px",
						"width": "16px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "229px",
					"left": "515px",
					"width": "505px",
					"height": "202px"
				});
				var output_25 = new cpr.controls.Output("optTitle");
				output_25.value = "";
				output_25.bind("value").toLanguage("UI-SCR-RTRNAPL");
				container.addChild(output_25, {
					"top": "92px",
					"left": "145px",
					"width": "100px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnCloseCancel");
				button_4.visible = false;
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-SCRNCLS");
				if(typeof onBtnCloseCancelClick == "function") {
					button_4.addEventListener("click", onBtnCloseCancelClick);
				}
				container.addChild(button_4, {
					"top": "436px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var group_5 = new cpr.controls.Container("frfCsrShregAltAbs");
				group_5.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_5.setLayout(xYLayout_6);
				(function(container){
					var output_26 = new cpr.controls.Output("optFrfSchYearRcdAbs");
					output_26.value = "";
					output_26.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_26, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_27 = new cpr.controls.Output("optFrfSmtRcdAbs");
					output_27.value = "";
					output_27.bind("value").toLanguage("UI-SCR-ABSSMSTR");
					container.addChild(output_27, {
						"top": "5px",
						"left": "210px",
						"width": "95px",
						"height": "25px"
					});
					var output_28 = new cpr.controls.Output("optFrfRtnSmtRcdAbs");
					output_28.value = "";
					output_28.bind("value").toLanguage("UI-SCR-RTRSCHSMSTR");
					container.addChild(output_28, {
						"top": "30px",
						"left": "210px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfSmtRcdAbs");
					comboBox_5.enabled = false;
					comboBox_5.hideButton = true;
					comboBox_5.style.css({
						"text-align" : "center"
					});
					comboBox_5.bind("fieldLabel").toExpression("#optFrfSmtRcdAbs.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "SMT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "5px",
						"left": "310px",
						"width": "120px",
						"height": "25px"
					});
					var output_29 = new cpr.controls.Output("optFrfRtnSchYearRcdAbs");
					output_29.value = "";
					output_29.bind("value").toLanguage("UI-SCR-RTRSCHYS");
					container.addChild(output_29, {
						"top": "30px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_30 = new cpr.controls.Output("optFrfStudId1");
					output_30.value = "오브젝트번호";
					output_30.style.setClasses(["require"]);
					container.addChild(output_30, {
						"top": "35px",
						"left": "965px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_25 = new cpr.controls.InputBox("ipbFrfStudId1");
					inputBox_25.visible = false;
					inputBox_25.enabled = false;
					inputBox_25.userAttr({"require": "Y"});
					inputBox_25.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_25.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "STUD_ID");
					container.addChild(inputBox_25, {
						"top": "35px",
						"left": "995px",
						"width": "10px",
						"height": "25px"
					});
					var output_31 = new cpr.controls.Output("optFrfSerialNo1");
					output_31.value = "순번";
					output_31.style.setClasses(["require"]);
					container.addChild(output_31, {
						"top": "35px",
						"left": "1015px",
						"width": "25px",
						"height": "25px"
					});
					var inputBox_26 = new cpr.controls.InputBox("ipbFrfSerialNo1");
					inputBox_26.visible = false;
					inputBox_26.enabled = false;
					inputBox_26.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_26.bind("value").toDataMap(app.lookup("dmFrfExtCsrShregAltAply"), "SERIAL_NO");
					container.addChild(inputBox_26, {
						"top": "35px",
						"left": "1045px",
						"width": "10px",
						"height": "25px"
					});
					var output_32 = new cpr.controls.Output("optFrfAtlRsnDivRcdAbs");
					output_32.value = "";
					output_32.bind("value").toLanguage("UI-GLS-GENDER");
					container.addChild(output_32, {
						"top": "5px",
						"left": "440px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfAltRsnDivRcdAbs");
					comboBox_6.enabled = false;
					comboBox_6.hideButton = true;
					comboBox_6.style.css({
						"text-align" : "center"
					});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfAtlRsnDivRcdAbs.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "ALT_RSN_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsAbsAltRsnDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "5px",
						"left": "540px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfSchYearRcdAbs");
					comboBox_7.enabled = false;
					comboBox_7.hideButton = true;
					comboBox_7.style.css({
						"text-align" : "center"
					});
					comboBox_7.bind("fieldLabel").toExpression("#optFrfSchYearRcdAbs.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "SCH_YEAR_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "5px",
						"left": "105px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfRtnSchYearRcdAbs");
					comboBox_8.enabled = false;
					comboBox_8.hideButton = true;
					comboBox_8.style.css({
						"text-align" : "center"
					});
					comboBox_8.bind("fieldLabel").toExpression("#optFrfRtnSchYearRcdAbs.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "RTN_SCH_YEAR_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsSchYearRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "30px",
						"left": "105px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfRtnSmtRcdAbs");
					comboBox_9.enabled = false;
					comboBox_9.hideButton = true;
					comboBox_9.style.css({
						"text-align" : "center"
					});
					comboBox_9.bind("fieldLabel").toExpression("#optFrfRtnSmtRcdAbs.value");
					comboBox_9.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "RTN_SMT_RCD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsSmtRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"top": "30px",
						"left": "310px",
						"width": "120px",
						"height": "25px"
					});
					var output_33 = new cpr.controls.Output("optFrfAbsSmtCntRcdAbs");
					output_33.value = "";
					output_33.bind("value").toLanguage("UI-SCR-ABSSMSTRS");
					container.addChild(output_33, {
						"top": "30px",
						"left": "440px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_10 = new cpr.controls.ComboBox("cbbFrfAbsSmtCntRcdAbs");
					comboBox_10.enabled = false;
					comboBox_10.hideButton = true;
					comboBox_10.style.css({
						"text-align" : "center"
					});
					comboBox_10.bind("fieldLabel").toExpression("#optFrfAbsSmtCntRcdAbs.value");
					comboBox_10.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "ABS_SMT_CNT_RCD");
					(function(comboBox_10){
						comboBox_10.setItemSet(app.lookup("dsAbsSmtCntRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_10);
					container.addChild(comboBox_10, {
						"top": "30px",
						"left": "540px",
						"width": "90px",
						"height": "25px"
					});
					var output_34 = new cpr.controls.Output("optFrfRegTransYnAbs");
					output_34.value = "";
					output_34.bind("value").toLanguage("UI-SCR-REGPAYMENTYN");
					container.addChild(output_34, {
						"top": "30px",
						"left": "830px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_27 = new cpr.controls.InputBox("ipbFrfRegTransYnAbs");
					inputBox_27.enabled = false;
					inputBox_27.maxLength = 30;
					inputBox_27.style.css({
						"text-align" : "center"
					});
					inputBox_27.bind("fieldLabel").toExpression("#optFrfRegTransYnAbs.value");
					inputBox_27.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "REG_TRANS_NM");
					container.addChild(inputBox_27, {
						"top": "30px",
						"left": "930px",
						"width": "70px",
						"height": "25px"
					});
					var output_35 = new cpr.controls.Output("optFrfCstDtAbs");
					output_35.value = "";
					output_35.bind("value").toLanguage("UI-DB-CST_DT");
					container.addChild(output_35, {
						"top": "30px",
						"left": "640px",
						"width": "95px",
						"height": "25px"
					});
					var dateInput_3 = new cpr.controls.DateInput("ipbFrfCstDtAbs");
					dateInput_3.enabled = false;
					dateInput_3.format = "YYYY-MM-DD";
					dateInput_3.style.css({
						"text-align" : "center"
					});
					dateInput_3.bind("fieldLabel").toExpression("#optFrfCstDtAbs.value");
					dateInput_3.bind("value").toDataMap(app.lookup("dmFrfCsrShregAltAbs"), "CST_DT");
					container.addChild(dateInput_3, {
						"top": "30px",
						"left": "740px",
						"width": "80px",
						"height": "25px"
					});
				})(group_5);
				container.addChild(group_5, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "57px"
				});
				var userDefinedControl_5 = new udc.com.comFormTitle();
				userDefinedControl_5.bind("title").toLanguage("UI-SCR-ABSINFO");
				container.addChild(userDefinedControl_5, {
					"top": "5px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var output_36 = new cpr.controls.Output("label4");
				output_36.value = "";
				output_36.bind("value").toLanguage("UI-SCR-CSRABSAPLYGUID5");
				container.addChild(output_36, {
					"top": "204px",
					"left": "110px",
					"width": "400px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnChgBefAbs");
				button_5.visible = false;
				button_5.value = "휴학연장";
				if(typeof onBtnChgBefAbsClick == "function") {
					button_5.addEventListener("click", onBtnChgBefAbsClick);
				}
				container.addChild(button_5, {
					"top": "92px",
					"left": "150px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "500px",
				"left": "40px",
				"width": "96px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPZipSearch");
			cpr.core.App.load("app/cmn/impStdCmnPZipSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "500px",
				"left": "145px",
				"width": "50px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrPAplyRetu";
	cpr.core.Platform.INSTANCE.register(app);
})();
