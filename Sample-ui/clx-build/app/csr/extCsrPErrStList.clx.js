/*
 * App URI: app/csr/extCsrPErrStList
 * Source Location: app/csr/extCsrPErrStList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrPErrStList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCsrPErrStList.xtm"/>
			
			
			var extCsrPErrStList = function() {
				var moPage = new Page();
			
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 03. 28.
				 */
				moPage.onModelConstructDone_StdCsrPStSearch = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptError");
				
					//화면 온로드 호출
					doOnLoad();
				};
				
				/**
				 * @desc 받아온 에러 목록 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 03. 28.
				 */
				function doOnLoad() {
					
					var voErrorList = ExtPopUp.getParentVal("moErrorList");
					var voErrorFileInfo = ExtPopUp.getParentVal("moErrorFileInfo");
					var vnCnt = voErrorList.length;
					ExtInstance.copyNodeListObj("/root/resList/errStList", voErrorList );
					
					util.Control.redraw(app, "grdError");
					
					FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voErrorFileInfo);
				}
			
				/**
				 * @desc 화면닫기 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 03. 28.
				 */
				moPage.onClick_btnCloseCancel = function() {
					app.close();
				};
				
				/**
				 * @desc 헤더 온로드 실행
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 03. 28.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsErrStList");
			dataSet_1.parseData({
				"columns": [
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "ERR_MSG"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_rptError");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdError");
				grid_1.init({
					"dataSet": app.lookup("dsErrStList"),
					"columns": [
						{"width": "40px"},
						{"width": "84px"},
						{"width": "93px"},
						{"width": "396px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ERR_MSG";
								}
							}
						]
					}
				});
				if(typeof onGrdErrorRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdErrorRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "630px",
					"height": "337px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "640px",
				"height": "372px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "412px",
				"left": "295px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "에러리스트조회팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
