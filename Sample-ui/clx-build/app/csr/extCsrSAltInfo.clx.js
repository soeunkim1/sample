/*
 * App URI: app/csr/extCsrSAltInfo
 * Source Location: app/csr/extCsrSAltInfo.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrSAltInfo", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrSAltInfo.xtm"/>
			
			var extCsrSAltInfo = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				var msStudId = "";
				var msKeyDt  = "";
				
				/**
				 * @desc 서브페이지 임포트 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 23
				 */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				};
			
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 23
				 */
				moPage.onModelConstructDone_extCsrSAltInfo = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCsrShregAlt");
					
					var voAltObj = moPage.parent.moParentObj;		
					
					// 부모멤버변수에담긴학번받음
					msStudId = voAltObj.studId;
					msKeyDt = voAltObj.keyDate;
					
					if(voAltObj.strAltYn == "Y"){
						doSizeAlt();
						util.Control.redraw(app, "grdCsrShregAlt");
					} else {
						if (ValueUtil.isNull(msStudId)) {
							return false;
						}else{
							doList(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccess) {
									moPage.parentSendMsg("lblTitleRptCsrShregAlt", NLS.INF.M024);
								}
							});
						}			
					}
				};
			
				/**
				 * @desc 학적변동/전과 조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 26
				 */
				function doList(poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
					util.DataMap.setValue(app, "dmReqList", "strKeyDate", msKeyDt);
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCsrShregAlt");
							util.Control.redraw(app, "lblRowCnt_rptCsrShregAlt");
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
			
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 3. 23
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 3. 23
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdCsrShregAlt"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				/**
				 * @desc 학적변동처리 용 리피트 사이즈 변경
				 * @param 
				 * @return boolean 변경여부
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doSizeAlt(){
					util.Control.setStyleAttr(app, "grp_rptCsrShregAlt" , "border-width", 0);
					util.Control.setStyleAttr(app, "grp_rptCsrShregAlt" , "border-style", "none");
					util.Control.setStyleAttr(app, "grp_rptCsrShregAlt" , "width", 496);
					util.Control.setStyleAttr(app, "grp_rptCsrShregAlt" , "height", 142);
					
					util.Control.setStyleAttr(app, "lblTitleRptCsrShregAlt" , "left", 0);
					util.Control.setStyleAttr(app, "lblTitleRptCsrShregAlt" , "top", 0);
					
					util.Control.setStyleAttr(app, "rptCsrShregAlt" , "left", 0);
					util.Control.setStyleAttr(app, "rptCsrShregAlt" , "top", 25);
					util.Control.setStyleAttr(app, "rptCsrShregAlt" , "width", 495);
					util.Control.setStyleAttr(app, "rptCsrShregAlt" , "height", 111);
					util.Control.setStyleAttr(app, "lblRowCnt_rptCsrShregAlt" , "left", 440);
					util.Control.setStyleAttr(app, "lblRowCnt_rptCsrShregAlt" , "top", 0);
					
				};
			
				/**
				 * @desc 리피트 초기화
				 * @param 
				 * @return boolean 변경여부
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doDataClear() {
					util.Control.reset(app, ["rptCsrShregAlt"]);
				};
				
				/**
				 * @desc 학적변동/전과 조회
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 10. 11.
				 */
				function doListAlt(poCallBackFunc) {
					var voAltObj = moPage.parent.moParentObj;		
					
					util.DataMap.setValue(app, "dmReqList", "strStudId", voAltObj.strStudId);
					util.DataMap.setValue(app, "dmReqList", "strKeyDate", voAltObj.strAltDt);
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCsrShregAlt");
							util.Control.redraw(app, "lblRowCnt_rptCsrShregAlt");
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCsrShregAlt");
			dataSet_1.parseData({
				"columns": [
					{"name": "ALT_DIV_NM"},
					{"name": "ALT_RSN_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_NM"},
					{"name": "ALT_DT"},
					{"name": "RTN_SCH_YEAR_NM"},
					{"name": "RTN_SMT_NM"},
					{"name": "CHG_BEF_DESC"},
					{"name": "CHG_DESC"},
					{"name": "REG_TRANS_NM"},
					{"name": "RTN_PLAN_DT"},
					{"name": "REC_RCOG_YN"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/csr/ExtCsrAltInfo/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_rptCsrShregAlt");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrShregAlt");
				grid_1.init({
					"dataSet": app.lookup("dsCsrShregAlt"),
					"columns": [
						{"width": "40px"},
						{"width": "59px"},
						{"width": "117px"},
						{"width": "70px"},
						{"width": "62px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "139px"},
						{"width": "136px"},
						{"width": "80px"},
						{"width": "69px"},
						{
							"width": "80px",
							"visible": false
						},
						{
							"width": "66px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "구분";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "사유";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "학년도";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "학기";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "학적변동일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "복학예정일";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "변경전 내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "변경후 내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REG_TRANS_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "성적인정";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "복학예정년도";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "복학예정학기";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "ALT_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SMT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptAltDt");
										output_1.dataType = "date";
										output_1.format = "YYYY-MM-DD";
										output_1.style.css({
											"text-align" : "center"
										});
										output_1.bind("value").toDataColumn("ALT_DT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "RTN_PLAN_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptRtnPlanDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.bind("value").toDataColumn("RTN_PLAN_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CHG_BEF_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CHG_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "REG_TRANS_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "REC_RCOG_YN";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "RTN_SCH_YEAR_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "RTN_SMT_NM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "428px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "455px",
				"left": "70px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrSAltInfo";
	cpr.core.Platform.INSTANCE.register(app);
})();
