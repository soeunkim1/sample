/*
 * App URI: app/csr/extCsrSCgdInfo
 * Source Location: app/csr/extCsrSCgdInfo.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrSCgdInfo", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrSCgdInfo.xtm"/>
			
			var extCsrSCgdInfo = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				var msStudId = "";
				
				/**
				 * @desc 서브페이지 임포트 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 18
				 */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
			
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 18
				 */
				moPage.onModelConstructDone_extCsrSCgdInfo = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCgdRec");
			
					// 2. 검색조건 초기 설정
					//ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.setValue(app, "cbbSchYearRcd", "");
							util.Control.setValue(app, "cbbSmtRcd", "");
							
							util.Control.redraw(app, ["cbbSchYearRcd","cbbSmtRcd"]);
							var voParentPage = ExtSubPage.getParent();
							
							// 부모멤버변수에담긴학번받음
							msStudId = moPage.parent.moParentObj.studId;
							if (ValueUtil.isNull(msStudId)) {
								util.Control.setEnable(app, false, ["btnSearch"]);
								return false;
							}else{
								//LIST CALL 
								util.Header.clickSearch(app);
							}
						}
					});
				}
			
				/**
				 * @desc 조회버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 18
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수 체크
					//if(!ValidUtil.check(["cbbSchYearRcd", "cbbSmtRcd"])){
					//	return false;
					//}
					
					
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							moPage.parentSendMsg("lblTitleRptCgdRec", NLS.INF.M024);
						}
					});
					
				};
			
				/**
				 * @desc 성적정보조회
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 3. 18
				 */
				function doList(poCallBackFunc) {
					util.DataMap.setValue(app, "dmReqList", "strStudId", msStudId);
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							//ExtRepeat.rebuild("rptCgdRec");
							util.Control.redraw(app, ["lblTitleRptCgdRec"]);
							page.onValueChanged_CbbSmtRcd();
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
			
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 3. 18
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 3. 18
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdCgdRec"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
			
				
				
				moPage.onValueChanged_CbbSmtRcd = function() {
					var vsSchYearRcd 	= util.DataMap.getValue(app, "dmReqList", "strSchYearRcd");
					var vsSmtRcd		= util.DataMap.getValue(app, "dmReqList", "strSmtRcd");
					var vsDelYn			= util.DataMap.getValue(app, "dmReqList", "strDelYn");
					
					var vsRptNodeSet = "/root/resList/rptCgdRecTemp/row";
					
					var vsDelYnNode 			= "";
					var vsSchYearRcdNode 	= "";
					var vsSmtRcdNode			= "";
					var vsNode = "";
					
					
					if("Y" != vsDelYn){
						vsDelYnNode = " DEL_YN = 'X' ";
					}
					
					if(vsSchYearRcd != ""){
						vsSchYearRcdNode = "SCH_YEAR_RCD = '"+vsSchYearRcd+"'";
					}
					
					if(vsSmtRcd != ""){
						vsSmtRcdNode = "SMT_RCD = '"+vsSmtRcd+"'";
					}
					
					if("" != vsSchYearRcdNode){
						if(vsRptNodeSet.indexOf("child") < 0){
							vsRptNodeSet = vsRptNodeSet+"[child::"+vsSchYearRcdNode;
						}else{
							vsRptNodeSet = vsRptNodeSet+" and "+vsSchYearRcdNode;
						}
					}
					
					if("" != vsSmtRcdNode){
						if(vsRptNodeSet.indexOf("child") < 0){
							vsRptNodeSet = vsRptNodeSet+"[child::"+vsSmtRcdNode;
						}else{
							vsRptNodeSet = vsRptNodeSet+" and "+vsSmtRcdNode;
						}
					}
					
					if("" != vsDelYnNode){
						if(vsRptNodeSet.indexOf("child") < 0){
							vsRptNodeSet = vsRptNodeSet+"[child::"+vsDelYnNode;
						}else{
							vsRptNodeSet = vsRptNodeSet+" and "+vsDelYnNode;
						}
					}
					
					if(vsRptNodeSet.indexOf("child") > 0){
						vsRptNodeSet = vsRptNodeSet+" ]";
					}
					
					
					var objRecNode = ExtInstance.getNodeListObj(vsRptNodeSet);		
					
					model.deleteChildNodes("/root/resList/rptCgdRec");
					
					
					ExtInstance.copyNodeListObj( "/root/resList/rptCgdRec", objRecNode );		
					
					util.Control.redraw(app, ["rptCgdRec"]);
					
					
					
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCgdRecTemp");
			dataSet_3.parseData({
				"columns": [
					{"name": "DIV"},
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SCH_YEAR_RCD_NM"},
					{"name": "SMT_RCD_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "SB_NM"},
					{"name": "GET_PNT"},
					{"name": "GRD_RCD_NM"},
					{"name": "DEL_DIV_RCD"},
					{"name": "DEL_DIV_RCD_NM"},
					{"name": "SUM_GET_PNT"},
					{"name": "GPA"},
					{"name": "CONT"},
					{"name": "TOT_GET_PNT"},
					{"name": "TOT_GPA"},
					{"name": "CONT_SUM"},
					{"name": "DEL_YN"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCgdRec");
			dataSet_4.parseData({
				"info": "CGD_REC@STUD_ID,REC_CD,OBJ_DIV_RCD,DIVCLS_CD,ST_DT,END_DT",
				"columns": [
					{"name": "DIV"},
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SCH_YEAR_RCD_NM"},
					{"name": "SMT_RCD_NM"},
					{"name": "CMP_DIV_RCD"},
					{"name": "CMP_DIV_RCD_NM"},
					{"name": "SB_NM"},
					{"name": "GET_PNT"},
					{"name": "GRD_RCD_NM"},
					{"name": "DEL_DIV_RCD"},
					{"name": "DEL_DIV_RCD_NM"},
					{"name": "SUM_GET_PNT"},
					{"name": "GPA"},
					{"name": "CONT"},
					{"name": "TOT_GET_PNT"},
					{"name": "TOT_GPA"},
					{"name": "CONT_SUM"},
					{"name": "DEL_YN"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strDelYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strSumGetPnt",
						"dataType": "string"
					},
					{
						"name": "strSumGpa",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrCgdInfo/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrCgdInfo/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_4, false);
			submission_2.addResponseData(dataMap_3, false);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optSchYearRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYearRcd");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYearRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strSchYearRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "95px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmtRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "195px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmtRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmtRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strSmtRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtRcdSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtRcdSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "280px",
					"width": "120px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("checkbox1");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "성적삭제 포함여부";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDelYn");
				if(typeof onCheckbox1ValueChange == "function") {
					checkBox_1.addEventListener("value-change", onCheckbox1ValueChange);
				}
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "409px",
					"width": "156px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCgdRec");
				grid_1.init({
					"dataSet": app.lookup("dsCgdRec"),
					"columns": [
						{"width": "40px"},
						{"width": "95px"},
						{"width": "97px"},
						{"width": "98px"},
						{"width": "455px"},
						{"width": "67px"},
						{"width": "65px"},
						{"width": "85px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SUB_GBN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SBNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-GRD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-GRD");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CMP_DIV_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SB_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "GET_PNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GRD_RCD_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "DEL_DIV_RCD_NM";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "392px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "37px",
				"left": "0px",
				"width": "1025px",
				"height": "426px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "455px",
				"left": "80px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "extCsrSCgdInfo";
	cpr.core.Platform.INSTANCE.register(app);
})();
