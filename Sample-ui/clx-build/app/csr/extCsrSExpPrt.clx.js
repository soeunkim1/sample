/*
 * App URI: app/csr/extCsrSExpPrt
 * Source Location: app/csr/extCsrSExpPrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrSExpPrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrSExpPrt.xtm"/>
			
			var extCsrSExpPrt = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * @desc Header Import onLoad
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 11
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 11
				 */
				moPage.onModelConstructDone_extCsrSStudAddrPrt = function() {
					// 조회조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch",["grp_rptCsrShreg"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.DataMap.setValue(app, "dmReqList", "strStDate", util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate"));
							util.DataMap.setValue(app, "dmReqList", "strEndDate", util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate"));
							util.DataMap.setValue(app, "dmReqList", "strChgDivRcd", "CSR01101");
							
							util.DataMap.setValue(app, "dmReqList", "strPrtObjDivRcd", "CC009OG");
							// 조회조건 초기화
							util.Control.redraw(app, ["dipStDate", "dipEndDate", "cbbChgDivRcd", "cbbObjDivRcd"]);
			
							// 소속 포커스
							util.Control.setFocus(app, "ipbDeptNm");				
						}
					});
				}
			
				/**
				 * @desc 조회버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 11
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수 체크
					if(!util.validate(app, ["dipStDate", "dipEndDate"])){
						return false;
					}
					
					doList();
				};
				
				/**
				 * @desc 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 5. 11
				 */
				function doList(poCallBackFunc) {
			
						var vsChgDivRcd = util.Control.getValue(app, "cbbChgDivRcd");
						var vsChgDivNm = util.SelectCtl.getLabel(app, "cbbChgDivRcd", util.SelectCtl.getSelectedIndex(app, "cbbChgDivRcd"));
						
						var vsTitle = "";
						if(ValueUtil.isNull(vsChgDivRcd)){
							vsTitle =  "모집단위 폐지 학적변경자 명단"
						}else{
							vsTitle =  "모집단위 폐지("+vsChgDivNm+") 학적변경자 명단"
						}
						
						//리퀘스트 셋팅
						var voParam = {
									p_strChgDivRcd          : util.DataMap.getValue(app, "dmReqList", "strChgDivRcd"),
									p_strKeyDate              : util.DataMap.getValue(app, "dmReqList", "strEndDate").substr(0,8),
									p_strStDate                 : util.DataMap.getValue(app, "dmReqList", "strStDate").substr(0,8),
									p_strEndDate              : util.DataMap.getValue(app, "dmReqList", "strEndDate").substr(0,8),
									p_strPrtObjDivRcd        : util.DataMap.getValue(app, "dmReqList", "strPrtObjDivRcd"),
									p_strPrtPageNextYn     : util.DataMap.getValue(app, "dmReqList", "strPrtPageNextYn"),
									p_strLandivRcd           : msDefaultLocale
								}	
						
						 var voOzFormParam = {
								  TITLE :  vsTitle  //리포트타이틀
								, SUB_TITLE : "" //리포트서브타이틀		
								, FORM_TYPE : "flash"
							};	
								
						util.Report.open(app, "hojReport", "extCsrSExpPrt", voOzFormParam, voParam);
			
				}
			
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP3"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsChgDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strChgDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStDate",
						"dataType": "string"
					},
					{
						"name": "strEndDate",
						"dataType": "string"
					},
					{
						"name": "strPrtObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPrtPageNextYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResGetKeyDate");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strSaList",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrExpPrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subGetKeyDate");
			submission_2.action = "/csr/ExtCsrExpPrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/csr/ExtCsrExpPrt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optChgDivRcd");
				output_1.value = "변경내용";
				container.addChild(output_1, {
					"top": "5px",
					"left": "295px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbChgDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optChgDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strChgDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsChgDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "380px",
					"width": "115px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optKeyDate");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipStDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStDate");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipEndDate");
				dateInput_2.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqList"), "strEndDate");
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "195px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("opt");
				output_3.value = "~";
				container.addChild(output_3, {
					"top": "5px",
					"left": "180px",
					"width": "15px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optObjDivRcd");
				output_4.value = "출력용도";
				container.addChild(output_4, {
					"top": "5px",
					"left": "504px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbObjDivRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optChgDivRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strPrtObjDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("행정부서", "CC009OG"));
					comboBox_2.addItem(new cpr.controls.Item("학사부서", "CC009SA"));
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "589px",
					"width": "115px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbPageNext");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "학과용";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPrtPageNextYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "713px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCsrShreg");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "588px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrSExpPrt";
	cpr.core.Platform.INSTANCE.register(app);
})();
