/*
 * App URI: app/csr/extCsrSShregAltListPrt
 * Source Location: app/csr/extCsrSShregAltListPrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/extCsrSShregAltListPrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./extCsrSShregAltListPrt.xtm"/>
			
			var extCsrSShregAltListPrt = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{   //교직원검색 조회조건 행정부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbDeptNm",
						iObjDivRcd			:	["CC009SA", "CC009OG"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqList/strStDt",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"/root/reqList/strObjDivRcd",
						oCd					:	"/root/reqList/strDeptCd",
						oCdNm				:	"ipbDeptNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					:  null
					}
				];
				
				/**
				 * @desc Header Import onLoad
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
				/**
				 * @desc 화면 온로드
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onModelConstructDone_extCsrSStudAddrPrt = function() {
					// 조회조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch",["grp_rptCsrShreg"]);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							var vsCutDt = util.DataMap.getValue(app, "dmResOnLoad", "strKeyDate");
							
							util.Control.setValue(app, "ipbStDt", vsCutDt);
							util.Control.setValue(app, "ipbEndDt", vsCutDt);
							util.DataMap.setValue(app, "dmReqList", "strPrtObjDivRcd", "CC009OG");
							// 조회조건 초기화
							util.Control.redraw(app, ["ipbStDt", "ipbEndDt", "cbbAltDivRcd", "cbbAltRsnRcd", "cbbObjDivRcd"]);
							
							doAltRsnRcdFilter("");
							// 소속 포커스
							util.Control.setFocus(app, "ipbDeptNm");				
						}
					});
				}
			
				/**
				 * @desc 조회버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onClick_BtnSearch = function() {
					// 조회조건 필수 체크
					if(!util.validate(app, ["ipbDeptNm", "ipbStDt", "ipbEndDt"])){
						return false;
					}
					
					doList();
				};
				
				/**
				 * @desc 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 5. 18
				 */
				function doList(poCallBackFunc) {
					
					util.DataMap.setValue(app, "dmReqList", "strKeyDate", util.DataMap.getValue(app, "dmReqList", "strStDt"));
					
					// submission call 
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
					
							var vsAltDivNm = util.SelectCtl.getLabel(app, "cbbAltDivRcd", util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd"));
							var vsAltRsnNm = util.SelectCtl.getLabel(app, "cbbAltRsnRcd", util.SelectCtl.getSelectedIndex(app, "cbbAltRsnRcd"));
							
							var vsStDt = ExtInput.getText("ipbStDt");
							var vsEndDt = ExtInput.getText("ipbEndDt");
							var vsSaNm = util.DataMap.getValue(app, "dmReqList", "strDeptNm");
							var vsSchTitle =  vsStDt + " ~ " + vsEndDt;
							var vsSchTitle1 = "";
							var vsSchTitle2 = "";
							var viSchCnt = 0;
							
							if(util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd") != 0){
								viSchCnt = viSchCnt + 1;
							}
							
							if(util.SelectCtl.getSelectedIndex(app, "cbbAltRsnRcd") != 0 ){
								viSchCnt = viSchCnt + 1;
							}
							
			
							if(viSchCnt > 1){
								if(util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd") != 0 ){
									if(vsSchTitle2 !== "") {
										vsSchTitle2 = vsSchTitle2 + "     " ; 
									}
										vsSchTitle2 = vsSchTitle2 + "변동구분 : " + vsAltDivNm;
								}
								
								if(util.SelectCtl.getSelectedIndex(app, "cbbAltRsnRcd") != 0){
									if(vsSchTitle2 !== "") {
										vsSchTitle2 = vsSchTitle2 + "     " ; 
									}
										vsSchTitle2 = vsSchTitle2 + "변동사유 : " + vsAltRsnNm;
								}
								
							}else{
								if(util.SelectCtl.getSelectedIndex(app, "cbbAltDivRcd") != 0){
									if(vsSchTitle2 !== "") {
										vsSchTitle2 = vsSchTitle2 + "     " ; 
									}
									vsSchTitle2 = vsSchTitle2 + "변동구분 : " +  vsAltDivNm;
								}
								
								if(util.SelectCtl.getSelectedIndex(app, "cbbAltRsnRcd") != 0 ){
									if(vsSchTitle2 !== "") {
										vsSchTitle2 = vsSchTitle2 + "     " ; 
									}
									vsSchTitle2 = vsSchTitle2 + "변동사유 : " + vsAltRsnNm;
								}
							}
							if(vsSchTitle2 !== "") {
									vsSchTitle2 = vsSchTitle2 + "     " ; 
							}
								vsSchTitle2 = vsSchTitle2+ "변동일자 : " + vsSchTitle;
							
							//리퀘스트 셋팅
							var voParam = {
										p_strDeptCd               : util.DataMap.getValue(app, "dmReqList", "strDeptCd"),
										p_strDeptNm              : vsSaNm,
										p_strObjDivRcd           : util.DataMap.getValue(app, "dmReqList", "strObjDivRcd"),
										p_strStDt                    : util.DataMap.getValue(app, "dmReqList", "strStDt").substr(0,8),
										p_strEndDt                 : util.DataMap.getValue(app, "dmReqList", "strEndDt").substr(0,8),
										p_strAltDivRcd            : util.DataMap.getValue(app, "dmReqList", "strAltDivRcd"),
										p_strAltRsnRcd           : util.DataMap.getValue(app, "dmReqList", "strAltRsnRcd"),
										p_strLandivRcd           : msDefaultLocale,
										p_strAltDivNm             : vsAltDivNm,
										p_strSaList                 : util.DataMap.getValue(app, "dmResList", "strSaList"),
										p_strPrtObjDivRcd        : util.DataMap.getValue(app, "dmReqList", "strPrtObjDivRcd"),
									    p_strPrtPageNextYn     : util.DataMap.getValue(app, "dmReqList", "strPrtPageNextYn"), 
										p_strAltRsnNm            : vsAltRsnNm,
										p_strSchTitle1             : vsSchTitle1,
										p_strSchTitle2             : vsSchTitle2
									}	
							
							var voOzFormParam = {
									  TITLE :  "학 적 변 동 대 장 "//리포트타이틀
									, SUB_TITLE : "" //리포트서브타이틀		
									, FORM_TYPE : "flash"
								};	
									
							util.Report.open(app, "hojReport", "extCsrSShregAltListPrt", voOzFormParam, voParam);
					
						}
						if(util.isFunc(poCallBackFunc)) poFunc(pbSuccess);
					});
				}
				
				/**
				 * @desc 소속 검색 팝업 호출
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
					// 변동일자 체크
					var vsKeyDate = util.Control.getValue(app, "ipbStDt");
					var vsEndDate = util.Control.getValue(app, "ipbEndDt");
					var vsTitle = ExtControl.getTextValue("lblAltDt");
					if (ValueUtil.isNull(vsKeyDate)||ValueUtil.isNull(vsEndDate)) {
						util.Control.setValue(app, "ipbDeptNm", "");
						util.Control.setValue(app, "ipbDeptCd", "");
						//변동일자를 입력하여 주십시오.
						util.Msg.alert("NLS-CSR-M121",[vsTitle]);
						return;
					}
					doOnClickStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 소속 검색
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */	
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					// 변동일자 체크
					var vsKeyDate = util.Control.getValue(app, "ipbStDt");
					var vsEndDate = util.Control.getValue(app, "ipbEndDt");
					var vsTitle = ExtControl.getTextValue("lblAltDt");
					if (ValueUtil.isNull(vsKeyDate)||ValueUtil.isNull(vsEndDate)) {
						util.Control.setValue(app, "ipbDeptNm", "");
						util.Control.setValue(app, "ipbDeptCd", "");
						//변동일자를 입력하여 주십시오.
						util.Msg.alert("NLS-CSR-M121",[vsTitle]);
						return;
					}
					doOnChangeStdCmnPObjSch(sender);
				}
				
				/**
				 * @desc 소속 권한 처리
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onLoadImportDone_ImpStdCmnPobjSch = function() {
					setStdCmnPObjSchObjInfo();
				}
				
				/**
				 * @desc 변동구분에 따른 변동사유 필터
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				moPage.onValueChanged_CbbAltDivRcd = function() {
					var vsAltDivRcd = util.Control.getValue(app, "cbbAltDivRcd");
					var vsAltDivRcdPrp4 = ExtInstance.getValue("/root/resOnLoad/altDivRcdList/row", "CD_PRP4", "child::CD='"+vsAltDivRcd+"'");
					
					doAltRsnRcdFilter(vsAltDivRcdPrp4);
				};
				
				/**
				 * @desc 변동구분에 따른 변동사유 필터
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 5. 18
				 */
				function doAltRsnRcdFilter(psAltDivRcd) {
					var vcAltRsnRcd = ExtControl.getControl("cbbAltRsnRcd");
					var vsNodeSet = vcAltRsnRcd.getAttr("nodeset");
					var vsOriRef = vsNodeSet;
					vsNodeSet += "[child::CD_CLS='" + psAltDivRcd + "']";
					vcAltRsnRcd.setAttr("nodeset", vsNodeSet);
					vcAltRsnRcd.refresh();
					util.SelectCtl.selectItem(app, "cbbAltRsnRcd", 0);
					vcAltRsnRcd.setAttr("nodeset", vsOriRef);
					
				}
				
				
				moPage.onValueChanged_IpbEndDt = function() {
					doDeptClear();
				};
				
				
				moPage.onValueChanged_IpbStDt = function() {
					doDeptClear();
				};
				
				function doDeptClear() {
				
					//전체권한일시 최상위 부서가 셋팅 되어 있으면 초기화 하지 않음
					var vsDeptCd = util.DataMap.getValue(app, "dmReqList", "strDeptCd");
					if(moPageInfo.authRngRcd == "CC00102"){
						if(vsDeptCd != ExtInstance.getValue("instance('insStdCmnPObjSch')/root/resListObjInfo/strObjCd")){
							util.Control.setValue(app, "ipbDeptNm", "");
							util.Control.setValue(app, "ipbDeptCd", "");
							util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");
						}
					// 전체권한 이외의 권한일시 자신의 소속 부서가 셋팅되어 있으면 초기화 하지 않음
					}else if(moPageInfo.authRngRcd == "CC00101" || moPageInfo.authRngRcd == "CC00105" || moPageInfo.authRngRcd == "CC00106" || moPageInfo.authRngRcd == "CC00107"){
						if(vsDeptCd != moUserInfo.asgnDeptCd){
							util.Control.setValue(app, "ipbDeptNm", "");
							util.Control.setValue(app, "ipbDeptCd", "");
							util.DataMap.setValue(app, "dmReqList", "strObjDivRcd", "");			
						}
					}
			
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsAltRsnRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAltDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [{
					"name": "strKeyDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strAltDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAltRsnRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strPrtObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPrtPageNextYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strSaList",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/ExtCsrShregAltListPrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/ExtCsrShregAltListPrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDeptCd");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-ASGN");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optAltDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-CHGDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "560px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbAltDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optAltDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strAltDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsAltDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbAltDivRcdSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbAltDivRcdSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "645px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "145px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnPopSearch");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopSearchClick == "function") {
					button_2.addEventListener("click", onBtnPopSearchClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "236px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "255px",
					"width": "15px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optAltRsnRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-CHGRSN");
				container.addChild(output_3, {
					"top": "5px",
					"left": "734px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbAltRsnRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optAltRsnRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strAltRsnRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsAltRsnRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "819px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optAltDt");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("UI-DB-ALT_DT");
				container.addChild(output_4, {
					"top": "5px",
					"left": "270px",
					"width": "80px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optAltStDt");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-GLS-GENDER");
				container.addChild(output_5, {
					"top": "15px",
					"left": "295px",
					"width": "10px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optAltEndDt");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-GENDER");
				container.addChild(output_6, {
					"top": "15px",
					"left": "320px",
					"width": "10px",
					"height": "16px"
				});
				var dateInput_1 = new cpr.controls.DateInput("ipbStDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optAltStDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strStDt");
				if(typeof onIpbStDtValueChange == "function") {
					dateInput_1.addEventListener("value-change", onIpbStDtValueChange);
				}
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "355px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("ipbEndDt");
				dateInput_2.bind("fieldLabel").toExpression("#optAltEndDt.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqList"), "strEndDt");
				if(typeof onIpbEndDtValueChange == "function") {
					dateInput_2.addEventListener("value-change", onIpbEndDtValueChange);
				}
				container.addChild(dateInput_2, {
					"top": "5px",
					"left": "460px",
					"width": "90px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("opt");
				output_7.value = "~";
				container.addChild(output_7, {
					"top": "5px",
					"left": "445px",
					"width": "15px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optObjDivRcd");
				output_8.value = "출력용도";
				container.addChild(output_8, {
					"top": "5px",
					"left": "927px",
					"width": "67px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbObjDivRcd");
				comboBox_3.bind("fieldLabel").toExpression("#optChgDivRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqList"), "strPrtObjDivRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("행정부서", "CC009OG"));
					comboBox_3.addItem(new cpr.controls.Item("학사부서", "CC009SA"));
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "998px",
					"width": "92px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbPageNext");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "학과용";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strPrtPageNextYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "1094px",
					"width": "61px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCsrShreg");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var hTMLObject_1 = new cpr.controls.HTMLObject("hojReport");
				container.addChild(hTMLObject_1, {
					"top": "5px",
					"left": "5px",
					"width": "1215px",
					"height": "588px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "686px",
				"left": "110px",
				"width": "95px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "extCsrSShregAltListPrt";
	cpr.core.Platform.INSTANCE.register(app);
})();
