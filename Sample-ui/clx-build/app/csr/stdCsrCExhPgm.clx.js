/*
 * App URI: app/csr/stdCsrCExhPgm
 * Source Location: app/csr/stdCsrCExhPgm.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrCExhPgm", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCsrCExhPgm.xtm"/>
			
			var stdCsrCExhPgm = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				// 탭 정의
				moPage.TAB = {
					//데이타 관리
					EXH_PGM_MNG  	: "tabExhPgmMng",
					//이력관리
					EXH_PGM_HIS    	: "tabExhPgmHis",
					//언어
					EXH_PGM_LANG 	: "tabExhPgmLang"
				};
				// 탭버튼 정의
				moPage.TAB_BTN = {
					//데이타 관리
					tabExhPgmMng   		: "tabBtnExhPgmMng",
					//이력관리
					tabExhPgmHis  	        : "tabBtnExhPgmHistory",
					//언어
					tabExhPgmLang       	: "tabBtnExhPgmLang"
				};
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
			     * @author Choi In Seong 2016. 6. 21
			     */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
			
				/**
				 * @desc 조회조건 엔터 시 바로 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onKeyDown_IpbExhPgmCd = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						// 검색 실행.
						ExtModel.dispatch("btnSearch","DOMActivate");
					}
				};
				
				/**
				 * @desc 조회조건 엔터 시 바로 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onKeyDown_IpbExhPgmNm = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						// 검색 실행.
						ExtModel.dispatch("btnSearch","DOMActivate");
					}
				};
				
				/**
				 * @desc 탭선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_TabBtnExhPgmMng = function() {
					doTabChange(moPage.TAB.EXH_PGM_MNG);
				};
				
				/**
				 * @desc 탭선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_TabBtnExhPgmHistory = function() {
					doTabChange(moPage.TAB.EXH_PGM_HIS);
				};
				
				/**
				 * @desc 탭선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_TabBtnExhPgmLang = function() {
					doTabChange(moPage.TAB.EXH_PGM_LANG);
				};
				
				/**
				 * @desc 기준일자 선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnYearSmt = function() {
					doOnclickSchYearSmt("dipKeyDate","impSchYearSmt");
				}
				
				/**
				 * @desc 기준일자 선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnYearSmtHistory = function() {
					doOnclickSchYearSmt("dipKeyDateHistory","impSchYearSmt");
				};
				
				/**
				 * @desc 화면 온로드
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onModelConstructDone_stdCsrCExhPgm = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCsrExhPgm", "rptCsrExhPgmHistory", "rptCsrExhPgmLang"]);
					// 2. 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grp_rptCsrExhPgm"]);
					
					setUnitSystem("CSR");
					
					// 첫번째 탭버튼 선택
					ExtTab.setTabBtn("tabMain",  moPage.TAB_BTN.tabExhPgmMng);
					util.Tab.setSelectedTabItem(app, "tabMain",moPage.TAB.EXH_PGM_MNG);
					
					//서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							
							util.DataMap.setValue(app, "dmReqList", "strLanGbn", msSystemLocale);
							
							util.Control.redraw(app, ["dipKeyDate", "cbbDivRcd", "cbbExhPgmTypeRcd", "dipKeyDateHistory"]);
							
							util.Control.setFocus(app, "dipKeyDate");
						}
					});
				}
			
				/**
				 * @desc 조회 버튼 클릭
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnSearch = function() {
					
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					 //작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}else{
						doClearTab(vsSelTabId);
					}
					//조회조건 필수 체크 기준일자
					if(!util.validate(app, ["dipKeyDate"])) return false;
					
					// 첫번째 탭버튼 선택
					ExtTab.setTabBtn("tabMain",  moPage.TAB_BTN.tabExhPgmMng);
					util.Tab.setSelectedTabItem(app, "tabMain",moPage.TAB.EXH_PGM_MNG);
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});
				};
			
				/**
				 * @desc 탭 리피트 초기화
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doClearTab(vsSelTabId){
			
					if(vsSelTabId !="")
					{
						if(vsSelTabId == moPage.TAB.EXH_PGM_MNG){
							//적용그룹관리 
							util.Grid.revertAllData(app, "grdCsrExhPgm");
							
						}else if(vsSelTabId == moPage.TAB.EXH_PGM_HIS){
							//평가항목관리
							util.Grid.revertAllData(app, "grdCsrExhPgmHistory");
							
						}else if(vsSelTabId == moPage.TAB.EXH_PGM_LANG){
							//평가항목관리
							util.Grid.revertAllData(app, "grdCsrExhPgmLang");
						}
					}
				}
			
				 /**
				  * 탭 변경사항 체크 후 조회
				  * @member moPage
				  * @param {?} psCaseId
				  * @type Boolean
				  * @return 
				  * @author hyunteak at 16. 3. 8 오전 11:23
				  */
				function doTabChange (psCaseId){
			
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					
					// 1. 현재 선택된 탭의 상태 체크
					switch (vsSelTabId) {
						// 데이타 관리
						case moPage.TAB.EXH_PGM_MNG: {
								if(psCaseId != moPage.TAB.EXH_PGM_MNG){
									// 데이타 관리 변경내역 있는 경우
									if(util.Grid.isModified(app, ["grdCsrExhPgm"], "CRM") ){
										// tab 이동 하지 않음
										ExtTab.setTabBtn("tabMain", moPage.TAB_BTN[vsSelTabId]);
										return false;
									}else{
										if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCsrExhPgm"))){
											util.Msg.notify(app, "NLS.INF.M023");
											// tab 이동 하지 않음
											ExtTab.setTabBtn("tabMain", moPage.TAB_BTN[vsSelTabId]);
											return false;
										}
										
										if(util.Grid.isModified(app, ["grdCsrExhPgm"]))	{
											//이력 목록 리셋
											util.Grid.revertAllData(app, "grdCsrExhPgm");
											//이력 기본정보 리셋
											util.Control.reset(app, "frfCsrExhPgm");
										}
									}
								}
							break;
						}
						
						// 이력관리
						case moPage.TAB.EXH_PGM_HIS: {
								if(psCaseId != moPage.TAB.EXH_PGM_HIS){
									// 이력관리 변경내역이 있는 경우
									if(util.Grid.isModified(app, ["grdCsrExhPgmHistory"], "CRM") ){
										// tab 이동 하지 않음
										ExtTab.setTabBtn("tabMain", moPage.TAB_BTN[vsSelTabId]);
										return false;
									}else{	
										// 선택된 행이 없을 시 막음
										if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCsrExhPgmHistory"))){
											util.Msg.notify(app, "NLS.INF.M023");
											// tab 이동 하지 않음
											ExtTab.setTabBtn("tabMain", moPage.TAB_BTN[vsSelTabId]);
											return false;
										}
			
										if(util.Grid.isModified(app, ["grdCsrExhPgmHistory"]))	{
											//이력 목록 리셋
											util.Grid.revertAllData(app, "grdCsrExhPgmHistory");
										}
									}
								}
							break;
						}
						
						// 언어
						case moPage.TAB.EXH_PGM_LANG: {
								if(psCaseId != moPage.TAB.EXH_PGM_LANG){
									// 언어 목록에 변경내역이 있는 경우
									if(util.Grid.isModified(app, ["grdCsrExhPgmLang"], "CRM") ){
										// tab 이동 하지 않음
										ExtTab.setTabBtn("tabMain", moPage.TAB_BTN[vsSelTabId]);
										return false;
									}else
									{	
										//언어 작업취소
										util.Grid.restoreRow(app, "grdCsrExhPgmLang");
									}
								}
							break;
						}
						
					}
					
					var vsExhPgmCd  = util.Grid.getCellValue(app, "grdCsrExhPgm", "EXH_PGM_CD");  //교환프로그램코드
					var vsRefKey        = util.Grid.getCellValue(app, "grdCsrExhPgm", "REF_KEY");    //REF_KEY
					var vsLanDivRcd   = util.Grid.getCellValue(app, "grdCsrExhPgm", "LAN_DIV_RCD"); //언어구분코드
					
					util.DataMap.setValue(app, "dmReqSelRow", "strExhPgmCd", vsExhPgmCd);
					util.DataMap.setValue(app, "dmReqSelRow", "strRefKey",   vsRefKey);
					util.DataMap.setValue(app, "dmReqSelRow", "strLanGbn",   vsLanDivRcd);
					
					// 탭변경
					util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
					// 탭변경 후 처리 로직
					switch (psCaseId) {
						// 3-1. 평가항목관리 조회
						case moPage.TAB.EXH_PGM_MNG : {
							doSearchManage();
							
							break;
						}
						// 적용그룹관리 조회
						case moPage.TAB.EXH_PGM_HIS : {
							//var 
							doListHistory(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
							
							break;
						}
						
						case moPage.TAB.EXH_PGM_LANG : {
							//var 
							doListLang(function(pbSuccess) {
								// 조회 : "조회되었습니다." header 메세지 표시
								if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
							});
							
							break;
						}
					}
				}
			
				/**
				 * @desc 교환프로그램 목록 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doList(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptCsrExhPgm"]);
							if(util.Grid.getIndex(app, "grdCsrExhPgm")){
								util.Control.setEnable(app, true, "frfCsrExhPgm");
							}else{
								util.Control.setEnable(app, false, "frfCsrExhPgm");
								util.Control.reset(app, "frfCsrExhPgm");
							}
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
			
				/**
				 * @desc 교환프로그램 상세 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doSearchManage() {
					//1.행정부서목록 포커싱된 인덱스
					var vnIndex = util.Grid.getIndex(app, "grdCsrExhPgm");
					//2.학사부서코드 활성화여부
					var vsFlagGbn = util.Grid.getCellValue(app, "grdCsrExhPgm","FLAG_GBN",vnIndex);
					var vsRowStatus = util.Grid.getRowState(app, "grdCsrExhPgm");
					//신규시만 활성화 ,복사 or 수정시 비 활성화
					if(vsFlagGbn !="C" &&  vsRowStatus =="insert")
					{
						util.Control.setEnable(app, true,"ipbFrfExhPgmCd");
					}else
					{
						util.Control.setEnable(app, false,"ipbFrfExhPgmCd");
					}
					//3.리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptCsrExhPgm","frfCsrExhPgm", vnIndex);
				}
				
				/**
				 * @desc 이력 목록 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doListHistory(poCallBackFunc) {
					//strCommand: listHistory 
					util.Submit.send(app, "subListHistory",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptCsrExhPgmHistory"]);
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
				
				/**
				 * @desc 언어 목록 조회
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doListLang(poCallBackFunc) {
					//strCommand: listLang 
					util.Submit.send(app, "subListLang",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["rptCsrExhPgmLang"]);
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
			
				/**
				 * @desc 교환프로그램 신규
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnNew = function() {
					
					util.Control.setEnable(app, true, "frfCsrExhPgm");
					
					var strKeyDate = util.DataMap.getValue(app, "dmReqList", "strKeyDate");
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정
					util.Grid.insertRow(app, "grdCsrExhPgm");
			
					var vsStDt = util.DataMap.getValue(app, "dmReqList", "strKeyDate");
					var vsDivRcd = util.DataMap.getValue(app, "dmReqList", "strDivRcd");
					var vsTypeRcd = util.DataMap.getValue(app, "dmReqList", "strExhPgmTypeRcd");
					
					var vsDate = vsStDt.substring(0, 8);
					vsDate += "000000";
					
					util.Grid.setCellValue(app, "grdCsrExhPgm", "ST_DT", vsDate);  // 조회 조건 기준일자
					util.Grid.setCellValue(app, "grdCsrExhPgm", "END_DT", "99991231000000");  // 종료일
					util.Grid.setCellValue(app, "grdCsrExhPgm", "LAN_DIV_RCD", msSystemLocale); // 언어구분코드
					util.Grid.setCellValue(app, "grdCsrExhPgm", "OBJ_DIV_RCD", "CC009EX");  // 객체구분코드
					util.Grid.setCellValue(app, "grdCsrExhPgm", "EXH_PGM_DIV_RCD", vsDivRcd);  //  교환프로그램구분
					util.Grid.setCellValue(app, "grdCsrExhPgm", "EXH_PGM_TYPE_RCD", vsTypeRcd);  // 교환프로그램유형
					util.Grid.setCellValue(app, "grdCsrExhPgm", "FLAG_GBN", "N"); 
					
					util.FreeForm.setValue(app, "frfCsrExhPgm", "ST_DT", vsDate);
					util.FreeForm.setValue(app, "frfCsrExhPgm", "END_DT", "99991231000000");
					util.FreeForm.setValue(app, "frfCsrExhPgm", "LAN_DIV_RCD", msSystemLocale); // 언어구분코드
					util.FreeForm.setValue(app, "frfCsrExhPgm", "OBJ_DIV_RCD", "CC009EX");  // 객체구분코드
					util.FreeForm.setValue(app, "frfCsrExhPgm", "EXH_PGM_DIV_RCD", vsDivRcd);  //  교환프로그램구분
					util.FreeForm.setValue(app, "frfCsrExhPgm", "EXH_PGM_TYPE_RCD", vsTypeRcd);  // 교환프로그램유형
					util.FreeForm.setValue(app, "frfCsrExhPgm", "FLAG_GBN", "N"); 
				};
				
				/**
				 * @desc 교환프로그램 복사
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnCopy = function() {
					var voRpt = ExtControl.getControl("rptCsrExhPgm");
					vsSelIdx = voRpt.getSelectedRowPos("", "");
								
					if(vsSelIdx == ""){
						// 라인을 선택하세요.
						util.Msg.notify(app, "NLS.INF.M023");
						return false;
					}
					
					util.Control.setEnable(app, true, "frfCsrExhPgm");
					var vsExhPgmCd = util.Grid.getCellValue(app, "grdCsrExhPgm", "EXH_PGM_CD", vsSelIdx);
					var vsKeyDate = util.DataMap.getValue(app, "dmReqList", "strKeyDate");
					var vnNewIdx =  util.Grid.insertRow(app, "grdCsrExhPgm");
					//선택된 행 복사
					ExtRepeat.copyToRowData("rptCsrExhPgm", vsSelIdx, "rptCsrExhPgm", vnNewIdx);
					
					var vsDate = vsKeyDate.substring(0, 8);
					vsDate += "000000";
			
					util.Grid.setCellValue(app, "grdCsrExhPgm", "ST_DT", vsDate, vnNewIdx);
					util.Grid.setCellValue(app, "grdCsrExhPgm", "END_DT", "99991231000000", vnNewIdx);
					util.Grid.setCellValue(app, "grdCsrExhPgm", "REF_KEY", "", vnNewIdx);
					
					util.Grid.setCellValue(app, "grdCsrExhPgm", "UPT_STATUS", "N", vnNewIdx);
					util.Grid.setCellValue(app, "grdCsrExhPgm", "FLAG_GBN", "C", vnNewIdx);
					ExtRepeat.setPkValues("rptCsrExhPgm", "EXH_PGM_CD:"+vsExhPgmCd+",ST_DT:"+vsDate+",END_DT:99991231000000");
					//리피트 row 데이터를 프리폼 copy
					doSearchManage();
				};
				
				/**
				 * @desc 교환프로그램 삭제
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnDel = function() {
					var voRpt = ExtControl.getControl("rptCsrExhPgm");
					vsSelIdx = voRpt.getSelectedRowPos("", "");
								
					if(vsSelIdx == ""){
						// 라인을 선택하세요.
						util.Msg.notify(app, "NLS.INF.M023");
						return false;
					}
						
					var vsUptStatus = util.Grid.getCellValue(app, "grdCsrExhPgm", "UPT_STATUS");
					if(vsUptStatus !="D"){
						doUsedCheck();
					}
				};
				
				/**
				 * @desc 교환프로그램 사용여부 체크
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doUsedCheck() {
					var vsExhPgmCd = util.Grid.getCellValue(app, "grdCsrExhPgm", "EXH_PGM_CD");
					util.DataMap.setValue(app, "dmResUsedCheck", "strExhPgmCd", vsExhPgmCd);
					
					//strCommand: usedCheck 
					util.Submit.send(app, "subUsedCheck",  function(pbSuccess) {
						if(pbSuccess){
							var vnResult = util.DataMap.getValue(app, "dmResUsedCheck", "strUsedCheck");
							if (vnResult == "1") {
									// 사용중인 프로그램입니다. 삭제 할 수 없습니다.
									util.Msg.alert("NLS-CSR-M019");
									return;
								} else {
									// 사용중이 아니면 삭제하도록 세팅.
									util.Grid.deleteRow(app, "grdCsrExhPgm");
									if(util.Grid.getIndex(app, "grdCsrExhPgm")){
										util.Control.setEnable(app, true, "frfCsrExhPgm");
										doSearchManage();
									}else{
										util.Control.setEnable(app, false, "frfCsrExhPgm");
										util.Control.reset(app, "frfCsrExhPgm");
									}
								}
						}
					});
				};
				
				/**
				 * @desc 교환프로그램 작업취소
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdCsrExhPgm");
					if(util.Grid.getIndex(app, "grdCsrExhPgm")){
						util.Control.setEnable(app, true, "frfCsrExhPgm");
						doSearchManage();
					}else{
						util.Control.setEnable(app, false, "frfCsrExhPgm");
						util.Control.reset(app, "frfCsrExhPgm");
					}
				};
				
				/**
				 * @desc 교환프로그램 작업저장
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnSave = function() {
					
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCsrExhPgm"], "MSG")){
						return false;
					}
					
					if(!doCheckTerm()){
						return;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCsrExhPgm")) return false;
					
					doSave();
				};
				
				/**
				 * @desc 교환프로그램 저장
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doSave(poCallbackFunc) {
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								
								//저장성공 메세지 출력
								doList(function(pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessList) {
										util.Msg.notify(app, "NLS.INF.M025");
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								});
							}
						}
					);
				}
				
				/**
				 * @desc 기간단위코드 체크
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doCheckTerm() {
					var vnCnt = util.Grid.getRowCount(app, "grdCsrExhPgm");
				
					for (var i = 1; i <= vnCnt; i++) {
						var vsPgmMinTerm = util.Grid.getCellValue(app, "grdCsrExhPgm", "PGM_MIN_TERM", i );
						var vsPgmMaxTerm = util.Grid.getCellValue(app, "grdCsrExhPgm", "PGM_MAX_TERM", i );
						var vsTermUnitRcd = util.Grid.getCellValue(app, "grdCsrExhPgm", "TERM_UNIT_RCD", i );
						if ((vsPgmMinTerm != ""
						|| vsPgmMaxTerm != "")
						&& vsTermUnitRcd == "") {
							//프로그램 기간단위코드를 입력해주세요
							util.Msg.alert("NLS-CSR-M018");
							return false;
							break;
						}
				}
					return true;
				};
				
				/**
				 * @desc 교환프로그램 폐기
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnDisUseHistory = function() {
					var vnCnt = util.Grid.getRowCount(app, "grdCsrExhPgmHistory");
					
					// 9999레코드를  조회조건의 학기의 (시작일자 - 1초) 로 업데이트 = 해당학기까지 유효한 데이타
					var voMaxRow   = null;
					var vnMaxEndDt = null;
					for (var i = 1 ; i <= vnCnt ; i++) {
						var vsEndDt = util.Grid.getCellValue(app, "grdCsrExhPgmHistory", "END_DT", i);
						if (vsEndDt.substring(0, 8) == "99991231") {
							vnMaxEndDt = vsEndDt;
							voMaxRow = i;
							break;
						}
					}
					
					// 1. 종료일자가 99991231이 아닐때.
					if (voMaxRow == null) {
						// 폐기 가능한 데이터가 없습니다.
						util.Msg.alert("NLS-INF-M029");
						return;
					}
					
					// 99991231가 있는 로우의 시작일
					var vsStDt            = util.Grid.getCellValue(app, "grdCsrExhPgmHistory", "ST_DT", voMaxRow);
					var vsKeyDate   	  = util.DataMap.getValue(app, "dmReqList", "strKeyDateHistory");
					var vsBefKeyDate = moPage.getBefDate(vsKeyDate);
					
					if (vsStDt >= vsBefKeyDate) {
						// 폐기 가능한 데이터가 없습니다.
						util.Msg.alert("NLS-INF-M029");
						return;
					}
					
			        var vsMsgCiiDate = vsBefKeyDate.substring(0, 4) + NLS.NSCR.YEAR + vsBefKeyDate.substring(4, 6) + NLS.NSCR.MONTH + vsBefKeyDate.substring(6, 8) + NLS.NSCR.DAY;
					if(util.Msg.confirm("NLS-CRM-M047", [vsMsgCiiDate]) ){
						// 전날자로 타겟로우의 종료일자 업데이트
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "END_DT", vsBefKeyDate, voMaxRow);
			            doSaveHistory();
			        }
				};
				
				/**
				 * @desc 이력 저장
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doSaveHistory(poCallbackFunc) {
			
					//strCommand: save 
					util.Submit.send(app, "subSaveHistory", function(pbSuccessSave) {
							if(pbSuccessSave) {
								
								//저장성공 메세지 출력
								doListHistory(function(pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessList) {
										util.Msg.notify(app, "NLS.INF.M025");
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								});
							}
						}
					);
				};
				
				/**
				 * @desc 이전 일자 반환
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.getBefDate = function(keyDate) {
					var y = keyDate.substring(0, 4);
					var m = keyDate.substring(4, 6);
					var d = keyDate.substring(6, 8);
					var befDt = new Date(y, m - 1, d - 1);
					
					var befDtYear  = befDt.getFullYear().toString();
					var befDtMonth = eval(befDt.getMonth() + 1).toString();
					var befDtDate  = befDt.getDate().toString();
					
					if (befDtMonth.length == 1) befDtMonth = "0" + befDtMonth;
					if (befDtDate.length == 1) befDtDate = "0" + befDtDate;
					
					var rtnBefDt = befDtYear + befDtMonth + befDtDate + "000000";
					
					return rtnBefDt;
				};
				
				/**
				 * @desc 교환프로그램 폐기취소
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnDisUseCancHistory = function() {
					var vnCnt = util.Grid.getRowCount(app, "grdCsrExhPgmHistory");
					
					var voMaxRow   = null;
					var vnMaxEndDt = null;
					
					for (var i = 1 ; i <= vnCnt ; i++) {
						var vsEndDt = util.Grid.getCellValue(app, "grdCsrExhPgmHistory", "END_DT", i);
						if (i == 0 || vnMaxEndDt < vsEndDt) {
							vnMaxEndDt = vsEndDt;
							voMaxRow   = i;
						}
					}
					
					if (vnMaxEndDt.substring(0, 8) == "99991231") {
						//폐기취소 가능한 데이터가 없습니다.
						util.Msg.alert("NLS-INF-M030");
						return;
					}
					
					if(util.Msg.confirm("NLS-CRM-M048") ){	
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "END_DT", "99991231000000", voMaxRow);
			            doSaveHistory();
			        }
				}
				
				/**
				 * @desc 교환프로그램 복구
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnRecoverHistory = function() {
					
					var vnCnt = util.Grid.getRowCount(app, "grdCsrExhPgmHistory");
					
					// 요약: 가장 최근의 레코드를 카피하여 insert한다. (단, 기준일자가 최종일자보다 커야 한다.)
					
					var vnMaxEndDt  = null;
					var voMaxRow    = null;
					
					for (var i = 1 ; i <= vnCnt ; i++) {
						var vsEndDt = util.Grid.getCellValue(app, "grdCsrExhPgmHistory", "END_DT", i);
							
						if (i == 0 || vnMaxEndDt < vsEndDt) {
							vnMaxEndDt = vsEndDt;
							voMaxRow = i;
						}
					}
					
					// key date
					var vsHistoryKeyDate = util.DataMap.getValue(app, "dmReqList", "strKeyDateHistory");
					if (vnMaxEndDt >= vsHistoryKeyDate) {
						// 복구 가능한 DATA가 없습니다.
						util.Msg.alert("NLS-WRN-M128");
						return;
					}
					
			        var vsCiiDate = vsHistoryKeyDate;
			        var vsMsgCiiDate = vsCiiDate.substring(0, 4) + NLS.NSCR.YEAR + vsCiiDate.substring(4, 6) + NLS.NSCR.MONTH + vsCiiDate.substring(6, 8) + NLS.NSCR.DAY;
					
					if(util.Msg.confirm("NLS-CRM-M049", [vsMsgCiiDate]) ){
						var voNextRow = util.Grid.insertRow(app, "grdCsrExhPgmHistory");
						
						//선택된 행 복사
						ExtRepeat.copyToRowData("rptCsrExhPgmHistory", voMaxRow, "rptCsrExhPgmHistory", voNextRow);
					
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "REF_KEY", "", voNextRow);
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "ST_DT", vsHistoryKeyDate, voNextRow);
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "END_DT", "99991231000000", voNextRow);
						util.Grid.setCellValue(app, "grdCsrExhPgmHistory", "UPT_STATUS", "N", voNextRow)
						doSaveHistory();
					}
				};
			
				/**
				 * @desc 교환프로그램 언어 신규
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnNewLang = function() {
					var strKeyDate = util.DataMap.getValue(app, "dmReqList", "strKeyDate");
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정
					util.Grid.insertRow(app, "grdCsrExhPgmLang");
			
					var vsRefKey   = util.DataMap.getValue(app, "dmReqSelRow", "strRefKey");
					var vsExhPgmCd = util.DataMap.getValue(app, "dmReqSelRow", "strExhPgmCd");
					
					util.Grid.setCellValue(app, "grdCsrExhPgmLang", "REF_KEY", vsRefKey);
					util.Grid.setCellValue(app, "grdCsrExhPgmLang", "EXH_PGM_CD", vsExhPgmCd);
				};
				
				/**
				 * @desc 교환프로그램 언어 삭제
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnDelLang = function() {
					var voRpt = ExtControl.getControl("rptCsrExhPgmLang");
					vsSelIdx = voRpt.getSelectedRowPos("", "");
								
					if(vsSelIdx == ""){
						// 라인을 선택하세요.
						util.Msg.notify(app, "NLS.INF.M023");
						return false;
					}
					
					var vsLanGbnMain = util.DataMap.getValue(app, "dmReqSelRow", "strLanGbn");
					var vsLanGbnCurr = util.Grid.getCellValue(app, "grdCsrExhPgmLang", "LAN_DIV_RCD");
					var vsUptStatus  = util.Grid.getCellValue(app, "grdCsrExhPgmLang", "UPT_STATUS");
					
					// 지우려고 하는 row가 main table에서 default LAN_GBN 과 동일하면 삭제할 수 없음
					// new를 지우려 하는 경우는 가능함
					if (vsLanGbnMain == vsLanGbnCurr && vsUptStatus != "N") {
						util.Msg.alert("NLS-WRN-M010");
						return;
					}
					
					util.Grid.deleteRow(app, "grdCsrExhPgmLang");
				};
				
				/**
				 * @desc 교환프로그램 언어 작업취소
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnRestoreLang = function() {
					util.Grid.restoreRow(app, "grdCsrExhPgmLang");
				};
				
				/**
				 * @desc 교환프로그램 언어 작업저장
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onClick_BtnSaveLang = function() {
							
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCsrExhPgmLang"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdCsrExhPgmLang")) return false;
					
					doSaveLang();
				};
				
				/**
				 * @desc 교환프로그램 언어 작업저장
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				function doSaveLang(poCallbackFunc) {
			
					//strCommand: saveLang 
					util.Submit.send(app, "subSaveLang", function(pbSuccessSave) {
							if(pbSuccessSave) {
								
								//저장성공 메세지 출력
								doListLang(function(pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessList) {
										util.Msg.notify(app, "NLS.INF.M025");
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								});
							}
						}
					);
				}
				
				/**
				 * @desc 교환프로그램 목록 선택
				 * @param 
				 * @return 
				 * @author Choi In Seong 2016. 6. 21
				 */
				moPage.onRowSelect_RptCsrExhPgm = function() {
					
					var vsTab = util.Tab.getSelectedId(app, "tabMain");
					// 선택된 현재 행 상태를 가져와 INSERT/UPDATE/DELETE가 아닐 경우만 탭 조회를 한다.
					var vsRowStatus = util.Grid.getRowState(app, "grdCsrExhPgm");
					var vsIndex = "";
					if(vsTab=="tabExhPgmMng"){
						vsIndex =TAB.EXH_PGM_MNG;
					}else if(vsTab=="tabExhPgmHis"){
						vsIndex =TAB.EXH_PGM_HIS;
					}else if(vsTab=="tabExhPgmLang"){
						vsIndex =TAB.EXH_PGM_LANG;
					}
					doTabChange(vsIndex);
				};
				
				
				
				moPage.onUpdate_FrfCsrExhPgm = function() {
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptCsrExhPgm","frfCsrExhPgm");
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsObjDivRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsLanDivRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsExhPgmDivRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsExhPgmTypeRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsFirsrDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsTermUnitRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCsrExhPgm");
			dataSet_7.parseData({
				"info": "CSR_EXH_PGM@EXH_PGM_CD,ST_DT,END_DT",
				"columns": [
					{"name": "EXH_PGM_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "EXH_PGM_NM"},
					{"name": "EXH_PGM_SHORT_NM"},
					{"name": "EXH_PGM_DESC"},
					{"name": "EXH_PGM_DIV_RCD"},
					{"name": "EXH_PGM_TYPE_RCD"},
					{"name": "FIRSR_DIV_RCD"},
					{"name": "PGM_MIN_TERM"},
					{"name": "PGM_MAX_TERM"},
					{"name": "TERM_UNIT_RCD"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsCsrExhPgmHistory");
			dataSet_8.parseData({
				"info": "CSR_EXH_PGM@EXH_PGM_CD,ST_DT,END_DT",
				"columns": [
					{"name": "EXH_PGM_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "EXH_PGM_NM"},
					{"name": "EXH_PGM_SHORT_NM"},
					{"name": "EXH_PGM_DESC"},
					{"name": "EXH_PGM_DIV_RCD"},
					{"name": "EXH_PGM_TYPE_RCD"},
					{"name": "FIRSR_DIV_RCD"},
					{"name": "PGM_MIN_TERM"},
					{"name": "PGM_MAX_TERM"},
					{"name": "TERM_UNIT_RCD"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsCsrExhPgmLang");
			dataSet_9.parseData({
				"info": "CSR_EXH_PGM_LANG@REF_KEY,EXH_PGM_CD,LAN_DIV_RCD",
				"columns": [
					{"name": "REF_KEY"},
					{"name": "EXH_PGM_CD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "EXH_PGM_NM"},
					{"name": "EXH_PGM_SHORT_NM"},
					{"name": "EXH_PGM_DESC"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dmReqList");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strExhPgmCd",
						"dataType": "string"
					},
					{
						"name": "strExhPgmNm",
						"dataType": "string"
					},
					{
						"name": "strDivRcd",
						"dataType": "string"
					},
					{
						"name": "strExhPgmTypeRcd",
						"dataType": "string"
					},
					{
						"name": "strLanGbn",
						"dataType": "string"
					},
					{
						"name": "strKeyDateHistory",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfCsrExhPgm");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "EXH_PGM_CD",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "OBJ_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "LAN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_NM",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_SHORT_NM",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_DESC",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_TYPE_RCD",
						"dataType": "string"
					},
					{
						"name": "FIRSR_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PGM_MIN_TERM",
						"dataType": "string"
					},
					{
						"name": "PGM_MAX_TERM",
						"dataType": "string"
					},
					{
						"name": "TERM_UNIT_RCD",
						"dataType": "string"
					},
					{
						"name": "FLAG_GBN",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqSelRow");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strExhPgmCd",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strLanGbn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResUsedCheck");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strExhPgmCd",
						"dataType": "string"
					},
					{
						"name": "strUsedCheck",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrExhPgm/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrExhPgm/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrExhPgm/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subListHistory");
			submission_4.action = "/csr/StdCsrExhPgm/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addResponseData(dataSet_8, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaveHistory");
			submission_5.action = "/csr/StdCsrExhPgm/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_8);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subListLang");
			submission_6.action = "/csr/StdCsrExhPgm/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_3);
			submission_6.addResponseData(dataSet_9, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subSaveLang");
			submission_7.action = "/csr/StdCsrExhPgm/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataSet_9);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subUsedCheck");
			submission_8.action = "/csr/StdCsrExhPgm/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataMap_4);
			submission_8.addResponseData(dataMap_4, false);
			app.register(submission_8);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "조회";
				button_1.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optKeyDate");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDate");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDate.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqList"), "strKeyDate");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "90px",
					"width": "90px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optExhPgmCd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-EXH_PGM_CD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "210px",
					"width": "110px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbExhPgmCd");
				inputBox_1.bind("fieldLabel").toExpression("#optExhPgmCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strExhPgmCd");
				if(typeof onIpbExhPgmCdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbExhPgmCdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "325px",
					"width": "135px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optExhPgmNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-DB-EXH_PGM_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "470px",
					"width": "110px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbExhPgmNm");
				inputBox_2.bind("fieldLabel").toExpression("#optExhPgmNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strExhPgmNm");
				if(typeof onIpbExhPgmNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbExhPgmNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "585px",
					"width": "130px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optDivRcd");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-DIVCD");
				container.addChild(output_4, {
					"top": "5px",
					"left": "725px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbDivRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optDivRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqList"), "strDivRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsExhPgmDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "810px",
					"width": "135px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optExhPgmTypeRcd");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-TYPCD");
				container.addChild(output_5, {
					"top": "5px",
					"left": "955px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbExhPgmTypeRcd");
				comboBox_2.bind("fieldLabel").toExpression("#optExhPgmTypeRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqList"), "strExhPgmTypeRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsExhPgmTypeRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "1040px",
					"width": "100px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnYearSmt");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_2.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "180px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grp_rptCsrExhPgm");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tabExhPgmMng";
					var group_3 = new cpr.controls.Container("grpExhPgmMng");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_3.setLayout(formLayout_1);
					(function(container){
						var button_3 = new cpr.controls.Button("btnNew");
						button_3.value = "신규";
						button_3.style.setClasses(["btn-new"]);
						if(typeof onBtnNewClick == "function") {
							button_3.addEventListener("click", onBtnNewClick);
						}
						container.addChild(button_3, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_4 = new cpr.controls.Button("btnDel");
						button_4.value = "삭제";
						button_4.style.setClasses(["btn-delete"]);
						if(typeof onBtnDelClick == "function") {
							button_4.addEventListener("click", onBtnDelClick);
						}
						container.addChild(button_4, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_5 = new cpr.controls.Button("btnRestore");
						button_5.value = "취소";
						button_5.style.setClasses(["btn-restore"]);
						if(typeof onBtnRestoreClick == "function") {
							button_5.addEventListener("click", onBtnRestoreClick);
						}
						container.addChild(button_5, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_6 = new cpr.controls.Button("btnSave");
						button_6.value = "저장";
						button_6.style.setClasses(["btn-save"]);
						if(typeof onBtnSaveClick == "function") {
							button_6.addEventListener("click", onBtnSaveClick);
						}
						container.addChild(button_6, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
						var button_7 = new cpr.controls.Button("btnCopy");
						button_7.value = "복사";
						if(typeof onBtnCopyClick == "function") {
							button_7.addEventListener("click", onBtnCopyClick);
						}
						container.addChild(button_7, {
							"top": "5px",
							"left": "890px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_2 = new udc.com.comFormTitle();
						userDefinedControl_2.bind("title").toLanguage("");
						container.addChild(userDefinedControl_2, {
							"top": "8px",
							"left": "5px",
							"width": "200px",
							"height": "25px"
						});
						var group_4 = linker.group_4 = new cpr.controls.Container("frfCsrExhPgm");
						group_4.style.setClasses(["form-box"]);
						// Layout
						var xYLayout_4 = new cpr.controls.layouts.XYLayout();
						group_4.setLayout(xYLayout_4);
						(function(container){
							var output_6 = new cpr.controls.Output("optFrfExhPgmCd");
							output_6.value = "";
							output_6.style.setClasses(["require"]);
							output_6.bind("value").toLanguage("UI-DB-EXAM_NO");
							container.addChild(output_6, {
								"top": "5px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_7 = new cpr.controls.Output("optFrfExhPgmDivRcd");
							output_7.value = "";
							output_7.style.setClasses(["require"]);
							output_7.bind("value").toLanguage("UI-GLS-SCH_YEAR");
							container.addChild(output_7, {
								"top": "80px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_3 = new cpr.controls.InputBox("ipbFrfExhPgmCd");
							inputBox_3.enabled = false;
							inputBox_3.maxLength = 10;
							inputBox_3.userAttr({"require": "Y"});
							inputBox_3.bind("fieldLabel").toExpression("#optFrfExhPgmCd.value");
							inputBox_3.bind("value").toDataColumn("EXH_PGM_CD");
							container.addChild(inputBox_3, {
								"top": "5px",
								"left": "130px",
								"width": "165px",
								"height": "25px"
							});
							var comboBox_3 = new cpr.controls.ComboBox("cbbFrfExhPgmDivRcd");
							comboBox_3.userAttr({"require": "Y"});
							comboBox_3.bind("fieldLabel").toExpression("#optFrfExhPgmDivRcd.value");
							comboBox_3.bind("value").toDataColumn("EXH_PGM_DIV_RCD");
							(function(comboBox_3){
								comboBox_3.setItemSet(app.lookup("dsExhPgmDivRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_3);
							container.addChild(comboBox_3, {
								"top": "80px",
								"left": "130px",
								"width": "165px",
								"height": "25px"
							});
							var output_8 = new cpr.controls.Output("optFrfExhPgmTypeRcd");
							output_8.value = "";
							output_8.style.setClasses(["require"]);
							output_8.bind("value").toLanguage("UI-GLS-SMT");
							container.addChild(output_8, {
								"top": "80px",
								"left": "305px",
								"width": "120px",
								"height": "25px"
							});
							var output_9 = new cpr.controls.Output("optFrfStDt");
							output_9.value = "";
							output_9.style.setClasses(["require"]);
							output_9.bind("value").toLanguage("UI-DB-ENTR_DT");
							container.addChild(output_9, {
								"top": "55px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var output_10 = new cpr.controls.Output("optFrfTermUnitRcd");
							output_10.value = "";
							output_10.bind("value").toLanguage("UI-SCR-DGPROC");
							container.addChild(output_10, {
								"top": "105px",
								"left": "610px",
								"width": "120px",
								"height": "25px"
							});
							var output_11 = new cpr.controls.Output("optFrfPgmMinTerm");
							output_11.value = "";
							output_11.bind("value").toLanguage("UI-DB-GAZETTE");
							container.addChild(output_11, {
								"top": "105px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var comboBox_4 = new cpr.controls.ComboBox("cbbFrfExhPgmTypeRcd");
							comboBox_4.userAttr({"require": "Y"});
							comboBox_4.bind("fieldLabel").toExpression("#optFrfExhPgmTypeRcd.value");
							comboBox_4.bind("value").toDataColumn("EXH_PGM_TYPE_RCD");
							(function(comboBox_4){
								comboBox_4.setItemSet(app.lookup("dsExhPgmTypeRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_4);
							container.addChild(comboBox_4, {
								"top": "80px",
								"left": "430px",
								"width": "170px",
								"height": "25px"
							});
							var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfPgmMinTerm");
							numberEditor_1.format = "99";
							numberEditor_1.bind("fieldLabel").toExpression("#optFrfPgmMinTerm.value");
							numberEditor_1.bind("value").toDataColumn("PGM_MIN_TERM");
							container.addChild(numberEditor_1, {
								"top": "105px",
								"left": "130px",
								"width": "165px",
								"height": "25px"
							});
							var dateInput_2 = new cpr.controls.DateInput("ipbFrfStDt");
							dateInput_2.enabled = false;
							dateInput_2.userAttr({"require": "Y"});
							dateInput_2.bind("fieldLabel").toExpression("#optStDt.value");
							dateInput_2.bind("value").toDataColumn("ST_DT");
							container.addChild(dateInput_2, {
								"top": "55px",
								"left": "130px",
								"width": "90px",
								"height": "25px"
							});
							var comboBox_5 = new cpr.controls.ComboBox("cbbFrfTermUnitRcd");
							comboBox_5.bind("fieldLabel").toExpression("#optFrfTermUnitRcd.value");
							comboBox_5.bind("value").toDataColumn("TERM_UNIT_RCD");
							(function(comboBox_5){
								comboBox_5.setItemSet(app.lookup("dsTermUnitRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_5);
							container.addChild(comboBox_5, {
								"top": "105px",
								"left": "735px",
								"width": "165px",
								"height": "25px"
							});
							var output_12 = new cpr.controls.Output("optFrfEndDt");
							output_12.value = "";
							output_12.style.setClasses(["require"]);
							output_12.bind("value").toLanguage("UI-DB-ENTR_DT");
							container.addChild(output_12, {
								"top": "55px",
								"left": "305px",
								"width": "120px",
								"height": "25px"
							});
							var dateInput_3 = new cpr.controls.DateInput("ipbFrfEndDt");
							dateInput_3.enabled = false;
							dateInput_3.userAttr({"require": "Y"});
							dateInput_3.bind("fieldLabel").toExpression("#optFrfEndDt.value");
							dateInput_3.bind("value").toDataColumn("END_DT");
							container.addChild(dateInput_3, {
								"top": "55px",
								"left": "430px",
								"width": "90px",
								"height": "25px"
							});
							var output_13 = new cpr.controls.Output("optFrfExhPgmNm");
							output_13.value = "";
							output_13.style.setClasses(["require"]);
							output_13.bind("value").toLanguage("UI-DB-EXAM_NO");
							container.addChild(output_13, {
								"top": "5px",
								"left": "305px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_4 = new cpr.controls.InputBox("ipbFrfExhPgmNm");
							inputBox_4.maxLength = 30;
							inputBox_4.userAttr({"require": "Y"});
							inputBox_4.bind("fieldLabel").toExpression("#optFrfExhPgmNm.value");
							inputBox_4.bind("value").toDataColumn("EXH_PGM_NM");
							container.addChild(inputBox_4, {
								"top": "5px",
								"left": "430px",
								"width": "170px",
								"height": "25px"
							});
							var output_14 = new cpr.controls.Output("optFrfExhPgmShortNm");
							output_14.value = "";
							output_14.bind("value").toLanguage("UI-DB-EXAM_NO");
							container.addChild(output_14, {
								"top": "30px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_5 = new cpr.controls.InputBox("ipbFrfExhPgmShortNm");
							inputBox_5.maxLength = 30;
							inputBox_5.bind("fieldLabel").toExpression("#optFrfExhPgmShortNm.value");
							inputBox_5.bind("value").toDataColumn("EXH_PGM_SHORT_NM");
							container.addChild(inputBox_5, {
								"top": "30px",
								"left": "130px",
								"width": "165px",
								"height": "25px"
							});
							var output_15 = new cpr.controls.Output("optFrfExhPgmDesc");
							output_15.value = "";
							output_15.bind("value").toLanguage("UI-DB-EXAM_NO");
							container.addChild(output_15, {
								"top": "30px",
								"left": "304px",
								"width": "120px",
								"height": "25px"
							});
							var inputBox_6 = new cpr.controls.InputBox("ipbFrfExhPgmDesc");
							inputBox_6.maxLength = 30;
							inputBox_6.bind("fieldLabel").toExpression("#optFrfExhPgmDesc.value");
							inputBox_6.bind("value").toDataColumn("EXH_PGM_DESC");
							container.addChild(inputBox_6, {
								"top": "30px",
								"left": "429px",
								"width": "170px",
								"height": "25px"
							});
							var output_16 = new cpr.controls.Output("optFrfFirsrDivRcd");
							output_16.value = "";
							output_16.bind("value").toLanguage("UI-GLS-SMT");
							container.addChild(output_16, {
								"top": "80px",
								"left": "610px",
								"width": "120px",
								"height": "25px"
							});
							var comboBox_6 = new cpr.controls.ComboBox("cbbFrfFirsrDivRcd");
							comboBox_6.bind("fieldLabel").toExpression("#optFrfFirsrDivRcd.value");
							comboBox_6.bind("value").toDataColumn("FIRSR_DIV_RCD");
							(function(comboBox_6){
								comboBox_6.setItemSet(app.lookup("dsFirsrDivRcdList"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_6);
							container.addChild(comboBox_6, {
								"top": "80px",
								"left": "735px",
								"width": "165px",
								"height": "25px"
							});
							var output_17 = new cpr.controls.Output("optFrfPgmMaxTerm");
							output_17.value = "";
							output_17.bind("value").toLanguage("UI-DB-GAZETTE");
							container.addChild(output_17, {
								"top": "105px",
								"left": "305px",
								"width": "120px",
								"height": "25px"
							});
							var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfPgmMaxTerm");
							numberEditor_2.format = "99";
							numberEditor_2.bind("fieldLabel").toExpression("#optFrfPgmMaxTerm.value");
							numberEditor_2.bind("value").toDataColumn("PGM_MAX_TERM");
							container.addChild(numberEditor_2, {
								"top": "105px",
								"left": "430px",
								"width": "170px",
								"height": "25px"
							});
							var inputBox_7 = new cpr.controls.InputBox("inputbox1");
							inputBox_7.visible = false;
							inputBox_7.bind("value").toDataColumn("FLAG_GBN");
							container.addChild(inputBox_7, {
								"top": "5px",
								"left": "630px",
								"width": "19px",
								"height": "25px"
							});
						})(group_4);
						container.addChild(group_4, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "223px"
						});
					})(group_3);
					tabItem_1.content = group_3;
					tabItem_1.bind("text").toLanguage("UI-SCR-DATAMNG");
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tabExhPgmHis";
					var group_5 = new cpr.controls.Container("grpExhPgmHis");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_5.setLayout(formLayout_2);
					(function(container){
						var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-HISTORYLST");
						container.addChild(userDefinedControl_3, {
							"top": "30px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrExhPgmHistory");
						grid_1.init({
							"dataSet": app.lookup("dsCsrExhPgmHistory"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "120px"},
								{"width": "110px"},
								{"width": "120px"},
								{"width": "120px"},
								{"width": "70px"},
								{"width": "70px"},
								{"width": "140px"},
								{"width": "80px"},
								{"width": "95px"},
								{"width": "115px"},
								{"width": "115px"},
								{"width": "95px"},
								{
									"width": "111px",
									"visible": false
								},
								{
									"width": "100px",
									"visible": false
								},
								{
									"width": "110px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.text = "교환프로그램내역";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.text = "시작일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.text = "종료일자";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.text = "구분코드";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.text = "유형코드";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.text = "재원구분코드";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.text = "프로그램최소기간";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.text = "프로그램최대기간";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.text = "기간단위코드";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.text = "언어구분코드";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.text = "참조키";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.text = "객체구분코드";
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_18 = new cpr.controls.Output();
												output_18.style.css({
													"text-align" : "center"
												});
												return output_18;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_CD";
											cell.control = (function(){
												var inputBox_8 = new cpr.controls.InputBox("gdIpbExhPgmCdHistory");
												inputBox_8.enabled = false;
												inputBox_8.maxLength = 10;
												inputBox_8.userAttr({"require": "Y"});
												inputBox_8.bind("value").toDataColumn("EXH_PGM_CD");
												return inputBox_8;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_NM";
											cell.control = (function(){
												var inputBox_9 = new cpr.controls.InputBox("gdIpbExhPgmNmHistory");
												inputBox_9.enabled = false;
												inputBox_9.maxLength = 200;
												inputBox_9.bind("value").toDataColumn("EXH_PGM_NM");
												return inputBox_9;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_SHORT_NM";
											cell.control = (function(){
												var inputBox_10 = new cpr.controls.InputBox("gdIpbExhPgmShortNmHistory");
												inputBox_10.enabled = false;
												inputBox_10.maxLength = 100;
												inputBox_10.bind("value").toDataColumn("EXH_PGM_SHORT_NM");
												return inputBox_10;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_DESC";
											cell.control = (function(){
												var inputBox_11 = new cpr.controls.InputBox("gdIpbExhPgmDescHistory");
												inputBox_11.enabled = false;
												inputBox_11.maxLength = 1000;
												inputBox_11.bind("value").toDataColumn("EXH_PGM_DESC");
												return inputBox_11;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "END_DT";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_DIV_RCD";
											cell.control = (function(){
												var comboBox_7 = new cpr.controls.ComboBox("gdCbbExhPgmDivRcdHistory");
												comboBox_7.enabled = false;
												comboBox_7.hideButton = true;
												comboBox_7.userAttr({"require": "Y"});
												(function(comboBox_7){
													comboBox_7.addItem(new cpr.controls.Item("선택", ""));
													comboBox_7.setItemSet(app.lookup("dsExhPgmDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_7);
												comboBox_7.bind("value").toDataColumn("EXH_PGM_DIV_RCD");
												return comboBox_7;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_TYPE_RCD";
											cell.control = (function(){
												var comboBox_8 = new cpr.controls.ComboBox("gdCbbExhPgmTypeRcdHistory");
												comboBox_8.enabled = false;
												comboBox_8.hideButton = true;
												comboBox_8.userAttr({"require": "Y"});
												(function(comboBox_8){
													comboBox_8.addItem(new cpr.controls.Item("선택", ""));
													comboBox_8.setItemSet(app.lookup("dsExhPgmTypeRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_8);
												comboBox_8.bind("value").toDataColumn("EXH_PGM_TYPE_RCD");
												return comboBox_8;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "FIRSR_DIV_RCD";
											cell.control = (function(){
												var comboBox_9 = new cpr.controls.ComboBox("gdCbbFirsrDivRcdHistory");
												comboBox_9.enabled = false;
												comboBox_9.hideButton = true;
												(function(comboBox_9){
													comboBox_9.setItemSet(app.lookup("dsFirsrDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_9);
												comboBox_9.bind("value").toDataColumn("FIRSR_DIV_RCD");
												return comboBox_9;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "PGM_MIN_TERM";
											cell.control = (function(){
												var inputBox_12 = new cpr.controls.InputBox("gdIpbPgmMinTermHistory");
												inputBox_12.enabled = false;
												inputBox_12.maxLength = 2;
												inputBox_12.bind("value").toDataColumn("PGM_MIN_TERM");
												return inputBox_12;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "PGM_MAX_TERM";
											cell.control = (function(){
												var inputBox_13 = new cpr.controls.InputBox("gdIpbPgmMaxTermHistory");
												inputBox_13.enabled = false;
												inputBox_13.maxLength = 2;
												inputBox_13.bind("value").toDataColumn("PGM_MAX_TERM");
												return inputBox_13;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "TERM_UNIT_RCD";
											cell.control = (function(){
												var comboBox_10 = new cpr.controls.ComboBox("gdCbbTermUnitRcdHistory");
												comboBox_10.enabled = false;
												comboBox_10.hideButton = true;
												(function(comboBox_10){
													comboBox_10.setItemSet(app.lookup("dsTermUnitRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_10);
												comboBox_10.bind("value").toDataColumn("TERM_UNIT_RCD");
												return comboBox_10;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_11 = new cpr.controls.ComboBox("gdCbbLanDivRcdHistory");
												comboBox_11.enabled = false;
												(function(comboBox_11){
													comboBox_11.setItemSet(app.lookup("dsLanDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_11);
												comboBox_11.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_11;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
											cell.control = (function(){
												var inputBox_14 = new cpr.controls.InputBox("gdIpbRefKeyHistory");
												inputBox_14.maxLength = 50;
												inputBox_14.bind("value").toDataColumn("REF_KEY");
												return inputBox_14;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "OBJ_DIV_RCD";
										}
									}
								]
							}
						});
						container.addChild(grid_1, {
							"top": "55px",
							"left": "5px",
							"width": "1205px",
							"height": "198px"
						});
						var button_8 = new cpr.controls.Button("btnDisUseHistory");
						button_8.value = "폐기";
						if(typeof onBtnDisUseHistoryClick == "function") {
							button_8.addEventListener("click", onBtnDisUseHistoryClick);
						}
						container.addChild(button_8, {
							"top": "30px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_9 = new cpr.controls.Button("btnDisUseCancHistory");
						button_9.value = "폐기취소";
						if(typeof onBtnDisUseCancHistoryClick == "function") {
							button_9.addEventListener("click", onBtnDisUseCancHistoryClick);
						}
						container.addChild(button_9, {
							"top": "30px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_10 = new cpr.controls.Button("btnRecoverHistory");
						button_10.value = "복구";
						button_10.style.setClasses(["btn-commit"]);
						if(typeof onBtnRecoverHistoryClick == "function") {
							button_10.addEventListener("click", onBtnRecoverHistoryClick);
						}
						container.addChild(button_10, {
							"top": "30px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
						var output_19 = new cpr.controls.Output("optKeyDateHistory");
						output_19.value = "복구/폐기일자";
						container.addChild(output_19, {
							"top": "5px",
							"left": "990px",
							"width": "105px",
							"height": "25px"
						});
						var dateInput_4 = new cpr.controls.DateInput("dipKeyDateHistory");
						dateInput_4.bind("fieldLabel").toExpression("#optKeyDateHistory.value");
						dateInput_4.bind("value").toDataMap(app.lookup("dmReqList"), "strKeyDateHistory");
						container.addChild(dateInput_4, {
							"top": "5px",
							"left": "1100px",
							"width": "90px",
							"height": "25px"
						});
						var button_11 = new cpr.controls.Button("btnYearSmtHistory");
						button_11.value = "";
						button_11.style.setClasses(["btn-pop-search"]);
						if(typeof onBtnYearSmtHistoryClick == "function") {
							button_11.addEventListener("click", onBtnYearSmtHistoryClick);
						}
						container.addChild(button_11, {
							"top": "5px",
							"left": "1190px",
							"width": "20px",
							"height": "25px"
						});
					})(group_5);
					tabItem_2.content = group_5;
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tabExhPgmLang";
					var group_6 = new cpr.controls.Container("grpExhPgmLang");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_6.setLayout(formLayout_3);
					(function(container){
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdCsrExhPgmLang");
						grid_2.init({
							"dataSet": app.lookup("dsCsrExhPgmLang"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "120px"},
								{"width": "110px"},
								{"width": "170px"},
								{"width": "200px"},
								{"width": "200px"},
								{
									"width": "120px",
									"visible": false
								}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-LANKEY");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-EXH_PGM_DESC");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.text = "참조키";
											cell.style.setClasses(["require"]);
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_20 = new cpr.controls.Output();
												output_20.style.css({
													"text-align" : "center"
												});
												return output_20;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_12 = new cpr.controls.ComboBox("gdCbbLanDivRcdLang");
												comboBox_12.userAttr({"require": "Y"});
												(function(comboBox_12){
													comboBox_12.addItem(new cpr.controls.Item("선택", ""));
													comboBox_12.setItemSet(app.lookup("dsLanDivRcdList"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_12);
												comboBox_12.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_12;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_NM";
											cell.control = (function(){
												var inputBox_15 = new cpr.controls.InputBox("gdIpbExhPgmNmLang");
												inputBox_15.maxLength = 200;
												inputBox_15.userAttr({"require": "Y"});
												inputBox_15.bind("value").toDataColumn("EXH_PGM_NM");
												return inputBox_15;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_SHORT_NM";
											cell.control = (function(){
												var inputBox_16 = new cpr.controls.InputBox("gdIpbExhPgmShortNmLang");
												inputBox_16.maxLength = 100;
												inputBox_16.bind("value").toDataColumn("EXH_PGM_SHORT_NM");
												return inputBox_16;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "EXH_PGM_DESC";
											cell.control = (function(){
												var inputBox_17 = new cpr.controls.InputBox("gdIpbExhPgmDescLang");
												inputBox_17.maxLength = 1000;
												inputBox_17.bind("value").toDataColumn("EXH_PGM_DESC");
												return inputBox_17;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "REF_KEY";
											cell.control = (function(){
												var inputBox_18 = new cpr.controls.InputBox("gdIpbRefKeyLang");
												inputBox_18.maxLength = 50;
												inputBox_18.userAttr({"require": "Y"});
												inputBox_18.bind("value").toDataColumn("REF_KEY");
												return inputBox_18;
											})();
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1205px",
							"height": "223px"
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("UI-SCR-LANLST");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "265px",
							"height": "25px"
						});
						var button_12 = new cpr.controls.Button("btnNewLang");
						button_12.value = "신규";
						button_12.style.setClasses(["btn-new"]);
						if(typeof onBtnNewLangClick == "function") {
							button_12.addEventListener("click", onBtnNewLangClick);
						}
						container.addChild(button_12, {
							"top": "5px",
							"left": "955px",
							"width": "60px",
							"height": "25px"
						});
						var button_13 = new cpr.controls.Button("btnDelLang");
						button_13.value = "삭제";
						button_13.style.setClasses(["btn-delete"]);
						if(typeof onBtnDelLangClick == "function") {
							button_13.addEventListener("click", onBtnDelLangClick);
						}
						container.addChild(button_13, {
							"top": "5px",
							"left": "1020px",
							"width": "60px",
							"height": "25px"
						});
						var button_14 = new cpr.controls.Button("btnRestoreLang");
						button_14.value = "취소";
						button_14.style.setClasses(["btn-restore"]);
						if(typeof onBtnRestoreLangClick == "function") {
							button_14.addEventListener("click", onBtnRestoreLangClick);
						}
						container.addChild(button_14, {
							"top": "5px",
							"left": "1085px",
							"width": "60px",
							"height": "25px"
						});
						var button_15 = new cpr.controls.Button("btnSaveLang");
						button_15.value = "저장";
						button_15.style.setClasses(["btn-save"]);
						if(typeof onBtnSaveLangClick == "function") {
							button_15.addEventListener("click", onBtnSaveLangClick);
						}
						container.addChild(button_15, {
							"top": "5px",
							"left": "1150px",
							"width": "60px",
							"height": "25px"
						});
					})(group_6);
					tabItem_3.content = group_6;
					tabItem_3.bind("text").toLanguage("UI-GLS-LAN");
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "335px",
					"left": "5px",
					"width": "1215px",
					"height": "258px"
				});
				var button_16 = new cpr.controls.Button("tabBtnExhPgmMng");
				button_16.value = "";
				button_16.bind("value").toLanguage("UI-SCR-DATAMNG");
				if(typeof onTabBtnExhPgmMngClick == "function") {
					button_16.addEventListener("click", onTabBtnExhPgmMngClick);
				}
				container.addChild(button_16, {
					"top": "310px",
					"left": "5px",
					"width": "100px",
					"height": "28px"
				});
				var button_17 = new cpr.controls.Button("tabBtnExhPgmHistory");
				button_17.value = "";
				button_17.bind("value").toLanguage("UI-SCR-HSTMNG");
				if(typeof onTabBtnExhPgmHistoryClick == "function") {
					button_17.addEventListener("click", onTabBtnExhPgmHistoryClick);
				}
				container.addChild(button_17, {
					"top": "310px",
					"left": "105px",
					"width": "100px",
					"height": "28px"
				});
				var button_18 = new cpr.controls.Button("tabBtnExhPgmLang");
				button_18.value = "";
				button_18.bind("value").toLanguage("UI-GLS-LAN");
				if(typeof onTabBtnExhPgmLangClick == "function") {
					button_18.addEventListener("click", onTabBtnExhPgmLangClick);
				}
				container.addChild(button_18, {
					"top": "310px",
					"left": "205px",
					"width": "100px",
					"height": "28px"
				});
				var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdCsrExhPgm");
				grid_3.init({
					"dataSet": app.lookup("dsCsrExhPgm"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "120px"},
						{"width": "110px"},
						{"width": "120px"},
						{"width": "120px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "140px"},
						{"width": "80px"},
						{"width": "95px"},
						{"width": "115px"},
						{"width": "115px"},
						{"width": "95px"},
						{
							"width": "111px",
							"visible": false
						},
						{
							"width": "100px",
							"visible": false
						},
						{
							"width": "110px",
							"visible": false
						},
						{"width": "110px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "교환프로그램코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.text = "교환프로그램명";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.text = "교환프로그램약칭";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.text = "교환프로그램내역";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.text = "시작일자";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.text = "종료일자";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.text = "구분코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.text = "유형코드";
									cell.style.setClasses(["require"]);
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "재원구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.text = "프로그램최소기간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.text = "프로그램최대기간";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "기간단위코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.text = "언어구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.text = "참조키";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.text = "객체구분코드";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.text = "신규복사구분";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_21 = new cpr.controls.Output();
										output_21.style.css({
											"text-align" : "center"
										});
										return output_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_CD";
									cell.control = (function(){
										var inputBox_19 = new cpr.controls.InputBox("gdIpbExhPgmCd");
										inputBox_19.maxLength = 10;
										inputBox_19.userAttr({"require": "Y"});
										inputBox_19.bind("value").toDataColumn("EXH_PGM_CD");
										return inputBox_19;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_NM";
									cell.control = (function(){
										var inputBox_20 = new cpr.controls.InputBox("gdIpbExhPgmNm");
										inputBox_20.enabled = false;
										inputBox_20.maxLength = 200;
										inputBox_20.userAttr({"require": "Y"});
										inputBox_20.bind("value").toDataColumn("EXH_PGM_NM");
										return inputBox_20;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_SHORT_NM";
									cell.control = (function(){
										var inputBox_21 = new cpr.controls.InputBox("gdIpbExhPgmShortNm");
										inputBox_21.enabled = false;
										inputBox_21.maxLength = 100;
										inputBox_21.bind("value").toDataColumn("EXH_PGM_SHORT_NM");
										return inputBox_21;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_DESC";
									cell.control = (function(){
										var inputBox_22 = new cpr.controls.InputBox("gdIpbExhPgmDesc");
										inputBox_22.enabled = false;
										inputBox_22.maxLength = 1000;
										inputBox_22.bind("value").toDataColumn("EXH_PGM_DESC");
										return inputBox_22;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "END_DT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_DIV_RCD";
									cell.control = (function(){
										var comboBox_13 = new cpr.controls.ComboBox("gdCbbExhPgmDivRcd");
										comboBox_13.enabled = false;
										comboBox_13.hideButton = true;
										comboBox_13.userAttr({"require": "Y"});
										(function(comboBox_13){
											comboBox_13.addItem(new cpr.controls.Item("선택", ""));
											comboBox_13.setItemSet(app.lookup("dsExhPgmDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_13);
										comboBox_13.bind("value").toDataColumn("EXH_PGM_DIV_RCD");
										return comboBox_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "EXH_PGM_TYPE_RCD";
									cell.control = (function(){
										var comboBox_14 = new cpr.controls.ComboBox("gdCbbExhPgmTypeRcd");
										comboBox_14.enabled = false;
										comboBox_14.hideButton = true;
										comboBox_14.userAttr({"require": "Y"});
										(function(comboBox_14){
											comboBox_14.addItem(new cpr.controls.Item("선택", ""));
											comboBox_14.setItemSet(app.lookup("dsExhPgmTypeRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_14);
										comboBox_14.bind("value").toDataColumn("EXH_PGM_TYPE_RCD");
										return comboBox_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "FIRSR_DIV_RCD";
									cell.control = (function(){
										var comboBox_15 = new cpr.controls.ComboBox("gdCbbFirsrDivRcd");
										comboBox_15.enabled = false;
										comboBox_15.hideButton = true;
										(function(comboBox_15){
											comboBox_15.setItemSet(app.lookup("dsFirsrDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_15);
										comboBox_15.bind("value").toDataColumn("FIRSR_DIV_RCD");
										return comboBox_15;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PGM_MIN_TERM";
									cell.control = (function(){
										var inputBox_23 = new cpr.controls.InputBox("gdIpbPgmMinTerm");
										inputBox_23.enabled = false;
										inputBox_23.maxLength = 2;
										inputBox_23.bind("value").toDataColumn("PGM_MIN_TERM");
										return inputBox_23;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "PGM_MAX_TERM";
									cell.control = (function(){
										var inputBox_24 = new cpr.controls.InputBox("gdIpbPgmMaxTerm");
										inputBox_24.enabled = false;
										inputBox_24.maxLength = 2;
										inputBox_24.bind("value").toDataColumn("PGM_MAX_TERM");
										return inputBox_24;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "TERM_UNIT_RCD";
									cell.control = (function(){
										var comboBox_16 = new cpr.controls.ComboBox("gdCbbTermUnitRcd");
										comboBox_16.enabled = false;
										comboBox_16.hideButton = true;
										(function(comboBox_16){
											comboBox_16.setItemSet(app.lookup("dsTermUnitRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_16);
										comboBox_16.bind("value").toDataColumn("TERM_UNIT_RCD");
										return comboBox_16;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "LAN_DIV_RCD";
									cell.control = (function(){
										var comboBox_17 = new cpr.controls.ComboBox("gdCbbLanDivRcd");
										(function(comboBox_17){
											comboBox_17.setItemSet(app.lookup("dsLanDivRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_17);
										comboBox_17.bind("value").toDataColumn("LAN_DIV_RCD");
										return comboBox_17;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
									cell.control = (function(){
										var inputBox_25 = new cpr.controls.InputBox("gdIpbRefKey");
										inputBox_25.maxLength = 50;
										inputBox_25.bind("value").toDataColumn("REF_KEY");
										return inputBox_25;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "OBJ_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "FLAG_GBN";
								}
							}
						]
					}
				});
				if(typeof onGrdCsrExhPgmSelectionChange == "function") {
					grid_3.addEventListener("selection-change", onGrdCsrExhPgmSelectionChange);
				}
				container.addChild(grid_3, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "250px"
				});
				var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
				userDefinedControl_5.bind("title").toLanguage("");
				container.addChild(userDefinedControl_5, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
				userDefinedControl_6.ctrl = app.lookup("grdCsrExhPgm1");
				userDefinedControl_6.bind("title").toLanguage("");
				container.addChild(userDefinedControl_6, {
					"top": "285px",
					"left": "5px",
					"width": "315px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "598px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "673px",
				"left": "210px",
				"width": "325px",
				"height": "75px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.group_4.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_3));
			linker.userDefinedControl_3.ctrl = linker.grid_1;
			linker.userDefinedControl_4.ctrl = linker.grid_2;
			linker.userDefinedControl_5.ctrl = linker.grid_3;
		}
	});
	app.title = "stdCsrCExhPgm";
	cpr.core.Platform.INSTANCE.register(app);
})();
