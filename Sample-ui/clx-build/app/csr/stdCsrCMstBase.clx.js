/*
 * App URI: app/csr/stdCsrCMstBase
 * Source Location: app/csr/stdCsrCMstBase.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrCMstBase", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrCMstBase.xtm"/>
			
			
			var stdCsrCMstBase = function() {
				var moPage = new Page();
				
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var msStudId = "";
				var msStudNo = "";
				var msKeyDt  = "";
			    var mbSaveChk = false;
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				
				moPage.onLoadImportDone_impSbpHeader = function() {
					doSbpHeaderOnLoad();
				};
				
				moPage.onModelConstructDone_StdCsrCMstBase = function() {
					doOnLoad();
				};
				
				/**
				 * @desc 프리폼 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doCheckDataChange() {
			
					if(util.Grid.isModified(app, ["frfCsrShreg"], "CRM") ){
						return false;
					}else{
						return true;
					}
					
				}
				
				/**
				 * @desc doOnLoad 화면 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doOnLoad(){
					//리피트 초기화
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrShreg"]);
			
					//암호화 관련 컬럼 Origin 데이터 설정
					ExtRepeat.addOriginCol("frfCsrShreg", ["SSN", "ACCT_NO"]);
			
					//메인 프레임에서 학생의 id를 받아 해당 기본정보 추출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["frfCsrShreg"]);
							var voParentPage = ExtSubPage.getParent();
							
							// 부모멤버변수에담긴학번받음
							msStudId  	= voParentPage.callScriptVal("ExtInstance").getValue("/root/reqKey/strStudId");
							msStudNo	= voParentPage.callScriptVal("ExtInstance").getValue("/root/reqKey/strStudNo");
							msKeyDt 	= voParentPage.callScriptVal("ExtInstance").getValue("/root/resOnLoad/currentDate");
							
							if (ValueUtil.isNull(msStudId)) {
								return false;
							}
							
							//LIST CALL 
							doList(function(pbSuccessList) {
								if (pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccess) moPage.parentSendMsg("lblTitleSubBase", NLS.INF.M024);
								}
							});
						}
					});
				}
				
				/**
				 * @desc 해당 학생의 기본정보 데이터를 가져온다.
				 * @param poFunc 콜백함수
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doList(poFunc) {
					util.DataMap.setValue(app, "dmReqKey", "strStudId", msStudId);
					util.DataMap.setValue(app, "dmReqKey", "strStudNo", msStudNo);
					util.DataMap.setValue(app, "dmReqKey", "strKeyDate", msKeyDt);
					
					// submission call 
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
						if (pbSuccess) {
			
							util.Control.redraw(app, ["frfCsrShreg"]);
							var vsRowCnt = util.DataMap.getValue(app, "dmResList", "rowCnt");
							if (vsRowCnt == "0") {
								doSubInsertRow();
							}else{
								moPage.mbIsInsertRowFrf = false;
							}
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poFunc)) poFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doSubSave(poCallbackFunc) {
					// 프리폼 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrShreg"], null)){
						moPage.parentSendMsg("lblTitleSubBase",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					// 필수값 체크
					if(!util.validate(app, "frfCsrShreg")){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					doSave("0", poCallbackFunc);
				};
				
				/**
				 * @desc 작업저장
				 * @param pnStep 저장 횟수
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doSave(pnStep, poCallbackFunc) {
					if(mbSaveChk) return;
					mbSaveChk = true;
					if (!pnStep) pnStep = "0";
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					
					//신규일 경우 fiag insert 로 변경
					if( moPage.mbIsInsertRowFrf ){
						//신규입력일 경우 신규 플래그 설정
						util.Grid.setRowState(app, "frfCsrShreg",cpr.data.tabledata.RowState.INSERTED,'1');
					}
					
					//save submission call
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
								
								if(!ValueUtil.isNull(vsMsg)) {
									if (util.Msg.confirm("NLS-CRM-M034", [vsMsg])) {
										// @1\n  계속하시겠습니까?
										var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
										mbSaveChk = false;
										return doSave(vnStep, poCallbackFunc);
									} else {
										mbSaveChk = false;
										return false;
									}
								}else{
									var voCallBackSaveAfter = function(pbSuccessAfter) {
										if(pbSuccessAfter) {
											//저장성공 메세지 출력
											moPage.parentSendMsg("lblTitleSubBase", NLS.INF.M025);
											if(util.isFunc(poCallbackFunc))	poCallbackFunc(true);
										}
										mbSaveChk = false;
									};
									ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
									return true;
								}
								
							}else{
								mbSaveChk = false;
								return false;
							}
						}
					);
				};
			
				/**
				 * @desc 데이터 셋에 row 추가
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCsrShreg",AppConstants.CUD_COL_REF, "N");
					//vcRpt.setCellVal(vnInsRowIdx, AppConstants.CUD_COL_REF, "N", true, true);
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrShreg");
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCsrShreg", "STUD_ID", msStudId);
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCsrShreg",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrf = true;
					util.Control.setEnable(app, true, ["frfCsrShreg"]);
			
					
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 저장 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.onClick_BtnSave = function() {
					doSubSave();
				};
			
				/**
				 * @desc 계좌번호 유효성 체크 숫자만 입력가능
				 * @param  
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */	
				moPage.onValueChanged_IpbAcctNo = function() {
					
					var vsValue = util.FreeForm.getValue(app, "frfCsrShreg", "ACCT_NO");
					var vsChkValue = "";
					//특수문자만 입력시 널처리
					var specialChars = /[-~!#$^&*=+|:;?"<,.>']/;
					vsValue.split(specialChars).join("");
					
					if (vsValue.match(/[0-9]/g) != null) {
						vsChkValue = vsValue.match(/[0-9]/g).join("");
					} else {
						vsChkValue =  "";
					}
					util.FreeForm.setValue(app, "frfCsrShreg", "ACCT_NO", vsChkValue, false);
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCampusList");
			dataSet_1.parseData({
				"columns": [
					{"name": "DMN_NM"},
					{"name": "DMN_CD"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsClassRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsNationList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsFeeCatList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsStDivList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsSubList");
			dataSet_6.parseData({
				"columns": [
					{"name": "BANK_RCD"},
					{"name": "SUR_NM"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "GAZETTE"},
					{"name": "RCOG_SMT_CNT"},
					{"name": "SPON_REL"},
					{"name": "STUD_ID"},
					{"name": "MID_NM"},
					{"name": "GENDER_RCD"},
					{"name": "CLASS_RCD"},
					{"name": "SPON_JOB_NM"},
					{"name": "STUD_NO"},
					{"name": "BIRTHDAY"},
					{"name": "ENG_NM"},
					{"name": "OWNER_NM"},
					{"name": "ACCT_NO"},
					{"name": "SSN"},
					{"name": "REF_KEY"},
					{"name": "CHA_NM"},
					{"name": "REG_FEE_CAT_RCD"},
					{"name": "STUD_DIV_RCD"},
					{"name": "PER_NM"},
					{"name": "PHOTO_FILE_PATH"},
					{"name": "SPON_NM"},
					{"name": "REP_NM"},
					{"name": "DMN_CD"},
					{"name": "NAT_RCD"},
					{"name": "FELLOW_YN"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsSexList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsBankList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BANK_RCD",
						"dataType": "string"
					},
					{
						"name": "SUR_NM",
						"dataType": "string"
					},
					{
						"name": "DAY_NIGHT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "GAZETTE",
						"dataType": "string"
					},
					{
						"name": "RCOG_SMT_CNT",
						"dataType": "string"
					},
					{
						"name": "SPON_REL",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "MID_NM",
						"dataType": "string"
					},
					{
						"name": "GENDER_RCD",
						"dataType": "string"
					},
					{
						"name": "CLASS_RCD",
						"dataType": "string"
					},
					{
						"name": "SPON_JOB_NM",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "BIRTHDAY",
						"dataType": "string"
					},
					{
						"name": "ENG_NM",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "SSN",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "CHA_NM",
						"dataType": "string"
					},
					{
						"name": "REG_FEE_CAT_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PER_NM",
						"dataType": "string"
					},
					{
						"name": "PHOTO_FILE_PATH",
						"dataType": "string"
					},
					{
						"name": "SPON_NM",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "DMN_CD",
						"dataType": "string"
					},
					{
						"name": "NAT_RCD",
						"dataType": "string"
					},
					{
						"name": "FELLOW_YN",
						"dataType": "string"
					},
					{
						"name": "RE_FOREIGN_YN",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "rowCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstBase/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrMstBase/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrMstBase/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataMap_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subInit");
			submission_4.action = "/csr/StdCsrMstBase/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addResponseData(dataSet_7, false);
			submission_4.addResponseData(dataSet_5, false);
			submission_4.addResponseData(dataSet_1, false);
			submission_4.addResponseData(dataSet_8, false);
			submission_4.addResponseData(dataSet_3, false);
			submission_4.addResponseData(dataSet_4, false);
			submission_4.addResponseData(dataSet_2, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrShreg");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShreg");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optRepNm");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-REPNAME");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optSsn");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-DB-SSN");
					container.addChild(output_2, {
						"top": "30px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optStudDivRcd");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-STDDIS");
					container.addChild(output_3, {
						"top": "75px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optRegFeeCat");
					output_4.value = "등록금범주";
					container.addChild(output_4, {
						"top": "145px",
						"left": "750px",
						"width": "90px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optBankRcd");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-DB-BANK_RCD");
					container.addChild(output_5, {
						"top": "120px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optSponRel");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-SCR-GUARDRELA");
					container.addChild(output_6, {
						"top": "165px",
						"left": "5px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbRepNm");
					inputBox_1.maxLength = 100;
					inputBox_1.userAttr({"require": "Y"});
					inputBox_1.bind("fieldLabel").toExpression("#optRepNm.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmFrfList"), "REP_NM");
					container.addChild(inputBox_1, {
						"top": "5px",
						"left": "100px",
						"width": "125px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbSsn");
					inputBox_2.maxLength = 13;
					inputBox_2.bind("fieldLabel").toExpression("#optSsn.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmFrfList"), "SSN");
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "100px",
						"width": "125px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbStudDivRcd");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optStudDivRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmFrfList"), "STUD_DIV_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsStDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "75px",
						"left": "100px",
						"width": "125px",
						"height": "23px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbRegFeeCat");
					comboBox_2.visible = false;
					comboBox_2.bind("fieldLabel").toExpression("#optRegFeeCat.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmFrfList"), "REG_FEE_CAT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsFeeCatList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "145px",
						"left": "845px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbBankRcd");
					comboBox_3.bind("fieldLabel").toExpression("#optBankRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmFrfList"), "BANK_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsBankList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "120px",
						"left": "100px",
						"width": "125px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbSponRel");
					inputBox_3.maxLength = 50;
					inputBox_3.bind("fieldLabel").toExpression("#optSponRel.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmFrfList"), "SPON_REL");
					container.addChild(inputBox_3, {
						"top": "165px",
						"left": "100px",
						"width": "125px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optEngNm");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-DB-ENG_NM");
					container.addChild(output_7, {
						"top": "5px",
						"left": "235px",
						"width": "90px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optBithday");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-BIRTHDAY");
					container.addChild(output_8, {
						"top": "30px",
						"left": "235px",
						"width": "90px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optNatRcd");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-GLS-NAT");
					container.addChild(output_9, {
						"top": "75px",
						"left": "235px",
						"width": "90px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optDmnCd");
					output_10.value = "캠퍼스";
					container.addChild(output_10, {
						"top": "120px",
						"left": "750px",
						"width": "90px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optAcctNo");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-DB-ACCT_NO");
					container.addChild(output_11, {
						"top": "120px",
						"left": "235px",
						"width": "90px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optSponNm");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-GUARDNAM");
					container.addChild(output_12, {
						"top": "165px",
						"left": "235px",
						"width": "90px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbEngNm");
					inputBox_4.maxLength = 100;
					inputBox_4.bind("fieldLabel").toExpression("#optEngNm.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmFrfList"), "ENG_NM");
					container.addChild(inputBox_4, {
						"top": "5px",
						"left": "330px",
						"width": "175px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipBirthday");
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optBithday.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmFrfList"), "BIRTHDAY");
					container.addChild(dateInput_1, {
						"top": "30px",
						"left": "330px",
						"width": "90px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbNatRcd");
					comboBox_4.bind("fieldLabel").toExpression("#optNatRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmFrfList"), "NAT_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsNationList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "75px",
						"left": "330px",
						"width": "175px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbDmnCd");
					comboBox_5.visible = false;
					comboBox_5.bind("fieldLabel").toExpression("#optDmnCd.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmFrfList"), "DMN_CD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsCampusList"), {
							"label": "DMN_NM",
							"value": "DMN_CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "120px",
						"left": "845px",
						"width": "75px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbAcctNo");
					numberEditor_1.format = "999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optAcctNo.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmFrfList"), "ACCT_NO");
					if(typeof onIpbAcctNoValueChange == "function") {
						numberEditor_1.addEventListener("value-change", onIpbAcctNoValueChange);
					}
					container.addChild(numberEditor_1, {
						"top": "120px",
						"left": "330px",
						"width": "175px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbSponNm");
					inputBox_5.maxLength = 100;
					inputBox_5.bind("fieldLabel").toExpression("#optSponNm.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmFrfList"), "SPON_NM");
					container.addChild(inputBox_5, {
						"top": "165px",
						"left": "330px",
						"width": "175px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optChaNm");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-DB-CHA_NM");
					container.addChild(output_13, {
						"top": "5px",
						"left": "515px",
						"width": "90px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optGenderRcd");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-GLS-GENDER");
					container.addChild(output_14, {
						"top": "30px",
						"left": "515px",
						"width": "90px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFellowYn");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-FELLOW_YN");
					container.addChild(output_15, {
						"top": "75px",
						"left": "515px",
						"width": "90px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optOwnerNm");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-SCR-ACTHOLDER");
					container.addChild(output_16, {
						"top": "120px",
						"left": "515px",
						"width": "90px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optSponJobNm");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-SCR-GUARDJOB");
					container.addChild(output_17, {
						"top": "165px",
						"left": "515px",
						"width": "90px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfStudId");
					output_18.value = "오브젝트번호";
					output_18.style.setClasses(["require"]);
					container.addChild(output_18, {
						"top": "165px",
						"left": "750px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbChaNm");
					inputBox_6.maxLength = 100;
					inputBox_6.bind("fieldLabel").toExpression("#optChaNm.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmFrfList"), "CHA_NM");
					container.addChild(inputBox_6, {
						"top": "5px",
						"left": "610px",
						"width": "125px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbGenderRcd");
					comboBox_6.bind("fieldLabel").toExpression("#optGenderRcd.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmFrfList"), "GENDER_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsSexList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "30px",
						"left": "610px",
						"width": "125px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("chkFellowYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "Y";
					checkBox_1.bind("fieldLabel").toExpression("#optFellowYn.value");
					checkBox_1.bind("value").toDataMap(app.lookup("dmFrfList"), "FELLOW_YN");
					container.addChild(checkBox_1, {
						"top": "75px",
						"left": "610px",
						"width": "35px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbOwnerNm");
					inputBox_7.maxLength = 100;
					inputBox_7.bind("fieldLabel").toExpression("#optOwnerNm.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmFrfList"), "OWNER_NM");
					container.addChild(inputBox_7, {
						"top": "120px",
						"left": "610px",
						"width": "125px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbSponJobNm");
					inputBox_8.maxLength = 100;
					inputBox_8.bind("fieldLabel").toExpression("#optSponJobNm.value");
					inputBox_8.bind("value").toDataMap(app.lookup("dmFrfList"), "SPON_JOB_NM");
					container.addChild(inputBox_8, {
						"top": "165px",
						"left": "610px",
						"width": "125px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbStudId");
					inputBox_9.visible = false;
					inputBox_9.enabled = false;
					inputBox_9.userAttr({"require": "Y"});
					inputBox_9.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_9.bind("value").toDataMap(app.lookup("dmFrfList"), "STUD_ID");
					container.addChild(inputBox_9, {
						"top": "165px",
						"left": "855px",
						"width": "75px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optReForeignYn");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-DB-RE_FOREIGN_YN");
					container.addChild(output_19, {
						"top": "75px",
						"left": "655px",
						"width": "90px",
						"height": "25px"
					});
					var checkBox_2 = new cpr.controls.CheckBox("chkReForeignYn");
					checkBox_2.value = "";
					checkBox_2.trueValue = "Y";
					checkBox_2.falseValue = "";
					checkBox_2.text = "Y";
					checkBox_2.bind("fieldLabel").toExpression("#optReForeignYn.value");
					checkBox_2.bind("value").toDataMap(app.lookup("dmFrfList"), "RE_FOREIGN_YN");
					container.addChild(checkBox_2, {
						"top": "75px",
						"left": "750px",
						"width": "35px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"left": "5px",
					"width": "1014px",
					"height": "428px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-BASEINFO");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSave");
				button_1.value = "";
				button_1.style.setClasses(["btn-save"]);
				button_1.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_1.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "430px",
				"left": "40px",
				"width": "96px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCsrCMstBase";
	cpr.core.Platform.INSTANCE.register(app);
})();
