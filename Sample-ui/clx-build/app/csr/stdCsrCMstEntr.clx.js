/*
 * App URI: app/csr/stdCsrCMstEntr
 * Source Location: app/csr/stdCsrCMstEntr.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrCMstEntr", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrCMstEntr.xtm"/>
			
			
			var stdCsrCMstEntr = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{
						controlId			:	"btnFrfPopSaSearch",
						iCd					:	"",
						iNm					:	"ipbFrfSaNm",
						iObjDivRcd			:	["CC009SA"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/resOnload/keyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"",
						oCd					:	"ipbFrfSaCd",
						oCdNm				:	"ipbFrfSaNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					: function(poParam){
													doGetSpCdList();
													
												 }
					}
				];
				/**
				 * 고교코드검색팝업 관련 설정사항
				 * 설정가능 유형 : 
				 *   1. 인스턴스((/root/시작))
				 *   2. 그리드의 셀 (ghc시작)
				 *   3. 컨트롤 id
				 * 각 변수별 설명
				 *  iXXX : 팝업으로 input 전달될 파라미터
				 *  oXXX : 팝업에서 선택한 값을 받을 컬럼 아이디
				 *  func : 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수 작성
				 * 
				 *  1. controlId 		: (필수) 최초 이벤트의 버튼이나 그리드 id 
				 *  2. iHsclNm 	: (필수) 년도
				 *  3. oHsclCd 	: 코드구분
				 *  4. oHsclNm 	: 코드
				 *  5. oMpoeNm : 코드명
				 *  6. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 * @member impExtCetHsclCd
				 * @type Array
				 * @author hyunteak at 15. 12. 23 
				 */
				 
				/* 사용 예 시작*/ 
					/*
						var moIdsForExtCetPHsclCd = [
						{
							controlId 		: "",
							iHsclNm  : "",
							oHsclCd 	: "",
							oHsclNm 		: "",	
							oMpoeNm 		: "",
							func : null
						}
						];
						//고교코드자료입력컨트롤 ValueChanged 이벤트
						doOnChangeExtCetPHsclCd(sender);
						
						//고교코드자료검색 돋보기버튼 Click 이벤트 
						doOnClickExtCetPHsclCd(sender);
					*/
				/* 사용 예 끝 */
				moPObject.moIdsForExtCetPHsclCd = [
					{
						controlId 		:"btnFrfPopHsclSearch",
						iHsclNm  : "ipbFrfHsclNm",
						oHsclCd 	: "ipbFrfHsclCd",
						oHsclNm 		: "ipbFrfHsclNm",	
						oMpoeNm 		: "",
						func : null
					}
				];
				
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				moPage.msStudId  = ""	;
				moPage.msStudNo = ""	;
				moPage.msKeyDt   = ""	;
				 /**
				  * 프리폼 변경여부 반환
				  * @member moPage
				  * @type Boolean
				  * @return 
				  * @author hyunteak at 16. 1. 26 오전 10:15
				  */
				function doCheckDataChange() {
					
					if(util.Grid.isModified(app, ["frfCsrEntrInfoList"], "CRM") ){
						return false;
					}else{
						return true;
					}
					
				}
				/********************************
				 * 폼 신규 상태 체크 
				 *******************************/
				moPage.mbIsInsertRowFrf = false;
				/**
				 * 서브페이지 임포트 초기화 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:15
				 */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
				/**
				 * 온로드 이벤트 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:16
				 */
				moPage.onModelConstructDone_StdCsrCMstEntr = function() {
					//doOnLoad 화면 초기화
					doOnLoad();
				};
				/**
				 * doOnLoad 화면 초기화
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:16
				 */
				function doOnLoad(){
					//리피트 초기화
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrEntrInfoList"]);
					//메인 프레임에서 학생의 id를 받아 해당 기본정보 추출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
							if (pbSuccess) {
								
								util.Control.redraw(app, ["frfCsrEntrInfoList"]);
								var voParentPage = ExtSubPage.getParent();
								
								// 부모멤버변수에담긴학번받음
								
								moPage.msStudId		= voParentPage.callScriptVal("ExtInstance").getValue("/root/reqKey/strStudId");
								moPage.msStudNo	= voParentPage.callScriptVal("ExtInstance").getValue("/root/reqKey/strStudNo");
								moPage.msKeyDt		= voParentPage.callScriptVal("ExtInstance").getValue("/root/resOnLoad/currentDate");
								
								if (ValueUtil.isNull(msStudId)) {
									util.Control.setEnable(app, false,"grp_rptCsrOrgUniv");
									return false;
								}else{
									
									
									doList(function(pbSuccess) {
										// 조회 : "조회되었습니다." header 메세지 표시
										if(pbSuccess) moPage.parentSendMsg("lblTitleFrfCsrEntrInfoList",NLS.INF.M024);
									});
									
								}
							}
						}
					);
				}
				/**
				 * 입학정보 조회
				 * @member moPage
				 * @param {?} poCallBackFunc
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:16
				 */
				function doList(poCallBackFunc){
					util.DataMap.setValue(app, "dmReqKey", "strStudId",moPage.msStudId);
					//입학정보 조회 서브미션 호춣
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess)
						{	//입학정보 리셋
							util.Control.redraw(app, ["frfCsrEntrInfoList","cbbFrfEntrSeltRcd"]);
							//리턴 Row Count
							var vnRowCnt = util.DataMap.getValue(app, "dmResList", "strLowCnt")
							//신규여부 체크
							if (ValueUtil.fixNull(vnRowCnt)=="0"){
								doSubInsertRow();						
							}else{
								//신규입력이 아님
								moPage.mbIsInsertRowFrf = false;
								util.Control.setEnable(app, true, ["frfCsrEntrInfoList"]);
							}
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
				/**
				 * 입학정보 신규
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:16
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCsrEntrInfoList",AppConstants.CUD_COL_REF, "N");
					//vcRpt.setCellVal(vnInsRowIdx, AppConstants.CUD_COL_REF, "N", true, true);
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrEntrInfoList");
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCsrEntrInfoList", "STUD_ID", moPage.msStudId);
					//삭제버튼 비활성화
					//ExtControl.setEnable(false, ["btnSubDel"]);
					//상태 오픈 상태로 변경 :트리 변경시 변경사항 유무 체크 피하기 위함
					util.Grid.setRowState(app, "frfCsrEntrInfoList",cpr.data.tabledata.RowState.UNCHANGED,'1');
					//신규입력이 Ok
					moPage.mbIsInsertRowFrf = true;
					util.Control.setEnable(app, true, ["frfCsrEntrInfoList"]);
			
					
				};
				/**
				 * 입력한 년도 학기 에 해당하는 기준일자 조회 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				moPage.getDateFromSession = function(){
					// 학년도, 학기의 기준일자(시작일)에 영향을 받는 사용자 input 필드는 초기화
					//Common.clearCtl(["ipbSaCd", "ipbSaNm", "cbbSpCd"]);
					util.FreeForm.setValue(app, "frfCsrEntrInfoList","SA_CD","");
					util.FreeForm.setValue(app, "frfCsrEntrInfoList","SA_NM","");
					util.FreeForm.setValue(app, "frfCsrEntrInfoList","SP_CD","");
					util.FreeForm.setValue(app, "frfCsrEntrInfoList","SP_NM","");
					
					
					// 학년도, 학기 변동에 따른 학사력 기준일자 가져오기
					var vsYear =util.FreeForm.getValue(app, "frfCsrEntrInfoList","ENTR_SCH_YEAR_RCD");
					var vsSmt =util.FreeForm.getValue(app, "frfCsrEntrInfoList","ENTR_SMT_RCD");
					//학년도 학기 둘중 하나라도 없을 경우 리턴 ..
					if (ValueUtil.isNull(vsYear)|| ValueUtil.isNull(vsSmt)) return;
					//기준일자 서브미션 필요한 인스턴스 셋팅 
					util.DataMap.setValue(app, "dmSessionDate", "year", vsYear);
					util.DataMap.setValue(app, "dmSessionDate", "smt", vsSmt);
					util.DataMap.setValue(app, "dmSessionDate", "stDt", "");
					util.DataMap.setValue(app, "dmSessionDate", "endDt", "");
					//입력한 학년도 학기에 해당 하는 기준 시작일자,종료일자 조회 서브미션 호출
					//strCommand: dateFromSession 
					util.Submit.send(app, "subDateFromSession", function(pbSuccess){
						if (pbSuccess) {
							var vsStDt = util.DataMap.getValue(app, "dmSessionDate", "stDt");
							
							if (ValueUtil.isNull(vsStDt)) {
								//시작일자  값이 없으면, reset
								util.FreeForm.setValue(app, "frfCsrEntrInfoList","ENTR_SCH_YEAR_RCD","");
								util.FreeForm.setValue(app, "frfCsrEntrInfoList","ENTR_SMT_RCD","");
								//page.getControl("cbbEntrSchYearRcd").setValue("");
								//page.getControl("cbbEntrSmtRcd").setValue("");
								
								util.DataMap.setValue(app, "dmResOnLoad", "keyDate", "");
							} else {
								util.DataMap.setValue(app, "dmResOnload", "keyDate", vsStDt);
							}
						} else {
							util.FreeForm.setValue(app, "frfCsrEntrInfoList","ENTR_SCH_YEAR_RCD","");
							util.FreeForm.setValue(app, "frfCsrEntrInfoList","ENTR_SMT_RCD","");
							//page.getControl("cbbEntrSchYearRcd").setValue("");
							//page.getControl("cbbEntrSmtRcd").setValue("");
							util.DataMap.setValue(app, "dmResOnLoad", "keyDate", "");
						}
					});
				};
				
				
				/**
				 * 저장 
				 * @member moPage
				 * @param {?} poCallBackFunc
				 * @type Boolean
				 * @return 
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				function doSubSave(poCallBackFunc) {
					
			
					var vbChgFrf = util.Grid.isModified(app, ["frfCsrEntrInfoList"], null);
					//변경사항 체크 
					//1.변경사항 있을 경우 
					if( vbChgFrf ){
						//필수값 체크 
						if( !util.validate(app, ["frfCsrEntrInfoList"]) ){
							if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
							return false;
						} else {
							//신규일 경우 fiag insert 로 변경
							if( moPage.mbIsInsertRowFrf ){
								//신규입력일 경우 신규 플래그 설정
								model.getControl("frfCsrEntrInfoList").setRowStatus(1, "insert");
							}
							
						}
						
						//저장 실행
						//strCommand: save 
						util.Submit.send(app, "subSave", function(pbSuccessSave){
							if(pbSuccessSave) {
								doList(function(pbSuccess) {
									//저장성공 메세지 출력
									if(pbSuccess){
										moPage.parentSendMsg("lblTitleFrfCsrEntrInfoList", NLS.INF.M001);
									}
									if(util.isFunc(poCallBackFunc))	poCallBackFunc(pbSuccess);
								});
							}
						});
						
					//2.변경사항 없을 경우 
					} else {
						moPage.parentSendMsg("lblTitleFrfCsrEntrInfoList",NLS.WRN.M007);
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(false);
						return false;
					}
				};
				/**
				 * 공통 메시지 호출
				 * @member moPage
				 * @param {?} psCtrlId		라벨ID
				 * @param {?} psMsgCodeNm	메시지 코드 
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				/**
				 * 학년도 변경시 해당하는 기준일자 조회 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:24
				 */
				moPage.onValueChanged_CbbFrfEntrSchYearRcd = function() {
					//입력한 년도 학기 에 해당하는 기준일자 조회 
					moPage.getDateFromSession();
				};
				/**
				 * 학기 변경시 해당하는 기준일자 조회 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:24
				 */
				moPage.onValueChanged_CbbFrfEntrSmtRcd = function() {
					//입력한 년도 학기 에 해당하는 기준일자 조회 
					moPage.getDateFromSession();
				};
				
				/**
				 * 학사부서명 검색 체인지 이벤트 
				 * @member moPage
				 * @param {?} sender
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:46
				 */
				moPage.onValueChanged_IpbFrfSaNm = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * 출신고교명 검색 체인지 이벤트 
				 * @member moPage
				 * @param {?} sender
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:47
				 */
				moPage.onValueChanged_IpbFrfHsclNm = function(sender) {
					doOnChangeExtCetPHsclCd(sender);
				};
				/**
				 * 학사부서 검색 팝업 이벤트
				 * @member moPage
				 * @param {?} sender
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:47
				 */
				moPage.onClick_BtnFrfPopSaSearch = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * 출신고교 검색 팝업 이벤트
				 * @member moPage
				 * @param {?} sender
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:47
				 */
				moPage.onClick_BtnFrfPopHsclSearch = function(sender) {
					doOnClickExtCetPHsclCd(sender);
				};
			
				/**
				 * 학사부서에 따른 이수과정 목록 가져온다
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오후 4:58
				 */
				function doGetSpCdList() {
			
					//SACD
					var vsSaCd = util.Control.getValue(app, "ipbFrfSaCd");
					
					util.DataMap.setValue(app, "dmResOnload", "strSaCd", vsSaCd);
					util.Control.setValue(app, "ipbFrfSpDiv","CA10701");
					util.Control.setValue(app, "ipbFrfSpDiv","CA10701");//전공만 필터링 하기위해
					//strCommand: selCourse 
					util.Submit.send(app, "subSelCourse", function(pbSuccess){
						if(pbSuccess) {
							util.Control.redraw(app, "cbbFrfSpCd");
							//이수과정에서 전공으로만 필터
							doSetSpCdList();
						}
					});
				};
				/**
				 * 이수과정에서 전공으로만 필터
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오후 4:58
				 */
				function doSetSpCdList() {
					var vsSpDivCd = util.Control.getValue(app, "ipbFrfSpDiv");
					ExtSelectCtl.setInsBind("cbbFrfSpCd", "[child:: SP_DIV_RCD = '" + vsSpDivCd + "']");
				};
				/**
				 * 삭제버튼 클릭 이벤트 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				moPage.onClick_BtnDel = function() {
					
					var vsLabel = ExtControl.getTextValue("lblTitleFrfCsrEntrInfoList");
					var vnRowCnt = util.DataSet.getRowCount(app, "dsFrfCsrEntrInfoList");
					//신규일 경우 삭제 불가 처리 
					if (moPage.mbIsInsertRowFrf) {
						//삭제할 데이터가 없습니다. 
						util.Msg.alert("NLS-WRN-M004",[vsLabel]);
						//ComMsg.alert(NLS.MSG.WRN.M004(page.getControl("frfEntrMst").userAttr));
						return;
					}else{
						util.Grid.deleteRow(app, "frfCsrEntrInfoList");
						//삭제버튼 상태변경
						//ExtControl.setEnable(false, ["btnSubDel"]);
						util.Control.setEnable(app, false, ["frfCsrEntrInfoList"]);	
					}
				}
				/**
				 * 저장 버튼 클릭 이벤트 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				moPage.onClick_BtnSave = function() {
					//저장
					doSubSave();
				}
				/**
				 * 작업 취소 버튼 이벤트 
				 * @member moPage
				 * @type void
				 * @author hyunteak at 16. 1. 26 오전 10:17
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "frfCsrEntrInfoList");
					util.Control.setEnable(app, true, ["frfCsrEntrInfoList"]);
					//리턴 Row Count
					var vnRowCnt = util.DataMap.getValue(app, "dmResList", "strLowCnt");
					//신규여부 체크
					if (ValueUtil.fixNull(vnRowCnt)=="0"){
						doSubInsertRow();						
					}
				}
				
				
				moPage.onValueChanged_RdbFrfCapIoDivRcd = function() {
					var vsCaploDivRcd = util.Control.getValue(app, "rdbFrfCapIoDivRcd");
					
					if(!ValueUtil.isNull(vsCaploDivRcd))
					{
						ExtSelectCtl.setInsBind("cbbFrfEntrSeltRcd", "[child:: UCD = '"+vsCaploDivRcd+"']");
					}
				};
				
				
				moPage.onSetFocus_CbbFrfEntrSeltRcd = function() {
					// 입학전형 필터 실행
					var vsCaploDivRcd = util.FreeForm.getValue(app, "frfCsrEntrInfoList", "CAP_IO_DIV_RCD");
					
					if(!ValueUtil.isNull(vsCaploDivRcd))
					{
					ExtSelectCtl.setInsBind("cbbFrfEntrSeltRcd", "[child:: UCD = '"+vsCaploDivRcd+"']");
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSubList");
			dataSet_1.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "EXAM_NO"},
					{"name": "RCT_NO"},
					{"name": "ENTR_DT"},
					{"name": "ENTR_SCH_YEAR_RCD"},
					{"name": "ENTR_SMT_RCD"},
					{"name": "CAP_IO_DIV_RCD"},
					{"name": "INVIT_DIV_RCD"},
					{"name": "ENTR_DIV_RCD"},
					{"name": "DGR_CRS_RCD"},
					{"name": "INVIT_PRD_RCD"},
					{"name": "ENTR_SELT_RCD"},
					{"name": "DTL_SELT_RCD"},
					{"name": "SA_NM"},
					{"name": "SA_CD"},
					{"name": "SP_NM"},
					{"name": "SP_CD"},
					{"name": "GAZETTE_NO"},
					{"name": "HSCL_NM"},
					{"name": "HSCL_CD"},
					{"name": "HSCL_GRDT_YEAR"},
					{"name": "ADM_OFFICER_SYS_YN"},
					{"name": "PSRV_COL2"},
					{"name": "PSRV_COL3"},
					{"name": "PSRV_COL1"},
					{"name": "ENTR_SCR"},
					{"name": "ENTR_MJR_NM"},
					{"name": "SKILL_ITEM_RCD"},
					{"name": "SKILL_ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsYearList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCapDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsInvitDivList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsEntrDivList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsDgrCsrList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsInvitPrdList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsEntrSeltList");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "UCD"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsDtlSeltList");
			dataSet_10.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsSkillItemRcdList");
			dataSet_11.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsSptCdList");
			dataSet_12.parseData({
				"columns": [
					{"name": "SP_CD"},
					{"name": "SP_DIV_RCD"},
					{"name": "SP_NM"},
					{"name": "SHORT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFrfCsrEntrInfoList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "EXAM_NO",
						"dataType": "string"
					},
					{
						"name": "RCT_NO",
						"dataType": "string"
					},
					{
						"name": "ENTR_DT",
						"dataType": "string"
					},
					{
						"name": "ENTR_SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "ENTR_SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "CAP_IO_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "INVIT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ENTR_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DGR_CRS_RCD",
						"dataType": "string"
					},
					{
						"name": "INVIT_PRD_RCD",
						"dataType": "string"
					},
					{
						"name": "ENTR_SELT_RCD",
						"dataType": "string"
					},
					{
						"name": "DTL_SELT_RCD",
						"dataType": "string"
					},
					{
						"name": "SA_NM",
						"dataType": "string"
					},
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "SP_NM",
						"dataType": "string"
					},
					{
						"name": "SP_CD",
						"dataType": "string"
					},
					{
						"name": "SP_DIV",
						"dataType": "string"
					},
					{
						"name": "GAZETTE_NO",
						"dataType": "string"
					},
					{
						"name": "HSCL_NM",
						"dataType": "string"
					},
					{
						"name": "HSCL_CD",
						"dataType": "string"
					},
					{
						"name": "HSCL_GRDT_YEAR",
						"dataType": "string"
					},
					{
						"name": "ADM_OFFICER_SYS_YN",
						"dataType": "string"
					},
					{
						"name": "PSRV_COL2",
						"dataType": "string"
					},
					{
						"name": "PSRV_COL3",
						"dataType": "string"
					},
					{
						"name": "PSRV_COL1",
						"dataType": "string"
					},
					{
						"name": "ENTR_SCR",
						"dataType": "string"
					},
					{
						"name": "ENTR_MJR_NM",
						"dataType": "string"
					},
					{
						"name": "SKILL_ITEM_RCD",
						"dataType": "string"
					},
					{
						"name": "SKILL_ITEM_NM",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "keyDate",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strLowCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResult");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "OBJ_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "LAN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "CD",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "CD_NM",
						"dataType": "string"
					},
					{
						"name": "BEG_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmRes");
			dataMap_5.parseData({
				"columns" : [{
					"name": "count",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmReq");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strObjNm",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmSessionDate");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "year",
						"dataType": "string"
					},
					{
						"name": "smt",
						"dataType": "string"
					},
					{
						"name": "stDt",
						"dataType": "string"
					},
					{
						"name": "endDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			
			var dataMap_8 = new cpr.data.DataMap("dmResOnload");
			dataMap_8.parseData({
				"columns" : [
					{
						"name": "keyDate",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_8);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstEntr/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_9, false);
			submission_1.addResponseData(dataSet_10, false);
			submission_1.addResponseData(dataSet_11, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrMstEntr/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_2, false);
			submission_2.addResponseData(dataMap_8, false);
			submission_2.addResponseData(dataSet_12, false);
			submission_2.addResponseData(dataMap_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrMstEntr/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDateFromSession");
			submission_4.action = "/csr/StdCsrMstEntr/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_7);
			submission_4.addResponseData(dataMap_7, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSelCourse");
			submission_5.action = "/csr/StdCsrMstEntr/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_8);
			submission_5.addResponseData(dataSet_12, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrShreg");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrEntrInfoList");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfExamNo");
					output_1.value = "";
					output_1.bind("value").toLanguage("UI-DB-EXAM_NO");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfEntrSchYearRcd");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-GLS-SCH_YEAR");
					container.addChild(output_2, {
						"top": "30px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfInvitPrdRcd");
					output_3.value = "";
					output_3.bind("value").toLanguage("UI-SCR-REQPERIOD");
					container.addChild(output_3, {
						"top": "80px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfSaCd");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-GLS-SA");
					container.addChild(output_4, {
						"top": "105px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfHsclCd");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-SCR-GRADUHS");
					container.addChild(output_5, {
						"top": "155px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfExamNo");
					inputBox_1.maxLength = 30;
					inputBox_1.bind("fieldLabel").toExpression("#optFrfExamNo.value");
					inputBox_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "EXAM_NO");
					container.addChild(inputBox_1, {
						"top": "5px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfEntrSchYearRcd");
					comboBox_1.bind("fieldLabel").toExpression("#optFrfEntrSchYearRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					if(typeof onCbbFrfEntrSchYearRcdSelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCbbFrfEntrSchYearRcdSelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "30px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfInvitPrdRcd");
					comboBox_2.bind("fieldLabel").toExpression("#optFrfInvitPrdRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "INVIT_PRD_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsInvitPrdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "80px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfSkillItemRcd");
					comboBox_3.bind("fieldLabel").toExpression("#optSpCd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "SKILL_ITEM_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsSkillItemRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "180px",
						"left": "810px",
						"width": "165px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfSaNm");
					inputBox_2.maxLength = 50;
					inputBox_2.userAttr({"require": "Y"});
					inputBox_2.bind("fieldLabel").toExpression("#optFrfSaCd.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "SA_NM");
					if(typeof onIpbFrfSaNmValueChange == "function") {
						inputBox_2.addEventListener("value-change", onIpbFrfSaNmValueChange);
					}
					container.addChild(inputBox_2, {
						"top": "105px",
						"left": "90px",
						"width": "145px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfRctNo");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-DB-RCT_NO");
					container.addChild(output_6, {
						"top": "5px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfEntrSmtRcd");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-GLS-SMT");
					container.addChild(output_7, {
						"top": "30px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfEntrDivRcd");
					output_8.value = "";
					output_8.style.setClasses(["require"]);
					output_8.bind("value").toLanguage("UI-SCR-ENTERDIV");
					container.addChild(output_8, {
						"top": "55px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfEntrSeltRcd");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-SCR-ENTERSCRE");
					container.addChild(output_9, {
						"top": "80px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfSpCd");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-DB-SP_NM");
					container.addChild(output_10, {
						"top": "105px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfHsclGrdtYear");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-SCR-GRADUHSYRS");
					container.addChild(output_11, {
						"top": "155px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfRctNo");
					inputBox_3.maxLength = 30;
					inputBox_3.bind("fieldLabel").toExpression("#optFrfRctNo.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "RCT_NO");
					container.addChild(inputBox_3, {
						"top": "5px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfEntrDivRcd");
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optFrfEntrDivRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_DIV_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsEntrDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "55px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfEntrSeltRcd");
					comboBox_5.bind("fieldLabel").toExpression("#optFrfEntrSeltRcd.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_SELT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsEntrSeltList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					if(typeof onCbbFrfEntrSeltRcdFocus == "function") {
						comboBox_5.addEventListener("focus", onCbbFrfEntrSeltRcdFocus);
					}
					container.addChild(comboBox_5, {
						"top": "80px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var maskEditor_1 = new cpr.controls.MaskEditor("ipbFrfHsclGrdtYear");
					maskEditor_1.mask = "0000";
					maskEditor_1.style.css({
						"text-align" : "center"
					});
					maskEditor_1.bind("fieldLabel").toExpression("#optFrfHsclGrdtYear.value");
					maskEditor_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "HSCL_GRDT_YEAR");
					container.addChild(maskEditor_1, {
						"top": "155px",
						"left": "410px",
						"width": "105px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfEntrDt");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-DB-ENTR_DT");
					container.addChild(output_12, {
						"top": "5px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfCapIoDivRcd");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-CAPACITY");
					container.addChild(output_13, {
						"top": "30px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfDgrCrsRcd");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-DGPROC");
					container.addChild(output_14, {
						"top": "55px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfGazetteNo");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-DB-GAZETTE");
					container.addChild(output_15, {
						"top": "105px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfAdmOfficerSysYn");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-DB-ADMOFFICERSYSYN");
					container.addChild(output_16, {
						"top": "155px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfStudId");
					output_17.value = "";
					output_17.style.setClasses(["require"]);
					output_17.bind("value").toLanguage("UI-DB-OBJNO");
					container.addChild(output_17, {
						"top": "220px",
						"left": "805px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfEntrSmtRcd");
					comboBox_6.bind("fieldLabel").toExpression("#optFrfEntrSmtRcd.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_SMT_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					if(typeof onCbbFrfEntrSmtRcdSelectionChange == "function") {
						comboBox_6.addEventListener("selection-change", onCbbFrfEntrSmtRcdSelectionChange);
					}
					container.addChild(comboBox_6, {
						"top": "30px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfGazetteNo");
					inputBox_4.maxLength = 100;
					inputBox_4.bind("fieldLabel").toExpression("#optGazetteNo.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "GAZETTE_NO");
					container.addChild(inputBox_4, {
						"top": "105px",
						"left": "810px",
						"width": "165px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfEntrDptmjNm");
					inputBox_5.maxLength = 100;
					inputBox_5.bind("fieldLabel").toExpression("#optSponJobNm.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_MJR_NM");
					container.addChild(inputBox_5, {
						"top": "180px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbStudId");
					inputBox_6.visible = false;
					inputBox_6.enabled = false;
					inputBox_6.userAttr({"require": "Y"});
					inputBox_6.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "STUD_ID");
					container.addChild(inputBox_6, {
						"top": "220px",
						"left": "905px",
						"width": "40px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("ipbFrfEntrDt");
					dateInput_1.style.css({
						"text-align" : "center"
					});
					dateInput_1.bind("fieldLabel").toExpression("#optEntrDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_DT");
					container.addChild(dateInput_1, {
						"top": "5px",
						"left": "810px",
						"width": "80px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfInvitDivRcd");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-SCR-INVITDIS");
					container.addChild(output_18, {
						"top": "55px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfInvitDivRcd");
					comboBox_7.bind("fieldLabel").toExpression("#optFrfInvitDivRcd.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "INVIT_DIV_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsInvitDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "55px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfDgrCrsRcd");
					comboBox_8.bind("fieldLabel").toExpression("#optDgrCrsRcd.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "DGR_CRS_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsDgrCsrList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "55px",
						"left": "810px",
						"width": "165px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfDtlSeltRcd");
					comboBox_9.bind("fieldLabel").toExpression("#optDtlSeltRcd.value");
					comboBox_9.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "DTL_SELT_RCD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsDtlSeltList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					container.addChild(comboBox_9, {
						"top": "80px",
						"left": "810px",
						"width": "165px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfDtlSeltRcd");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-SCR-DTLSCRE");
					container.addChild(output_19, {
						"top": "80px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfSaCd");
					inputBox_7.visible = false;
					inputBox_7.maxLength = 50;
					inputBox_7.bind("fieldLabel").toExpression("#optSaCd.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "SA_CD");
					container.addChild(inputBox_7, {
						"top": "298px",
						"left": "550px",
						"width": "10px",
						"height": "25px"
					});
					var button_1 = new cpr.controls.Button("btnFrfPopSaSearch");
					button_1.value = "";
					button_1.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfPopSaSearchClick == "function") {
						button_1.addEventListener("click", onBtnFrfPopSaSearchClick);
					}
					container.addChild(button_1, {
						"top": "105px",
						"left": "235px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfSpDiv");
					inputBox_8.visible = false;
					inputBox_8.maxLength = 100;
					inputBox_8.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "SP_DIV");
					container.addChild(inputBox_8, {
						"top": "298px",
						"left": "884px",
						"width": "41px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfHsclNm");
					inputBox_9.maxLength = 50;
					inputBox_9.bind("fieldLabel").toExpression("#optFrfHsclCd.value");
					inputBox_9.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "HSCL_NM");
					if(typeof onIpbFrfHsclNmValueChange == "function") {
						inputBox_9.addEventListener("value-change", onIpbFrfHsclNmValueChange);
					}
					container.addChild(inputBox_9, {
						"top": "155px",
						"left": "90px",
						"width": "145px",
						"height": "25px"
					});
					var button_2 = new cpr.controls.Button("btnFrfPopHsclSearch");
					button_2.value = "";
					button_2.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfPopHsclSearchClick == "function") {
						button_2.addEventListener("click", onBtnFrfPopHsclSearchClick);
					}
					container.addChild(button_2, {
						"top": "155px",
						"left": "235px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfHsclCd");
					inputBox_10.visible = false;
					inputBox_10.maxLength = 50;
					inputBox_10.bind("fieldLabel").toExpression("#optHsclCd.value");
					inputBox_10.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "HSCL_CD");
					container.addChild(inputBox_10, {
						"top": "298px",
						"left": "580px",
						"width": "10px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("chkFrfAdmOfficerSysYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "Y";
					checkBox_1.bind("fieldLabel").toExpression("#optAdmOfficerSysYn.value");
					checkBox_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ADM_OFFICER_SYS_YN");
					container.addChild(checkBox_1, {
						"top": "155px",
						"left": "810px",
						"width": "40px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfEntrScr");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-DB-ENTR_SCR");
					container.addChild(output_20, {
						"top": "180px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfEntrScr");
					numberEditor_1.format = "999,999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optHsclCd.value");
					numberEditor_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "ENTR_SCR");
					container.addChild(numberEditor_1, {
						"top": "180px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfEntrDptmjNm");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-DB-ENTR_MJR_NM");
					container.addChild(output_21, {
						"top": "180px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfSkillItemRcd");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-SCR-SKILL_ITEM_RCD");
					container.addChild(output_22, {
						"top": "180px",
						"left": "665px",
						"width": "140px",
						"height": "25px"
					});
					var comboBox_10 = new cpr.controls.ComboBox("cbbFrfSpCd");
					comboBox_10.userAttr({"require": "Y"});
					comboBox_10.bind("fieldLabel").toExpression("#optFrfSpCd.value");
					comboBox_10.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "SP_CD");
					(function(comboBox_10){
						comboBox_10.setItemSet(app.lookup("dsSptCdList"), {
							"label": "SHORT_NM",
							"value": "SP_CD"
						});
					})(comboBox_10);
					container.addChild(comboBox_10, {
						"top": "105px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
					var radioButton_1 = new cpr.controls.RadioButton("rdbFrfCapIoDivRcd");
					radioButton_1.bind("fieldLabel").toExpression("#optFrfCapIoDivRcd.value");
					radioButton_1.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "CAP_IO_DIV_RCD");
					(function(radioButton_1){
						radioButton_1.setItemSet(app.lookup("dsCapDivRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						})
					})(radioButton_1);
					if(typeof onRdbFrfCapIoDivRcdValueChange == "function") {
						radioButton_1.addEventListener("value-change", onRdbFrfCapIoDivRcdValueChange);
					}
					container.addChild(radioButton_1, {
						"top": "30px",
						"left": "810px",
						"width": "165px",
						"height": "25px"
					});
					var output_23 = new cpr.controls.Output("label2");
					output_23.value = "";
					output_23.bind("value").toLanguage("UI-SCR-CSRENTRGUIDMSG");
					container.addChild(output_23, {
						"top": "130px",
						"left": "265px",
						"width": "390px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("optFrfEntrRnk");
					output_24.value = "";
					output_24.bind("value").toLanguage("UI-GLS-ENTR-RNK");
					container.addChild(output_24, {
						"top": "205px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfEntrRnk");
					numberEditor_2.format = "9,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optHsclCd.value");
					numberEditor_2.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "PSRV_COL1");
					container.addChild(numberEditor_2, {
						"top": "205px",
						"left": "90px",
						"width": "165px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optFrfEntrEstScr");
					output_25.value = "";
					output_25.bind("value").toLanguage("UI-GLS-EST-SCR");
					container.addChild(output_25, {
						"top": "205px",
						"left": "265px",
						"width": "140px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfEntrEstScr");
					inputBox_11.maxLength = 100;
					inputBox_11.bind("fieldLabel").toExpression("#optSponJobNm.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmFrfCsrEntrInfoList"), "PSRV_COL2");
					container.addChild(inputBox_11, {
						"top": "205px",
						"left": "410px",
						"width": "245px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "428px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-ENTERINFO");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "895px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnDel");
				button_5.value = "";
				button_5.style.setClasses(["btn-delete"]);
				button_5.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_5.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "830px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "470px",
				"left": "150px",
				"width": "41px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "470px",
				"left": "35px",
				"width": "50px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaExtCetPHsclCd");
			cpr.core.App.load("app/cet/impExtCetPHsclCd", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "475px",
				"left": "200px",
				"width": "50px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCsrCMstEntr";
	cpr.core.Platform.INSTANCE.register(app);
})();
