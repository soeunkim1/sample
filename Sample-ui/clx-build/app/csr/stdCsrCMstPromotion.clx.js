/*
 * App URI: app/csr/stdCsrCMstPromotion
 * Source Location: app/csr/stdCsrCMstPromotion.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrCMstPromotion", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCsrCMstPromotion.xtm"/>
			
			var stdCsrCMstPromotion = function() {
			
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				var msStudId = "";
				
				var viBefIndex = 0;
				var vsBefPromTgtRcd = "";
				/**
				 * @desc  subpage Import onLoad
				 * @return void
			     * @author Choi In Seong at 2016.02.12
			     */
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				}
			
				/**
				 * @desc 화면 온로드 전 코드 호출
				 * @return 
				 * @author Choi In Seong 2016.02.12
				 */
				moPage.onModelConstruct_StdCsrCMstPromotion = function() {
					
					// 부모멤버변수에담긴학번받음
					msStudId = moPage.parent.moParentObj.studId;
					
					util.DataMap.setValue(app, "dmReqKey", "strStudId", msStudId);
					
					//서브미션 실행 (실패시 cover page) 
					// onModelConstruct에서 서브미션 호출시 동기화 방식으로 호출 
					ExtSubmission.sendEx("subOnLoad", "onLoad");
				};
							
				/**
				 * @desc 화면 온로드
				 * @return 
				 * @author Choi In Seong 2016.02.12
				 */
				moPage.onModelConstructDone_stdCsrCMstPromotion = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCsrPromotion");
					
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					util.Control.redraw(app, ["rptCsrPromotion", "cbbPromTgtRcd"]);
					
					util.Header.clickSearch(app);
				}
			
				/**
				 * @desc 진급정보 조회
				 * @param poCallBackFunc 콜백함수
				 * @return 
				 * @author Choi In Seong 2016.02.12
				 */
				function doList(poCallBackFunc) {
			
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdCsrPromotion");
							util.Control.redraw(app, "cbbPromTgtRcd");
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//				ExtControl.refreshBind("binEditRow");
							doCheckNewData();
						}
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				}
				
				/**
				 * @desc 조회버튼 클릭
				 * @param  
				 * @return 
				 * @author Choi In Seong 2016.02.12
				 */
				moPage.onClick_BtnSearch = function() {
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) moPage.parentSendMsg("lblTitleRptCsrPromotion", NLS.INF.M024);
					});
				}
				
			
			   /**
				 * @desc 작업저장 버튼 클릭
				 * @return void
				 * @author Choi In Seong 2016.02.12
				 */
				moPage.onClick_BtnSave = function() {
					doSubSave();
				};
			
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 2. 12
				 */
				function doSubSave(poCallbackFunc) {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCsrPromotion"], null)){
						moPage.parentSendMsg("lblTitleRptCsrPromotion",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdCsrPromotion")){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								var voCallBackSaveAfter = function(pbSuccessAfter) {
									if(pbSuccessAfter) {
										//저장성공 메세지 출력
										// 조회 : "조회되었습니다." header 메세지 표시
										moPage.parentSendMsg("lblTitleRptCsrPromotion",NLS.INF.M025);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
							}
						}
					);
				};
			
				/**
				 * @desc 리피트 panel click event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.02.12
				 */
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
			
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 리피트 라벨 id
				 * @param psMsgCode 메시지
				 * @return void
				 * @author Choi In Seong 2016. 1. 20
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 표준학기 날자 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016.02.12
				 */
				function doSetNewDate() {
					
					var vsSeledYear = util.Grid.getCellValue(app, "grdCsrPromotion", "SCH_YEAR_RCD");	
					var vsSeledSmt  = util.Grid.getCellValue(app, "grdCsrPromotion", "SMT_RCD");	
			
					if (ValueUtil.isNull(vsSeledYear) || ValueUtil.isNull(vsSeledSmt)) return false;
							
					util.DataMap.setValue(app, "dmSessionDate", "year", vsSeledYear);
					util.DataMap.setValue(app, "dmSessionDate", "smt", vsSeledSmt);					
					// 표준학기 날짜 조회
					//strCommand: getDateFromSession 
					util.Submit.send(app, "subDate", function(pbSuccess) {
							if(pbSuccess) {
								
								var vsStDt = util.DataMap.getValue(app, "dmSessionDate", "stDate");
								var vsEndDt = util.DataMap.getValue(app, "dmSessionDate", "endDate");
								// 표준학기 날짜가 없으면 초기화
								if(ValueUtil.isNull(vsStDt) || ValueUtil.isNull(vsEndDt)) {
									doClearDateClt();
									return false;
								}
								
								//날짜 정합성check
								var vnRptIndex = util.Grid.getIndex(app, "grdCsrPromotion");
								var vsPromTgtRcd = util.Grid.getCellValue(app, "grdCsrPromotion", "PROM_TGT_RCD");
								var vbCheckDate = moPage.doChekKeyDate("rptCsrPromotion", vsPromTgtRcd, vsStDt);
								if (vbCheckDate) {
									vsStDt = util.DataMap.getValue(app, "dmSessionDate", "stDate");
									util.Grid.setCellValue(app, "grdCsrPromotion", "ST_DT", vsStDt);
									util.Grid.setCellValue(app, "grdCsrPromotion", "END_DT", "99991231000000");
									
									var vsPath = "/root/resList/rptCsrPromotion/row[ child:: PROM_TGT_RCD ='"+vsPromTgtRcd+"' and UPT_STATUS != 'N' ]";;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsPromTgtRcdList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSchYearRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsPromMethodRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsPromUnitRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsProcStatRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsCsrPromotion");
			dataSet_7.parseData({
				"info": "CSR_PROMOTION@STUD_ID,SCH_YEAR_RCD,SMT_RCD,PROM_TGT_RCD",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "PROM_TGT_RCD"},
					{"name": "PROM_METHOD_RCD"},
					{"name": "PROM_UNIT_RCD"},
					{"name": "PROC_STAT_RCD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "PROC_RSLT"},
					{"name": "PROC_DT"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmSessionDate");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "stDate",
						"dataType": "string"
					},
					{
						"name": "year",
						"dataType": "string"
					},
					{
						"name": "endDate",
						"dataType": "string"
					},
					{
						"name": "smt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [{
					"name": "CurrentDate",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strPromTgtRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstPromotion/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_3);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrMstPromotion/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_3);
			submission_2.addResponseData(dataSet_7, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrMstPromotion/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_7);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subDate");
			submission_4.action = "/csr/StdCsrMstPromotion/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_1, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-PRMTINF");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "235px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "830px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "895px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "";
				button_3.style.setClasses(["btn-save"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrPromotion");
				grid_1.init({
					"dataSet": app.lookup("dsCsrPromotion"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "100px"},
						{"width": "145px"},
						{"width": "115px"},
						{"width": "115px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "56px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "90px"},
						{
							"width": "97px",
							"visible": false
						},
						{
							"width": "97px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PRMTOBJ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PROMTMD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PROMTUNIT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PRCSTATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PROC_RSLT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROC_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-STUID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.text = "FLAG_GBN";
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbSchYearRcd");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
											comboBox_1.setItemSet(app.lookup("dsSchYearRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbSmtRcd");
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsSmtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("SMT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PROM_TGT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbPromTgtRcd");
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsPromTgtRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("PROM_TGT_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PROM_METHOD_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbPromMethodRcd");
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsPromMethodRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("PROM_METHOD_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROM_UNIT_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbPromUnitRcd");
										comboBox_5.userAttr({"require": "Y"});
										(function(comboBox_5){
											comboBox_5.addItem(new cpr.controls.Item("선택", ""));
											comboBox_5.setItemSet(app.lookup("dsPromUnitRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("PROM_UNIT_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROC_STAT_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbProcStatRcd");
										comboBox_6.userAttr({"require": "Y"});
										(function(comboBox_6){
											comboBox_6.addItem(new cpr.controls.Item("선택", ""));
											comboBox_6.setItemSet(app.lookup("dsProcStatRcdList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("PROC_STAT_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbProcRslt");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "99";
										numberEditor_1.userAttr({"require": "Y"});
										numberEditor_1.style.css({
											"text-align" : "center"
										});
										numberEditor_1.bind("value").toDataColumn("PROC_RSLT");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipStDt");
										dateInput_1.enabled = false;
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.bind("value").toDataColumn("ST_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipEndDt");
										dateInput_2.enabled = false;
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.bind("value").toDataColumn("END_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("gdDipProcDt");
										dateInput_3.format = "YYYY-MM-DD";
										dateInput_3.bind("value").toDataColumn("PROC_DT");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbStudId");
										inputBox_1.maxLength = 20;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("STUD_ID");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "FLAG_GBN";
								}
							}
						]
					}
				});
				if(typeof onGrdCsrPromotionSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCsrPromotionSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "391px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "37px",
				"left": "0px",
				"width": "1025px",
				"height": "426px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "445px",
				"left": "60px",
				"width": "96px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_2 = new cpr.controls.Output("optPromTgtRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-PRMTOBJ");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_7 = new cpr.controls.ComboBox("cbbPromTgtRcd");
				comboBox_7.bind("fieldLabel").toExpression("#optPromTgtRcd.value");
				comboBox_7.bind("value").toDataMap(app.lookup("dmReqKey"), "strPromTgtRcd");
				(function(comboBox_7){
					comboBox_7.addItem(new cpr.controls.Item("전체", ""));
					comboBox_7.setItemSet(app.lookup("dsPromTgtRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_7);
				container.addChild(comboBox_7, {
					"top": "5px",
					"left": "90px",
					"width": "130px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSearch");
				button_4.value = "조회";
				button_4.style.setClasses(["btn-search"]);
				if(typeof onBtnSearchClick == "function") {
					button_4.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "32px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCsrCMstPromotion";
	cpr.core.Platform.INSTANCE.register(app);
})();
