/*
 * App URI: app/csr/stdCsrCPrzPnshInfo
 * Source Location: app/csr/stdCsrCPrzPnshInfo.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrCPrzPnshInfo", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrCPrzPnshInfo.xtm"/>
			
			
			var stdCsrCPrzPnshInfo = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
			
				moPage.onLoadImportDone_impSbpHeader = function() {
					doSbpHeaderOnLoad();
				};
				
				
				moPage.onModelConstruct_StdCsrCPrzPnshInfo = function() {
					ExtSubmission.sendEx("subOnLoad", "onLoad");
				};
				
				
				moPage.onModelConstructDone_StdCsrCPrzPnshInfo = function() {
					doOnLoad();
				};
			
				/**
				 * 학적 마스터에서 조회한 학번
				 * @type String
				 */	
				var msStudId = "";
				
				/**
				 * 이전 상벌구분 값
				 */
				var msPrzPnshDivRcd = null;
				
				/**
				 * @desc doOnLoad 화면 초기화
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				function doOnLoad(){
			
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearchPrz", ["grp_rptCsrPrzPnsh"]);
					//리피트 초기화
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCsrPrzPnsh"]);
					
					var voParentPage = ExtSubPage.getParent();
					
					// 부모멤버변수에담긴학번받음
					msStudId = moPage.parent.moParentObj.studId;
					util.Control.redraw(app, ["rptCsrPrzPnsh", "cbbPrzPnshDivRcd"]);
					util.DataMap.setValue(app, "dmReqKey", "strSubpageAuth", msAuth);
					
					if (ValueUtil.isNull(msStudId)) {
						return false;
					}else{
						//LIST CALL 
						util.Header.clickSearch(app);
					}
				}
				
				/**
				 * @desc 해당 학생의 기본정보 데이터를 가져온다.
				 * @param poFunc 콜백함수
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				function doList(poFunc) {
					
					util.DataMap.setValue(app, "dmReqKey", "strStudId", msStudId);
					
					// submission call 
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//화면에 rebuild
							util.Control.redraw(app, ["rptCsrPrzPnsh"]);
						}
						
						if(util.isFunc(poFunc)) poFunc(pbSuccess);
					});
						
				};
				
				/**
				 * @desc 상벌사항 신규
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onClick_BtnNew = function() {
			
					// 신규로우 추가
					util.Grid.insertRow(app, "grdCsrPrzPnsh");
					
					var vsPrzPnshDivRcd	= util.Control.getValue(app, "cbbPrzPnshDivRcd");
					var vsStDt					= util.DataMap.getValue(app, "dmCurrentSmt", "stDt");
					var vsSmtRcd			= util.DataMap.getValue(app, "dmCurrentSmt", "smtRcd");
					var vsEndDt				= util.DataMap.getValue(app, "dmCurrentSmt", "endDt");
					var vsYearRcd			= util.DataMap.getValue(app, "dmCurrentSmt", "schYearRcd");
					
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "PRZ_PNSH_DIV_RCD", vsPrzPnshDivRcd);
					
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "STUD_ID", msStudId);
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "SCH_YEAR_RCD", vsYearRcd);
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "SMT_RCD", vsSmtRcd);
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "ST_DT", vsStDt);
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "END_DT", vsEndDt);
					
				}
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 1. 29
				 */
				function doSubSave(poCallbackFunc) {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCsrPrzPnsh"], null)){
						moPage.parentSendMsg("lblTitleSubCsrPrzPnsh",NLS.WRN.M007);
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdCsrPrzPnsh")){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								
								var vsLastSerialNo = util.DataMap.getValue(app, "dmResList", "strLastSerialNo");
								
								//마지막 순번있으면 포커싱 가도록
								if(vsLastSerialNo!=""){
									ExtRepeat.setPkValues("rptCsrPrzPnsh", vsLastSerialNo);
								}
								
								//저장성공 메세지 출력
								doList(function(pbSuccessList) {
									// 조회 : "조회되었습니다." header 메세지 표시
									if(pbSuccessList) {
										moPage.parentSendMsg("lblTitleSubCsrPrzPnsh",NLS.INF.M025);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessList);
								});
							}
						}
					);
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 저장 버튼 클릭
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onClick_BtnSave = function() {
					doSubSave();
				};
				
			
				moPage.onClick_BtnSearch = function() {
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) moPage.parentSendMsg("lblTitleSubCsrPrzPnsh", NLS.INF.M024);
					});
				}
			
				/**
				 * @desc 작업취소
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdCsrPrzPnsh");
				}
				
				/**
				 * @desc 학년도, 학기에 해당하는 일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.setDateForYearSmt = function() {
					var vsSchYearRcd	= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "SCH_YEAR_RCD");
					var vsSmtRcd		= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "SMT_RCD");
					
					if (!ValueUtil.isNull(vsSchYearRcd)&&!ValueUtil.isNull(vsSmtRcd)) {
						util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", vsSchYearRcd);
						util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", vsSmtRcd);
						
						//strCommand: getDate 
						util.Submit.send(app, "subKeyDate", function(pbSuccess) {
							if (pbSuccess) {
								util.Grid.setCellValue(app, "grdCsrPrzPnsh", "ST_DT", util.DataMap.getValue(app, "dmChgDate", "stDt"));
								util.Grid.setCellValue(app, "grdCsrPrzPnsh", "END_DT", util.DataMap.getValue(app, "dmChgDate", "endDt"));
			
							} else {
								util.Grid.setCellValue(app, "grdCsrPrzPnsh", "ST_DT", "");
								util.Grid.setCellValue(app, "grdCsrPrzPnsh", "END_DT", "");
			
							}
						});
						
					} else {
						util.Msg.alert("NLS-INF-M028");
					}
				};
				
				/**
				 * @desc 학년도, 학기에 해당하는 일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onValueChanged_RdSchYearRcd = function() {
					moPage.setDateForYearSmt();
				};
				
				/**
				 * @desc 학년도, 학기에 해당하는 일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onValueChanged_RdSmtRcd = function() {
					moPage.setDateForYearSmt();
				};
				
				/**
				 * @desc 수상/징계일자 수정시 유효시작일자, 유효종료일자 셋팅
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onValueChanged_RdProcDt = function() {
					var vsProcDt		= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "PROC_DT");
					var vsEfftStDt		= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "EFFT_ST_DT");
					var vsEfftEndDt	= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "EFFT_END_DT");
			
					util.Grid.setCellValue(app, "grdCsrPrzPnsh", "EFFT_ST_DT", vsProcDt);
					
					if(ValueUtil.isNull(vsEfftEndDt)){
						util.Grid.setCellValue(app, "grdCsrPrzPnsh", "EFFT_END_DT", "99991231");
					}
					
				};
				
				/**
				 * @desc 수상/징계일자와 유효시작일을 비교한다. 유효시작일이 이전 날짜이면 안된다.
				 * @param
				 * @return boolean 날짜 유효성 여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.checkProcDtToEfftStDt = function(poRow) {
					var vbValid = true;
			
					var vsProcDt	= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "PROC_DT");
					var vsEfftStDt	= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "EFFT_ST_DT");
			
					if (!ValueUtil.isNull(vsProcDt) && !ValueUtil.isNull(vsEfftStDt)) {
						vsProcDt = moPage.addZoreDate(vsProcDt);
						vsEfftStDt = moPage.addZoreDate(vsEfftStDt);
						// localeCompare() - 같으면 0, 파라메타가 크면 -1, 파라메타가 작으면 1
						if (vsProcDt.localeCompare(vsEfftStDt) == 1) {
							util.Msg.alert("NLS-CSR-M015");
							util.Grid.setCellValue(app, "grdCsrPrzPnsh", "EFFT_ST_DT", "");
							vbValid = false;
						}
					}
					
					return vbValid;
				};
				
				/**
				 * @desc 유효시작일과 유효종료일을 비교한다. 유효종료일이 이후 날짜여야 한다.
				 * @param
				 * @return boolean 날짜 유효성 여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.checkEfftBegDtToEfftEndDt = function() {
					var vsEfftEndDt	= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "EFFT_END_DT");
					var vsEfftStDt		= util.Grid.getCellValue(app, "grdCsrPrzPnsh", "EFFT_ST_DT");
					
					if (!ValueUtil.isNull(vsEfftEndDt) && !ValueUtil.isNull(vsEfftStDt)) {
						vsEfftEndDt 	= moPage.addZoreDate(vsEfftEndDt);
						vsEfftStDt 		= moPage.addZoreDate(vsEfftStDt);
						// localeCompare() - 같으면 0, 파라메타가 크면 -1, 파라메타가 작으면 1
						if (vsEfftEndDt.localeCompare(vsEfftStDt) == - 1) {
							util.Msg.alert("NLS-CSR-M016");
							util.Grid.setCellValue(app, "grdCsrPrzPnsh", "EFFT_END_DT", "");
						}
					}
				};
				
				/**
				 * @desc //입력받은 날짜에 초를 000000으로 세팅
				 * @param psDate 시분초를 추가할 날짜
				 * @return vsDate 시분초가 추가된 날짜
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.addZoreDate = function(psDate) {
					var vsDate = psDate.substring(0, 8);
					vsDate += "000000";
					return vsDate;
				};
			
				/**
				 * @desc 유효시작일자 유효성체크
				 * @param
				 * @return boolean 날짜 유효성 여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onValueChanged_RdEfftStDt = function() {
					moPage.checkEfftBegDtToEfftEndDt();
				};
				
				/**
				 * @desc 유효종료일자 유효성체크
				 * @param
				 * @return boolean 날짜 유효성 여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onValueChanged_RdEfftEndDt = function() {
					// 유효종료일이 유효시작일보다 빠를 수 없음
					moPage.checkEfftBegDtToEfftEndDt();
				};
				
				/**
				 * @desc 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdCsrPrzPnsh"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				/**
				 * @desc 상벌삭제
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 1. 29
				 */
				moPage.onClick_BtnDel = function() {
					if(util.Grid.getIndex(app, "grdCsrPrzPnsh")==0){
						moPage.parentSendMsg("lblTitleSubCsrPrzPnsh", NLS.INF.M005);
						return false;
					}else{
						util.Grid.deleteRow(app, "grdCsrPrzPnsh");
					}
				};
				
				moPage.onValueChanged_RhCkbSelect = function() {
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				moPage.onSetFocus_RdPrzPnshRcd = function() {
					util.Control.redraw(app, "rdPrzPnshRcd");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCsrPrzPnsh");
			dataSet_1.parseData({
				"info": "CSR_PRZ_PNSH@STUD_ID,SCH_YEAR_RCD,SMT_RCD,PRZ_PNSH_DIV_RCD,PRZ_PNSH_RCD,PROC_DT,SERIAL_NO",
				"columns": [
					{"name": "PRZ_PNSH_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "STUD_ID"},
					{"name": "PROC_DT"},
					{"name": "EFFT_END_DT"},
					{"name": "SMT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "PRZ_PNSH_DIV_RCD"},
					{"name": "ST_DT"},
					{"name": "RSN_DESC"},
					{"name": "AGENCY"},
					{"name": "END_DT"},
					{"name": "EFFT_ST_DT"},
					{"name": "PRZ_ISSUE_NO"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsPrzPnshRcdList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "UCD"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsPrzPnshDivList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSchYearList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strPrzPnshDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSubpageAuth",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmChgDate");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "stDt",
						"dataType": "string"
					},
					{
						"name": "endDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strLastSerialNo",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmCurrentSmt");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "stDt",
						"dataType": "string"
					},
					{
						"name": "smtRcd",
						"dataType": "string"
					},
					{
						"name": "endDt",
						"dataType": "string"
					},
					{
						"name": "schYearRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrPrzPnshInfo/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrPrzPnshInfo/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataSet_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrPrzPnshInfo/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataSet_1);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subKeyDate");
			submission_4.action = "/csr/StdCsrPrzPnshInfo/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_2, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_rptCsrPrzPnsh");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grdCsrPrzPnsh");
				grid_1.init({
					"dataSet": app.lookup("dsCsrPrzPnsh"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "90px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "80px"},
						{"width": "95px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "95px",
							"visible": false
						},
						{
							"width": "95px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PRZ_PNSH_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-PRZ_PNSH_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PRZPUNSDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-AGENCY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EFFT_ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-EFFT_END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_TEL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdSchYearRcd");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
											comboBox_1.setItemSet(app.lookup("dsSchYearList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("SCH_YEAR_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdSmtRcd");
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsSmtList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("SMT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PRZ_PNSH_DIV_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdPrzPnshDivRcd");
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsPrzPnshDivList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("PRZ_PNSH_DIV_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PRZ_PNSH_RCD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdPrzPnshRcd");
										comboBox_4.userAttr({"require": "Y"});
										(function(comboBox_4){
											comboBox_4.addItem(new cpr.controls.Item("선택", ""));
											comboBox_4.setItemSet(app.lookup("dsRow[index('CsrPrzPnsh')]"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("PRZ_PNSH_RCD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdProcDt");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.userAttr({"require": "Y"});
										dateInput_1.bind("value").toDataColumn("PROC_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "RSN_DESC";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdRsnDesc");
										inputBox_1.maxLength = 300;
										inputBox_1.bind("value").toDataColumn("RSN_DESC");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "AGENCY";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdAgency");
										inputBox_2.maxLength = 300;
										inputBox_2.bind("value").toDataColumn("AGENCY");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "EFFT_ST_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdEfftStDt");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.bind("value").toDataColumn("EFFT_ST_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "EFFT_END_DT";
									cell.control = (function(){
										var dateInput_3 = new cpr.controls.DateInput("gdEfftEndDt");
										dateInput_3.format = "YYYY-MM-DD";
										dateInput_3.bind("value").toDataColumn("EFFT_END_DT");
										return dateInput_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "PRZ_ISSUE_NO";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdPrzIssueNo");
										inputBox_3.maxLength = 50;
										inputBox_3.bind("value").toDataColumn("PRZ_ISSUE_NO");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var dateInput_4 = new cpr.controls.DateInput("gdStDt");
										dateInput_4.bind("value").toDataColumn("ST_DT");
										return dateInput_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var dateInput_5 = new cpr.controls.DateInput("gdEndDt");
										dateInput_5.bind("value").toDataColumn("END_DT");
										return dateInput_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "391px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-PRZPUNSNTC");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "136px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnDel");
				button_1.value = "";
				button_1.style.setClasses(["btn-delete"]);
				button_1.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_1.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "830px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "765px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSave");
				button_3.value = "저장";
				button_3.style.setClasses(["btn-save"]);
				if(typeof onBtnSaveClick == "function") {
					button_3.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "895px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "37px",
				"left": "0px",
				"width": "1025px",
				"height": "426px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "440px",
				"left": "40px",
				"width": "96px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearchPrz");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_2 = new cpr.controls.Output("optPrzPnshDivRcd");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-PRZPUNSDIV");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbPrzPnshDivRcd");
				comboBox_5.bind("fieldLabel").toExpression("#optPrzPnshDivRcd.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strPrzPnshDivRcd");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsPrzPnshDivList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "5px",
					"left": "90px",
					"width": "125px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSearch");
				button_5.value = "";
				button_5.style.setClasses(["btn-search"]);
				button_5.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_5.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "960px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "32px"
			});
			if(typeof onBodyInit == "function"){
				app.addEventListener("init", onBodyInit);
			}
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "stdCsrCPrzPnshInfo";
	cpr.core.Platform.INSTANCE.register(app);
})();
