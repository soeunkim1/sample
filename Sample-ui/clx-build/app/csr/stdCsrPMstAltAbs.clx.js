/*
 * App URI: app/csr/stdCsrPMstAltAbs
 * Source Location: app/csr/stdCsrPMstAltAbs.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrPMstAltAbs", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrPMstAltAbs.xtm"/>
			
			
			var stdCsrPMstAltAbs = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * @desc 헤더 온로드 실행
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 팝업 닫기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onClick_BtnCloseCancel = function() {
					app.close();
				};
				
				/**
				 * 필수 입력 콤보 컨트롤(학년도, 학기, 휴학학기수, 휴학사유)
				 */	
				moPage.reqInputCbb = ["cbbFrfSchYearRcd", "cbbFrfSmtRcd", "cbbFrfAbsSmtCntRcd", "cbbFrfAltRsnRcd"];
				
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 2. 17.
				 */
				moPage.onModelConstructDone_StdCsrPMstAltAbs = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("frfCsrShregAlt");
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				
				/**
				 * @desc 부모창에서 받아온 변수 조회조건에 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 17.
				 */
				function doOnLoad() {
					var voAltObj = ExtPopUp.getParentVal("moAltObj");
					
					// 부모멤버변수에담긴학번받음
					util.DataMap.setValue(app, "dmReqKey", "strStudNo", voAltObj["studNo"]);
					util.DataMap.setValue(app, "dmReqKey", "strHeaderCourse", voAltObj["headerCourse"]);
					util.DataMap.setValue(app, "dmReqKey", "strStudInfo", voAltObj["headerStud"]);
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", voAltObj["year"]);
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", voAltObj["smt"]);
					util.DataMap.setValue(app, "dmReqKey", "strStDt", voAltObj["stDt"]);
					util.DataMap.setValue(app, "dmReqKey", "strEndDt", voAltObj["endDt"]);
					
					//학생id 셋팅
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj["studId"]);
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["frfCsrShregAlt"]);
							util.Control.redraw(app, moPage.reqInputCbb);
							util.Control.redraw(app, ["cbbFrfRegTransRcd"]);
							// 휴학사유 기본 설정 데이터 셋팅
							var vsDefAltRsnRcd = ExtInstance.getValue("/root/resOnLoad/reasonList/row", "CD", "child::CD_PRP4='Y'");
			
							doSubInsertRow();
							
							// 학생의 학번정보를 화면에 입력
							util.Control.setValue(app, "optStudNo", voAltObj["studNo"]);
							util.Control.setValue(app, "optStud", voAltObj["headerStud"]);
							util.Control.setValue(app, "optCourse", voAltObj["headerCourse"]);
							
							var vsStatRcd = util.DataMap.getValue(app, "dmResOnLoad", "STAT_RCD");
							// 휴학신규
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_DIV_RCD", "CT401ABSE");
							//부모창의 학년도 학기 설정
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD", voAltObj["year"], false);
							util.FreeForm.setValue(app, "frfCsrShregAlt", "SMT_RCD", voAltObj["smt"], false);
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_RSN_RCD", vsDefAltRsnRcd);
							
							// 학적 변동일 설정
							var vsAltDt = util.DataMap.getValue(app, "dmResOnLoad", "chgDt");
							util.FreeForm.setValue(app, "frfCsrShregAlt", "ALT_DT", vsAltDt);
							util.Control.redraw(app, ["iptFrfAltDt","cbbFrfAltRsnRcd"]);
							
							// 3/4수업일수 체크
							moPage.getYearSmtDtChk();
						} else {
							// 실패시 팝업 닫기
							ExtModel.dispatch("btnCloseCancel", "DOMActivate");
						}
					});
				}
			
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCsrShregAlt",AppConstants.CUD_COL_REF, "I");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrShregAlt");
					var vsStudId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
					var vsRegTransRcd = util.DataMap.getValue(app, "dmResOnLoad", "strRegTransRcd");
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCsrShregAlt", "STUD_ID", vsStudId);
					util.FreeForm.setValue(app, "frfCsrShregAlt", "REG_TRANS_RCD", vsRegTransRcd);
					util.Control.setEnable(app, false, ["cbbFrfRegTransRcd"]);
					util.Grid.setRowState(app, "frfCsrShregAlt",cpr.data.tabledata.RowState.INSERTED,1);
					//신규입력이 Ok
					util.Control.setEnable(app, true, ["frfCsrShregAlt"]);
				};
				
				/**
				 * @desc 저장 SF에서 오류 메시지가 있으면 확인창 띄움.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17
				 */	
				function doSave(pnStep) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					
					//strCommand: saveGlobal 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									return doSave(vnStep);
								} else {
									return false;
								}
							} else {
								//부모창 목록 재조회
								//팝업창 닫기
								ExtPopUp.closeLayeredPopup("doPopCallList");
								return true;
							}
						}else{
							return false;
						}
					});
				};
				
				/**
				 * @desc 휴학신규 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onClick_BtnSave = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrShregAlt"], "MSG")){
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, ["frfCsrShregAlt"])){
						return false;
					}
					
					util.DataMap.setValue(app, "dmReqKey", "strPopTarget", "stdCsrPMstAltAbs");
					//strCommand: popupMnu 
					util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
							doSave();
						}
					});
				};
				
				/**
				 * @desc 휴학사유 changeEvent 휴학사유에 설정된 휴학학기수 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onValueChanged_CbbFrfAltRsnRcd = function() {
					
					var vsAltRsnRcd = util.FreeForm.getValue(app, "frfCsrShregAlt", "ALT_RSN_RCD");
					var vsSmtCnt = ExtInstance.getValue("/root/resOnLoad/reasonList/row", "CD_PRP5", "child::CD='"+vsAltRsnRcd+"'");
					
					if(ValueUtil.isNull(vsSmtCnt)) {
						util.Control.setValue(app, "cbbFrfAbsSmtCntRcd", "");
					} else {
						util.Control.setValue(app, "cbbFrfAbsSmtCntRcd", vsSmtCnt);
					}
				};
				
				/**
				 * @desc 선택된 학년도 학기 3/4 수업일수와 현재 일자 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onValueChanged_CbbFrfSchYearRcd = function() {
					moPage.getYearSmtDtChk();
				};
				
				/**
				 * @desc 선택된 학년도 학기 3/4 수업일수와 현재 일자 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onValueChanged_CbbFrfSmtRcd = function() {
					moPage.getYearSmtDtChk();
				};
				
				/**
				 * @desc 해당 학년도 학기의 수업일수 3/4와 현재 일자 체크
				               현재일자가 클경우 성적인정여부 수정 가능
							   현재일자가 작거나 같을경우 값 초기화 후 수정 불가능
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.getYearSmtDtChk = function() {
					
					var vsSmt 			= util.FreeForm.getValue(app, "frfCsrShregAlt", "SMT_RCD");
					var vsYear			= util.FreeForm.getValue(app, "frfCsrShregAlt", "SCH_YEAR_RCD");
					
					if (ValueUtil.isNull(vsYear)||ValueUtil.isNull(vsSmt)) return;
					
					util.DataMap.setValue(app, "dmSessionDate", "strYear", vsYear);
					util.DataMap.setValue(app, "dmSessionDate", "strSmt", vsSmt);
					util.DataMap.setValue(app, "dmSessionDate", "strStDt", "");
					util.DataMap.setValue(app, "dmSessionDate", "strEndDt", "");
					
					//strCommand: getDateCompare 
					util.Submit.send(app, "subDateFromSession", function(pbSuccess) {
						if (pbSuccess) {
							// 3/4 수업일수 체크 결과
							var vsChkYn = util.DataMap.getValue(app, "dmSessionDate", "strChkYn");
							if(vsChkYn == "N"){
								util.FreeForm.setValue(app, "frfCsrShregAlt", "REC_RCOG_YN", "");
								util.Control.setEnable(app, false, ["ckbFrfRecRcogYn"]);
								return;
							} else{
								util.Control.setEnable(app, true, ["ckbFrfRecRcogYn"]);
							}	
						} else {
							util.FreeForm.setValue(app, "frfCsrShregAlt", "REC_RCOG_YN", "");
							util.Control.setEnable(app, false, ["ckbFrfRecRcogYn"]);
							return;
						}
					});
				};
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsYearList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsReasonList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP4"},
					{"name": "CD_PRP5"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsAbsCntList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAltDivRcdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsRegTransRcdList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "altDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "keyDt",
						"dataType": "string"
					},
					{
						"name": "strPopTarget",
						"dataType": "string"
					},
					{
						"name": "strPageId",
						"dataType": "string"
					},
					{
						"name": "stdPgmNm",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtCnt",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strHeaderCourse",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "GRID_ID",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCsrShregAlt");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "BEF_ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_TRANS_RCD",
						"dataType": "string"
					},
					{
						"name": "REC_RCOG_YN",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "rptRowCnt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "subPageNm",
						"dataType": "string"
					},
					{
						"name": "chgBefDt",
						"dataType": "string"
					},
					{
						"name": "chgDt",
						"dataType": "string"
					},
					{
						"name": "strRegTransRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmSessionDate");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strYear",
						"dataType": "string"
					},
					{
						"name": "strSmt",
						"dataType": "string"
					},
					{
						"name": "strChkYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstAltAbs/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/StdCsrMstAltAbs/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_5);
			submission_2.addResponseData(dataMap_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subReasonList");
			submission_3.action = "/csr/StdCsrMstAltAbs/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_4);
			submission_3.addResponseData(dataSet_2, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subMstAltPopupMnu");
			submission_4.action = "/csr/StdCsrMstAlt/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subDateFromSession");
			submission_5.action = "/csr/StdCsrMstAltAbs/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_6);
			submission_5.addResponseData(dataMap_6, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShregAlt");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfSchYearRcd");
					output_1.value = "";
					output_1.style.setClasses(["require"]);
					output_1.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcd");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					if(typeof onCbbFrfSchYearRcdSelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCbbFrfSchYearRcdSelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "110px",
						"width": "175px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_1.visible = false;
					inputBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "STUD_ID");
					container.addChild(inputBox_1, {
						"top": "80px",
						"left": "530px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("iptFrfSerialNo");
					inputBox_2.visible = false;
					inputBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SERIAL_NO");
					container.addChild(inputBox_2, {
						"top": "80px",
						"left": "545px",
						"width": "10px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfRegTransRcd");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-DB-REG_TRANS_RCD");
					container.addChild(output_2, {
						"top": "80px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfAltDt");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_3, {
						"top": "55px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfRegTransRcd");
					comboBox_2.enabled = false;
					comboBox_2.bind("fieldLabel").toExpression("#optFrfRegTransRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REG_TRANS_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsRegTransRcdList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "80px",
						"left": "110px",
						"width": "175px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("iptFrfAltDt");
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAltDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DT");
					container.addChild(dateInput_1, {
						"top": "55px",
						"left": "110px",
						"width": "90px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfSmtRcd");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-SCR-ABSSMSTR");
					container.addChild(output_4, {
						"top": "5px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfSmtRcd");
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfSmtRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "SMT_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					if(typeof onCbbFrfSmtRcdSelectionChange == "function") {
						comboBox_3.addEventListener("selection-change", onCbbFrfSmtRcdSelectionChange);
					}
					container.addChild(comboBox_3, {
						"top": "5px",
						"left": "400px",
						"width": "175px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfAltRsnRcd");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-SCR-ABSYRS");
					container.addChild(output_5, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfAltRsnRcd");
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optFrfAltRsnRcd.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_RSN_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsReasonList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					if(typeof onCbbFrfAltRsnRcdSelectionChange == "function") {
						comboBox_4.addEventListener("selection-change", onCbbFrfAltRsnRcdSelectionChange);
					}
					container.addChild(comboBox_4, {
						"top": "30px",
						"left": "110px",
						"width": "175px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfAbsSmtCntRcd");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-SCR-ABSSMSTRS");
					container.addChild(output_6, {
						"top": "30px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfAbsSmtCntRcd");
					comboBox_5.userAttr({"require": "Y"});
					comboBox_5.bind("fieldLabel").toExpression("#optFrfAbsSmtCntRcd.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ABS_SMT_CNT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsAbsCntList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "30px",
						"left": "400px",
						"width": "175px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfCstDt");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-DB-CST_DT");
					container.addChild(output_7, {
						"top": "55px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("iptFrfCstDt");
					dateInput_2.format = "YYYY-MM-DD";
					dateInput_2.bind("fieldLabel").toExpression("#optFrfCstDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "CST_DT");
					container.addChild(dateInput_2, {
						"top": "55px",
						"left": "400px",
						"width": "90px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfRecRcogYn");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-REC_RCOG_YN");
					container.addChild(output_8, {
						"top": "80px",
						"left": "295px",
						"width": "100px",
						"height": "25px"
					});
					var checkBox_1 = new cpr.controls.CheckBox("ckbFrfRecRcogYn");
					checkBox_1.value = "";
					checkBox_1.trueValue = "Y";
					checkBox_1.falseValue = "";
					checkBox_1.text = "Y";
					checkBox_1.bind("fieldLabel").toExpression("#optFrfRecRcogYn.value");
					checkBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REC_RCOG_YN");
					container.addChild(checkBox_1, {
						"top": "80px",
						"left": "400px",
						"width": "30px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("inputbox1");
					inputBox_3.visible = false;
					inputBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "ALT_DIV_RCD");
					container.addChild(inputBox_3, {
						"top": "80px",
						"left": "560px",
						"width": "10px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfRemark");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_9, {
						"top": "105px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_4.maxLength = 300;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAlt"), "REMARK");
					container.addChild(inputBox_4, {
						"top": "105px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "115px",
					"left": "5px",
					"width": "580px",
					"height": "130px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCsrShregAlt");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-NEWABSMK");
				container.addChild(userDefinedControl_1, {
					"top": "90px",
					"left": "5px",
					"width": "250px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfStudInfo");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_10 = new cpr.controls.Output("optCourse");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-GLS-CRS");
					container.addChild(output_10, {
						"top": "55px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optCourse");
					output_11.value = "";
					output_11.bind("value").toDataMap(app.lookup("dmReqKey"), "strHeaderCourse");
					container.addChild(output_11, {
						"top": "55px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optStud");
					output_12.value = "";
					output_12.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudInfo");
					container.addChild(output_12, {
						"top": "30px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optStudNm");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-GLS-PER_NM");
					container.addChild(output_13, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optStudNo");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_14, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optStudNo");
					output_15.value = "";
					output_15.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
					container.addChild(output_15, {
						"top": "5px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "5px",
					"left": "5px",
					"width": "580px",
					"height": "80px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "590px",
				"height": "250px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "290px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnSave");
			button_2.value = "";
			button_2.style.setClasses(["btn-save"]);
			button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_2.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_2, {
				"top": "290px",
				"left": "535px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "휴학 - 신규";
	cpr.core.Platform.INSTANCE.register(app);
})();
