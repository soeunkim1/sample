/*
 * App URI: app/csr/stdCsrPMstAltReEn
 * Source Location: app/csr/stdCsrPMstAltReEn.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrPMstAltReEn", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrPMstAltReEn.xtm"/>
			
			var stdCsrPMstAltReEn = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				/**
				 * @desc 헤더 온로드 실행
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 23.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 팝업 닫기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 23.
				 */
				moPage.onClick_BtnCloseCancel = function() {
					app.close();
				};
				
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 2. 23.
				 */
				moPage.onModelConstructDone_StdCsrPMstAltReEn = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfCsrShregAltWith","frfCsrShregAltRe","frfCsrEnroll"]);
					//화면 온로드 서브미션 호출
					doOnLoad();		
				};
				
				/**
				 * @desc 프리폼 신규 생성
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 23
				 */
				function doSubInsertRow(vsFrfId) {
					util.FreeForm.setValue(app, vsFrfId, AppConstants.CUD_COL_REF, "N");
					//프리폼 신규
					util.FreeForm.insertRow(app, vsFrfId);
					var vsStudId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, vsFrfId, "STUD_ID", vsStudId);
					util.Grid.setRowState(app, vsFrfId, cpr.data.tabledata.RowState.INSERTED,1);
					//신규입력이 Ok
					util.Control.setEnable(app, true, [vsFrfId]);
				};
				
				
				/********************************
				 * 사용자 정의 메소드, 변수
				 *******************************/
				var vbSaChgChk = false;
			
				/**
				 * @desc  화면 온로드 제적정보조회, 공통코드 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				function doOnLoad() {
					
					var voAltObj = ExtPopUp.getParentVal("moAltObj");
					
					// 부모멤버변수에담긴학번받음
					util.DataMap.setValue(app, "dmReqKey", "strStudNo", voAltObj["studNo"]);
					util.DataMap.setValue(app, "dmReqKey", "strHeaderCourse", voAltObj["headerCourse"]);
					util.DataMap.setValue(app, "dmReqKey", "strStudInfo", voAltObj["headerStud"]);
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj["studId"]);
					util.DataMap.setValue(app, "dmReqKey", "strReSchYearRcd", voAltObj["year"]);
					util.DataMap.setValue(app, "dmReqKey", "strReSmtRcd", voAltObj["smt"]);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function (pbSuccess) {
						if (pbSuccess){
							util.Control.redraw(app, ["frfCsrShregAltWith", "frfCsrShregAltRe", "frfCsrEnroll"]);
							
							// 학생의 학번정보를 화면에 입력
							util.Control.setValue(app, "optStudNo", voAltObj["studNo"]);
							util.Control.setValue(app, "optStud", voAltObj["headerStud"]);
							util.Control.setValue(app, "optCourse", voAltObj["headerCourse"]);
							
							// 학사변동 여부 체크
							doSaChgChk();
							// 재입학 신규
							doSubInsertRow("frfCsrShregAltRe");
							
							util.FreeForm.setValue(app, "frfCsrShregAltRe", "SCH_YEAR_RCD", voAltObj["year"]);
							util.FreeForm.setValue(app, "frfCsrShregAltRe", "SMT_RCD", voAltObj["smt"]);
							
							// 학적변동일 Set
							doSetChgDt();
							
							util.Control.redraw(app, ["cbbFrfSchYearRcdRe", "cbbFrfSmtRcdRe", "cbbFrfAltRsnRcdRe"]);
							
						}else{
							ExtModel.dispatch("btnCloseCancel", "DOMActivate");
						}			
					});
				};
			
				 
				/**
				 * @desc  학사부서 변경이력(통폐합) 유무 체크한다.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				function doSaChgChk() {
					// 학사부서 변경이력 유무 체크.
					var vnChgListCnt = util.DataSet.getRowCount(app, "dsSaList");
					if (vnChgListCnt > 0) {
						vbSaChgChk = true;
					}else{
						vbSaChgChk = false;
					}
					
					if (vbSaChgChk) {
						// 학적등록정보(주과정) 신규
						doSubInsertRow("frfCsrEnroll");
						
						// 학사부서 변경이력이 있으면.				
						// 학적등록 FreeForm 전체 활성화.
						util.Control.setEnable(app, true, "frfCsrEnroll");
						
						// 학적등록정보(주전공등록으로), 이수과정구분(전공으로) Setting. 학적등록사유(폐과)
						util.FreeForm.setValue(app, "frfCsrEnroll", "ENROLL_DIV_RCD", "CT103MAIN");
						util.FreeForm.setValue(app, "frfCsrEnroll", "SP_DIV_RCD", "CA10701");
						util.FreeForm.setValue(app, "frfCsrEnroll", "ENROLL_RSN_RCD", "CT105EXP");
						
						//재입학 학년도 학기 표준 시작일자
						var vsStDt = util.DataMap.getValue(app, "dmDateMain", "ST_DT");
						
						util.FreeForm.setValue(app, "frfCsrEnroll", "ST_DT", vsStDt);
						util.FreeForm.setValue(app, "frfCsrEnroll", "END_DT", "99991231000000");
						
						util.Control.redraw(app, ["cbbFrfEnrollDivRcdEnr", "cbbFrfSpDivRcdEnr", "cbbFrfSaCdEnr", "cbbFrfSpCdEnr", "cbbFrfEnrollRsnRcdEnr", "cbbFrfCurAplyYearRcdEnr", "dipFrfStDtEnr", "dipFrfEndDtEnr"]);
						util.Control.setEnable(app, false, ["cbbFrfEnrollDivRcdEnr","cbbFrfSpDivRcdEnr", "cbbFrfEnrollRsnRcdEnr"]);
						ExtControl.setBind(["cbbFrfEnrollDivRcdEnr", "cbbFrfSpDivRcdEnr"],"bndNew");
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//			ExtControl.refreshBind(["bndNew"]);
						
					} else {
						// 학적등록 FreeForm 전체 비활성화.
						util.Control.setEnable(app, false, "frfCsrEnroll");
						util.Control.reset(app, "frfCsrEnroll");
						
						// 학생의 원소속
						var vsOrgSaCd = util.DataMap.getValue(app, "dmReqKey", "strOrgSaCd");
						util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsOrgSaCd);
					}
				};
			
				 /**
				 * @desc 학적변동일 초기 현재일 Setting
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				function doSetChgDt() {
					var vsChgDt = util.DataMap.getValue(app, "dmResOnLoad", "chgDt");
					util.FreeForm.setValue(app, "frfCsrShregAltRe", "ALT_DT", vsChgDt);
					util.Control.redraw(app, "dipFrfAltDtRe");
				};
				
				 /**
				 * @desc  학년도,학기 Click시
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				function doChgYearSmt() {
					
					var vsYear = util.FreeForm.getValue(app, "frfCsrShregAltRe", "SCH_YEAR_RCD");
					util.DataMap.setValue(app, "dmDateMain", "YEAR", vsYear);
					
					var vsSmt = util.FreeForm.getValue(app, "frfCsrShregAltRe", "SMT_RCD");
					util.DataMap.setValue(app, "dmDateMain", "SMT", vsSmt);
					
					if (!ValueUtil.isNull(vsYear) && !ValueUtil.isNull(vsSmt)) {
						// 학사력 추출.
						doChangeDate();
					}
				};
				
				 /**
				 * @desc  학사력 (학년도,학기 => 시작일,종료일)
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				function doChangeDate() {
					
					//strCommand: date 
					util.Submit.send(app, "subSelCal", function(pbSuccess) {
						if (pbSuccess) {
							var vsStDt = util.DataMap.getValue(app, "dmDateMain", "ST_DT");
							var vsFinalDt = "99991231000000";
							
							// 학생의 원소속
							var vsOrgSaCd = util.DataMap.getValue(app, "dmReqKey", "strOrgSaCd");
							util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsOrgSaCd);
							util.DataMap.setValue(app, "dmReqKey", "strKeyDate", vsStDt);
							// 기준일자의 학사부서리스트 조회
							//strCommand: getSaCdList 
							util.Submit.send(app, "subSaCdList", function(pbSuccess){
									if(pbSuccess){
										var vsStDt   = util.DataMap.getValue(app, "dmDateMain", "ST_DT");
										var vsFinalDt = "99991231000000";
										
										util.Control.redraw(app, ["cbbFrfEnrollDivRcdEnr", "cbbFrfSaCdEnr", "cbbFrfEnrollRsnRcdEnr"]);
										
										doSaChgChk();			
									}
								}
							);
						} else {
							util.FreeForm.setValue(app, "frfCsrShregAltRe", "SCH_YEAR_RCD", "");
							util.FreeForm.setValue(app, "frfCsrShregAltRe", "SMT_RCD", "");
							util.DataMap.setValue(app, "dmReqKey", "strKeyDate", "");
							util.Control.redraw(app, ["cbbFrfSchYearRcdRtn", "cbbFrfSmtRcdRtn"]);
						}
					});
				};
				
				 /**
				 * @desc 학사부서 선택시, 이수과정 LIST, 행정부서 SETTING
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				function doGetSpList() {
					var vsSaCd = util.FreeForm.getValue(app, "frfCsrEnroll", "SA_CD")
			
					util.DataMap.setValue(app, "dmReqKey", "strSaCd", vsSaCd);
						
					//strCommand: selCourse 
					util.Submit.send(app, "subSelCourse", function(pbSuccess) {
						if(pbSuccess){
							var vsOgCd = util.DataMap.getValue(app, "dmResOnLoad", "ogCd");
							var vsOgNm = util.DataMap.getValue(app, "dmResOnLoad", "ogNm");
							
							util.FreeForm.setValue(app, "frfCsrEnroll", "OG_CD", vsOgCd);
							util.FreeForm.setValue(app, "frfCsrEnroll", "OG_NM", vsOgNm);
							util.FreeForm.setValue(app, "frfCsrEnroll", "SP_CD", "");
							util.Control.redraw(app, ["cbbFrfSpCdEnr", "ipbFrfOgNmEnr", "ipbFrfOgCd"]);
						} else {
							util.FreeForm.setValue(app, "frfCsrEnroll", "SP_CD", "");
							util.FreeForm.setValue(app, "frfCsrEnroll", "OG_CD", "");
							util.FreeForm.setValue(app, "frfCsrEnroll", "OG_NM", "");
						}
					});
				};
				
				 /**
				 * @desc 저장 SF에서 오류 메시지가 있으면 확인창 띄움.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				function doSave(pnStep) {
					if (!pnStep) {
						pnStep = "0";
					}
					
					var vsSaChg = (vbSaChgChk)? "1":"0";	
					
					util.DataMap.setValue(app, "dmInteractiveMsg", "intStep", pnStep);
					util.DataMap.setValue(app, "dmReqKey", "strSaChg", vsSaChg);
					
					//strCommand: saveGlobal 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							var vsMsg = util.DataMap.getValue(app, "dmInteractiveMsg", "strMsg");
							if (vsMsg != "") {
								// @1\n  계속하시겠습니까?
								if (util.Msg.confirm("NLS-CRM-M034", [vsMsg]) ) {
									var vnStep = util.DataMap.getValue(app, "dmInteractiveMsg", "intStep");
									return doSave(vnStep);
								} else {
									return false;
								}
							} else {
								//부모창 목록 재조회
								//팝업창 닫기
								ExtPopUp.closeLayeredPopup("doPopCallList");
								return true;
							}
						}else{
							return false;
						}
					});
				};	
				
				/**
				 * @desc 재입학학년도 변경시 표훈학기 날짜 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				moPage.onValueChanged_CbbFrfSchYearRcdRe = function() {
					// 시작일,종료일 Setting.
					doChgYearSmt();
				};
			
				/**
				 * @desc 재입학학기 변경시 표훈학기 날짜 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 23.
				 */
				moPage.onValueChanged_CbbFrfSmtRcdRe = function() {
					// 시작일,종료일 Setting.
					doChgYearSmt();
				};
				
				/**
				 * @desc 학적변동일 변경시 학적등록정보에 효력시작일자가 존재하면 학적변동일로 수정
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				moPage.onValueChanged_DipFrfAltDtRe = function() {
					
			//		var vsStDt = ExtFreeForm.getValue("frfCsrEnroll", "ST_DT");
			//		
			//		if(!ValueUtil.isNull(vsStDt)) {
			//			var vsValue = ExtFreeForm.getValue("frfCsrShregAltRe", "ALT_DT");
			//			ExtFreeForm.setValue("frfCsrEnroll", "ST_DT", vsValue);
			//			ExtControl.refresh("dipFrfStDtEnr");
			//		}
				};
				
				/**
				 * @desc 학사부서 변경시 이수과정 재조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 02. 19.
				 */
				moPage.onValueChanged_CbbFrfSaCdEnr = function() {
					doGetSpList();
				};
			
				/**
				 * @desc 교과과정적용학년도 변경시 메시지 출력
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onValueChanged_CbbFrfCurAplyYearRcdEnr = function() {
					var vsRegChgCurAplyYear = util.FreeForm.getValue(app, "frfCsrEnroll", "cbbFrfCurAplyYearRcdEnr");
					if (!ValueUtil.isNull(vsRegChgCurAplyYear)) {
						util.Msg.alert("NLS-CSR-M026");
					}
				};
				
				/**
				 * @desc 재입학신규 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 2. 17.
				 */
				moPage.onClick_BtnSave = function() {
					
					if (vbSaChgChk) {
						var vsSaCd = util.FreeForm.getValue(app, "frfCsrEnroll", "SA_CD");
						if(!ValueUtil.isNull(vsSaCd)){
							//리피트 validation check
							if(!util.validate(app, ["frfCsrShregAltRe", "frfCsrEnroll"])){
								return false;
							}
						}else{
							if(!util.validate(app, ["frfCsrShregAltRe"])){
								return false;
							}				
						}
						
					} else {
						//리피트 validation check
						if(!util.validate(app, ["frfCsrShregAltRe"])){
							return false;
						}
					}
			
					util.DataMap.setValue(app, "dmReqKey", "strPopTarget", "stdCsrPMstAltReEn");
					//strCommand: popupMnu 
					util.Submit.send(app, "subMstAltPopupMnu", function(pbSuccess){
						if (pbSuccess) {
							doSave();
						}
					});
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsSpList");
			dataSet_1.parseData({
				"columns": [
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "SHORT_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsEnrollRsnList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsEnrollDivList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsSpDivList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsSaList");
			dataSet_5.parseData({
				"columns": [
					{"name": "SA_CD"},
					{"name": "SA_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsSmtList");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsRsnList");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsSchYearList");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_CLS"},
					{"name": "PRT_ORD"},
					{"name": "STD_YN"},
					{"name": "LAN_DIV_RCD"},
					{"name": "UCD"},
					{"name": "CD_LEN"},
					{"name": "ULAN_DIV_RCD"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_DESC"},
					{"name": "UNIT_SYSTEM_RCD"},
					{"name": "EFFT_END_DT"},
					{"name": "CD_SHORT_NM"},
					{"name": "EFFT_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strPopTarget",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strHeaderCourse",
						"dataType": "string"
					},
					{
						"name": "strReSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strReSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strSaChg",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strPageId",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "stdPgmNm",
						"dataType": "string"
					},
					{
						"name": "strOrgSaCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCsrShregAltWith");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_NM",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_NM",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_NM",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_NM",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmCsrShregAltRe");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_NM",
						"dataType": "string"
					},
					{
						"name": "ABS_SMT_CNT_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_NM",
						"dataType": "string"
					},
					{
						"name": "CANCEL_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "ALT_DT",
						"dataType": "string"
					},
					{
						"name": "CST_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_NM",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_NM",
						"dataType": "string"
					},
					{
						"name": "CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "ALT_RSN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmCsrEnroll");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "SA_NM",
						"dataType": "string"
					},
					{
						"name": "SHREG_ALT_KEY",
						"dataType": "string"
					},
					{
						"name": "ENROLL_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "ENROLL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SP_CD",
						"dataType": "string"
					},
					{
						"name": "ENROLL_CANCEL_RSN_RCD",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "REG_STAT_RCD",
						"dataType": "string"
					},
					{
						"name": "OG_CD",
						"dataType": "string"
					},
					{
						"name": "OG_NM",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "UREF_KEY",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "CUR_APLY_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "SP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PROC_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "ogCd",
						"dataType": "string"
					},
					{
						"name": "ogNm",
						"dataType": "string"
					},
					{
						"name": "blnSaChgChk",
						"dataType": "string"
					},
					{
						"name": "chgDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmInteractiveMsg");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "intStep",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmDateMain");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstAltReEn/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataMap_5, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/StdCsrMstAltReEn/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addRequestData(dataMap_6);
			submission_2.addResponseData(dataMap_6, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subMstAltPopupMnu");
			submission_3.action = "/csr/StdCsrMstAlt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSelCourse");
			submission_4.action = "/csr/StdCsrMstAltReEn/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_5, false);
			submission_4.addResponseData(dataSet_1, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSaCdList");
			submission_5.action = "/csr/StdCsrMstAltReEn/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataSet_5, false);
			submission_5.addResponseData(dataSet_3, false);
			submission_5.addResponseData(dataSet_4, false);
			submission_5.addResponseData(dataSet_2, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subSelCal");
			submission_6.action = "/cmn/StdCmnDateTime/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_7);
			submission_6.addResponseData(dataMap_7, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrShregAltWith");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfSchYearRcdWith");
					output_1.value = "";
					output_1.bind("value").toLanguage("UI-SCR-REMYEAR");
					container.addChild(output_1, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudIdWith");
					inputBox_1.visible = false;
					inputBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "STUD_ID");
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "530px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("iptFrfSerialNoWith");
					inputBox_2.visible = false;
					inputBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "SERIAL_NO");
					container.addChild(inputBox_2, {
						"top": "30px",
						"left": "545px",
						"width": "10px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfAltDtWith");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_2, {
						"top": "30px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfSmtRcdWith");
					output_3.value = "";
					output_3.bind("value").toLanguage("UI-SCR-REMSMT");
					container.addChild(output_3, {
						"top": "5px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfAbsSmtCntRcdWith");
					output_4.value = "";
					output_4.bind("value").toLanguage("UI-SCR-ABSSMSTR");
					container.addChild(output_4, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfAltDivRcdWith");
					inputBox_3.visible = false;
					inputBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "ALT_DIV_RCD");
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "560px",
						"width": "10px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSchYearNmWith");
					output_5.value = "";
					output_5.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "SCH_YEAR_NM");
					container.addChild(output_5, {
						"top": "5px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfAbsSmtCntNmAbs");
					output_6.value = "";
					output_6.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "ALT_RSN_NM");
					container.addChild(output_6, {
						"top": "30px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfSmtNmWith");
					output_7.value = "";
					output_7.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "SMT_NM");
					container.addChild(output_7, {
						"top": "5px",
						"left": "415px",
						"width": "160px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfAltDtWith");
					output_8.value = "";
					output_8.dataType = "date";
					output_8.format = "YYYY-MM-DD";
					output_8.bind("value").toDataMap(app.lookup("dmCsrShregAltWith"), "ALT_DT");
					container.addChild(output_8, {
						"top": "30px",
						"left": "415px",
						"width": "70px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "115px",
					"left": "5px",
					"width": "580px",
					"height": "55px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCsrShregAltWith");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-ABSINFO");
				container.addChild(userDefinedControl_1, {
					"top": "90px",
					"left": "5px",
					"width": "250px",
					"height": "25px"
				});
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdCsrShregAltRe");
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-NEWRTRN");
				container.addChild(userDefinedControl_2, {
					"top": "175px",
					"left": "5px",
					"width": "250px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfCsrShregAltRe");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_9 = new cpr.controls.Output("optFrfSchYearRcdRe");
					output_9.value = "";
					output_9.style.setClasses(["require"]);
					output_9.bind("value").toLanguage("UI-SCR-RENTRYRS");
					container.addChild(output_9, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfSchYearRcdRe");
					comboBox_1.userAttr({"require": "Y"});
					comboBox_1.bind("fieldLabel").toExpression("#optFrfSchYearRcdRe.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "SCH_YEAR_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsSchYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					if(typeof onCbbFrfSchYearRcdReSelectionChange == "function") {
						comboBox_1.addEventListener("selection-change", onCbbFrfSchYearRcdReSelectionChange);
					}
					container.addChild(comboBox_1, {
						"top": "5px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfStudIdRe");
					inputBox_4.visible = false;
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "STUD_ID");
					container.addChild(inputBox_4, {
						"top": "30px",
						"left": "530px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("iptFrfSerialNoRe");
					inputBox_5.visible = false;
					inputBox_5.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "SERIAL_NO");
					container.addChild(inputBox_5, {
						"top": "30px",
						"left": "545px",
						"width": "10px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfAltDtRe");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-SCR-SCHREGCHGDT");
					container.addChild(output_10, {
						"top": "30px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("dipFrfAltDtRe");
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfAltDtRe.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "ALT_DT");
					if(typeof onDipFrfAltDtReValueChange == "function") {
						dateInput_1.addEventListener("value-change", onDipFrfAltDtReValueChange);
					}
					container.addChild(dateInput_1, {
						"top": "30px",
						"left": "415px",
						"width": "90px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfSmtRcdRe");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-SCR-RENTRSMT");
					container.addChild(output_11, {
						"top": "5px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfSmtRcdRe");
					comboBox_2.userAttr({"require": "Y"});
					comboBox_2.bind("fieldLabel").toExpression("#optFrfSmtRcdRe.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "SMT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsSmtList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					if(typeof onCbbFrfSmtRcdReSelectionChange == "function") {
						comboBox_2.addEventListener("selection-change", onCbbFrfSmtRcdReSelectionChange);
					}
					container.addChild(comboBox_2, {
						"top": "5px",
						"left": "415px",
						"width": "160px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfAltRsnRcdRe");
					output_12.value = "";
					output_12.style.setClasses(["require"]);
					output_12.bind("value").toLanguage("UI-SCR-RENTRRSN");
					container.addChild(output_12, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfAltRsnRcdRe");
					comboBox_3.userAttr({"require": "Y"});
					comboBox_3.bind("fieldLabel").toExpression("#optFrfAltRsnRcdRe.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "ALT_RSN_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsRsnList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "30px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfAtlDivRcdRe");
					inputBox_6.visible = false;
					inputBox_6.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "ALT_DIV_RCD");
					container.addChild(inputBox_6, {
						"top": "30px",
						"left": "560px",
						"width": "10px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfRemarkRe");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-GLS-REMARK");
					container.addChild(output_13, {
						"top": "55px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfRemarkRe");
					inputBox_7.maxLength = 300;
					inputBox_7.bind("fieldLabel").toExpression("#optFrfRemarkRe.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmCsrShregAltRe"), "REMARK");
					container.addChild(inputBox_7, {
						"top": "55px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "200px",
					"left": "5px",
					"width": "580px",
					"height": "80px"
				});
				var userDefinedControl_3 = linker.userDefinedControl_3 = new udc.com.comTitle();
				userDefinedControl_3.ctrl = app.lookup("grdCsrEnroll");
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-MAINSCHREGINF");
				container.addChild(userDefinedControl_3, {
					"top": "285px",
					"left": "5px",
					"width": "305px",
					"height": "25px"
				});
				var group_4 = new cpr.controls.Container("frfCsrEnroll");
				group_4.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_5 = new cpr.controls.layouts.XYLayout();
				group_4.setLayout(xYLayout_5);
				(function(container){
					var output_14 = new cpr.controls.Output("optFrfEnrollDivRcdEnr");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-SCR-SCREGDIV");
					container.addChild(output_14, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfEnrollDivRcdEnr");
					comboBox_4.hideButton = true;
					comboBox_4.userAttr({"require": "Y"});
					comboBox_4.bind("fieldLabel").toExpression("#optFrfEnrollDivRcdEnr.value");
					comboBox_4.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "ENROLL_DIV_RCD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsEnrollDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "5px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfStudIdEnr");
					inputBox_8.visible = false;
					inputBox_8.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "STUD_ID");
					container.addChild(inputBox_8, {
						"top": "81px",
						"left": "510px",
						"width": "20px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfStDtEnr");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-EFETSTDT");
					container.addChild(output_15, {
						"top": "80px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfSpDivRcdEnr");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-SCR-SPCORSDIV");
					container.addChild(output_16, {
						"top": "5px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfSpDivRcdEnr");
					comboBox_5.hideButton = true;
					comboBox_5.userAttr({"require": "Y"});
					comboBox_5.bind("fieldLabel").toExpression("#optFrfSpDivRcdEnr.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "SP_DIV_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsSpDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "5px",
						"left": "415px",
						"width": "160px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfSaCdEnr");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-GLS-SA");
					container.addChild(output_17, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfSaCdEnr");
					comboBox_6.userAttr({"require": "Y"});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfSaCdEnr.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "SA_CD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsSaList"), {
							"label": "SA_NM",
							"value": "SA_CD"
						});
					})(comboBox_6);
					if(typeof onCbbFrfSaCdEnrSelectionChange == "function") {
						comboBox_6.addEventListener("selection-change", onCbbFrfSaCdEnrSelectionChange);
					}
					container.addChild(comboBox_6, {
						"top": "30px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfOgCdEnr");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-GLS-OG");
					container.addChild(output_18, {
						"top": "105px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfOgNmEnr");
					inputBox_9.enabled = false;
					inputBox_9.maxLength = 300;
					inputBox_9.bind("fieldLabel").toExpression("#optFrfOgCdEnr.value");
					inputBox_9.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "OG_NM");
					container.addChild(inputBox_9, {
						"top": "105px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfEndDtEnr");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-SCR-EFETEDDT");
					container.addChild(output_19, {
						"top": "80px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfEnrollRsnRcdEnr");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-SCHREGRSN");
					container.addChild(output_20, {
						"top": "55px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfEnrollRsnRcdEnr");
					comboBox_7.userAttr({"require": "Y"});
					comboBox_7.bind("fieldLabel").toExpression("#optFrfEnrollRsnRcdEnr.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "ENROLL_RSN_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsEnrollRsnList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "55px",
						"left": "120px",
						"width": "165px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfSpCdEnr");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-GLS-SP");
					container.addChild(output_21, {
						"top": "30px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfSpCdEnr");
					comboBox_8.userAttr({"require": "Y"});
					comboBox_8.bind("fieldLabel").toExpression("#optFrfSpCdEnr.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "SP_CD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsSpList"), {
							"label": "SHORT_NM",
							"value": "SP_CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "30px",
						"left": "415px",
						"width": "160px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfCurAplyYearRcdEnr");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-SCR-SUBPROGRDYRS");
					container.addChild(output_22, {
						"top": "55px",
						"left": "295px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_9 = new cpr.controls.ComboBox("cbbFrfCurAplyYearRcdEnr");
					comboBox_9.bind("fieldLabel").toExpression("#optFrfCurAplyYearRcdEnr.value");
					comboBox_9.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "CUR_APLY_YEAR_RCD");
					(function(comboBox_9){
						comboBox_9.setItemSet(app.lookup("dsSchYearList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_9);
					if(typeof onCbbFrfCurAplyYearRcdEnrSelectionChange == "function") {
						comboBox_9.addEventListener("selection-change", onCbbFrfCurAplyYearRcdEnrSelectionChange);
					}
					container.addChild(comboBox_9, {
						"top": "55px",
						"left": "415px",
						"width": "160px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("dipFrfStDtEnr");
					dateInput_2.enabled = false;
					dateInput_2.format = "YYYY-MM-DD";
					dateInput_2.bind("fieldLabel").toExpression("#optFrfStDtEnr.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "ST_DT");
					container.addChild(dateInput_2, {
						"top": "80px",
						"left": "120px",
						"width": "70px",
						"height": "25px"
					});
					var dateInput_3 = new cpr.controls.DateInput("dipFrfEndDtEnr");
					dateInput_3.enabled = false;
					dateInput_3.format = "YYYY-MM-DD";
					dateInput_3.bind("fieldLabel").toExpression("#optFrfEndDtEnr.value");
					dateInput_3.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "END_DT");
					container.addChild(dateInput_3, {
						"top": "80px",
						"left": "415px",
						"width": "70px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfOgCdEnr");
					inputBox_10.visible = false;
					inputBox_10.userAttr({"require": "Y"});
					inputBox_10.bind("fieldLabel").toExpression("#optFrfOgCdEnr.value");
					inputBox_10.bind("value").toDataMap(app.lookup("dmCsrEnroll"), "OG_CD");
					container.addChild(inputBox_10, {
						"top": "81px",
						"left": "530px",
						"width": "20px",
						"height": "25px"
					});
				})(group_4);
				container.addChild(group_4, {
					"top": "310px",
					"left": "5px",
					"width": "580px",
					"height": "130px"
				});
				var group_5 = new cpr.controls.Container("frfStudInfo");
				group_5.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_6 = new cpr.controls.layouts.XYLayout();
				group_5.setLayout(xYLayout_6);
				(function(container){
					var output_23 = new cpr.controls.Output("optCourse");
					output_23.value = "";
					output_23.bind("value").toLanguage("UI-GLS-CRS");
					container.addChild(output_23, {
						"top": "55px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("optCourse");
					output_24.value = "";
					output_24.bind("value").toDataMap(app.lookup("dmReqKey"), "strHeaderCourse");
					container.addChild(output_24, {
						"top": "55px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optStud");
					output_25.value = "";
					output_25.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudInfo");
					container.addChild(output_25, {
						"top": "30px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
					var output_26 = new cpr.controls.Output("optStudNm");
					output_26.value = "";
					output_26.bind("value").toLanguage("UI-GLS-PER_NM");
					container.addChild(output_26, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_27 = new cpr.controls.Output("optStudNo");
					output_27.value = "";
					output_27.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_27, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_28 = new cpr.controls.Output("optStudNo");
					output_28.value = "";
					output_28.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
					container.addChild(output_28, {
						"top": "5px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
				})(group_5);
				container.addChild(group_5, {
					"top": "5px",
					"left": "5px",
					"width": "580px",
					"height": "80px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "590px",
				"height": "445px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "485px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_4 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_4, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnSave");
			button_2.value = "";
			button_2.style.setClasses(["btn-save"]);
			button_2.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_2.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_2, {
				"top": "485px",
				"left": "535px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "재입학 신규";
	cpr.core.Platform.INSTANCE.register(app);
})();
