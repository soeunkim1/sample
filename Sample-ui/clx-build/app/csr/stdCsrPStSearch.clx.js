/*
 * App URI: app/csr/stdCsrPStSearch
 * Source Location: app/csr/stdCsrPStSearch.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrPStSearch", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrPStSearch.xtm"/>
			
			
			var stdCsrPStSearch = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				//팝업 오픈시 조회가능여부
				var mbSearchYn = true;
				
				moPage.maSearchMod = ["ipbStudId", "ipbStudNm", "ipbBirthDay", "cbbGenderRcd", "cbbStatus", "cbbProcRsltYear", "cbbSpDnDivRcd", "cbbGenderRcd", "cbbNatRcd", "btnSearch"];
				
				moPObject.moStdCsrPStSearch = {
					// 팝업 작동 내부사용
					controlId 						: "",			//  최초 이벤트의 버튼이나 그리드 id
					openedByChange 			: false,		
					// 선택가능 범위를 제한함.
					strStudId 						: "",			// (필수) 검색조건 학번오브젝트	
					strStudNo 						: "",			// (선택) 검색조건 학번
					strStudNm 					: "",			// (선택) 이름
					strKeyDate 					: "",			// (필수) 기준일 Default: 현재일자 
					strObjDivRcd 					: "",			// (선택) 객체구분코드     // 권한을 미적용받고자 하는 경우, 최상위 행정부서를 파라미터로 설정. 
					strObjCd 						: "",			// (선택) 부서코드			 // 권한을 미적용받고자 하는 경우, 최상위 행정부서를 파라미터로 설정. 
					strObjNm 						: "",			// (선택) 부서 명
					strStatRcd 						: "",			// (선택) 학적상태
					strStudDivRcd				: "",			// (선택) 학생구분
					// 선택열 결과 리턴
					Result : {
						strStudId 					: "",			// 학번오브젝트
						strStudNo 					: "",			// 학번
						strStudNm 				: "",			// 이름
						strStatNm 					: "",			// 학적상태명
						strStatRcd 					: "",			// 학적상태코드
						strProcRslt 				: "",			// 진급학기
						strProcRsltYear 			: "",			// 진급학년
						strSaNm 					: "",			// 학사부서코드명
						strSaCd 					: "",			// 학사부서명
						strSpNm 					: "",			// 이수과정코드명
						strSpCd 					: "",			// 이수과정명
						strOgNm 					: "",			// 행정부서코드명
						strOgCd 					: "",			// 행정부서명
						strStudDivRcd			: "",			// 학생구분코드
						strStudDivNm				: "",			// 학생구분명
						strBirthday					: "",			// 생년월일
						strGenderRcd				: "",			// 성별코드
						strGenderNm				: ""			// 성별명
					}
				};
				
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항	
				 * 학생검색의 경우, 학사부서만을 검색조건으로 설정하고, 해당하는 학사부서를 학생검색팝업 호출시 설정할 수 없다. (2016.3.21) 
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *     10. iKeyEndDate  : 기준종료일  --- 행정부서를 필터하는 용도로 사용하므로 학생검색에서는 사용하지 않음. 
				 *  	11. oObjDivRcd 	: 객체구분코드 
				 *  	12. oCd 			: 부서코드
				 *  	13. oCdNm 		: 부서명
				 *  	14. oBegDt 		: 시작일
				 *  	15. oEndDt 		: 종료일
				 *  	16. oLanDivRcd 	: 언어키
				 *  	17. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{   //학생검색 조회조건 학사부서
						controlId			:	"btnPopSearch",
						iCd					:	"",
						iNm					:	"ipbSaNm",
						iObjDivRcd			:	["CC009SA"],
						iStartObject    	:   "",
						iOtDivRcd			:	"",
						iOtIsTreeView	:	"Y",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqKey/strKeyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"/root/reqKey/strSaObjDivRcd",
						oCd					:	"/root/reqKey/strSaCd",
						oCdNm				:	"ipbSaNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					:  
								function(){
									//팝업끝난후  후처리가 필요할때 입력 
									var vsObjCd = util.DataMap.getValue(app, "dmReqKey", "strSaCd");
									if(!ValueUtil.isNull(vsObjCd) && !mbSearchYn) {
										mbSearchYn = true;
										util.Header.clickSearch(app);
									}
								}
					}
				];
			
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 01. 12.
				 */
				moPage.onModelConstructDone_StdCsrPStSearch = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCsrShreg"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grp_rptCsrShreg"]);
					//호출한 페이지에서 파라미터 받기.
					doParentGet();
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				/**
				 * @desc 부모창에서 보낸 변수 받기
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doParentGet() {
					if(ExtPopUp.isPopUp()) {
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCsrPStSearch =  ExtPopUp.getParentVal("moStdCsrPStSearch");
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCsrPStSearch) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moPObject.moStdCsrPStSearch [key] = voStdCsrPStSearch [key];
						}
						// 팝업이 뜬후에는 false로 고침.
						voStdCsrPStSearch.openedByChange = false;
					}
				}
				
				/**
				 * @desc 받아온 변수 조회조건에 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doOnLoad() {
					
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moPObject.moStdCsrPStSearch;
					
					if (!ValueUtil.isNull(voParam.strStudNo)) {
						//넘어온 학번 세팅
						util.Control.setValue(app, "ipbStudId", voParam.strStudNo);
					}
					
					if (!ValueUtil.isNull(voParam.strStudNm)) {
						util.Control.setValue(app, "ipbStudNm", voParam.strStudNm);
					}
					
					if (!ValueUtil.isNull(voParam.strStudId)) {
						util.DataMap.setValue(app, "dmReqKey", "strStudId", voParam.strStudId);
					}
					
					if (!ValueUtil.isNull(voParam.strKeyDate)) {
						util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
					}
					
					if(!ValueUtil.isNull(voParam.strObjDivRcd)) {
						util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", voParam.strObjDivRcd);
					}
					
					
					if(!ValueUtil.isNull(voParam.strStatRcd)) {
						util.DataMap.setValue(app, "dmReqKey", "strStatus", voParam.strStatRcd);
					}
					
					if(!ValueUtil.isNull(voParam.strStudDivRcd)) {
						util.DataMap.setValue(app, "dmReqKey", "strStudDivRcd", voParam.strStudDivRcd);
					}
					
					if (!ValueUtil.isNull(voParam.strObjCd)&&!ValueUtil.isNull(voParam.strObjDivRcd)) {
						
						util.DataMap.setValue(app, "dmReqKey", "strObjCd", voParam.strObjCd);
						util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", voParam.strObjDivRcd);
						
						moPObject.moIdsForStdCmnPObjSch[0].iStartObject = voParam.strObjDivRcd +  voParam.strObjCd;
					}
					
					if (!ValueUtil.isNull(voParam.strObjCd)&&!ValueUtil.isNull(voParam.strObjNm)) {
						util.DataMap.setValue(app, "dmReqKey", "strSaCd", voParam.strObjCd);
						util.Control.setValue(app, "ipbSaNm", voParam.strObjNm);
						util.Control.setValue(app, "ipbSaCd", voParam.strObjCd);
			
						util.Control.setEnable(app, false, ["ipbSaNm", "btnPopSearch"]);
					} else {
						if(!ValueUtil.isNull(voParam.strObjCd)){
							//mbSearchYn = false;
							util.Control.setValue(app, "ipbSaCd", voParam.strObjCd);
							//ExtModel.dispatch("ipbSaCd", "xforms-value-changed");
						} else if(!ValueUtil.isNull(voParam.strObjNm)){
							//mbSearchYn = false;
							util.Control.setValue(app, "ipbSaNm", voParam.strObjNm);
							//ExtModel.dispatch("ipbSaNm", "xforms-value-changed");
						}
						// 학사부서가 지정되지 않은 경우 학사부서 변경이 가능하도록 풀어줌.
						util.Control.setEnable(app, true, ["ipbSaNm", "btnPopSearch"]);
						moPage.maSearchMod.push("ipbSaNm");
						moPage.maSearchMod.push("btnPopSearch");							
					}
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if (pbSuccess) {				
							util.Control.redraw(app, ["cbbStatus", "cbbGenderRcd", "cbbStudDivRcd"]);
							
							if (!ValueUtil.isNull(voParam.strStatRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strStatus", voParam.strStatRcd);
							}
							
							if (!ValueUtil.isNull(voParam.strStudDivRcd)) {
								util.DataMap.setValue(app, "dmReqKey", "strStudDivRcd", voParam.strStudDivRcd);
							}
							
							// 학번이 입력되어 있는 경우 바로 검색 실행
							if ((voParam.strStudNo || voParam.strStudNm) && mbSearchYn) {
								util.Header.clickSearch(app);
							}
						}
					});
				}
				
				/**
				 * @desc 조회조건 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doSearchChk() {
					var vsStudNo = util.Control.getValue(app, "ipbStudId");		//학번
					var vsStudNm = util.Control.getValue(app, "ipbStudNm");	//이름
					var vsBirthDay = util.Control.getValue(app, "ipbBirthDay");	//생년월일
					var vsSaNm = util.Control.getValue(app, "ipbSaNm"); //학사부서
					
					if (ValueUtil.isNull(vsStudNo) && ValueUtil.isNull(vsStudNm) 
					 && ValueUtil.isNull(vsBirthDay) && ValueUtil.isNull(vsSaNm)) {
						 
						util.Msg.alert("NLS-CSR-M057"); // 학번, 이름, 생년월일, 학사부서 중 1가지는 필수 입력해야 합니다.
						return false;
					}
					return true;
				}
				
				/**
				 * @desc 학생 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doList() {
						if(ValueUtil.isNull(moPageInfo)) return;
								
						util.DataMap.setValue(app, "dmReqKey", "authRngRcd"  , moPageInfo.authRngRcd );	//사용자 권한
						util.DataMap.setValue(app, "dmReqKey", "strOprtRoleId" , moPageInfo.oprt_role_id  );	//사용자 역할ID
						
						//strCommand: list 
						util.Submit.send(app, "subList", function(pbSuccess){
							if (pbSuccess) {
								util.Control.redraw(app, "grdCsrShreg");
														
								var vnCnt = util.Grid.getRowCount(app, "grdCsrShreg");
								if(vnCnt == 0)	util.Msg.notify(app, "NLS.WRN.M005"); // 조회된 내역이 없습니다.
								else util.Msg.notify(app, "NLS.INF.M024"); // 조회되었습니다.
								
							}
							
						});
				}
				
				/**
				 * @desc 조회 버튼 클릭
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				moPage.onClick_BtnSearch = function() {
					if(!doSearchChk()){
						return false;
					}
					
					doList();
				};
				
				/**
				 * @desc 선택 행의 학생 정보 반환
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				moPage.onRowDoubleClick_RptCsrShreg = function() {
					doCloseOk();
				};
				
				/**
				 * @desc 객체검색 팝업 호출
				 * @param {?} sender 버튼의 컨트롤
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				moPage.onClick_BtnPopSearch = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학번 수정 후 엔터 시 조회
				 * @param {?} strKeyType 
				 * @param {?} strKeyStatus 
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				moPage.onKeyDown_IpbStudId = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc 이름 수정 후 엔터 시 조회
				 * @param {?} strKeyType 
				 * @param {?} strKeyStatus 
				 * @return void
				 * @author Choi In Seong 2016. 01. 12.
				 */
				moPage.onKeyDown_IpbStudNm = function(strKeyType, strKeyStatus) {
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
				
				/**
				 * @desc 학생정보 반환 이벤트
				 * @param 
				 * @return boolean 데이터 존재 여부
				 * @author Choi In Seong 2016. 01. 12.
				 */
				function doCloseOk() {
					// 선택된 데이터가 없을 시 
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCsrShreg"))){
						util.Msg.alert("NLS-WRN-M008"); //선택된 데이터가 없습니다.
						return false;
					}
					//선택된 행
					var vnIdx = util.Grid.getIndex(app, "grdCsrShreg");;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCsrShreg");
			dataSet_1.parseData({
				"columns": [
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "STUD_ID"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "OG_CD"},
					{"name": "OG_NM"},
					{"name": "SP_CD"},
					{"name": "SP_NM"},
					{"name": "STAT_RCD"},
					{"name": "STAT_NM"},
					{"name": "STUD_DIV_RCD"},
					{"name": "STUD_DIV_NM"},
					{"name": "PROC_RSLT"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "BIRTHDAY"},
					{"name": "BIRTHDAY_DISP"},
					{"name": "BANK_RCD"},
					{"name": "BANK_NM"},
					{"name": "OWNER_NM"},
					{"name": "GENDER_RCD"},
					{"name": "GENDER_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsStatusList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsGenderRcdList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsStudDivRcdList");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSaNm",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strObjCd",
						"dataType": "string"
					},
					{
						"name": "strStudNm",
						"dataType": "string"
					},
					{
						"name": "strSaCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strSaCdList",
						"dataType": "string"
					},
					{
						"name": "strStatus",
						"dataType": "string"
					},
					{
						"name": "strAuthYN",
						"dataType": "string"
					},
					{
						"name": "strGenderRcd",
						"dataType": "string"
					},
					{
						"name": "strBirthDay",
						"dataType": "string"
					},
					{
						"name": "strStudDivRcd",
						"dataType": "string"
					},
					{
						"name": "strObjNm",
						"dataType": "string"
					},
					{
						"name": "authRngRcd",
						"dataType": "string"
					},
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strProcRsltYear",
						"dataType": "string"
					},
					{
						"name": "strSaObjDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrStSearch/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrStSearch/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_rptCsrShreg");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var grid_1 = new cpr.controls.Grid("grdCsrShreg");
				grid_1.init({
					"dataSet": app.lookup("dsCsrShreg"),
					"columns": [
						{"width": "80px"},
						{"width": "85px"},
						{"width": "180px"},
						{"width": "180px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "50px"},
						{"width": "50px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-PER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SA");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-BIRTHDAY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-GENDER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "BIRTHDAY";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("rbBirthDay");
										output_1.style.css({
											"text-align" : "center"
										});
										output_1.bind("value").toDataColumn("BIRTHDAY");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "GENDER_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdCsrShregRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdCsrShregRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "780px",
					"height": "338px"
				});
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.ctrl = app.lookup("grdCmnUseUser");
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-STUDTINFO");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "215px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "97px",
				"left": "5px",
				"width": "790px",
				"height": "373px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseCancel");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_1.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_1, {
				"top": "474px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseOk");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_2.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_2, {
				"top": "475px",
				"left": "735px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_2 = new cpr.controls.Output("optStudId");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-STUD_ID");
				container.addChild(output_2, {
					"top": "5px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbStudId");
				inputBox_1.bind("fieldLabel").toExpression("#optStudId.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
				if(typeof onIpbStudIdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbStudIdKeydown);
				}
				if(typeof onIpbStudIdValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbStudIdValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "70px",
					"width": "105px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optStudNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-PER_NM");
				container.addChild(output_3, {
					"top": "5px",
					"left": "185px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbStudNm");
				inputBox_2.bind("fieldLabel").toExpression("#optStudNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNm");
				if(typeof onIpbStudNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbStudNmKeydown);
				}
				if(typeof onIpbStudNmValueChange == "function") {
					inputBox_2.addEventListener("value-change", onIpbStudNmValueChange);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "250px",
					"width": "105px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optBirthDay");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-BIRTHDAY");
				container.addChild(output_4, {
					"top": "5px",
					"left": "365px",
					"width": "60px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optStatus");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-SCHREGST");
				container.addChild(output_5, {
					"top": "30px",
					"left": "5px",
					"width": "60px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optSaNm");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-GLS-SA");
				container.addChild(output_6, {
					"top": "5px",
					"left": "530px",
					"width": "60px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbSaNm");
				inputBox_3.bind("fieldLabel").toExpression("#optSaNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strObjNm");
				if(typeof onIpbSaNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbSaNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "595px",
					"width": "130px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "725px",
					"width": "60px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbStatus");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strStatus");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsStatusList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "30px",
					"left": "70px",
					"width": "105px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("ipbBirthDay");
				dateInput_1.bind("fieldLabel").toExpression("#optBirthDay.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strBirthDay");
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "430px",
					"width": "90px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optGenderRcd");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-GLS-GENDER");
				container.addChild(output_7, {
					"top": "30px",
					"left": "365px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnPopSearch");
				button_4.value = "";
				button_4.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnPopSearchClick == "function") {
					button_4.addEventListener("click", onBtnPopSearchClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "726px",
					"width": "20px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optStudDivRcd");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-STDDIS");
				container.addChild(output_8, {
					"top": "30px",
					"left": "185px",
					"width": "60px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbStudDivRcd");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudDivRcd");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsStudDivRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "30px",
					"left": "250px",
					"width": "105px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbGenderRcd");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optGenderRcd.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strGenderRcd");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsGenderRcdList"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "430px",
					"width": "90px",
					"height": "25px"
				});
				var output_9 = new cpr.controls.Output("optProcRsltYear");
				output_9.value = "";
				output_9.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_9, {
					"top": "30px",
					"left": "530px",
					"width": "60px",
					"height": "25px"
				});
				var numberEditor_1 = new cpr.controls.NumberEditor("ipbProcRsltYear");
				numberEditor_1.format = "9";
				numberEditor_1.bind("fieldLabel").toExpression("#optProcRsltYear.value");
				numberEditor_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcRsltYear");
				if(typeof onIpbProcRsltYearKeydown == "function") {
					numberEditor_1.addEventListener("keydown", onIpbProcRsltYearKeydown);
				}
				container.addChild(numberEditor_1, {
					"top": "30px",
					"left": "595px",
					"width": "45px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbSaCd");
				inputBox_4.visible = false;
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strSaCd");
				if(typeof onIpbSaCdValueChange == "function") {
					inputBox_4.addEventListener("value-change", onIpbSaCdValueChange);
				}
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "745px",
					"width": "15px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "790px",
				"height": "57px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			if(typeof onEmaStdCmnPobjSchAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaStdCmnPobjSchAppReady);
			}
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "475px",
				"left": "95px",
				"width": "50px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "학생검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
