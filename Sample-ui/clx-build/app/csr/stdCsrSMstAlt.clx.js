/*
 * App URI: app/csr/stdCsrSMstAlt
 * Source Location: app/csr/stdCsrSMstAlt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrSMstAlt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			///<xtmlink path="./stdCsrSMstAlt.xtm"/>
			
			var stdCsrSMstAlt = function() {
				
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
			
				var msStudId = "";
				var msStudNo = "";
				
				//등록 popUp에 학년도 Text,학기Text,학적등록구분Text,이수과정구분Text,이수과정text,학적등록사유Text 추가해서 넘겨줌 
				//등록 popUp에 넘겨줄 값 
				moPObject.moAltObj = {
					studId				: "", 		//학적사항관리 창의 조회된 학번값		
					headerStud		: "", 		//학적사항관리 창의 헤더정보(학생) 
					headerCourse	: "", 		//
					headerDept		: "",		//
					headerRemark	: "", 		//
					studNo	 			: "", 		//학번
					year 					: "", 		//년도
					smt 					: "", 		//학기
					stDt 					: "", 		//시작일자
					endDt 				: "", 		//종료일자
					keyDate	 			: "",		//기준일자
					altPsn				: ""		//
				};
				
				/**
				 * 부모 페이지에서 받아온 휴학 사유 리스트
				 */	
				moPObject.moAltAbs = {
					absPossibleList	: ""
				};
				
				/**
				 * 사용처 : 상세팝업 .
				 */
				moPObject.moDtl = {
					studId 				: "",
					refKey 				: "",
					altDivNm 			: "",
					stDt 					: "",
					serialNo 			: "",
					endDt 				: "",
					schYearNm 		: "",
					smtNm 				: "",
					altRsnDivNm 		: "",
					altRsnNm 			: "",
					altDt 					: "",
					cancelDt 			: "",
					cancelRsnNm 	: "",
					absSmtCntNm 	: "",
					cstDt 				: "",
					chgDesc 			: "",
					chgBefDesc 		: "",
					remark 				: "",
					befEndDt 			: "",
					altDivRcd 			: ""
				};
				
				moPage.onLoadImportDone_ImpSbpHeader = function() {
					doSbpHeaderOnLoad();
				};
			
							
				/**
				 * @desc 화면 온로드
				 * @return 
				 * @author Choi In Seong 2016.02.11
				 */
				moPage.onModelConstructDone_stdCsrSMstAlt = function() {
				
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptCsrShregAlt");
			
					// 부모멤버변수에담긴학번받음
					msStudId = moPage.parent.moParentObj.studId;
					msStudNo = moPage.parent.moParentObj.studNo;
					util.DataMap.setValue(app, "dmReqKey", "stdPgmNm", moPage.parent.moParentObj.subPageId);
					
					moPObject.moAltObj.studId 		= msStudId;
					moPObject.moAltObj.studNo 		= msStudNo; // STUD_ID -> STUD_NO로 변경되면서 추가된 부분 (정정호 2011.08.05)
					moPObject.moAltObj.headerStud 	= moPage.parent.moParentObj.headerStud;
					
					doList(function(pbSuccess) {
						// 조회 : "조회되었습니다." header 메세지 표시
						if(pbSuccess) {
							moPage.parentSendMsg("lblTitleRptCsrShregAlt", NLS.INF.M024);
						}
					});
				};
				
				/**
				 * @desc 학적변동 정보 조회
				 * @param poCallBackFunc 콜백 함수
				 * @return void
				 * @author Choi In Seong 2016.02.11
				 */
				function doList(poCallBackFunc) {
					
					var vsCancelCkbVal= "N";
					var vsCancelCkbCtlVal = util.Control.getValue(app, "ckbCancel");
					if (vsCancelCkbCtlVal == "Y") vsCancelCkbVal = "Y";
					
					util.DataMap.setValue(app, "dmReqKey", "strCancelCkbVal", vsCancelCkbVal);
					util.DataMap.setValue(app, "dmReqKey", "strStudId", msStudId);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
							if (pbSuccess) {
								util.Control.redraw(app, "grdCsrShregAlt");
								util.Control.redraw(app, "lblRowCnt_rptCsrShregAlt");
								// main으로부터 학생정보 받아옴
								// default(관련 테이블: cmn_conf_code) 학년도, 학기값을 세팅해놓음(팝업 화면에서 공통적으로 사용됨)
								moPObject.moAltObj.year  				= util.DataMap.getValue(app, "dmResCurrentDate", "year");
								moPObject.moAltObj.smt   				= util.DataMap.getValue(app, "dmResCurrentDate", "smt");
								moPObject.moAltObj.stDt 				= util.DataMap.getValue(app, "dmResCurrentDate", "stDt");
								moPObject.moAltObj.endDt 				= util.DataMap.getValue(app, "dmResCurrentDate", "endDt");
								moPObject.moAltObj.studId 			= moPage.parent.moParentObj.studId;
								moPObject.moAltObj.studNo 			= moPage.parent.moParentObj.studNo;
								moPObject.moAltObj.headerStud   	= moPage.parent.moParentObj.headerStud;
								moPObject.moAltObj.headerCourse	= moPage.parent.moParentObj.headerCourse;
								moPObject.moAltObj.headerDept   	= moPage.parent.moParentObj.headerDept;
								moPObject.moAltObj.headerRemark	= moPage.parent.moParentObj.headerRemark;
								moPObject.moAltObj.keyDate      	= moPage.parent.moParentObj.keyDate;
							}
							if(util.isFunc(poCallBackFunc))	poCallBackFunc(pbSuccess);
						}
					);
				};
			
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.parentSendMsg = function(psCtrlId, psMsgCodeNm) {
					var vsMsg = ExtControl.getTextValue(psCtrlId);
					vsMsg     = "[" + vsMsg + "]";
				
					util.Msg.notify(app, vsMsg + psMsgCodeNm);	
				};
				
				/**
				 * @desc 선택한 팝업호출
				 * @param psSelectId 팝업ID
				 * @param psWidth 팝업 넓이
				 * @param psHeight 팝업 높이
				 * @param psType 신규 취소 구분
				 * @param poCallBackFunc 콜백
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				function doOpenPopupByMstAlt (psSelectId, psWidth, psHeight, psType, poCallBackFunc){
					util.DataMap.setValue(app, "dmReqKey", "strPopTarget", psSelectId);
					// 팝업창을 호출할 때 상태값에 따라 팝업창이 오픈이 가능한지 체크
					//strCommand: popupMnu 
					util.Submit.send(app, "subPopupMnu", function(pbSuccess) { 
							if (pbSuccess) {
								// 학적변동시 이전데이터 존재여부 체크
									//strCommand: befDataChk 
									util.Submit.send(app, "subBefDataChk", function(pbCnlSuccess) {
										if (pbCnlSuccess) {
											ExtPopUp.openLayeredPopup("/xtm/csr/"+ psSelectId +".xtm", psWidth, psHeight);
										}
										if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbCnlSuccess);
									});
							}
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					);
				};
				
				/**
				 * @desc 선택한 팝업호출
				 * @param psSelectId 팝업ID
				 * @param psSelectNm 팝업명
				 * @param psType 신규 취소 여부
				 * @param poCallBackFunc 콜백
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.getSbpPerssion = function(psSelectId, psSelectNm, psType) {
					
					switch (psSelectId) {
						case "extCsrPMstAltAbs" : {
							// 1. 신규[휴학]
							var voCallBackByAbs = function(pbSuccess) {
								if (pbSuccess) {
									var vaAbsPossibleList = [];
									var vnRowCnt = util.DataSet.getRowCount(app, "dsAbsPossibleList");
									for (var i = 0; i < vnRowCnt; i++) {
										var voAbsPossibleRow = new Object();
										voAbsPossibleRow.CD = util.DataSet.getValue(app, "dsAbsPossibleList", "CD", i);
										voAbsPossibleRow.CD_NM = util.DataSet.getValue(app, "dsAbsPossibleList", "CD_NM", i);
										vaAbsPossibleList [i] = voAbsPossibleRow;
									}
									moPObject.moAltAbs.absPossibleList = vaAbsPossibleList;
								}
							};
							// 팝업호출
							doOpenPopupByMstAlt(psSelectId, 600, 365, psType, voCallBackByAbs);
							break;
						}
						
						case "stdCsrPCnlAltAbs" : {
							// 2. 취소(휴학)
							doOpenPopupByMstAlt(psSelectId, 600, 290, psType);
							break;
						}
						
						case "stdCsrPMstAltRtn" : {
							// 3. 신규(복학)
							doOpenPopupByMstAlt(psSelectId, 600, 587, psType);
							break;
						}
						
						case "stdCsrPCnlAltRtn" : {
							// 4. 취소(복학)
							doOpenPopupByMstAlt(psSelectId, 600, 560, psType);
							break;
						}
						
						case "extCsrPMstAltWith" : {
							// 5. 신규(제적)
							doOpenPopupByMstAlt(psSelectId, 600, 525, psType);
							break;
						}
						
						case "stdCsrPCnlAltWith" : {
							// 6. 취소(제적)
							doOpenPopupByMstAlt(psSelectId, 600, 265, psType);
							break;
						}
						
						case "stdCsrPMstAltReEn" : {
							// 7. 신규(재입학)
							doOpenPopupByMstAlt(psSelectId, 600, 510, psType);
							break;
						}
						
						case "stdCsrPCnlAltReEn" : {
							// 8. 취소(재입학)
							doOpenPopupByMstAlt(psSelectId, 600, 510, psType);
							break;
						}
						
						case "stdCsrPMstAltPsn" : {
							if(psType == "New") {
								// 9. 신규(인적사항변경)
								moPObject.moAltObj.altPsn = true;
								ExtPopUp.openLayeredPopup("/xtm/csr/" + psSelectId + ".xtm", 600, 350);
							}else if(psType == "Cnl") {
								// 10. 취소(인적사항변경)
								moPObject.moAltObj.altPsn = false;	
								//취소 데이터 존재 여부 체크
								util.DataMap.setValue(app, "dmReqKey", "strPopTarget", psSelectId);
								//strCommand: befDataChk 
								util.Submit.send(app, "subBefDataChk", function(pbCnlSuccess) { 
									if (pbCnlSuccess) {
										ExtPopUp.openLayeredPopup("/xtm/csr/" + psSelectId + ".xtm", 600, 350);
									}
								});
							}
							
							break;
						}
						
					}
					return false; 
					
				};
				
				/**
				 * @desc 작업저장
				 * @param poCallbackFunc 콜백함수
				 * @return Boolean
				 * @author Choi In Seong 2016. 2. 1
				 */
				function doSubSave(poCallbackFunc) {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCsrShregAlt"], "MSG")){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, "grdCsrShregAlt")){
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccessSave) {
							if(pbSuccessSave) {
								var voCallBackSaveAfter = function(pbSuccessAfter) {
									if(pbSuccessAfter) {
										moPage.parentSendMsg("lblTitleRptCsrShregAlt",NLS.INF.M025);
									}
									if(util.isFunc(poCallbackFunc))	poCallbackFunc(pbSuccessAfter);
								};
								ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
							}
						}
					);
				};
				
				/**
				 * @desc 리피트 변경여부 반환
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 1. 25
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdCsrShregAlt"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
			
				/**
				 * @desc 학적변동정보 조회
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.onValueChanged_CkbCancel = function() {
					
					var vsCancelCkbVal= "N";
					var vsCancelCkbCtlVal = util.Control.getValue(app, "ckbCancel");
					if (vsCancelCkbCtlVal == "Y") vsCancelCkbVal = "Y";
					
					util.DataMap.setValue(app, "dmReqKey", "strCancelCkbVal", vsCancelCkbVal);
					util.DataMap.setValue(app, "dmReqKey", "strStudId", msStudId);
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, "grdCsrShregAlt");
							util.Control.redraw(app, "lblRowCnt_rptCsrShregAlt");
							moPage.parentSendMsg("lblTitleRptCsrShregAlt", NLS.INF.M024);
						}
					});
				};
			
				/**
				 * @desc 신규 컨텍스트메뉴 보이기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.onClick_BtnNew = function() {
					var vnNewCnt = util.DataSet.getRowCount(app, "dsConMenuNewList");
					var vsCdPrp1 = "";
					var vsCdNm = "";
					//contextMenu 초기화
					ExtModel.removeContextAll();
					//contextMenu 목록 셋팅
					for(var i = 1 ; i <= vnNewCnt ; i++){
						vsCdPrp1 = util.DataSet.getValue(app, "dsConMenuNewList", "CD_PRP1", i);
						vsCdNm = util.DataSet.getValue(app, "dsConMenuNewList", "CD_NM", i);
						ExtModel.addContextMenu(i, vsCdNm, "getSbpPerssion('" + vsCdPrp1 + "','" + vsCdNm +"', 'New')");
					}
					//contextMenu 오픈 위치 셋팅
					var vnLeft = Number(util.Control.getStyleAttr(app, "btnNew", "left"));
					var vnHeight = Number(ValidUtil.excNumHyphen(util.Control.getStyleAttr(app, "btnNew", "height")));
					var vnTop = Number(util.Control.getStyleAttr(app, "btnNew", "top"));
					var vnBottom = vnHeight + vnTop;
					
					ExtModel.popContextMenu(vnLeft, vnBottom);
				};
				
				/**
				 * @desc 삭제 컨텍스트메뉴 보이기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.onClick_BtnCancel = function() {
					var vnNewCnt = util.DataSet.getRowCount(app, "dsConMenuDelList");
					var vsCdPrp2 = "";
					var vsCdNm = "";
					//contextMenu 초기화
					ExtModel.removeContextAll();
					//contextMenu 목록 셋팅
					for(var i = 1 ; i <= vnNewCnt ; i++){
						vsCdPrp2 = util.DataSet.getValue(app, "dsConMenuDelList", "CD_PRP2", i);
						vsCdNm = util.DataSet.getValue(app, "dsConMenuDelList", "CD_NM", i);
						
						ExtModel.addContextMenu(i, vsCdNm, "getSbpPerssion('" + vsCdPrp2 + "','" + vsCdNm +"', 'Cnl')");
					}
					//contextMenu 오픈 위치 셋팅
					var vnLeft = Number(util.Control.getStyleAttr(app, "btnNew", "left"));
					var vnHeight = Number(ValidUtil.excNumHyphen(util.Control.getStyleAttr(app, "btnNew", "height")));
					var vnTop = Number(util.Control.getStyleAttr(app, "btnNew", "top"));
					var vnBottom = vnHeight + vnTop;
					
					ExtModel.popContextMenu(vnLeft, vnBottom);
				};
				
				/**
				 * @desc 팝업이 닫이면서 조회 실행
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 2. 11
				 */
				function doPopCallList() {
					var voCallBackSaveAfter = function(pbSuccessAfter) {
						if(pbSuccessAfter) {
							moPage.parentSendMsg("lblTitleRptCsrShregAlt",NLS.INF.M025);
						}
					};
					ExtSubPage.getParent().callScript("doSaveAfter", voCallBackSaveAfter);
				};
				
				/**
				 * @desc 학적변동정보 상세내역 팝업 호출
				 * @param 
				 * @return boolean 변경여부
				 * @author Choi In Seong 2016. 2. 11
				 */
				moPage.onRowDoubleClick_RptCsrShregAlt = function() {
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdCsrShregAlt"))){
						// 선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					} else {
						moPObject.moDtl.studId      		= util.Grid.getCellValue(app, "grdCsrShregAlt", "STUD_ID");
						moPObject.moDtl.refKey      		= util.Grid.getCellValue(app, "grdCsrShregAlt", "REF_KEY");
						moPObject.moDtl.serialNo    		= util.Grid.getCellValue(app, "grdCsrShregAlt", "SERIAL_NO");
						moPObject.moDtl.altDivNm    		= util.Grid.getCellValue(app, "grdCsrShregAlt", "ALT_DIV_NM");
						
						moPObject.moDtl.schYearNm		= util.Grid.getCellValue(app, "grdCsrShregAlt", "SCH_YEAR_NM");
						moPObject.moDtl.smtNm       		= util.Grid.getCellValue(app, "grdCsrShregAlt", "SMT_NM");
						moPObject.moDtl.absSmtCntNm	= util.Grid.getCellValue(app, "grdCsrShregAlt", "ABS_SMT_CNT_NM");
						moPObject.moDtl.altRsnDivNm 	= util.Grid.getCellValue(app, "grdCsrShregAlt", "ALT_RSN_DIV_NM");
						moPObject.moDtl.altRsnNm    		= util.Grid.getCellValue(app, "grdCsrShregAlt", "ALT_RSN_NM");
						moPObject.moDtl.altDt       			= util.Grid.getCellValue(app, "grdCsrShregAlt", "ALT_DT");
						moPObject.moDtl.cancelDt    		= util.Grid.getCellValue(app, "grdCsrShregAlt", "CANCEL_DT");
						moPObject.moDtl.cancelRsnNm 	= util.Grid.getCellValue(app, "grdCsrShregAlt", "CANCEL_RSN_NM");
						moPObject.moDtl.cstDt       		= util.Grid.getCellValue(app, "grdCsrShregAlt", "CST_DT");
						moPObject.moDtl.chgBefDesc		= util.Grid.getCellValue(app, "grdCsrShregAlt", "CHG_BEF_DESC");
						moPObject.moDtl.chgDesc   		= util.Grid.getCellValue(app, "grdCsrShregAlt", "CHG_DESC");
						moPObject.moDtl.remark      		= util.Grid.getCellValue(app, "grdCsrShregAlt", "REMARK");
						moPObject.moDtl.altDivRcd   		= util.Grid.getCellValue(app, "grdCsrShregAlt", "ALT_DIV_RCD");
			
						ExtPopUp.openLayeredPopup("/xtm/csr/stdCsrPMstShregAltDetail.xtm", 600, 540);	
					}
				};
				
				
				moPage.onClick_BtnSave = function() {
					doSubSave();
				}
				
				
				
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdCsrShregAlt");
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsConMenuNewList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD_PRP1"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsConMenuDelList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD_PRP2"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsAbsSmtCntList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsCsrShregAlt");
			dataSet_4.parseData({
				"info": "CSR_SHREG_ALT@STUD_ID,ALT_DIV_RCD,SERIAL_NO",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "ALT_DIV_RCD"},
					{"name": "ALT_DIV_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SCH_YEAR_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "ALT_RSN_DIV_RCD"},
					{"name": "ALT_RSN_DIV_NM"},
					{"name": "ALT_RSN_RCD"},
					{"name": "ALT_RSN_NM"},
					{"name": "ALT_DT"},
					{"name": "CANCEL_DT"},
					{"name": "CANCEL_RSN_RCD"},
					{"name": "CANCEL_RSN_NM"},
					{"name": "ABS_SMT_CNT_RCD"},
					{"name": "ABS_SMT_CNT_NM"},
					{"name": "BEF_ABS_SMT_CNT_RCD"},
					{"name": "CST_DT"},
					{"name": "REF_KEY"},
					{"name": "UREF_KEY"},
					{"name": "CHG_DESC"},
					{"name": "CHG_BEF_DESC"},
					{"name": "ENROLL_SHREG_KEY"},
					{"name": "REMARK"},
					{"name": "CHG_DESC_DISP"},
					{"name": "CHG_BEF_DESC_DISP"},
					{"name": "SERIAL_NO"},
					{"name": "RTN_PLAN_DT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsAbsPossibleList");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strCancelCkbVal",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strPopTarget",
						"dataType": "string"
					},
					{
						"name": "stdPgmNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqSbp");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "checkPgmId",
						"dataType": "string"
					},
					{
						"name": "checkMenuNm",
						"dataType": "string"
					},
					{
						"name": "checkUserId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResList");
			dataMap_3.parseData({
				"columns" : [{
					"name": "subPageNm",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResCurrentDate");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "stDt",
						"dataType": "string"
					},
					{
						"name": "endDt",
						"dataType": "string"
					},
					{
						"name": "year",
						"dataType": "string"
					},
					{
						"name": "smt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrMstAlt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_4, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/csr/StdCsrMstAlt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/csr/StdCsrMstAlt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			submission_3.addResponseData(dataSet_4, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subPopupMnu");
			submission_4.action = "/csr/StdCsrMstAlt/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subBefDataChk");
			submission_5.action = "/csr/StdCsrMstAlt/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-SCHREGCHGINF");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEWTRIAN");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "725px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnNewCancel");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-CANCELTRI");
				if(typeof onBtnNewCancelClick == "function") {
					button_2.addEventListener("click", onBtnNewCancelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "790px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCsrShregAlt");
				grid_1.init({
					"dataSet": app.lookup("dsCsrShregAlt"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "95px"},
						{"width": "80px"},
						{"width": "75px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "130px"},
						{"width": "80px"},
						{"width": "103px"},
						{"width": "159px"},
						{"width": "165px"},
						{"width": "165px"},
						{"width": "80px"},
						{"width": "80px"},
						{
							"width": "90px",
							"visible": false
						},
						{
							"width": "195px",
							"visible": false
						},
						{
							"width": "103px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "165px",
							"visible": false
						},
						{
							"width": "143px",
							"visible": false
						},
						{
							"width": "180px",
							"visible": false
						},
						{
							"width": "116px",
							"visible": false
						},
						{
							"width": "135px",
							"visible": false
						},
						{
							"width": "138px",
							"visible": false
						},
						{
							"width": "45px",
							"visible": false
						},
						{
							"width": "75px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						},
						{
							"width": "105px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGCHGDIVNM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SCH_YEAR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGCHGDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ABSSMSTRS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RSNDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CHGRSN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.text = "복학예정일자";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-BFCHGLST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ATCHGLST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_RSN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-STUID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-ALT_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SCH_YEAR_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-SMT_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ALT_RSN_DIV_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ALT_RSN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_RSN_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ABS_SMT_CNT_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-BEF_ABS_SMT_CNT_RCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-REF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-UREF_KEY");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.text = "등록의 변동키";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CONTBFCHG");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CONTAFCHG");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ALT_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SMT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptAltDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("ALT_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "ABS_SMT_CNT_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("cbAbsSmtRcd");
										comboBox_1.style.css({
											"text-align" : "center"
										});
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsAbsSmtCntList"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("ABS_SMT_CNT_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "CST_DT";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptCstDt");
										output_3.dataType = "date";
										output_3.format = "YYYY-MM-DD";
										output_3.style.css({
											"text-align" : "center"
										});
										output_3.bind("value").toDataColumn("CST_DT");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "RTN_PLAN_DT";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptCstDt1");
										output_4.dataType = "date";
										output_4.format = "YYYY-MM-DD";
										output_4.style.css({
											"text-align" : "center"
										});
										output_4.bind("value").toDataColumn("RTN_PLAN_DT");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "CHG_BEF_DESC_DISP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "CHG_DESC_DISP";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("ipRemark");
										inputBox_1.bind("value").toDataColumn("REMARK");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DT";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptCancelDt");
										output_5.dataType = "date";
										output_5.format = "YYYY-MM-DD";
										output_5.style.css({
											"text-align" : "center"
										});
										output_5.bind("value").toDataColumn("CANCEL_DT");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "CANCEL_RSN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "STUD_ID";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbStudId");
										inputBox_2.maxLength = 20;
										inputBox_2.userAttr({"require": "Y"});
										inputBox_2.bind("value").toDataColumn("STUD_ID");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "ALT_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbSerialNo");
										inputBox_3.maxLength = 15;
										inputBox_3.userAttr({"require": "Y"});
										inputBox_3.bind("value").toDataColumn("SERIAL_NO");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "SCH_YEAR_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "SMT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_DIV_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "ALT_RSN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "CANCEL_RSN_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "ABS_SMT_CNT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "BEF_ABS_SMT_CNT_RCD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "REF_KEY";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbRefKey");
										inputBox_4.maxLength = 50;
										inputBox_4.userAttr({"require": "Y"});
										inputBox_4.bind("value").toDataColumn("REF_KEY");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "UREF_KEY";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbUrefKey");
										inputBox_5.maxLength = 50;
										inputBox_5.bind("value").toDataColumn("UREF_KEY");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "ENROLL_SHREG_KEY";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbEnrollShregKey");
										inputBox_6.maxLength = 50;
										inputBox_6.bind("value").toDataColumn("ENROLL_SHREG_KEY");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "CHG_BEF_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 30},
								"configurator": function(cell){
									cell.columnName = "CHG_DESC";
								}
							}
						]
					}
				});
				if(typeof onGrdCsrShregAltRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdCsrShregAltRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1015px",
					"height": "428px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbCancel");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "취소내역포함";
				checkBox_1.bind("fieldLabel").toExpression("#optCancel.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCancelCkbVal");
				if(typeof onCkbCancelValueChange == "function") {
					checkBox_1.addEventListener("value-change", onCkbCancelValueChange);
				}
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "600px",
					"width": "120px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "885px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "463px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "445px",
				"left": "65px",
				"width": "96px",
				"height": "25px"
			});
			
			var button_4 = new cpr.controls.Button("btnSave");
			button_4.value = "";
			button_4.style.setClasses(["btn-save"]);
			button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_4.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_4, {
				"top": "5px",
				"left": "950px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCsrSMstAlt";
	cpr.core.Platform.INSTANCE.register(app);
})();
