/*
 * App URI: app/csr/stdCsrSVisStud
 * Source Location: app/csr/stdCsrSVisStud.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/csr/stdCsrSVisStud", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCsrSVisStud.xtm"/>
			
			
			var stdCsrSVisStud = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/******************************************************************************************************
				 *  객체검색팝업 관련 설정사항
				 *  ▶ 설정가능 유형
				 *      1. 인스턴스
				 *      2. 리피트 디테일 셀 ID
				 *      3. 컨트롤 ID
				 *  ▶ 각 변수별 설명
				 *      iXXX : 팝업에 전달될  input 파라미터
				 *      oXXX : 팝업에서 선택한 값을 받을 데이터
				 *  	1. controlId 		: 최초 이벤트의 버튼이나 그리드 id             (필수)
				 *  	2. iCd 				: 검색조건 부서코드                                 (선택) 
				 *  	3. iNm 				: 검색조건 부서명									(선택)	
				 *  	4. iObjDivRcd 	: 검색될 객체구분코드 종류						(필수)
				 *								  (CC009OG : "행정부서", CC009SA : "학사부서", CC009SP : "이수과정", CC009CU : "교과그룹", CC009OT : "외부부서")
				 *  	5. iStartObject 	: 검색시작부서 										(선택)
				 *								  ("CC009OG20000,CC009OG70000",) 
				 *		6. iOtDivRcd 		: 외부부서구분코드 									(선택)
				 *								  (외부부서[CC009OT]일때 사용) ("CB008UNIV, CB008HSCL")
				 *		7. iOtIsTreeView	: 트리보이기 유무 									(선택)
				 *								  default : N (외부부서[CC009OT]일때 사용) "Y" 
				 *  	8. iLanDivRcd 	: 언어키													(선택)
				 *  	9. iKeyDate 		: 기준일													(필수)
				 *  	10. oObjDivRcd 	: 객체구분코드 
				 *  	11. oCd 			: 부서코드
				 *  	12. oCdNm 		: 부서명
				 *  	13. oBegDt 		: 시작일
				 *  	14. oEndDt 		: 종료일
				 *  	15. oLanDivRcd 	: 언어키
				 *  	16. func 			: 팝업에서 선택한 값을 받은 후 추가 로직이 필요한 경우 함수
				 *									  
				 *******************************************************************************************************/	
				moPObject.moIdsForStdCmnPObjSch = [
					{
						controlId			:	"btnFrfPopOtSearch",
						iCd					:	"",
						iNm					:	"ipbFrfOtNm",
						iObjDivRcd			:	["CC009OT"],
						iOtDivRcd   		:	"CB008UNIV",
						iStartObject    	:   "",
						iOtIsTreeView	:	"",
						iLanDivRcd		:	"",
						iKeyDate			:	"/root/reqKey/keyDate",
						iKeyEndDate		:	"",
						oObjDivRcd		:	"",
						oCd					:	"ipbFrfOtCd",
						oCdNm				:	"ipbFrfOtNm",
						oBegDt				:	"",
						oEndDt				:	"",
						oLanDivRcd		:	"",
						func 					: null
					}
				];
				
				//교환프로그램검색 팝업
				moPObject.moIdsForStdCsrPExh = [
				{
					controlId 					: "btnFrfPopExhPgmSearch",
					iStDt 							: "iptFrfStDt",		//시작일자
					iEndDt 						: "iptFrfEndDt",	//종료일자
					iPgmCd 					: "",					//교환프로그램코드
					iPgmNm 					: "ipbFrfExhPgmNm",	//교환프로그램명
					iPgmDivRcd 				: [],	//교환프로그램구분
					iPgmTypeRcd 			: [], 	//교환프로그램유형
					
					oExhPgmCd 				: "ipbFrfExhPgmCd",	//교환프로그램코드
					oExhPgmNm 			: "ipbFrfExhPgmNm",	//교환프로그램명
					oExhPgmDivRcd 		: "",	//교환프로그램구분
					oExhPgmTypeRcd 	: "",	//교환프로그램유형
					oPgmMinTerm 			: "",	//프로그램최소기간
					oPgmMaxTerm 			: "",	//프로그램최대기간
					oFirsrDivRcd 				: "",	//재원구분코드
					oTermUnitRcd 			: "",	//기간단위코드
					oRefKey 					: "ipbFrfRefKey",	//참조키
					func 			: null
				}]; 
				
				/**
				 * @desc 헤더 온로드 실행
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 팝업 닫기
				 * @param 
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onClick_BtnCloseCancel = function() {
					app.close();
				};
				
				/**
				 * @desc onModelConstructDone 이벤트
				 * @param 
				 * @return void
				 * @author	 Choi In Seong 2016. 7. 11.
				 */
				moPage.onModelConstructDone_StdCsrPMstAltAbs = function() {
					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("frfCsrVisExhStud");
					//화면 온로드 서브미션 호출
					doOnLoad();
				};
				
				
				/**
				 * @desc 부모창에서 받아온 변수 조회조건에 셋팅
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				function doOnLoad() {
					var voAltObj = ExtPopUp.getParentVal("moExhObj");
					
					// 부모멤버변수에담긴학번받음
					util.DataMap.setValue(app, "dmReqKey", "strStudNo", voAltObj["studNo"]);
					util.DataMap.setValue(app, "dmReqKey", "strStDt", voAltObj["stDt"]);
					util.DataMap.setValue(app, "dmReqKey", "strEndDt", voAltObj["endDt"]);
					
					util.DataMap.setValue(app, "dmReqKey", "strModCd", voAltObj["modCd"]);
					util.DataMap.setValue(app, "dmReqKey", "strExhPgmCd", voAltObj["exhPgmCd"]);
					util.DataMap.setValue(app, "dmReqKey", "strOtCd", voAltObj["otCd"]);
					
					var vsModCd = voAltObj["modCd"];
					
					//학생id 셋팅
					util.DataMap.setValue(app, "dmReqKey", "strStudId", voAltObj["studId"]);
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							
							util.Control.redraw(app, ["frfCsrVisExhStud"]);
							util.Control.redraw(app, ["cbbFrfCatRcd", "cbbFrfExhStudDivRcd", "cbbFrfSpDivRcd"]);
							
							if(vsModCd == "C"){
								doSubInsertRow();
							}else if(vsModCd == "M"){
								doList();
							}
							
							// 학생의 학번정보를 화면에 입력
							util.Control.setValue(app, "optStudNo", voAltObj["studNo"]);
							util.Control.setValue(app, "optStud", voAltObj["headerStud"]);
			
						} else {
							// 실패시 팝업 닫기
							ExtModel.dispatch("btnCloseCancel", "DOMActivate");
						}
					});
				}
			
				/**
				 * @desc 파견교환학생 조회
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				function doList(poCallBackFunc) {
					//strCommand: list 
					util.Submit.send(app, "subList",  function(pbSuccess) {
						if(pbSuccess){
							//rebuild
							util.Control.redraw(app, ["frfCsrVisExhStud"]);
						}
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 조회 내역이 없을시 신규
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				function doSubInsertRow() {
					util.FreeForm.setValue(app, "frfCsrVisExhStud",AppConstants.CUD_COL_REF, "I");
					//프리폼 신규
					util.FreeForm.insertRow(app, "frfCsrVisExhStud");
					var vsStudId = util.DataMap.getValue(app, "dmReqKey", "strStudId");
			
					//학생 ObjectId 셋팅
					util.FreeForm.setValue(app, "frfCsrVisExhStud", "STUD_ID", vsStudId);
			
					util.Grid.setRowState(app, "frfCsrVisExhStud",cpr.data.tabledata.RowState.INSERTED,1);
					//신규입력이 Ok
					util.Control.setEnable(app, true, ["frfCsrVisExhStud"]);
				};
				
				/**
				 * @desc 저장 SF에서 오류 메시지가 있으면 확인창 띄움.
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */	
				function doSave() {
			
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if (pbSuccess) {
							//부모창 목록 재조회
							//팝업창 닫기
							ExtPopUp.closeLayeredPopup("doPopCallList");
							return true;
						}
					});
				};
				
				/**
				 * @desc 파견 신규 저장 버튼 event
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onClick_BtnSave = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["frfCsrVisExhStud"], "MSG")){
						return false;
					}
					//리피트 validation check
					if(!util.validate(app, ["frfCsrVisExhStud"])){
						return false;
					}
					doSave();
				};
				
				/**
				 * @desc 방문학교 검색
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onValueChanged_IpbFrfOtNm = function(sender) {
					if (!doCheckPutDate("iptFrfStDt")) return;
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 방문학교 검색
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onClick_BtnFrfPopOtSearch = function(sender) {
					if (!doCheckPutDate("iptFrfStDt")) return;
					//strCommand: otDivSch 
					util.Submit.send(app, "subOtDivSch",  function(pbSuccess) {
							if(pbSuccess){
								//외부소속 검색 
								doOnClickStdCmnPObjSch(sender);
							}
						}
					);
				};
				
				/**
				 * @desc 교환프로그램 검색
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onValueChanged_IpbFrfExhPgmNm = function(sender) {
					if (!doCheckPutDate("iptFrfStDt")){
						util.Control.setValue(app, "ipbFrfExhPgmNm", "");
						return;
					}
					if (!doCheckPutDate("iptFrfEndDt")){
						util.Control.setValue(app, "ipbFrfExhPgmNm", "");
						return;
					}
					doOnChangeStdCsrPExhPopup(sender);
				};
				
				/**
				 * @desc 교환프로그램 검색
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onClick_BtnFrfPopExhPgmSearch = function(sender) {
					if (!doCheckPutDate("iptFrfStDt")) return;
					if (!doCheckPutDate("iptFrfEndDt")) return;
					doOnClickStdCsrPExhPopup(sender);
				};
			
				/**
				 * @desc 받아온 컨트롤의 빈값 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				function doCheckPutDate(psCtlId) {
					
					var vsCtlVal = util.Control.getValue(app, psCtlId);
					var vbValid = true;
					
					if (ValueUtil.isNull(vsCtlVal)) {
						var vsLblId = ExtControl.getControl(psCtlId).getAttr("labelid");
						var vnVal = ExtControl.getControl(vsLblId).textValue;
						util.Msg.alert("NLS-INF-M017",[vnVal]);
						/***************************************************************************/
						vbValid = false;
					} 
					
					return vbValid;
					
				};
				
				/**
				 * @desc 날짜 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				function doChkDate(psCtrlDiv) {
			
					var vsStDt = util.FreeForm.getValue(app, "frfCsrVisExhStud", "ST_DT");
					var vsEndDt = util.FreeForm.getValue(app, "frfCsrVisExhStud", "END_DT");
					
					if(ValueUtil.isNull(vsStDt) || ValueUtil.isNull(vsEndDt)) return false;
			
					if (vsEndDt < vsStDt) {
						util.Msg.alert("NLS-WRN-M016");
						if(psCtrlDiv == "stDt"){
							util.FreeForm.setValue(app, "frfCsrVisExhStud", "ST_DT", "");
						}else if(psCtrlDiv == "endDt"){
							util.FreeForm.setValue(app, "frfCsrVisExhStud", "END_DT", "");
						}
						 return false;
					}
					return true;
				};
				
				/**
				 * @desc 시작일자 변경 시
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onValueChanged_IptFrfStDt = function() {
					util.DataMap.setValue(app, "dmReqKey", "keyDate", util.FreeForm.getValue(app, "frfCsrVisExhStud", "ST_DT"));
					
					if(!doChkDate("stDt")){
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "OT_CD", "", false);
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "OT_NM", "", false);
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_CD", "", false);
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_NM", "", false);
						return;
					}
					
					var vsOtCd = util.FreeForm.getValue(app, "frfCsrVisExhStud", "OT_CD");
					var vsExhPgmCd = util.FreeForm.getValue(app, "frfCsrVisExhStud", "EXH_PGM_CD");
					
					if((vsOtCd != null && vsOtCd != "") || (vsExhPgmCd != null && vsExhPgmCd != "")){
						util.DataMap.setValue(app, "dmReqKey", "strOtCd", vsOtCd);
						util.DataMap.setValue(app, "dmReqKey", "strExhPgmCd", vsExhPgmCd);
						util.DataMap.setValue(app, "dmReqKey", "strEndDt", util.FreeForm.getValue(app, "frfCsrVisExhStud", "END_DT"));
						
						//strCommand: chkStDt 
						util.Submit.send(app, "subChkStDt",  function(pbSuccess) {
								if(pbSuccess){
									var vsOtSize = util.DataMap.getValue(app, "dmResChkDt", "strOtSize");
									var vsExhPgmSize = util.DataMap.getValue(app, "dmResChkDt", "strExhPgmSize");
									if(vsOtSize == "0"){
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "OT_CD", "", false);
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "OT_NM", "", false);
									}
									if(vsExhPgmSize == "0"){
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_CD", "", false);
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_NM", "", false);
									}
								}
							}
						);
					}
				};
				
				/**
				 * @desc 종료일자 체크
				 * @param
				 * @return void
				 * @author Choi In Seong 2016. 7. 11.
				 */
				moPage.onValueChanged_IptFrfEndDt = function() {
					var vsExhPgmCd = util.FreeForm.getValue(app, "frfCsrVisExhStud", "EXH_PGM_CD");
					
					if(!doChkDate("endDt")){
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_CD", "", false);
						util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_NM", "", false);
						return;
					}
					
					if(vsExhPgmCd != null && vsExhPgmCd != ""){
						util.DataMap.setValue(app, "dmReqKey", "strEndDt", util.FreeForm.getValue(app, "frfCsrVisExhStud", "END_DT"));
						util.DataMap.setValue(app, "dmReqKey", "strExhPgmCd", vsExhPgmCd);
						
						//strCommand: chkEndDt 
						util.Submit.send(app, "subChkEndDt",  function(pbSuccess) {
								if(pbSuccess){
									var vsExhPgmSize = util.DataMap.getValue(app, "dmResChkDt", "strExhPgmSize");
									if(vsExhPgmSize == "0"){
										//종료일자에 해당하는 객체이기 때문에 날짜가 변경될 시 클리어
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_CD", "", false);
										util.FreeForm.setValue(app, "frfCsrVisExhStud", "EXH_PGM_NM", "", false);
									}
								}
							}
						);
					}
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsExhCatList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsSpDivList");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsExhDivList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "keyDate",
						"dataType": "string"
					},
					{
						"name": "strStudNo",
						"dataType": "string"
					},
					{
						"name": "strOtCd",
						"dataType": "string"
					},
					{
						"name": "strExhPgmCd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strStudInfo",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCsrVisExhStud");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_CD",
						"dataType": "string"
					},
					{
						"name": "EXH_PGM_NM",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "EXH_STUD_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "EXH_STUD_DESC",
						"dataType": "string"
					},
					{
						"name": "SP_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "CAT_RCD",
						"dataType": "string"
					},
					{
						"name": "OT_CD",
						"dataType": "string"
					},
					{
						"name": "OT_NM",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOtDivSch");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strOtDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResChkDt");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strOtSize",
						"dataType": "string"
					},
					{
						"name": "strExhPgmSize",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/csr/StdCsrVisStud/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/csr/StdCsrVisStud/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subOtDivSch");
			submission_3.action = "/csr/StdCsrVisStud/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subChkStDt");
			submission_4.action = "/csr/StdCsrVisStud/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_4, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subChkEndDt");
			submission_5.action = "/csr/StdCsrVisStud/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataMap_4, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subList");
			submission_6.action = "/csr/StdCsrVisStud/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataMap_2, false);
			app.register(submission_6);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grp_frfCsrEnroll");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var group_2 = new cpr.controls.Container("frfCsrVisExhStud");
				group_2.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_3 = new cpr.controls.layouts.XYLayout();
				group_2.setLayout(xYLayout_3);
				(function(container){
					var output_1 = new cpr.controls.Output("optFrfExhStudDivRcd");
					output_1.value = "";
					output_1.bind("value").toLanguage("UI-SCR-BGYEAR");
					container.addChild(output_1, {
						"top": "80px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_1 = new cpr.controls.ComboBox("cbbFrfExhStudDivRcd");
					comboBox_1.bind("fieldLabel").toExpression("#optFrfExhStudDivRcd.value");
					comboBox_1.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "EXH_STUD_DIV_RCD");
					(function(comboBox_1){
						comboBox_1.setItemSet(app.lookup("dsExhDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_1);
					container.addChild(comboBox_1, {
						"top": "80px",
						"left": "120px",
						"width": "170px",
						"height": "25px"
					});
					var inputBox_1 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_1.visible = false;
					inputBox_1.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "STUD_ID");
					container.addChild(inputBox_1, {
						"top": "30px",
						"left": "530px",
						"width": "10px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfCatRcd");
					output_2.value = "";
					output_2.bind("value").toLanguage("UI-SCR-EXSTUCATCD");
					container.addChild(output_2, {
						"top": "130px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfStDt");
					output_3.value = "";
					output_3.style.setClasses(["require"]);
					output_3.bind("value").toLanguage("UI-DB-ST_DT");
					container.addChild(output_3, {
						"top": "5px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_2 = new cpr.controls.ComboBox("cbbFrfCatRcd");
					comboBox_2.bind("fieldLabel").toExpression("#optFrfCatRcd.value");
					comboBox_2.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "CAT_RCD");
					(function(comboBox_2){
						comboBox_2.setItemSet(app.lookup("dsExhCatList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_2);
					container.addChild(comboBox_2, {
						"top": "130px",
						"left": "120px",
						"width": "170px",
						"height": "25px"
					});
					var dateInput_1 = new cpr.controls.DateInput("iptFrfStDt");
					dateInput_1.format = "YYYY-MM-DD";
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfStDt.value");
					dateInput_1.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "ST_DT");
					if(typeof onIptFrfStDtValueChange == "function") {
						dateInput_1.addEventListener("value-change", onIptFrfStDtValueChange);
					}
					container.addChild(dateInput_1, {
						"top": "5px",
						"left": "120px",
						"width": "90px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfEndDt");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-DB-END_DT");
					container.addChild(output_4, {
						"top": "5px",
						"left": "300px",
						"width": "100px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("iptFrfEndDt");
					dateInput_2.format = "YYYY-MM-DD";
					dateInput_2.bind("fieldLabel").toExpression("#optFrfEndDt.value");
					dateInput_2.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "END_DT");
					if(typeof onIptFrfEndDtValueChange == "function") {
						dateInput_2.addEventListener("value-change", onIptFrfEndDtValueChange);
					}
					container.addChild(dateInput_2, {
						"top": "5px",
						"left": "405px",
						"width": "90px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfRemark");
					output_5.value = "";
					output_5.bind("value").toLanguage("UI-DB-EXH_STUD_DESC");
					container.addChild(output_5, {
						"top": "155px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_2 = new cpr.controls.InputBox("ipbFrfRemark");
					inputBox_2.maxLength = 1000;
					inputBox_2.bind("fieldLabel").toExpression("#optFrfRemark.value");
					inputBox_2.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "EXH_STUD_DESC");
					container.addChild(inputBox_2, {
						"top": "155px",
						"left": "120px",
						"width": "455px",
						"height": "25px"
					});
					var output_6 = new cpr.controls.Output("optFrfOtNm");
					output_6.value = "";
					output_6.style.setClasses(["require"]);
					output_6.bind("value").toLanguage("UI-SCR-VISITSCH");
					container.addChild(output_6, {
						"top": "30px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfOtNm");
					inputBox_3.maxLength = 50;
					inputBox_3.userAttr({"require": "Y"});
					inputBox_3.bind("fieldLabel").toExpression("#optFrfOtNm.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "OT_NM");
					if(typeof onIpbFrfOtNmValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpbFrfOtNmValueChange);
					}
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "120px",
						"width": "150px",
						"height": "25px"
					});
					var button_1 = new cpr.controls.Button("btnFrfPopOtSearch");
					button_1.value = "";
					button_1.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfPopOtSearchClick == "function") {
						button_1.addEventListener("click", onBtnFrfPopOtSearchClick);
					}
					container.addChild(button_1, {
						"top": "30px",
						"left": "270px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfOtCd");
					inputBox_4.visible = false;
					inputBox_4.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "OT_CD");
					container.addChild(inputBox_4, {
						"top": "30px",
						"left": "295px",
						"width": "10px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfExhPgmNm");
					output_7.value = "";
					output_7.style.setClasses(["require"]);
					output_7.bind("value").toLanguage("UI-DB-EXH_PGM_NM");
					container.addChild(output_7, {
						"top": "55px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfExhPgmNm");
					inputBox_5.maxLength = 50;
					inputBox_5.userAttr({"require": "Y"});
					inputBox_5.bind("fieldLabel").toExpression("#optFrfExhPgmNm.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "EXH_PGM_NM");
					if(typeof onIpbFrfExhPgmNmValueChange == "function") {
						inputBox_5.addEventListener("value-change", onIpbFrfExhPgmNmValueChange);
					}
					container.addChild(inputBox_5, {
						"top": "55px",
						"left": "120px",
						"width": "150px",
						"height": "25px"
					});
					var button_2 = new cpr.controls.Button("btnFrfPopExhPgmSearch");
					button_2.value = "";
					button_2.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfPopExhPgmSearchClick == "function") {
						button_2.addEventListener("click", onBtnFrfPopExhPgmSearchClick);
					}
					container.addChild(button_2, {
						"top": "55px",
						"left": "270px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfExhPgmCd");
					inputBox_6.visible = false;
					inputBox_6.maxLength = 10;
					inputBox_6.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "EXH_PGM_CD");
					container.addChild(inputBox_6, {
						"top": "55px",
						"left": "295px",
						"width": "10px",
						"height": "25px"
					});
					var output_8 = new cpr.controls.Output("optFrfSpDivRcd");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-DB-EXH_STUD_STAT_RCD");
					container.addChild(output_8, {
						"top": "105px",
						"left": "5px",
						"width": "110px",
						"height": "25px"
					});
					var comboBox_3 = new cpr.controls.ComboBox("cbbFrfSpDivRcd");
					comboBox_3.bind("fieldLabel").toExpression("#optFrfSpDivRcd.value");
					comboBox_3.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "SP_DIV_RCD");
					(function(comboBox_3){
						comboBox_3.setItemSet(app.lookup("dsSpDivList"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_3);
					container.addChild(comboBox_3, {
						"top": "105px",
						"left": "120px",
						"width": "170px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfRefKey");
					inputBox_7.visible = false;
					inputBox_7.bind("value").toDataMap(app.lookup("dmCsrVisExhStud"), "REF_KEY");
					container.addChild(inputBox_7, {
						"top": "55px",
						"left": "530px",
						"width": "10px",
						"height": "25px"
					});
				})(group_2);
				container.addChild(group_2, {
					"top": "90px",
					"left": "5px",
					"width": "580px",
					"height": "180px"
				});
				var userDefinedControl_1 = new udc.com.comFormTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-NEWABSMK");
				container.addChild(userDefinedControl_1, {
					"top": "65px",
					"left": "5px",
					"width": "135px",
					"height": "25px"
				});
				var group_3 = new cpr.controls.Container("frfStudInfo");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var output_9 = new cpr.controls.Output("optStud");
					output_9.value = "";
					output_9.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudInfo");
					container.addChild(output_9, {
						"top": "30px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optStudNm");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-GLS-PER_NM");
					container.addChild(output_10, {
						"top": "30px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optStudNo");
					output_11.value = "";
					output_11.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_11, {
						"top": "5px",
						"left": "5px",
						"width": "100px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optStudNo");
					output_12.value = "";
					output_12.bind("value").toDataMap(app.lookup("dmReqKey"), "strStudNo");
					container.addChild(output_12, {
						"top": "5px",
						"left": "110px",
						"width": "465px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "5px",
					"left": "5px",
					"width": "580px",
					"height": "55px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "590px",
				"height": "275px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseCancel");
			button_3.value = "";
			button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_3.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_3, {
				"top": "315px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_2, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_4 = new cpr.controls.Button("btnSave");
			button_4.value = "";
			button_4.style.setClasses(["btn-save"]);
			button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
			if(typeof onBtnSaveClick == "function") {
				button_4.addEventListener("click", onBtnSaveClick);
			}
			container.addChild(button_4, {
				"top": "315px",
				"left": "535px",
				"width": "60px",
				"height": "25px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "310px",
				"left": "85px",
				"width": "50px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrExhImp");
			cpr.core.App.load("app/csr/impStdCsrPExh", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "310px",
				"left": "145px",
				"width": "65px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "방문교환학생";
	cpr.core.Platform.INSTANCE.register(app);
})();
