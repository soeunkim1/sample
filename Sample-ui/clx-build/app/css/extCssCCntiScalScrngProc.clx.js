/*
 * App URI: app/css/extCssCCntiScalScrngProc
 * Source Location: app/css/extCssCCntiScalScrngProc.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/extCssCCntiScalScrngProc", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCssCCntiScalScrngProc.xtm"/>
			
			
			var extCssCCntiScalScrngProc = function() {
					
				var moPage = new Page();
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onModelConstructDone_ExtCssCCntiScalScrng = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptScrngTgt"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
						}
					});
				};
				
				/**
				 * @desc 조회버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onClick_BtnSearch = function() {
					// 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							util.Msg.notify(app, "NLS.INF.M024");					
						}
					});
					
				};
				
				/**
				 * @desc 연속장학생선발대상 목록
				 * @param poCallBackFunc 콜백정의
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: doTgtList 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdScrngTgt");
						} 
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 입학장학금 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onValueChanged_RdIpbEntScalAmt = function() {
					// 장학금액 셋팅
					doSetScalAmt();
				};
				
				/**
				 * @desc 수업장학금 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onValueChanged_RdIpbTutScalAmt = function() {
					// 장학금액 셋팅
					doSetScalAmt();
				};
				
				/**
				 * @desc 입학장학금, 수업장학금 조정가능하게 하여 두개의 합을 장학금액에 셋팅한다.
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				function doSetScalAmt() {
					
					var vnEntScalAMt = Number(util.Grid.getCellValue(app, "grdScrngTgt", "ENT_SCAL_AMT"));
					var vnTutScalAMt = Number(util.Grid.getCellValue(app, "grdScrngTgt", "TUT_SCAL_AMT"));
					
					util.Grid.setCellValue(app, "grdScrngTgt", "SCAL_AMT", vnEntScalAMt + vnTutScalAMt);
				};
				
				/**
				 * @desc 실행버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onClick_BtnSaveRun = function() { 
					
					// 연속장학생선발대상 목록 선택 여부 체크
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptScrngTgt/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdScrngTgtScrngTgt")]);
						return false;
					}
					
					// 리피트 validation check
					if(!util.validate(app, "grdScrngTgt")) return false;
					
					util.Grid.setRowStateAll(app, "grdScrngTgt", cpr.data.tabledata.RowState.UNCHANGED);
					var voPanelChk = moPage.doGetSelRowIdx();
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsScalStudYn = util.Grid.getCellValue(app, "grdScrngTgt", "SCAL_STUD_YN", vnRow);
						var vsChkErrDesc = util.Grid.getCellValue(app, "grdScrngTgt", "CHK_ERR_DESC", vnRow);
						
						// 기선발 자료인지 체크
						if(vsScalStudYn == "Y"){
							// @번째 기선발된 연속장학금내역이 존재하여 처리불가합니다.
							util.Msg.alert("NLS-CSS-M110", [vnRow]);	
							util.Grid.selectRow(app, "grdScrngTgt", vnRow);
							util.Grid.setRowStateAll(app, "grdScrngTgt", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						// 장학금유효성 체크 내역이 존재하는지 체크
						if(!ValueUtil.isNull(vsChkErrDesc)){
							// @번째 장학금체크내역이 존재하여 처리불가합니다.
							util.Msg.alert("NLS-CSS-M111", [vnRow]);	
							util.Grid.selectRow(app, "grdScrngTgt", vnRow);
							util.Grid.setRowStateAll(app, "grdScrngTgt", cpr.data.tabledata.RowState.UNCHANGED);
							return;
						}	
						
						util.Grid.setRowState(app, "grdScrngTgt", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 배치전 커버페이지 적용
					util.coverPage(app);
					
					// 연속장학생사정처리 서브미션
					//strCommand: run 
					util.Submit.send(app, "subRun", function(pbSuccess){
						if(pbSuccess){
							
							doList(function(pbListSuccess){	
								if(pbListSuccess){		
									//산출결과를 요약하여 뿌려줌
									var vsInsertStudCnt = util.DataMap.getValue(app, "dmResList", "strRltStudCnt");
									
									// @건 선발되었습니다.
									util.Msg.notify(app, "NLS.CSS.M104");
									util.Msg.alert("NLS-CSS-M105", [vsInsertStudCnt]);
									
									util.removeCover(app);
								}
							});
							
						}else{
							util.Grid.setRowStateAll(app, "grdScrngTgt", cpr.data.tabledata.RowState.UNCHANGED);	
							util.removeCover(app);
						}	
						
					}); 	
					
				};
				
				/**
				 * @desc 연속장학생선발대상 목록에 체크된 리피트 인덱스 배열 리턴
				 * @param 
				 * @return Array 리피트에 체크된 인덱스 배열
				 * @author Aeyoung Lee 2016-12-15
				 */
				function doGetSelRowIdx() {
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdScrngTgt");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					return voPanelChk;
				};
				
				/**
				 * @desc 작업취소버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-12-15
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdScrngTgt");
				}
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListYear");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListSmt");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsScrngTgt");
			dataSet_3.parseData({
				"info": "CSS_CNTI_SCAL_STUD@STUD_ID,SCAL_FEE_CD",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT"},
					{"name": "SA_NM"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SCAL_STUD_YN"},
					{"name": "CHK_ERR_DESC"},
					{"name": "ENT_SCAL_AMT"},
					{"name": "TUT_SCAL_AMT"},
					{"name": "SCAL_AMT"},
					{"name": "STAT_NM"},
					{"name": "SCAL_FEE_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "CRS_YN"},
					{"name": "CRS_AMT"},
					{"name": "ALT_DT"},
					{"name": "RTN_DT"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "strRemoIncYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strRltStudCnt",
						"dataType": "string"
					},
					{
						"name": "strTotCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/ExtCssCntiScalScrngProc/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/css/ExtCssCntiScalScrngProc/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subRun");
			submission_3.action = "/css/ExtCssCntiScalScrngProc/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_3);
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "230px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListYear"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "130px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListSmt"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "315px",
					"width": "130px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "7px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optRemoIncYn");
				output_3.value = "당해학기제적생포함여부";
				container.addChild(output_3, {
					"top": "5px",
					"left": "455px",
					"width": "160px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbRemoIncYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.style.css({
					"text-align" : "center"
				});
				checkBox_1.bind("fieldLabel").toExpression("#optCgtIncYn.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strRemoIncYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "620px",
					"width": "20px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-PRCRSTLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "380px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optText2");
				output_4.value = "* 작업완료 후 선발결과는 일괄장학생관리 화면에서 확인하시기 바랍니다.";
				container.addChild(output_4, {
					"top": "5px",
					"left": "290px",
					"width": "620px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaveRun");
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-GLS-EXEC");
				if(typeof onBtnSaveRunClick == "function") {
					button_2.addEventListener("click", onBtnSaveRunClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScrngTgt");
				grid_1.init({
					"dataSet": app.lookup("dsScrngTgt"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "60px"},
						{"width": "60px"},
						{"width": "108px"},
						{"width": "65px"},
						{"width": "75px"},
						{"width": "75px"},
						{"width": "45px"},
						{"width": "60px"},
						{"width": "75px"},
						{"width": "100px"},
						{"width": "75px"},
						{"width": "75px"},
						{"width": "75px"},
						{"width": "150px"},
						{"width": "60px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-AMT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output();
										output_5.style.css({
											"text-align" : "center"
										});
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ALT_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "RTN_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "CRS_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "CRS_AMT";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptCrsAmt");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("CRS_AMT");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "ENT_SCAL_AMT";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbEntScalAmt");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999,999,999,999,999";
										numberEditor_1.bind("value").toDataColumn("ENT_SCAL_AMT");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "TUT_SCAL_AMT";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbTutScalAmt");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999,999,999,999,999";
										numberEditor_2.bind("value").toDataColumn("TUT_SCAL_AMT");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptScalAmt");
										output_7.dataType = "number";
										output_7.format = "s#,###";
										output_7.style.css({
											"text-align" : "right"
										});
										output_7.bind("value").toDataColumn("SCAL_AMT");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "CHK_ERR_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "SCAL_STUD_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.expr = "\"합계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.expr = "getSum(\"ENT_SCAL_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.expr = "getSum(\"TUT_SCAL_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.expr = "getSum(\"SCAL_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "565px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1094px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "600px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "연속장학사정";
	cpr.core.Platform.INSTANCE.register(app);
})();
