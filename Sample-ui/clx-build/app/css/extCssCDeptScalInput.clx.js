/*
 * App URI: app/css/extCssCDeptScalInput
 * Source Location: app/css/extCssCDeptScalInput.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/extCssCDeptScalInput", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿
			//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCssCDeptScalInput.xtm"/>
			
			
			var extCssCDeptScalInput = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "",
					oObjDivRcd 	: "ipbDeptObjDivRcd",
					oCd 		: "ipbDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: ""
				}
				];
				
				/* 
				 * 장학금 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCssPScalFeeSch = [
				{
					controlId 		: "btnScalFeeNmPop",
					iCd 			: "",
					iNm 			: "ipbScalFeeNm",
					iObjDivRcd 		: "CC009SS",
					iLanDivRcd 		: "",
					iKeyDate		: "",
					iScalFeeCls1	: "",	
					iScalFeeCls2	: "",	
					iScalFeeCls3	: "",	
					iScalFeeCls4	: "",	
					iScalFeeCls5	: "",	
					iDeptCd 		: "",		
					iDeptObjDivRcd 	: "",	
					iMngDeptDiv		: "CH002DPT", // 학과(CH002DPT)
					oScalFeeCd 		: "ipbScalFeeCd",
					oScalFeeNm 		: "ipbScalFeeNm",
					oObjDivRcd 		: "ipbSsObjDivRcd",
					oPmntDivRcd 	: "ipbPmntDivRcd",
					oPmntItvRcd 	: "ipbPmntItvRcd",
					func 			: null
				}
				];
				
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnFrfStudPop",
					iStudNo 		: "ipbFrfStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "",
					iObjDivRcd 		: "", //"/root/reqKey/strDeptObjDivRcd",
					iObjCd 			: "", //"/root/reqKey/strDeptCd",
					iObjNm 			: "", //"/root/reqKey/strDeptNm",
					iAuthYN 		: "",
					iStatRcd 		: "CT301ATTE",
					iStudDivRcd		: "",
					oStudId 		: "ipbFrfStudIdObj",
					oStudNo 		: "ipbFrfStudId",
					oStudNm 		: "ipbFrfRepNm",
					oStatNm 		: "ipbFrfStatNm",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "ipbFrfProcRsltYear",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "ipbFrfSpNm",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : function(poParam) {
						doStSearch(poParam);
					}
				}
				];
				
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onModelConstructDone_ExtCssCDeptScalInput = function() {
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptStudScal", "frfStudScal", "rptDptMjAlotNop"]);
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//암호화컬럼 설정
					ExtRepeat.addOriginCol("rptStudScal", ["STUD_ACCT_NO"]);
					
					doOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */
				function doOnLoad(){
					doOnLoadImpNS("CSS");
					
					// 서브미션 실행 (실패시 cover page)
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							// 세션 하위학사부서 중 하나 셋팅
							var vsUserSaCd = util.DataMap.getValue(app, "dmResOnLoad", "strUserSaCd");
							var vsUserSaNm = util.DataMap.getValue(app, "dmResOnLoad", "strUserSaNm");
							var vsUserObjDivRcd = util.DataMap.getValue(app, "dmResOnLoad", "strUserObjDivRcd");
							
							util.Control.setValue(app, "ipbDeptNm", vsUserSaNm);
							util.Control.setValue(app, "ipbDeptCd", vsUserSaCd);
							util.Control.setValue(app, "ipbDeptObjDivRcd", vsUserObjDivRcd);
							
							util.Control.setFocus(app, "ipbDeptNm");
						}
					}, true);
				};
				
				/**
				 * @desc 학년도 학기 임포트 값 변경 시 호출 함수 
				 * @author Aeyoung Lee 2016-08-05
				 */
				function doSetKeyDateYearSmtImp() {
					// 변경 시 학과, 장학금 리셋
					util.Control.reset(app, ["ipbDeptNm", "ipbDeptCd", "ipbDeptObjDivRcd", "ipbScalFeeNm", "ipbScalFeeCd", "ipbSsObjDivRcd", "ipbPmntDivRcd", "ipbPmntItvRcd"]);
				};	
				
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				function doSetPopKeyDate() {
					var vsEndDt = ExtInstance.getValue("instance('impCommonN')/root/date/END_DT").substr(0,8);
					
					moPObject.moIdsForStdCmnPObjSch[0].iKeyDate = vsEndDt;
					moPObject.moIdsForStdCssPScalFeeSch[0].iKeyDate = vsEndDt;
					moPObject.moIdsForStdCsrPStSearch[0].iKeyDate = vsEndDt;
				};
				
				/**
				 * @desc 장학금명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onValueChanged_IpbScalFeeNm = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCssPScalFeePop(sender);
				};
				
				/**
				 * @desc 장학금명 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onClick_BtnScalFeeNmPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCssPScalFeePop(sender);
				};
				
				/**
				 * @desc 학과명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학과 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 조회 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-12
				 */
				moPage.onClick_BtnSearch = function() {
					//작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}	
					
					if(!util.validate(app, ["cbbYearImpNS", "cbbSmtImpNS", "ipbDeptNm", "ipbScalFeeNm", "ipbDeptCd", "ipbScalFeeCd"])){
						return false;
					}
					
					doList(function(pbSuccess){
						if(pbSuccess) util.Msg.notify(app, "NLS.INF.M024");
					});	
				};
				
				/**
				 * @desc  장학생자료 목록을 조회한다.
				 * @param {Function} poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */
				function doList(poCallBackFunc) {
					
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", util.Control.getValue(app, "cbbYearImpNS"));
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", util.Control.getValue(app, "cbbSmtImpNS"));
					ExtInstance.setValue("/root/reqKey/strKeyDate", ExtInstance.getValue("instance('impCommonN')/root/date/END_DT"));
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdStudScal");
							util.Control.redraw(app, "grdDptMjAlotNop");	
							
							// 학과입력기간 체크하여 기간이 아닌 경우 입력불가능 하도록 제어
							var vsInputTermYn = util.DataMap.getValue(app, "dmResList", "strInputTermYn");
							
							if(vsInputTermYn == "Y"){
								util.Control.setEnable(app, true, ["btnNew", "btnDel", "btnRestore", "btnSave", "frfStudScal"]);	
							}else{
								util.Control.setEnable(app, false, ["btnNew", "btnDel", "btnRestore", "btnSave", "frfStudScal"]);
								
								// 해당 장학금 입력기간이 아닙니다.메시지 표시
								util.Msg.alert("NLS-CSS-M092");
								return;
							}	
							
							// 지급구분에 따른 은행,계좌번호,예금주 필수항목 제어
							var vsPmntDivRcd = util.DataMap.getValue(app, "dmReqKey", "strPmntDivRcd");
							// 사후지급 필수
							if(vsPmntDivRcd == "CH001AFT"){
								ExtControl.setAttr("lblFrfStudBankCd", "class", "lblFrfReq");
								ExtControl.setAttr("lblFrfStudAcctNo", "class", "lblFrfReq");
								ExtControl.setAttr("lblFrfOwerNm", "class", "lblFrfReq");
								
								ExtControl.setAttr("cbbFrfStudBankCd", "class", "cbbFrfReq");
								ExtControl.setAttr("ipbFrfStudAcctNo", "class", "ipbFrffReq");
								ExtControl.setAttr("ipbFrfOwerNm", "class", "ipbFrfReq");
								
								util.Control.setUserAttr(app, "cbbFrfStudBankCd", "require", "Y");
								util.Control.setUserAttr(app, "ipbFrfStudAcctNo", "require", "Y");
								util.Control.setUserAttr(app, "ipbFrfOwerNm", "require", "Y");
								
								ExtControl.setAttr("cbbFrfStudBankCd", "emptyitem", "False");
								
							// 사전지급 비필수	
							}else{
								ExtControl.setAttr("lblFrfStudBankCd", "class", "lblFrf");
								ExtControl.setAttr("lblFrfStudAcctNo", "class", "lblFrf");
								ExtControl.setAttr("lblFrfOwerNm", "class", "lblFrf");
								
								ExtControl.setAttr("cbbFrfStudBankCd", "class", "cbbFrf");
								ExtControl.setAttr("ipbFrfStudAcctNo", "class", "ipbFrf");
								ExtControl.setAttr("ipbFrfOwerNm", "class", "ipbFrf");
								
								util.Control.setUserAttr(app, "cbbFrfStudBankCd", "require", "");
								util.Control.setUserAttr(app, "ipbFrfStudAcctNo", "require", "");
								util.Control.setUserAttr(app, "ipbFrfOwerNm", "require", "");
								
								ExtControl.setAttr("cbbFrfStudBankCd", "emptyitem", "True");
							}	
							
							//if(ExtRepeat.rowCount("rptStudScal") <= 0) {
							doCompareFrfEnable();	
							//}	
							
							
							if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
						}
					}); 
				};
				
				/**
				 * @desc   리피트 패널 체크
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onValueChanged_RhCkbSelect = function() {
					// 리피트 패널 설정
			//TO-BE: <ExtRepeat.selectedAllPanel> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.selectedAllPanel("rhCkbSelect");
				};
				
				/**
				 * @desc   프리폼 변경시 리피트 반영
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onUpdate_FrfBase = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptStudScal", "frfStudScal");
				}
				
				/**
				 * @desc   리피트 row select  이벤트
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onRowSelect_RptStudScal = function() {
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptStudScal","frfStudScal");
					
					doCompareFrfEnable();
				};
					
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */
				function doCompareFrfEnable() {
					
					var vnIdx = util.Grid.getIndex(app, "grdStudScal");
					var vsStaus = util.Grid.getRowState(app, "grdStudScal", vnIdx);
					
					// 마스터 로우 없을경우 프리폼 리셋
					var vsRowCnt = util.Grid.getRowCount(app, "grdStudScal");
					if( vsRowCnt <= 0 || !vnIdx){
						util.Control.reset(app, "frfStudScal");
					}	
					
					if( (!vnIdx) || vsStaus == "delete") {
						util.Control.setEnable(app, false, ["frfStudScal"]);	
					}else{
						
						// 학과입력기간 체크하여 기간이 아닌 경우 입력불가능 하도록 제어
						var vsInputTermYn = util.DataMap.getValue(app, "dmResList", "strInputTermYn");
						
						// 처리상태=학과입력, 신규인경우인 경우만 장학생정보 프리폼 수정 그 외 비활성화
						var vsProcStatRcd = util.Grid.getCellValue(app, "grdStudScal", "PROC_STAT_RCD", vnIdx);
						
						if(vsInputTermYn == "Y" && vsProcStatRcd == "CH301DPT"){
							util.Control.setEnable(app, true, ["frfStudScal"]);	
							
							if(vsStaus == "insert"){
								util.Control.setReadOnly(app, false, ["ipbFrfStudId", "btnFrfStudPop"]);	
							}else{
								util.Control.setReadOnly(app, true, ["ipbFrfStudId", "btnFrfStudPop"]);	
							}
						}else{
							util.Control.setEnable(app, false, ["frfStudScal"]);	
						}	
					}	
				};	
				
				/**
				 * @desc 신규 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */		
				moPage.onClick_BtnNew = function() {
					//해당 리피트 insertRow 후 편집 시작할 컬럼 지정		
					var vnNewRow = util.Grid.insertRow(app, "grdStudScal");	
					
					var vsSchYearRcd  = ExtInstance.getValue("instance('impCommonN')/root/date/YEAR");
					var vsSmtRcd      = ExtInstance.getValue("instance('impCommonN')/root/date/SMT");
					var vsScalFeeCd   = util.DataMap.getValue(app, "dmReqKey", "strScalFeeCd");
					var vsSsObjDivRcd = util.DataMap.getValue(app, "dmReqKey", "strSsObjDivRcd");
					var vsPmntDivRcd = util.DataMap.getValue(app, "dmReqKey", "strPmntDivRcd");
					var vsPmntItvRcd = util.DataMap.getValue(app, "dmReqKey", "strPmntItvRcd");
					
					util.Grid.setCellValue(app, "grdStudScal", "SCH_YEAR_RCD"	, vsSchYearRcd	 , vnNewRow);
					util.Grid.setCellValue(app, "grdStudScal", "SMT_RCD"     	, vsSmtRcd		 , vnNewRow);
					util.Grid.setCellValue(app, "grdStudScal", "SCAL_FEE_CD"		, vsScalFeeCd	 , vnNewRow);
					util.Grid.setCellValue(app, "grdStudScal", "SS_OBJ_DIV_RCD"  , vsSsObjDivRcd  , vnNewRow);
					util.Grid.setCellValue(app, "grdStudScal", "PROC_STAT_RCD"	, "CH301DPT"	 , vnNewRow);	//학과입력(CH301DPT)
					util.Grid.setCellValue(app, "grdStudScal", "PMNT_DIV_RCD"	, vsPmntDivRcd	 , vnNewRow);	
					util.Grid.setCellValue(app, "grdStudScal", "PMNT_ITV_RCD"	, vsPmntItvRcd	 , vnNewRow);	
					util.Grid.setCellValue(app, "grdStudScal", "REQ_DT"			, util.DataMap.getValue(app, "dmResOnLoad", "strSysdate"), vnNewRow);	
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptStudScal","frfStudScal", vnNewRow);
					
					doCompareFrfEnable();
					
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "ipbFrfStudId");
				};
				
				/**
				 * onClick_BtnFrfStudPop 학생검색버튼클릭이벤트
				 * @param sender
				 * @type void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onClick_BtnFrfStudPop = function(sender){
					doSetPopKeyDate();
					doOnClickStdCsrPStSearch(sender);
				};
				
				/**
				 * onValueChage_InputFrfStudId 학생변경이벤트
				 * @param sender
				 * @type void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onValueChanged_IpbFrfStudId = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCsrPStSearch(sender);
				};
				
				/**
				 * @desc 삭제 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onClick_BtnDel = function() {
			//		var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptStudScal/row[child::DEL_CKB='Y']");
			//		if (vnChekNodeLength <= 0 ) {
			//			// "@(을)를 선택해주세요" 메시지 출력
			//			ComMsg.alert(NLS.INF.M045, [ExtControl.getTextValue("lblTitleRptStudScal")]);
			//			return false;
			//		}
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdStudScal");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}	
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsProcStatRcd = util.Grid.getCellValue(app, "grdStudScal", "PROC_STAT_RCD", vnRow);
						
						if(vsProcStatRcd != "CH301DPT"){
							// @1번째 처리상태가 학과입력이 아니므로 삭제할 수 없습니다.
							util.Msg.alert("NLS-CSS-M093", [vnRow]);	
							return;
						}
					}  
					
					// 삭제처리
					util.Grid.deleteRow(app, "grdStudScal");
					
					// 로우가 없는 경우 rowSelect 이벤트가 일어나지 않으므로 이벤트 추가
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 작업취소 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdStudScal");
					
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptStudScal","frfStudScal");
					
					// 로우가 없는 경우 rowSelect 이벤트가 일어나지 않으므로 이벤트 추가
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 작업저장 click event
				 * @return void
				 * @author Aeyoung Lee 2016-05-12
				 */	
				moPage.onClick_BtnSave = function() {
					// 리피터 변경사항 체크
					if(!util.Grid.isModified(app, ["grdStudScal"], "MSG")){
						return false;
					}
					
					//리피트 validation check
					if(!util.validate(app, "grdStudScal")) return false;
					
					//장학(수업료), 장학(입학금), 장학(기타) 중 하나는 필수입력 항목체크
					if(!doCheckAmt()) return false;
					
					//모든 데이터를 체크하기 위해 변경
					//strCommand: savePmnt 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							// 신규시 pk_value 설정
							var vsPkSerialNo = util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSerialNo");
							if(!ValueUtil.isNull(vsPkSerialNo)){
								var vsPkValue = "STUD_ID:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsStudId") 
												+ ",SCH_YEAR_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSchYearRcd") 
												+ ",SMT_RCD:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSmtRcd")
												+ ",SERIAL_NO:" + util.DataMap.getValue(app, "dmRtnPkKeyInfo", "strInsSerialNo");
								ExtRepeat.setPkValues("rptStudScal", vsPkValue);
							}	
							
							doList(function(pbListSuccess){
								if(pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
					
				};
				
				/**
				 * doCheckAmt 장학(수업료), 장학(입학금), 장학(기타) 중 하나는 필수입력 항목체크, 중복학생체크
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doCheckAmt(){
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdStudScal"); i++) {
						var vnEtcScal = util.Grid.getCellValue(app, "grdStudScal", "ETC_SCAL", i);
						var vnEntScal = util.Grid.getCellValue(app, "grdStudScal", "ENT_SCAL", i);
						var vnTutScal = util.Grid.getCellValue(app, "grdStudScal", "TUT_SCAL", i);
						
						var vbUptStatus = util.Grid.getRowState(app, "grdStudScal", i);
						if(vbUptStatus != "delete" && !(vnEtcScal > 0 || vnEntScal > 0 || vnTutScal > 0)){
							//@1번째 장학(수업료), 장학(입학금), 장학(기타) 중 하나는 입력되어야 합니다..
							util.Msg.alert("NLS-CSS-M094", [i+""]);
							//ExtRepeat.setColFocus("rptStudScal", i, "rdOptTutScal");
							util.Grid.selectRow(app, "grdStudScal", i);
							util.Control.setFocus(app, "ipbFrfTutScal");
							return false;
						}
						
						// 중복학생 체크
						var vsStudId = util.Grid.getCellValue(app, "grdStudScal", "STUD_ID", i);
						var vnStudScalCnt = ExtInstance.getNodeListLength("/root/resList/rptStudScal/row[child::STUD_ID='"+ vsStudId +"' and UPT_STATUS != 'D']");
						if(vnStudScalCnt > 1){
							// @번째 중복 입력된 학생이 존재합니다.
							util.Msg.alert("NLS-CSS-M098", [i+""]);
							//ExtRepeat.setColFocus("rptStudScal", i, "rdOptTutScal");
							util.Grid.selectRow(app, "grdStudScal", i);
							util.Control.setFocus(app, "ipbFrfTutScal");
							return false;
						}	
						
					}
					return true;
				};
				
				/**
				 * doStSearch 학생검색을 통한 학생정보를 장학생정보(moScalStudDtlParam)에 셋팅
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doStSearch(poParam){
					
					var vbStudId = poParam.Result.strStudId;
					if(!ValueUtil.isNull(vbStudId)){
						
						var vsEndDt = ExtInstance.getValue("instance('impCommonN')/root/date/END_DT").substr(0,8);
						util.DataMap.setValue(app, "dmReqStudKey", "strStudId", vbStudId);
						util.DataMap.setValue(app, "dmReqStudKey", "strEndDt", vsEndDt);
						
						// 장학금 유효성 체크
						doSetScalCheckValid();
							
					}else{
						// 학생정보 초기화
						doClearStudInfo();
					}	
				};	
				
				/**
				 * doClearStudInfo 학생정보 clear
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doClearStudInfo(){
					var vnIdx = util.Grid.getIndex(app, "grdStudScal");
					
					util.Grid.setCellValue(app, "grdStudScal", "STUD_ID", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "STUD_NO", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "REP_NM", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "SP_NM", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "PROC_RSLT_YEAR", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "STAT_RCD", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "STAT_NM", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "STUD_BANK_CD", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "STUD_ACCT_NO", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "OWNER_NM", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "SCAL_AMT", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "ENT_SCAL", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "TUT_SCAL", "", vnIdx);
					util.Grid.setCellValue(app, "grdStudScal", "ETC_SCAL", "", vnIdx);
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptStudScal","frfStudScal", vnIdx);
				};	
				
				/**
				 * doCheckValid 장학금유효성체크 -> 서비스팩토리 호출
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doSetScalCheckValid(poCallbackFunc){
					
					//strCommand: checkValid 
					util.Submit.send(app, "subCheckValid", function(pbSuccess) {
						
						if(pbSuccess){
							var vbPass = util.DataMap.getValue(app, "dmChkValid", "strPass");
							if(vbPass == "Y"){
								// 장학금 자동계산
								doCalcScalFee();
							} else {
								//서브미션을 통해 받아오던 리스트를 부모창에서 받아서 결과창에 뿌려준다.
								var vnScalFeeValidRst = util.DataSet.getRowCount(app, "dsListResult");
								
								if(vnScalFeeValidRst > 0){
									doShowRstMsgList("impExtCssScalValidRst");
								}	
							}
						}
					});
				};	
				
				
				/**
				 * doCalcScalFee 장학금액 계산
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doCalcScalFee(){
					var vbSuccess = true;
					
					// 장학금자동계산여부 (CH304)
					var vbAutoScalFeeCalc =  util.DataMap.getValue(app, "dmResOnLoad", "strAutoScalFeeCalc");
					if(vbAutoScalFeeCalc != "Y"){
						return;
					}
						
					//장학금지급코드
					util.DataMap.setValue(app, "dmReqKey", "strPmntCiiRcd", util.Control.getValue(app, "ipbFrfPmntCiiRcd"));
					//장학금자동계산 서브미션
					//strCommand: calcScalFee 
					util.Submit.send(app, "subCalcScalFee", function(pbSuccess) {
						if (pbSuccess) {
							
							var vnIdx = util.Grid.getIndex(app, "grdStudScal");
							
							// 계산된 장학금 셋팅
							var vsEntScal = util.DataMap.getValue(app, "dmCalcScalAmt", "strCalcEntAmt");
							var vsTutScal = util.DataMap.getValue(app, "dmCalcScalAmt", "strCalcTutAmt");
							var vsEtcScal = util.DataMap.getValue(app, "dmCalcScalAmt", "strCalcEtcAmt");
							var vsFnreDivRcd = util.DataMap.getValue(app, "dmCalcScalAmt", "strFnreDivRcd");
							
							util.Grid.setCellValue(app, "grdStudScal", "ETC_SCAL", vsEtcScal, vnIdx);
							util.Grid.setCellValue(app, "grdStudScal", "ENT_SCAL", vsEntScal, vnIdx);
							util.Grid.setCellValue(app, "grdStudScal", "TUT_SCAL", vsTutScal, vnIdx);
							util.Grid.setCellValue(app, "grdStudScal", "FNRE_DIV_RCD", vsFnreDivRcd, vnIdx);
							
							//2016.08.17 selectRow, copyNode를 하게되면 프리폼 valuechage 이벤트가 일어남
							// 그래서 리피트, 프리폼 따로 셋팅하도록 함
			//				ExtRepeat.selectRow("rptStudScal", vnIdx);
							
							util.FreeForm.setValue(app, "frfStudScal", "ETC_SCAL", vsEtcScal, false);
							util.FreeForm.setValue(app, "frfStudScal", "ENT_SCAL", vsEntScal, false);
							util.FreeForm.setValue(app, "frfStudScal", "TUT_SCAL", vsTutScal, false);
							util.FreeForm.setValue(app, "frfStudScal", "FNRE_DIV_RCD", vsFnreDivRcd);
							
							// 장학금액 셋팅
							doSetChangedSum();
							
							// 처리 결과 메시지 
							var vsMsg = util.DataMap.getValue(app, "dmCalcScalAmt", "strMsg");
							if(!ValueUtil.isNull(vsMsg)){
								util.Msg.alert("vsMsg");
							}
						}
					});
				};
				
				/**
				 * doSetChangedSum 장학생 지급내역의 금액을 프리폼 장학금금액에 셋팅한다.
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				function doSetChangedSum(){
					
					var vnEntScal = Number(util.FreeForm.getValue(app, "frfStudScal", "ENT_SCAL"));
					var vnTutScal = Number(util.FreeForm.getValue(app, "frfStudScal", "TUT_SCAL"));
					var vnEtcScal = Number(util.FreeForm.getValue(app, "frfStudScal", "ETC_SCAL"));
					
					var vnSum = vnEntScal + vnTutScal + vnEtcScal;
					util.FreeForm.setValue(app, "frfStudScal", "SCAL_AMT", vnSum, false);
					util.Grid.setCellValue(app, "grdStudScal", "SCAL_AMT", vnSum);
				};
				
				/**
				 * onValueChanged_IpbFrfTutScal 장학(수업료) 변경 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onValueChanged_IpbFrfTutScal = function() {
					// 장학금액 셋팅
					doSetChangedSum();
				};
				
				/**
				 * onValueChanged_IpbFrfEntScal 장학(입학금) 변경 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onValueChanged_IpbFrfEntScal = function() {
					// 장학금액 셋팅
					doSetChangedSum();
				};
				
				/**
				 * onValueChanged_IpbFrfEtcScal 장학(기타) 변경 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onValueChanged_IpbFrfEtcScal = function() {
					// 장학금액 셋팅
					doSetChangedSum();
				};
				
				/**
				 * onValueChanged_IpbFrfStudAcctNo 계좌번호 변경 이벤트
				 * @return void
				 * @author AeyoungLee 2016-05-12
				 */	
				moPage.onValueChanged_IpbFrfStudAcctNo = function() {
					var vsValue = util.FreeForm.getValue(app, "frfStudScal", "STUD_ACCT_NO");
					var vsChkValue = "";
					//특수문자만 입력시 널처리
					var specialChars = /[-~!#$^&*=+|:;?"<,.>']/;
					vsValue.split(specialChars).join("");
					
					if (vsValue.match(/[0-9]/g) != null) {
						vsChkValue = vsValue.match(/[0-9]/g).join("");
					} else {
						vsChkValue =  "";
					}
					util.FreeForm.setValue(app, "frfStudScal", "STUD_ACCT_NO", vsChkValue, false);
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListSpSubDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListProcStatRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListStatRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListStudBankCd");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListPmntDivRcd");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListDayNightDivRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsStudScal");
			dataSet_7.parseData({
				"info": "CSS_SCAL_STUD@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO",
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ETC_SCAL"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "ENT_SCAL"},
					{"name": "TUT_SCAL"},
					{"name": "SCAL_FEE_NM"},
					{"name": "STUD_BANK_CD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PROC_STAT_RCD"},
					{"name": "REQ_DT"},
					{"name": "REQ_DESC"},
					{"name": "CNFM_DT"},
					{"name": "SP_NM"},
					{"name": "SP_CD"},
					{"name": "STAT_NM"},
					{"name": "SERIAL_NO"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "FNRE_DIV_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsFrfStudScal");
			dataSet_8.parseData({
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ETC_SCAL"},
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "STAT_RCD"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "ENT_SCAL"},
					{"name": "TUT_SCAL"},
					{"name": "SCAL_FEE_NM"},
					{"name": "STUD_BANK_CD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PROC_STAT_RCD"},
					{"name": "REQ_DT"},
					{"name": "REQ_DESC"},
					{"name": "CNFM_DT"},
					{"name": "SP_NM"},
					{"name": "SP_CD"},
					{"name": "STAT_NM"},
					{"name": "SERIAL_NO"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "FNRE_DIV_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsDptMjAlotNop");
			dataSet_9.parseData({
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_OBJ_DIV_RCD"},
					{"name": "SP_SUB_DIV_RCD"},
					{"name": "DAY_NIGHT_DIV_RCD"},
					{"name": "SHYR"},
					{"name": "ALOT_NOP"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "DEPT_NM"},
					{"name": "SCAL_FEE_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsListResult");
			dataSet_10.parseData({
				"columns": [
					{"name": "MSG"},
					{"name": "NUMBER"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeNm",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strSsObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strPmntDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPmntItvRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSysdate",
						"dataType": "string"
					},
					{
						"name": "strUserSaCd",
						"dataType": "string"
					},
					{
						"name": "strUserSaNm",
						"dataType": "string"
					},
					{
						"name": "strUserObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strAutoScalFeeCalc",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqStudKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [{
					"name": "strInputTermYn",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmChkValid");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strPass",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmCalcScalAmt");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strMsg",
						"dataType": "string"
					},
					{
						"name": "strCalcTutAmt",
						"dataType": "string"
					},
					{
						"name": "strCalcEntAmt",
						"dataType": "string"
					},
					{
						"name": "strCalcEtcAmt",
						"dataType": "string"
					},
					{
						"name": "strFnreDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmRtnPkKeyInfo");
			dataMap_7.parseData({
				"columns" : [
					{
						"name": "strInsStudId",
						"dataType": "string"
					},
					{
						"name": "strInsSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strInsSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strInsSerialNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_7);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/ExtCssDeptScalInput/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/css/ExtCssDeptScalInput/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_7, false);
			submission_2.addResponseData(dataSet_9, false);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCheckValid");
			submission_3.action = "/css/ExtCssDeptScalInput/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addRequestData(dataMap_3);
			submission_3.addResponseData(dataSet_10, false);
			submission_3.addResponseData(dataMap_5, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subCalcScalFee");
			submission_4.action = "/css/ExtCssDeptScalInput/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_3);
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataMap_6, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subSave");
			submission_5.action = "/css/ExtCssDeptScalInput/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataSet_7);
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataMap_7, false);
			app.register(submission_5);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optScalFeeNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-SCRS");
				container.addChild(output_1, {
					"top": "5px",
					"left": "595px",
					"width": "75px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optDeptNm");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-SCR-DEPT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "345px",
					"width": "75px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/imp/impYearSmt", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "330px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbScalFeeNm");
				inputBox_1.maxLength = 50;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optScalFeeNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeNm");
				if(typeof onIpbScalFeeNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbScalFeeNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "675px",
					"width": "140px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnScalFeeNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnScalFeeNmPopClick == "function") {
					button_2.addEventListener("click", onBtnScalFeeNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "815px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbScalFeeCd");
				inputBox_2.visible = false;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optScalFeeNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "837px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_3.maxLength = 50;
				inputBox_3.userAttr({"require": "Y"});
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_3.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "425px",
					"width": "140px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDeptNmPop");
				button_3.value = "";
				button_3.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_3.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "565px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_4 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_4.visible = false;
				inputBox_4.userAttr({"require": "Y"});
				inputBox_4.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptCd");
				container.addChild(inputBox_4, {
					"top": "5px",
					"left": "586px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_5 = new cpr.controls.InputBox("ipbDeptObjDivRcd");
				inputBox_5.visible = false;
				inputBox_5.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptObjDivRcd");
				container.addChild(inputBox_5, {
					"top": "5px",
					"left": "591px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_6 = new cpr.controls.InputBox("ipbSsObjDivRcd");
				inputBox_6.visible = false;
				inputBox_6.bind("value").toDataMap(app.lookup("dmReqKey"), "strSsObjDivRcd");
				container.addChild(inputBox_6, {
					"top": "5px",
					"left": "844px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_7 = new cpr.controls.InputBox("ipbPmntDivRcd");
				inputBox_7.visible = false;
				inputBox_7.bind("value").toDataMap(app.lookup("dmReqKey"), "strPmntDivRcd");
				container.addChild(inputBox_7, {
					"top": "5px",
					"left": "853px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_8 = new cpr.controls.InputBox("ipbPmntItvRcd");
				inputBox_8.visible = false;
				inputBox_8.bind("value").toDataMap(app.lookup("dmReqKey"), "strPmntItvRcd");
				container.addChild(inputBox_8, {
					"top": "5px",
					"left": "863px",
					"width": "5px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SCRSLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "265px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnNew");
				button_4.value = "";
				button_4.style.setClasses(["btn-new"]);
				button_4.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_4.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "965px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnDel");
				button_5.value = "";
				button_5.style.setClasses(["btn-delete"]);
				button_5.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_5.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1030px",
					"width": "60px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnRestore");
				button_6.value = "";
				button_6.style.setClasses(["btn-restore"]);
				button_6.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_6.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "1095px",
					"width": "60px",
					"height": "25px"
				});
				var button_7 = new cpr.controls.Button("btnSave");
				button_7.value = "";
				button_7.style.setClasses(["btn-save"]);
				button_7.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_7.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_7, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdStudScal");
				grid_1.init({
					"dataSet": app.lookup("dsStudScal"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "92px"},
						{"width": "50px"},
						{"width": "71px"},
						{"width": "86px"},
						{"width": "74px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "82px"},
						{"width": "108px"},
						{"width": "81px"},
						{"width": "78px"},
						{"width": "79px"},
						{"width": "80px"},
						{"width": "124px"},
						{"width": "80px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-CRS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCHREGST");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCALTUT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCALENT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCALETC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-BANK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ACCT_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-ACTHOLDER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PMNTDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PRCSTATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQ_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-DLG-COL-C013");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_3 = new cpr.controls.Output();
										output_3.style.css({
											"text-align" : "center"
										});
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptProcRsltYear");
										output_4.dataType = "number";
										output_4.format = "###";
										output_4.style.css({
											"text-align" : "center"
										});
										output_4.bind("value").toDataColumn("PROC_RSLT_YEAR");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptScalAmt");
										output_5.dataType = "number";
										output_5.format = "s#,###";
										output_5.style.css({
											"text-align" : "right"
										});
										output_5.bind("value").toDataColumn("SCAL_AMT");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "TUT_SCAL";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptTutScal");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("TUT_SCAL");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "ENT_SCAL";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptEntScal");
										output_7.dataType = "number";
										output_7.format = "s#,###";
										output_7.style.css({
											"text-align" : "right"
										});
										output_7.bind("value").toDataColumn("ENT_SCAL");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "ETC_SCAL";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptEtcScal");
										output_8.dataType = "number";
										output_8.format = "s#,###";
										output_8.style.css({
											"text-align" : "right"
										});
										output_8.bind("value").toDataColumn("ETC_SCAL");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "STUD_BANK_CD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbStudBankCd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsListStudBankCd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("STUD_BANK_CD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "STUD_ACCT_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "PMNT_DIV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbPmntDivRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										comboBox_2.userAttr({"require": "Y"});
										(function(comboBox_2){
											comboBox_2.addItem(new cpr.controls.Item("선택", ""));
											comboBox_2.setItemSet(app.lookup("dsListPmntDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("PMNT_DIV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "PROC_STAT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbProcStatRcd");
										comboBox_3.enabled = false;
										comboBox_3.hideButton = true;
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsListProcStatRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("PROC_STAT_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REQ_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "REQ_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "CNFM_DT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdStudScalSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdStudScalSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1215px",
					"height": "400"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("UI-SCR-SCALSTUDINFO");
				container.addChild(userDefinedControl_3, {
					"top": "436px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var group_3 = linker.group_3 = new cpr.controls.Container("frfStudScal");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var dateInput_1 = new cpr.controls.DateInput("dipFrfReqDt");
					dateInput_1.maxDate = new Date(9999, 11, 31);
					dateInput_1.userAttr({"require": "Y"});
					dateInput_1.bind("fieldLabel").toExpression("#optFrfReqDt.value");
					dateInput_1.bind("value").toDataColumn("REQ_DT");
					container.addChild(dateInput_1, {
						"top": "81px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var output_9 = new cpr.controls.Output("optFrfProcRsltYear");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-GLS-SHYR");
					container.addChild(output_9, {
						"top": "5px",
						"left": "680px",
						"width": "45px",
						"height": "25px"
					});
					var output_10 = new cpr.controls.Output("optFrfStudBankCd");
					output_10.value = "";
					output_10.bind("value").toLanguage("UI-GLS-BANK");
					container.addChild(output_10, {
						"top": "55px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfPmntDivRcd");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-SCR-PMNTDIV");
					container.addChild(output_11, {
						"top": "80px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfReqDesc");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-DB-REQ_DESC");
					container.addChild(output_12, {
						"top": "105px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfReqDesc");
					inputBox_9.maxLength = 100;
					inputBox_9.bind("fieldLabel").toExpression("#optFrfReqDesc.value");
					inputBox_9.bind("value").toDataColumn("REQ_DESC");
					container.addChild(inputBox_9, {
						"top": "105px",
						"left": "104px",
						"width": "341px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfTutScal");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-SCALTUT");
					container.addChild(output_13, {
						"top": "30px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfStudAcctNo");
					output_14.value = "";
					output_14.bind("value").toLanguage("UI-DB-ACCT_NO");
					container.addChild(output_14, {
						"top": "55px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfProcStatRcd");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-SCR-PRCSTATE");
					container.addChild(output_15, {
						"top": "80px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_4 = new cpr.controls.ComboBox("cbbFrfStudBankCd");
					comboBox_4.bind("fieldLabel").toExpression("#optFrfStudBankCd.value");
					comboBox_4.bind("value").toDataColumn("STUD_BANK_CD");
					(function(comboBox_4){
						comboBox_4.setItemSet(app.lookup("dsListStudBankCd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_4);
					container.addChild(comboBox_4, {
						"top": "55px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfOwerNm");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-SCR-ACTHOLDER");
					container.addChild(output_16, {
						"top": "56px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfReqDt");
					output_17.value = "";
					output_17.style.setClasses(["require"]);
					output_17.bind("value").toLanguage("UI-DB-REQDT");
					container.addChild(output_17, {
						"top": "81px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfCnfmDt");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-SCR-CNFM_DT");
					container.addChild(output_18, {
						"top": "106px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfEntScal");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-SCR-SCALENT");
					container.addChild(output_19, {
						"top": "31px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfProcStatRcd");
					comboBox_5.enabled = false;
					comboBox_5.hideButton = true;
					comboBox_5.bind("fieldLabel").toExpression("#optFrfProcStatRcd.value");
					comboBox_5.bind("value").toDataColumn("PROC_STAT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsListProcStatRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "80px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfTutScal");
					numberEditor_1.format = "999,999,999,999";
					numberEditor_1.bind("fieldLabel").toExpression("#optFrfTutScal.value");
					numberEditor_1.bind("value").toDataColumn("TUT_SCAL");
					if(typeof onIpbFrfTutScalValueChange == "function") {
						numberEditor_1.addEventListener("value-change", onIpbFrfTutScalValueChange);
					}
					container.addChild(numberEditor_1, {
						"top": "31px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfPmntDivRcd");
					comboBox_6.enabled = false;
					comboBox_6.hideButton = true;
					comboBox_6.userAttr({"require": "Y"});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfPmntDivRcd.value");
					comboBox_6.bind("value").toDataColumn("PMNT_DIV_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsListPmntDivRcd"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "81px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfStudId");
					output_20.value = "";
					output_20.style.setClasses(["require"]);
					output_20.bind("value").toLanguage("UI-GLS-STUD_ID");
					container.addChild(output_20, {
						"top": "5px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var button_8 = new cpr.controls.Button("btnFrfStudPop");
					button_8.value = "";
					button_8.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfStudPopClick == "function") {
						button_8.addEventListener("click", onBtnFrfStudPopClick);
					}
					container.addChild(button_8, {
						"top": "5px",
						"left": "199px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_10.maxLength = 20;
					inputBox_10.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_10.bind("value").toDataColumn("STUD_NO");
					if(typeof onIpbFrfStudIdValueChange == "function") {
						inputBox_10.addEventListener("value-change", onIpbFrfStudIdValueChange);
					}
					container.addChild(inputBox_10, {
						"top": "5px",
						"left": "104px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfStudIdObj");
					inputBox_11.visible = false;
					inputBox_11.userAttr({"require": "Y"});
					inputBox_11.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_11.bind("value").toDataColumn("STUD_ID");
					container.addChild(inputBox_11, {
						"top": "5px",
						"left": "221px",
						"width": "5px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optFrfRepNm");
					output_21.value = "";
					output_21.bind("value").toLanguage("UI-SCR-NAME");
					container.addChild(output_21, {
						"top": "5px",
						"left": "230px",
						"width": "95px",
						"height": "25px"
					});
					var output_22 = new cpr.controls.Output("optFrfSpNm");
					output_22.value = "";
					output_22.bind("value").toLanguage("UI-GLS-CRS");
					container.addChild(output_22, {
						"top": "5px",
						"left": "455px",
						"width": "95px",
						"height": "25px"
					});
					var numberEditor_2 = new cpr.controls.NumberEditor("ipbFrfScalAmt");
					numberEditor_2.enabled = false;
					numberEditor_2.readOnly = true;
					numberEditor_2.format = "9,999,999,999";
					numberEditor_2.bind("fieldLabel").toExpression("#optFrfScalAmt.value");
					numberEditor_2.bind("value").toDataColumn("SCAL_AMT");
					container.addChild(numberEditor_2, {
						"top": "31px",
						"left": "104px",
						"width": "115px",
						"height": "25px"
					});
					var output_23 = new cpr.controls.Output("optFrfScalAmt");
					output_23.value = "";
					output_23.bind("value").toLanguage("UI-DB-SCAL_AMT");
					container.addChild(output_23, {
						"top": "31px",
						"left": "5px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("ipbFrfRepNm");
					inputBox_12.enabled = false;
					inputBox_12.readOnly = true;
					inputBox_12.maxLength = 5;
					inputBox_12.bind("fieldLabel").toExpression("#optFrfRepNm.value");
					inputBox_12.bind("value").toDataColumn("REP_NM");
					container.addChild(inputBox_12, {
						"top": "5px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var numberEditor_3 = new cpr.controls.NumberEditor("ipbFrfStudAcctNo");
					numberEditor_3.format = "999,999,999,999,999,999,999,999,999,999";
					numberEditor_3.bind("fieldLabel").toExpression("#optFrfStudAcctNo.value");
					numberEditor_3.bind("value").toDataColumn("STUD_ACCT_NO");
					if(typeof onIpbFrfStudAcctNoValueChange == "function") {
						numberEditor_3.addEventListener("value-change", onIpbFrfStudAcctNoValueChange);
					}
					container.addChild(numberEditor_3, {
						"top": "55px",
						"left": "330px",
						"width": "115px",
						"height": "25px"
					});
					var dateInput_2 = new cpr.controls.DateInput("dipFrfCnfmDt");
					dateInput_2.enabled = false;
					dateInput_2.readOnly = true;
					dateInput_2.maxDate = new Date(9999, 11, 31);
					dateInput_2.bind("fieldLabel").toExpression("#optFrfCnfmDt.value");
					dateInput_2.bind("value").toDataColumn("CNFM_DT");
					container.addChild(dateInput_2, {
						"top": "106px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("ipbFrfSpNm");
					inputBox_13.enabled = false;
					inputBox_13.readOnly = true;
					inputBox_13.maxLength = 5;
					inputBox_13.bind("fieldLabel").toExpression("#optFrfSpNm.value");
					inputBox_13.bind("value").toDataColumn("SP_NM");
					container.addChild(inputBox_13, {
						"top": "5px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var numberEditor_4 = new cpr.controls.NumberEditor("ipbFrfEntScal");
					numberEditor_4.format = "999,999,999,999";
					numberEditor_4.bind("fieldLabel").toExpression("#optFrfEntScal.value");
					numberEditor_4.bind("value").toDataColumn("ENT_SCAL");
					if(typeof onIpbFrfEntScalValueChange == "function") {
						numberEditor_4.addEventListener("value-change", onIpbFrfEntScalValueChange);
					}
					container.addChild(numberEditor_4, {
						"top": "31px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("ipbFrfOwerNm");
					inputBox_14.maxLength = 50;
					inputBox_14.bind("fieldLabel").toExpression("#optFrfOwerNm.value");
					inputBox_14.bind("value").toDataColumn("OWNER_NM");
					container.addChild(inputBox_14, {
						"top": "55px",
						"left": "555px",
						"width": "115px",
						"height": "25px"
					});
					var output_24 = new cpr.controls.Output("optFrfEtcScal");
					output_24.value = "";
					output_24.bind("value").toLanguage("UI-SCR-SCALETC");
					container.addChild(output_24, {
						"top": "31px",
						"left": "680px",
						"width": "95px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfProcRsltYear");
					inputBox_15.enabled = false;
					inputBox_15.readOnly = true;
					inputBox_15.maxLength = 5;
					inputBox_15.bind("fieldLabel").toExpression("#optFrfProcRsltYear.value");
					inputBox_15.bind("value").toDataColumn("PROC_RSLT_YEAR");
					container.addChild(inputBox_15, {
						"top": "5px",
						"left": "730px",
						"width": "30px",
						"height": "25px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfEtcScal");
					numberEditor_5.format = "999,999,999,999";
					numberEditor_5.bind("fieldLabel").toExpression("#optFrfEtcScal.value");
					numberEditor_5.bind("value").toDataColumn("ETC_SCAL");
					if(typeof onIpbFrfEtcScalValueChange == "function") {
						numberEditor_5.addEventListener("value-change", onIpbFrfEtcScalValueChange);
					}
					container.addChild(numberEditor_5, {
						"top": "31px",
						"left": "780px",
						"width": "110px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbFrfStatNm");
					inputBox_16.enabled = false;
					inputBox_16.readOnly = true;
					inputBox_16.maxLength = 5;
					inputBox_16.bind("fieldLabel").toExpression("#optFrfStatNm.value");
					inputBox_16.bind("value").toDataColumn("STAT_NM");
					container.addChild(inputBox_16, {
						"top": "5px",
						"left": "850px",
						"width": "40px",
						"height": "25px"
					});
					var output_25 = new cpr.controls.Output("optFrfStatNm");
					output_25.value = "";
					output_25.bind("value").toLanguage("UI-SCR-SCHREGST");
					container.addChild(output_25, {
						"top": "5px",
						"left": "770px",
						"width": "75px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "461px",
					"left": "5px",
					"width": "905px",
					"height": "135px"
				});
				var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
				userDefinedControl_4.bind("title").toLanguage("UI-SCR-MEMSTANDLIST");
				container.addChild(userDefinedControl_4, {
					"top": "436px",
					"left": "915px",
					"width": "255px",
					"height": "25px"
				});
				var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdDptMjAlotNop");
				grid_2.init({
					"dataSet": app.lookup("dsDptMjAlotNop"),
					"columns": [
						{"width": "40px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "45px"},
						{"width": "65px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PRCSDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-DNDIV2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-SCR-ALOTNOP");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SP_SUB_DIV_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbSpSubDivCd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsListSpSubDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SP_SUB_DIV_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("gdCbbDayNightDivRcd");
										comboBox_8.enabled = false;
										comboBox_8.hideButton = true;
										(function(comboBox_8){
											comboBox_8.setItemSet(app.lookup("dsListDayNightDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("DAY_NIGHT_DIV_RCD");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SHYR";
									cell.control = (function(){
										var output_26 = new cpr.controls.Output("gdOptShyr");
										output_26.dataType = "number";
										output_26.format = "#####";
										output_26.style.css({
											"text-align" : "center"
										});
										output_26.bind("value").toDataColumn("SHYR");
										return output_26;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "DAY_NIGHT_DIV_RCD";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "ALOT_NOP";
									cell.control = (function(){
										var output_27 = new cpr.controls.Output("gdOptAlotNop");
										output_27.dataType = "number";
										output_27.format = "s#,###";
										output_27.style.css({
											"text-align" : "right"
										});
										output_27.bind("value").toDataColumn("ALOT_NOP");
										return output_27;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_2, {
					"top": "461px",
					"left": "915px",
					"width": "305px",
					"height": "135px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "5px",
				"width": "1225px",
				"height": "602"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "677px",
				"left": "115px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "677px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_4 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_4.app = app;
				}
			});
			container.addChild(embeddedApp_4, {
				"top": "675px",
				"left": "229px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_5 = new cpr.controls.EmbeddedApp("emaExtCssScalValidRst");
			cpr.core.App.load("app/css/impExtCssScalValidResult", function(app) {
				if(app){
					embeddedApp_5.app = app;
				}
			});
			container.addChild(embeddedApp_5, {
				"top": "45px",
				"left": "1240px",
				"width": "621px",
				"height": "245px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.group_3.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.userDefinedControl_4.ctrl = linker.grid_2;
		}
	});
	app.title = "학과장학생추천입력";
	cpr.core.Platform.INSTANCE.register(app);
})();
