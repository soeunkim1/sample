/*
 * App URI: app/css/extCssCScalStudUpload
 * Source Location: app/css/extCssCScalStudUpload.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/extCssCScalStudUpload", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCssCScalStudUpload.xtm"/>
			
			
			var extCssCScalStudUpload = function() {
					
				var moPage = new Page();
				var moPObject = new PObject();
				
				/* 
				 * 장학금 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCssPScalFeeSch = [
				{
					controlId 		: "btnScalFeeNmPop",
					iCd 			: "",
					iNm 			: "ipbScalFeeNm",
					iObjDivRcd 		: "CC009SS",
					iLanDivRcd 		: "",
					iKeyDate		: "/root/reqKey/END_DT",
					iScalFeeCls1	: "",	
					iScalFeeCls2	: "",	
					iScalFeeCls3	: "",	
					iScalFeeCls4	: "",	
					iScalFeeCls5	: "",	
					iDeptCd 		: "",		
					iDeptObjDivRcd 	: "",	
					iMngDeptDiv		: "", 
					iWrkScalYn		: "",
					oScalFeeCd 		: "ipbScalFeeCd",
					oScalFeeNm 		: "ipbScalFeeNm",
					oObjDivRcd 		: "ipbSsObjDivRcd",
					oPmntDivRcd 	: "",
					oPmntItvRcd 	: "",
					func 			: null
				}
				];
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onModelConstructDone_ExtCssCScalStudUpload = function() {
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
							util.Control.setValue(app, "dipProcPlanDt", util.DataMap.getValue(app, "dmResList", "strSysDate").substring(0,8));
						}
					});
				};
				
				/**
				 * @desc 학년도 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onValueChanged_CbbYear = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학기 콤보 체인지 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onValueChanged_CbbSmt = function() {
					doChangeDate();
				};
				
				/**
				 * @desc 학년도학기 변경 이벤트 - 기준 시작일자, 종료일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				function doChangeDate() {
					util.DataMap.setValue(app, "dmReqKey", "ST_DT", "");
					util.DataMap.setValue(app, "dmReqKey", "END_DT", "");
					//strCommand: date 
					util.Submit.send(app, "subDate", function(){
						//ExtControl.reset(["ipbScalFeeNm","ipbScalFeeCd","ipbSsObjDivRcd"]);	
					}); 
				};
				
				/**
				 * @desc 장학금명 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-08-30
				 */
				moPage.onClick_BtnScalFeeNmPop = function(sender) {
					doOnClickStdCssPScalFeePop(sender);
				}
				
				/**
				 * @desc 장학금명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-08-30
				 */
				moPage.onValueChanged_IpbScalFeeNm = function(sender) {
					doOnChangeStdCssPScalFeePop(sender);
				}
				
				/**
				 * @desc 다운로드버튼 클릭이벤트 (업로드양식다운로드)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onClick_BtnSaveFileDown = function() {
							
					var vsFileChgNm = "장학_장학생일괄업로드파일.xlsx";
					
					var voParam = {
								"strFileSubPath" : "stdCmnCTemplateFile",
								"strFileNm" 	 : vsFileChgNm,
								"strOriFileNm" 	 : vsFileChgNm,
								"strTmpFilePath" : "",
								"strCommand" 	 : "fileDownLoad"
					}
					//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
					FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
				};
				
				/**
				 * @desc Browse 버튼 클릭 이벤트 (File Dialog 창 open)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onClick_BtnSaveBrowse = function() {
					FileUtil.getFileName(true, ["xls", "xlsx"], function(psFileNm){
						util.Control.setValue(app, "optFilePath", psFileNm);
					},"",false);
				};
				
				/**
				 * @desc 실행버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-05-18
				 */
				moPage.onClick_BtnSaveRun = function() {
					
					util.Msg.notify(app, "null");
					
					if(!util.validate(app, ["cbbSchYear", "cbbSmt", "ipbScalFeeNm", "ipbScalFeeCd", "dipProcPlanDt", "optFilePath"])) return;
					
					// 2016.12.1 컴펌메시지 추가
					// 체크예외처리여부를 선택하였습니다.\n장학금 유효성 체크사항을 제외하고 처리하시겠습니까?
					var vsExptProcYn = util.Control.getValue(app, "ckbExptProcYn");
					if(vsExptProcYn == "Y"){
						if(!util.Msg.confirm("NLS-CSS-M109") ) return;
					}
					
					// 2016.10.14 배치처리전 커버페이지 씌우는 로직추가
					util.coverPage(app);
					
					// 엑셀업로드 서브미션
					//strCommand: execUpload 
					util.Submit.send(app, "subExecUpload", function(pbSuccess){
						if(pbSuccess){
							
							var vsErrorCnt = util.DataMap.getValue(app, "dmResList", "strErrorCnt"); // 오류갯수
							
							if(vsErrorCnt == null || vsErrorCnt == "") {
								// 오류개수 값이 없을때 0으로 세팅 
								vsErrorCnt = "0";
							}
							
							if(vsErrorCnt > 0 ){
								util.Control.setValue(app, "optFilePath", "");
								
								var vsFileDir = util.DataMap.getValue(app, "dmFileInfo", "strFileDir");
								var vsFileNm = util.DataMap.getValue(app, "dmFileInfo", "strFileNm");
								var vsFileChgNm = util.DataMap.getValue(app, "dmFileInfo", "strFileChgNm");
								var strTmpFilePath = util.DataMap.getValue(app, "dmFileInfo", "strTmpFilePath");
								
								var voParam = {
									"strFileSubPath" : "",
									"strFileNm" : vsFileNm,
									"strOriFileNm" : vsFileNm,
									"strTmpFilePath" : strTmpFilePath,
									"strCommand" : "fileDownLoad"
								}
								
								//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
								FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
								
							}
							
							// 총건수
							var vsTotCnt = util.DataMap.getValue(app, "dmResList", "strTotCnt");
							if(vsTotCnt == null || vsTotCnt == "") {
								vsTotCnt = "0";
							}
								
							// 정상처리건수	
							var vsResultCnt = util.DataMap.getValue(app, "dmResList", "strResultCnt");
							if(vsResultCnt == null || vsResultCnt == "") {
								// 총 count 가 없을때 0으로 세팅. 2013.02.01
								vsResultCnt = "0";
							}
							
							// 총 @건 중 정상처리 @건,  오류 @건 처리되었습니다.\n오류 건이 있을 경우 오류파일의 내용을 참고하십시오.
							if(vsErrorCnt > 0 ){
								util.Msg.alert("NLS-CSS-M096", [vsTotCnt, vsResultCnt, vsErrorCnt, NLS.CSS.M097]);	
							}else{
								util.Msg.alert("NLS-CSS-M096", [vsTotCnt, vsResultCnt, vsErrorCnt]);		
							}	
							
							// 파일업로드가 완료되었습니다.
							util.Msg.notify(app, "NLS.INF.M038");
								
						}else{
							// 처리가 취소되었습니다.
							util.Msg.notify(app, "NLS.INF.M013");
						}
						
						util.Control.setValue(app, "optFilePath", "");
						
						util.removeCover(app);
					});
				};
				
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListYear");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListSmt");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "strFilePath",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeNm",
						"dataType": "string"
					},
					{
						"name": "strSsObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strProcPlanDt",
						"dataType": "string"
					},
					{
						"name": "strExptProcYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResList");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSysDate",
						"dataType": "string"
					},
					{
						"name": "strErrorCnt",
						"dataType": "string"
					},
					{
						"name": "strFileNameError",
						"dataType": "string"
					},
					{
						"name": "strErrorMsg",
						"dataType": "string"
					},
					{
						"name": "strResultCnt",
						"dataType": "string"
					},
					{
						"name": "strTotCnt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmFileInfo");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					},
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResCheck");
			dataMap_4.parseData({
				"columns" : [{
					"name": "intCheck",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/ExtCssScalStudUpload/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataMap_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subDate");
			submission_2.action = "/css/ExtCssScalStudUpload/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subExecUpload");
			submission_3.action = "/css/ExtCssScalStudUpload/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataMap_2, false);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subFileDown");
			submission_4.action = "/css/ExtCssScalStudUpload/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addResponseData(dataMap_3, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnSaveRun");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-GLS-EXEC");
			if(typeof onBtnSaveRunClick == "function") {
				button_1.addEventListener("click", onBtnSaveRunClick);
			}
			container.addChild(button_1, {
				"top": "35px",
				"left": "1171px",
				"width": "59px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpExecCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "120px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("NLS-DLG-LBL-L002");
				container.addChild(output_2, {
					"top": "5px",
					"left": "320px",
					"width": "120px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListYear"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				if(typeof onCbbSchYearSelectionChange == "function") {
					comboBox_1.addEventListener("selection-change", onCbbSchYearSelectionChange);
				}
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "130px",
					"width": "180px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListSmt"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				if(typeof onCbbSmtSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbSmtSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "445px",
					"width": "180px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optScalFeeNm");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-SCR-SCRS");
				container.addChild(output_3, {
					"top": "5px",
					"left": "635px",
					"width": "120px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbScalFeeNm");
				inputBox_1.maxLength = 50;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optScalFeeNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeNm");
				if(typeof onIpbScalFeeNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbScalFeeNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "759px",
					"width": "150px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnScalFeeNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnScalFeeNmPopClick == "function") {
					button_2.addEventListener("click", onBtnScalFeeNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "909px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbScalFeeCd");
				inputBox_2.visible = false;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optScalFeeNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "932px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbSsObjDivRcd");
				inputBox_3.visible = false;
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strSsObjDivRcd");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "936px",
					"width": "5px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optProcPlanDt");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("NLS-SCR-PROCPLANDT");
				container.addChild(output_4, {
					"top": "29px",
					"left": "5px",
					"width": "120px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipProcPlanDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optProcPlanDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcPlanDt");
				container.addChild(dateInput_1, {
					"top": "29px",
					"left": "130px",
					"width": "120px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optExptProcYn");
				output_5.value = "체크예외처리여부";
				container.addChild(output_5, {
					"top": "30px",
					"left": "320px",
					"width": "120px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbExptProcYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.bind("fieldLabel").toExpression("#optExptProcYn.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strExptProcYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "445px",
					"width": "25px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "57"
			});
			
			var group_2 = new cpr.controls.Container("grpFile");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_6 = new cpr.controls.Output("optFilePath");
				output_6.value = "";
				output_6.style.setClasses(["require"]);
				output_6.bind("value").toLanguage("UI-SCR-UPLOADFILE");
				container.addChild(output_6, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optFilePath");
				output_7.value = "";
				output_7.bind("value").toDataMap(app.lookup("dmReqKey"), "strFilePath");
				container.addChild(output_7, {
					"top": "5px",
					"left": "150px",
					"width": "1006px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSaveBrowse");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-SCR-EXCEL_UPLOAD");
				if(typeof onBtnSaveBrowseClick == "function") {
					button_3.addEventListener("click", onBtnSaveBrowseClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_8 = new cpr.controls.Output("optUploadFile");
				output_8.value = "";
				output_8.bind("value").toLanguage("UI-SCR-UPLOADFILEDOWN");
				container.addChild(output_8, {
					"top": "30px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSaveFileDown");
				button_4.value = "";
				button_4.bind("value").toLanguage("UI-SCR-DOWNLOAD");
				if(typeof onBtnSaveFileDownClick == "function") {
					button_4.addEventListener("click", onBtnSaveFileDownClick);
				}
				container.addChild(button_4, {
					"top": "30px",
					"left": "150px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "120",
				"left": "5px",
				"width": "1225px",
				"height": "55px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "654px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "장학생일괄업로드";
	cpr.core.Platform.INSTANCE.register(app);
})();
