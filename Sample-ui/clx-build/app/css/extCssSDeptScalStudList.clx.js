/*
 * App URI: app/css/extCssSDeptScalStudList
 * Source Location: app/css/extCssSDeptScalStudList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/extCssSDeptScalStudList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCssSDeptScalStudList.xtm"/>
			
			/**
			 * 장학금수혜내역조회(학과용)
			 * @class extCssSDeptScalStudList
			 * @author Aeyoung Lee 2017.01.04
			 */
			var extCssSDeptScalStudList = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
				
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnDeptNmPop",
					iCd 		: "",
					iNm 		: "ipbDeptNm",
					iObjDivRcd 	: ["CC009SA"],
					iLanDivRcd 	: "",
					iKeyDate 	: "",
					oObjDivRcd 	: "ipbDeptObjDivRcd",
					oCd 		: "ipbDeptCd",
					oCdNm 		: "ipbDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func : function() {
						
						// 학과에 따른 학년,반 콤보박스 필터링 적용
						var vsSaCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
						doFilterShyr(vsSaCd);
					}
				}
				];
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2017.01.04
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc OnLoad 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2017.01.04
				 */
				function doOnLoad() {
					
					// 교직원 중에서 교원, 조교만 사용가능.
					if(!(moUserInfo.userDivRcd == "CC00502" && (moUserInfo.staffGrp == "CF001ASST" || moUserInfo.staffGrp == "CF001TCHR"))){
						//교원, 조교만 사용가능한 화면입니다.
						util.Msg.alert("NLS-CSS-M112");
						util.coverPage(app);
						return;
					}	
					
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptDeptScalStud"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					// 조회조건 임포트 학년도학기 셋팅
					doOnLoadImpNS("CSS", function(){
						
						//서브미션 실행 (실패시 cover page)
						//strCommand: onLoad 
						util.Submit.send(app, "subOnLoad", function(pbSuccess){
							if(pbSuccess){
								// 콤보박스 
								util.Control.redraw(app, ["cbbShyr","cbbClassRcd"]);
								
								// 세션 하위학사부서 중 하나 셋팅
								var vsUserSaCd = util.DataMap.getValue(app, "dmResOnLoad", "strUserSaCd");
								var vsUserSaNm = util.DataMap.getValue(app, "dmResOnLoad", "strUserSaNm");
								var vsUserObjDivRcd = util.DataMap.getValue(app, "dmResOnLoad", "strUserObjDivRcd");
								
								util.Control.setValue(app, "ipbDeptNm", vsUserSaNm);
								util.Control.setValue(app, "ipbDeptCd", vsUserSaCd);
								util.Control.setValue(app, "ipbDeptObjDivRcd", vsUserObjDivRcd);
								
								doFilterShyr(vsUserSaCd);
								
								// 소속 포커스
								util.Control.setFocus(app, "ipbDeptNm");		
							}
						});
						
					});
					
				};
				
				/**
				 * @desc 학과코드에 따른 학년,반 콤보박스 필터링 (지도교수일 경우에만 적용)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				function doFilterShyr(psSaCd) {
					
					if(ValueUtil.isNull(psSaCd)) psSaCd = "X";
					
					var vsApsDptMjYn = util.DataMap.getValue(app, "dmResOnLoad", "strApsDptMjYn");
					
					// 조교 혹은 학과장이 아닌 교수의 경우 해당 지도학년반 보여지도록 필터링 적용
					if(vsApsDptMjYn != "Y"){
						// 학년필터링
						var voShyrCtl = model.getControl("cbbShyr");
						ExtSelectCtl.setValue("cbbShyr", "");
						var vsShyrOrgRef = voShyrCtl.getAttr("nodeset");
						var vsShyrFilter = "[child::SA_CD = '"+ psSaCd +"']";
						voShyrCtl.setAttr("nodeset", vsShyrOrgRef + vsShyrFilter);
						voShyrCtl.refresh();
						
						voShyrCtl.setAttr("nodeset", vsShyrOrgRef);
						
						// 반필터링
						var voClassCtl = model.getControl("cbbClassRcd");
						ExtSelectCtl.setValue("cbbClassRcd", "");
						var vsClassOrgRef = voClassCtl.getAttr("nodeset");
						var vsClassFilter = "[child::SA_CD = '"+ psSaCd +"']";
						voClassCtl.setAttr("nodeset", vsClassOrgRef + vsClassFilter);
						voClassCtl.refresh();
						
						voClassCtl.setAttr("nodeset", vsClassOrgRef);
					}	
				};	
				
				/**
				 * @desc 학과코드, 학년에 따른 반 콤보박스 필터링 (지도교수일 경우에만 적용)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				function doFilterClass(psSaCd, psShyr) {
					
					if(ValueUtil.isNull(psSaCd)) psSaCd = "X";
					if(ValueUtil.isNull(psShyr)) psShyr = "X";
					
					var vsApsDptMjYn = util.DataMap.getValue(app, "dmResOnLoad", "strApsDptMjYn");
					
					// 조교 혹은 학과장이 아닌 교수의 경우 해당 지도학년반 보여지도록 필터링 적용
					if(vsApsDptMjYn != "Y"){
						// 반필터링
						var voCtl = model.getControl("cbbClassRcd");
						ExtSelectCtl.setValue("cbbClassRcd", "");
						var vsOrgRef = voCtl.getAttr("nodeset");
						var vsFilter = "[child::SA_CD = '"+ psSaCd +"' and SHYR = '"+ psShyr +"']";
						voCtl.setAttr("nodeset", vsOrgRef + vsFilter);
						voCtl.refresh();
						
						voCtl.setAttr("nodeset", vsOrgRef);
					}	
				};	
				
				/**
				 * @desc 학과 팝업 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				moPage.onClick_BtnDeptNmPop = function(sender) {
					doSetPopKeyDate();
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 학과명 변경 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				moPage.onValueChanged_IpbDeptNm = function(sender) {
					doSetPopKeyDate();
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc 팝업호출시 기준일자 셋팅
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				function doSetPopKeyDate() {
					var vsEndDt = ExtInstance.getValue("instance('impCommonN')/root/date/END_DT").substr(0,8);
					
					moPObject.moIdsForStdCmnPObjSch[0].iKeyDate = vsEndDt;
				};
				
				/**
				 * @desc 학년변경 이벤트
						- 반콤보박스 필터링 적용
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.04
				 */
				moPage.onValueChanged_CbbShyr = function() {
					
					var vsSaCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
					var vsShyr = util.DataMap.getValue(app, "dmReqKey", "strShyr");
					doFilterClass(vsSaCd, vsShyr);
				};
				
				/**
				 * @desc 학년도학기변경 이벤트
							- 학년도학기 임포트 서브미션 콜백 함수
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2017.01.18
				 */
				function doSetKeyDateYearSmtImp() {
					//서브미션 실행 
					//strCommand: doChgYearSmt 
					util.Submit.send(app, "subChgYearSmt", function(pbSuccess){
						if(pbSuccess){
							// 콤보박스 
							util.Control.redraw(app, ["cbbShyr","cbbClassRcd"]);
							
							var vsSaCd = util.DataMap.getValue(app, "dmReqKey", "strDeptCd");
							
							// 학년반 필터링
							doFilterShyr(vsSaCd);
							
							// 소속 포커스
							util.Control.setFocus(app, "ipbDeptNm");		
						}
					});
				};
				
				/**
				 * @desc 조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2017.01.04
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							util.Msg.notify(app, "NLS.INF.M024");					
						}
					});
				};
				
				/**
				 * @desc 장학금 수혜자 목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2017.01.04
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdDeptScalStud");
						} 
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListShyr");
			dataSet_1.parseData({
				"columns": [
					{"name": "SHYR_CD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SHYR"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListClass");
			dataSet_2.parseData({
				"columns": [
					{"name": "CLSS_RCD"},
					{"name": "CLASS_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SA_CD"},
					{"name": "SHYR"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsDeptScalStud");
			dataSet_3.parseData({
				"info": "CSS_SCAL_STUD@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_SMT_NM"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "CLASS_NM"},
					{"name": "STAT_NM"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "REG_AMT"},
					{"name": "ETC_SCAL"},
					{"name": "ENT_SCAL"},
					{"name": "TUT_SCAL"},
					{"name": "TOT_SCAL"},
					{"name": "OVER_AMT"},
					{"name": "SMT_EXD_YN"},
					{"name": "CGT_EXD_YN"},
					{"name": "SCAL_INFO"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			var dataMap_1 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strUserSaCd",
						"dataType": "string"
					},
					{
						"name": "strUserSaNm",
						"dataType": "string"
					},
					{
						"name": "strUserObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strApsDptMjYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strShyr",
						"dataType": "string"
					},
					{
						"name": "strClassRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/ExtCssDeptScalStudList/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_1, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subChgYearSmt");
			submission_2.action = "/css/ExtCssDeptScalStudList/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataSet_2, false);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subList");
			submission_3.action = "/css/ExtCssDeptScalStudList/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataSet_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaYearSmt");
				cpr.core.App.load("app/imp/impYearSmt", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "330px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optDeptNm");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-DEPT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "345px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbDeptNm");
				inputBox_1.maxLength = 50;
				inputBox_1.userAttr({"require": "Y"});
				inputBox_1.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptNm");
				if(typeof onIpbDeptNmValueChange == "function") {
					inputBox_1.addEventListener("value-change", onIpbDeptNmValueChange);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "430px",
					"width": "170px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDeptNmPop");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnDeptNmPopClick == "function") {
					button_2.addEventListener("click", onBtnDeptNmPopClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "600px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbDeptCd");
				inputBox_2.visible = false;
				inputBox_2.userAttr({"require": "Y"});
				inputBox_2.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptCd");
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "621px",
					"width": "5px",
					"height": "25px"
				});
				var inputBox_3 = new cpr.controls.InputBox("ipbDeptObjDivRcd");
				inputBox_3.visible = false;
				inputBox_3.bind("fieldLabel").toExpression("#optDeptNm.value");
				inputBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strDeptObjDivRcd");
				container.addChild(inputBox_3, {
					"top": "5px",
					"left": "625px",
					"width": "5px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optProcRlst");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-GLS-SHYR");
				container.addChild(output_2, {
					"top": "5px",
					"left": "634px",
					"width": "80px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optClassRcd");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-GLS-CLASSZ");
				container.addChild(output_3, {
					"top": "5px",
					"left": "799px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbClassRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optClassRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strClassRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListClass"), {
						"label": "CLASS_NM",
						"value": "CLSS_RCD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "884px",
					"width": "75px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbShyr");
				comboBox_2.bind("fieldLabel").toExpression("#optClassRcd.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strShyr");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsListShyr"), {
						"label": "SHYR_CD",
						"value": "SHYR_CD"
					});
				})(comboBox_2);
				if(typeof onCbbShyrSelectionChange == "function") {
					comboBox_2.addEventListener("selection-change", onCbbShyrSelectionChange);
				}
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "718px",
					"width": "75px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "32px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SCRSLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "317px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdDeptScalStud");
				grid_1.init({
					"dataSet": app.lookup("dsDeptScalStud"),
					"columns": [
						{"width": "40px"},
						{"width": "120px"},
						{"width": "40px"},
						{"width": "50px"},
						{"width": "65px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "95px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "CLASS_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "STAT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCAL_INFO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "REG_AMT";
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("gdOptRegAmt");
										output_4.dataType = "number";
										output_4.format = "s#,###";
										output_4.style.css({
											"text-align" : "right"
										});
										output_4.bind("value").toDataColumn("REG_AMT");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ENT_SCAL";
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("gdOptEntScal");
										output_5.dataType = "number";
										output_5.format = "s#,###";
										output_5.style.css({
											"text-align" : "right"
										});
										output_5.bind("value").toDataColumn("ENT_SCAL");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "TUT_SCAL";
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("gdOptTutScal");
										output_6.dataType = "number";
										output_6.format = "s#,###";
										output_6.style.css({
											"text-align" : "right"
										});
										output_6.bind("value").toDataColumn("TUT_SCAL");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "ETC_SCAL";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptEtcScal");
										output_7.dataType = "number";
										output_7.format = "s#,###";
										output_7.style.css({
											"text-align" : "right"
										});
										output_7.bind("value").toDataColumn("ETC_SCAL");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "TOT_SCAL";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptTotScal");
										output_8.dataType = "number";
										output_8.format = "s#,###";
										output_8.style.css({
											"text-align" : "right"
										});
										output_8.bind("value").toDataColumn("TOT_SCAL");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "OVER_AMT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptOverAmt");
										output_9.dataType = "number";
										output_9.format = "s#,###";
										output_9.style.css({
											"text-align" : "right"
										});
										output_9.bind("value").toDataColumn("OVER_AMT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "SMT_EXD_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "CGT_EXD_YN";
									cell.style.css({
										"text-align" : "center"
									});
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.expr = "\"합계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.expr = "getSum(\"REG_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.expr = "getSum(\"ENT_SCAL\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.expr = "getSum(\"TUT_SCAL\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.expr = "getSum(\"ETC_SCAL\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.expr = "getSum(\"TOT_SCAL\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.expr = "getSum(\"OVER_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "567px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "72px",
				"left": "3px",
				"width": "1225px",
				"height": "602px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "676px",
				"left": "6px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "장학금수혜내역조회(학과용)";
	cpr.core.Platform.INSTANCE.register(app);
})();
