/*
 * App URI: app/css/extCssSNatScalStudList
 * Source Location: app/css/extCssSNatScalStudList.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/extCssSNatScalStudList", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./extCssSNatScalStudList.xtm"/>
			
			
			var extCssSNatScalStudList = function() {
					
				var moPage = new Page();
					
				/**
				 * @desc  Header Import onLoad
				 * @return void
				 * @author Aeyoung Lee 2016-09-01
				 */
				moPage.onLoadImportDone_ImpTitle = function() {		
					doHeaderOnLoad();
				};
				
				/**
				 * @desc 온로드 실행
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-09-01
				 */
				moPage.onModelConstructDone_ExtCssSNatScalStudList = function() {
					
					// 2016.11.28 처리구분 추가, 파일로 셋팅되도록 함
					ExtSelectCtl.setValue("rdbProcDiv", "FILE", true);
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){		
						if(pbSuccess) {	
							util.Control.redraw(app, ["cbbSchYear","cbbSmt"]);
						}
					});
				};
				
				/**
				 * @desc 처리대상변경 시 업로드 그룹 비활성화 제어
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-11-28
				 */
				moPage.onValueChanged_RdbProcDiv = function() {
					var vsProcDiv = util.Control.getValue(app, "rdbProcDiv");
					
					if(vsProcDiv == "FILE"){
						util.Control.setEnable(app, true,["grpFile", "ckbCgtIncYn"]);
					}else{
						util.Control.setEnable(app, false,["grpFile", "ckbCgtIncYn"]);
						util.Control.reset(app, ["optFilePath", "ckbCgtIncYn"]);
					}	
				};
				
				/**
				 * @desc 다운로드버튼 클릭이벤트 (업로드양식다운로드)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-09-01
				 */
				moPage.onClick_BtnSaveFileDown = function() {
					var vsFileChgNm = "장학_장학재단학생정보추출업로드파일.xlsx";
					
					var voParam = {
								"strFileSubPath" : "stdCmnCTemplateFile",
								"strFileNm" 	 : vsFileChgNm,
								"strOriFileNm" 	 : vsFileChgNm,
								"strTmpFilePath" : "",
								"strCommand" 	 : "fileDownLoad"
					}
					//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
					FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
				};
				
				/**
				 * @desc Browse 버튼 클릭 이벤트 (File Dialog 창 open)
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-09-01
				 */
				moPage.onClick_BtnSaveBrowse = function() {
					FileUtil.getFileName(true, ["xls", "xlsx"], function(psFileNm){
						util.Control.setValue(app, "optFilePath", psFileNm);
					},"",false);
				};
				
				/**
				 * @desc 실행버튼 클릭 이벤트
				 * @param 
				 * @return 
				 * @author Aeyoung Lee 2016-09-01
				 */
				moPage.onClick_BtnSaveRun = function() {
					
					util.Msg.notify(app, "null");
					
					if(!util.validate(app, ["cbbSchYear", "cbbSmt", "rdbProcDiv"])) return; 
					
					// 처리대상이 업로드파일 일 경우에만 업로드파일이 존재하는지 확인
					var vsProcDiv = util.Control.getValue(app, "rdbProcDiv");
					if(vsProcDiv == "FILE"){
						if(!util.validate(app, ["optFilePath"])) return; 
					}	
					
					// 2016.10.14 배치처리전 커버페이지 씌우는 로직추가
					util.coverPage(app);
					
					// 엑셀업로드 서브미션
					//strCommand: execUpload 
					util.Submit.send(app, "subExecUpload", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.setValue(app, "optFilePath", "");
							
							var vsFileDir = util.DataMap.getValue(app, "dmFileInfo", "strFileDir");
							var vsFileNm = util.DataMap.getValue(app, "dmFileInfo", "strFileNm");
							var vsFileChgNm = util.DataMap.getValue(app, "dmFileInfo", "strFileChgNm");
							var strTmpFilePath = util.DataMap.getValue(app, "dmFileInfo", "strTmpFilePath");
							
							var voParam = {
								"strFileSubPath" : "",
								"strFileNm" : vsFileNm,
								"strOriFileNm" : vsFileNm,
								"strTmpFilePath" : strTmpFilePath,
								"strCommand" : "fileDownLoad"
							}
							
							//다운로드 받을 파일 위치, 다운로드받을 파일이름, 프로그래스동작여부(일단 ""), actionUrl
							FileUtil.downloadFile( "/std.cmn.StdCmnFileTransUtil.ex",voParam);
							
							// 정보추출이 처리되었습니다. 생성파일을 확인하십시오.
							util.Msg.alert("NLS-CSS-M106");
							util.Msg.notify(app, "NLS.CSS.M106");
								
						}else{
							// 처리가 취소되었습니다.
							util.Msg.notify(app, "NLS.INF.M013");
						}
						
						util.Control.setValue(app, "optFilePath", "");
						util.removeCover(app);
					});
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListYear");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListSmt");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "YEAR",
						"dataType": "string"
					},
					{
						"name": "SMT",
						"dataType": "string"
					},
					{
						"name": "strFilePath",
						"dataType": "string"
					},
					{
						"name": "strProcDiv",
						"dataType": "string"
					},
					{
						"name": "strCgtIncYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmFileInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					},
					{
						"name": "strFileDir",
						"dataType": "string"
					},
					{
						"name": "strFileNm",
						"dataType": "string"
					},
					{
						"name": "strFileChgNm",
						"dataType": "string"
					},
					{
						"name": "strTmpFilePath",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/ExtCssNatScalStudList/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_1, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subExecUpload");
			submission_2.action = "/css/ExtCssNatScalStudList/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_2, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subFileDown");
			submission_3.action = "/css/ExtCssNatScalStudList/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addResponseData(dataMap_2, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnSaveRun");
			button_1.value = "";
			button_1.style.setClasses(["btn-save"]);
			button_1.bind("value").toLanguage("UI-GLS-EXEC");
			if(typeof onBtnSaveRunClick == "function") {
				button_1.addEventListener("click", onBtnSaveRunClick);
			}
			container.addChild(button_1, {
				"top": "35px",
				"left": "1171px",
				"width": "59px",
				"height": "25px"
			});
			
			var userDefinedControl_2 = new udc.com.comFormTitle();
			userDefinedControl_2.bind("title").toLanguage("UI-SCR-EXECCDT");
			container.addChild(userDefinedControl_2, {
				"top": "35px",
				"left": "5px",
				"width": "150px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpExecCond");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var output_1 = new cpr.controls.Output("optSchYear");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optSmt");
				output_2.value = "";
				output_2.style.setClasses(["require"]);
				output_2.bind("value").toLanguage("UI-GLS-SMT");
				container.addChild(output_2, {
					"top": "5px",
					"left": "370px",
					"width": "140px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbSchYear");
				comboBox_1.userAttr({"require": "Y"});
				comboBox_1.bind("fieldLabel").toExpression("#optSchYear.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "YEAR");
				(function(comboBox_1){
					comboBox_1.setItemSet(app.lookup("dsListYear"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "150px",
					"width": "210px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbSmt");
				comboBox_2.userAttr({"require": "Y"});
				comboBox_2.bind("fieldLabel").toExpression("#optSmt.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "SMT");
				(function(comboBox_2){
					comboBox_2.setItemSet(app.lookup("dsListSmt"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "515px",
					"width": "210px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optProcDiv");
				output_3.value = "";
				output_3.style.setClasses(["require"]);
				output_3.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_3, {
					"top": "30",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var radioButton_1 = new cpr.controls.RadioButton("rdbProcDiv");
				radioButton_1.userAttr({"require": "Y"});
				radioButton_1.bind("fieldLabel").toExpression("#optProcDiv.value");
				radioButton_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcDiv");
				(function(radioButton_1){
					radioButton_1.addItem(new cpr.controls.Item("업로드파일", "FILE"));
					radioButton_1.addItem(new cpr.controls.Item("재학생", "ATTE"));
					radioButton_1.addItem(new cpr.controls.Item("휴학생", "ABSE"));
					radioButton_1.addItem(new cpr.controls.Item("제적생", "REMO"));
				})(radioButton_1);
				if(typeof onRdbProcDivValueChange == "function") {
					radioButton_1.addEventListener("value-change", onRdbProcDivValueChange);
				}
				container.addChild(radioButton_1, {
					"top": "30",
					"left": "150px",
					"width": "575px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optCgtIncYn");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-GLS-SCH_YEAR");
				container.addChild(output_4, {
					"top": "30",
					"left": "735px",
					"width": "140px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbCgtIncYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "";
				checkBox_1.style.css({
					"text-align" : "center"
				});
				checkBox_1.bind("fieldLabel").toExpression("#optCgtIncYn.value");
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCgtIncYn");
				container.addChild(checkBox_1, {
					"top": "30px",
					"left": "880px",
					"width": "20",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "60px",
				"left": "5px",
				"width": "1225px",
				"height": "55px"
			});
			
			var group_2 = new cpr.controls.Container("grpFile");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var output_5 = new cpr.controls.Output("optFilePath");
				output_5.value = "";
				output_5.style.setClasses(["require"]);
				output_5.bind("value").toLanguage("UI-SCR-UPLOADFILE");
				container.addChild(output_5, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optFilePath");
				output_6.value = "";
				output_6.bind("value").toDataMap(app.lookup("dmReqKey"), "strFilePath");
				container.addChild(output_6, {
					"top": "5px",
					"left": "150px",
					"width": "1006px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnSaveBrowse");
				button_2.value = "";
				button_2.bind("value").toLanguage("UI-SCR-EXCEL_UPLOAD");
				if(typeof onBtnSaveBrowseClick == "function") {
					button_2.addEventListener("click", onBtnSaveBrowseClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1160px",
					"width": "60px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optUploadFile");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-UPLOADFILEDOWN");
				container.addChild(output_7, {
					"top": "30px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSaveFileDown");
				button_3.value = "";
				button_3.bind("value").toLanguage("UI-SCR-DOWNLOAD");
				if(typeof onBtnSaveFileDownClick == "function") {
					button_3.addEventListener("click", onBtnSaveFileDownClick);
				}
				container.addChild(button_3, {
					"top": "30px",
					"left": "150px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "120px",
				"left": "5px",
				"width": "1225px",
				"height": "55px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "654px",
				"left": "5px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "장학재단학생정보추출";
	cpr.core.Platform.INSTANCE.register(app);
})();
