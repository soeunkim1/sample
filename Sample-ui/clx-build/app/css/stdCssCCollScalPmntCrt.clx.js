/*
 * App URI: app/css/stdCssCCollScalPmntCrt
 * Source Location: app/css/stdCssCCollScalPmntCrt.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCCollScalPmntCrt", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCCollScalPmntCrt.xtm"/>
			
			/**
			 * 일괄장학생지급생성
			 * @class stdCssPCollScalPmntCrt
			 * @author Aeyoung Lee 2016. 3. 15
			 */
			var stdCssCCollScalPmntCrt = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
				
				/**
				 * 팝업 관련 설정사항
				 */
				moPObject.moPopParam = {
					schYearRcd : "",
					smtRcd : "",
					deptCd : "",
					deptNm : "",
					deptObjDivCd : "",
					scalFeeCls1 : "",
					scalFeeCls2 : "",
					scalFeeCls3 : "",
					scalFeeCls4 : "",
					scalFeeCls5 : "",
					scalFeeCd : "",
					scalFeeNm : "",
					pmntDivRcd : "",
					pmntItvRcd : "",
					studId : "",
					studNo : "" 
				};
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc import 조회조건 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onLoadImportDone_ImpCssScalCollSch = function() {
					onLoadCollImp(function(pbSuccess){
						if(pbSuccess){
							doOnLoad();
						}
					});
				};
				
				/**
				 * @desc OnLoad 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onLoadImportDone_StdCssPCollScalPmntCrt = function() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptScalStudPmntPop","rptScalStudPop"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					//암호화컬럼 설정
					ExtRepeat.addOriginCol("rptScalStudPmntPop", ["STUD_ACCT_NO"]);
					ExtRepeat.addOriginCol("rptScalStudPop", ["STUD_ACCT_NO"]);
					
					//화면 온로드 서브미션 호출 
					//2016. 3. 22 바로 호출시 오류발생으로 조회조건 Imp Onload 후 콜백으로 진행으로 변경
					//this.doOnLoad();
				};
				
				/**
				 * @desc 화면 온로드 서브미션 호출
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doOnLoad() {
					// 부모창 값 셋팅
					var voScalPmntCrtParam =  ExtPopUp.getParentVal("moScalPmntCrtParam");
					
					util.Control.setValue(app, "cbbSchYearImp", voScalPmntCrtParam.schYearRcd);
					util.Control.setValue(app, "cbbSmtImp", voScalPmntCrtParam.smtRcd);
					util.Control.setValue(app, "ipbDeptNmImp", voScalPmntCrtParam.deptNm);
					util.Control.setValue(app, "ipbDeptCdImp", voScalPmntCrtParam.deptCd);
					util.Control.setValue(app, "ipbDeptObjDivRcdImp", voScalPmntCrtParam.deptObjDivCd);
					util.Control.setValue(app, "ipbScalFeeNmImp", voScalPmntCrtParam.scalFeeNm);
					util.Control.setValue(app, "ipbScalFeeCdImp", voScalPmntCrtParam.scalFeeCd);
					util.Control.setValue(app, "cbbScalFeeCls1Imp", voScalPmntCrtParam.scalFeeCls1);
					util.Control.setValue(app, "cbbScalFeeCls2Imp", voScalPmntCrtParam.scalFeeCls2);
					util.Control.setValue(app, "cbbScalFeeCls3Imp", voScalPmntCrtParam.scalFeeCls3);
					util.Control.setValue(app, "cbbScalFeeCls4Imp", voScalPmntCrtParam.scalFeeCls4);
					util.Control.setValue(app, "cbbScalFeeCls5Imp", voScalPmntCrtParam.scalFeeCls5);
					util.Control.setValue(app, "ipbStudIdImp", voScalPmntCrtParam.studNo);
					util.Control.setValue(app, "ipbStudIdObjImp", voScalPmntCrtParam.studId);
					util.Control.setValue(app, "cbbPmntDivImp", voScalPmntCrtParam.pmntDivRcd);
					util.Control.setValue(app, "cbbPmntItvRcdImp", voScalPmntCrtParam.pmntItvRcd);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Header.clickSearch(app);
						}
					});
				};	
				
				/**
				 * @desc 조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 유효성 체크
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							util.Msg.notify(app, "NLS.INF.M024");					
						}
					});
				};
				
				/**
				 * @desc 장학생 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: listScalStud 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdScalStudPmntPop");
							util.Control.redraw(app, "grdScalStudPop");
							
							//2016.08.03 서비스단에서 셋팅되도록 수정함
							// 계좌셋팅
							//this.doSetStudAcctInfo();
						} 
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 계좌셋팅
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doSetStudAcctInfo() {
					
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmntPop"); i++) {
						
						var vsStudBankCd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "BANK_CD", i);
						var vsStudAcctNo = util.Grid.getCellValue(app, "grdScalStudPmntPop", "ACCT_NO", i);
						var vsStudOwerNm = util.Grid.getCellValue(app, "grdScalStudPmntPop", "SHR_OWNER_NM", i);
						
						util.Grid.setCellValue(app, "grdScalStudPmntPop", "STUD_BANK_CD", vsStudBankCd, i);
						util.Grid.setCellValue(app, "grdScalStudPmntPop", "STUD_ACCT_NO", vsStudAcctNo, i);
						util.Grid.setCellValue(app, "grdScalStudPmntPop", "OWNER_NM", vsStudOwerNm, i);
					}	
				};
				
				/**
				 * @desc [btnCrtPmnt]일괄생성 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnCrtPmnt = function() {
					// Validation Check
					if(!util.validate(app, ["dipProcPlanDt","grdScalStudPmntPop"])) return false;
					
					var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptScalStudPmnt/row[child::DEL_CKB='Y']");
					if (vnChekNodeLength <= 0 ) {
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [util.Grid.getTitle(app, "grdScalStudPmntPopScalStudPmntPop")]);
						return false;
					}
					
					util.Grid.setRowStateAll(app, "grdScalStudPop", cpr.data.tabledata.RowState.UNCHANGED);
					util.Grid.setRowStateAll(app, "grdScalStudPmntPop", cpr.data.tabledata.RowState.UNCHANGED);
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdScalStudPmntPop");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}		
					
					for(var i = 0; i < voPanelChk.length; i++) {
						var vnRow = voPanelChk[i];
						var vsPmntCiiRcd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "PMNT_CII_RCD", vnRow);
						var vsPmntDivRcd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "PMNT_DIV_RCD", vnRow);
						var vsItemCd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "ITEM_CD", vnRow);
						
						// 사전감면
						if(vsPmntDivRcd=="CH001BEF"){
							if(ValueUtil.isNull(vsItemCd)){
								//@1번째 데이타에서 항목은(는) 필수 입력항목입니다.
								util.Msg.alert("NLS-CSS-M072", [vnRow]);
								ExtRepeat.setColFocus("rptScalStudPmntPop", vnRow, "rdCbbItemCd");
								return;
							}
						}
						// 단위계산
						if(vsPmntCiiRcd=="CH201UNT"){	
							if(ValueUtil.isNull(util.Grid.getCellValue(app, "grdScalStudPmntPop", "UNIT_CALC_VAL", vnRow))){
								//i번째의 단위계산값을 입력하십시오.
								util.Msg.alert("NLS-CSS-M030", [vnRow]);
								ExtRepeat.setColFocus("rptScalStudPmntPop", vnRow, "rdIptUnitCalcVal");
								return;
							}
						}
						// 사후지급
						if(vsPmntDivRcd=="CH001AFT"){	
							var vsStudBankCd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "STUD_BANK_CD", vnRow);
							var vsStudAcctNo = util.Grid.getCellValue(app, "grdScalStudPmntPop", "STUD_ACCT_NO", vnRow);
							var vsStudOwerNm = util.Grid.getCellValue(app, "grdScalStudPmntPop", "OWNER_NM", vnRow);
							if(ValueUtil.isNull(vsStudBankCd)){
								//i번째의 은행을 선택하십시오
								util.Msg.alert("NLS-CSS-M031", [vnRow]);
								ExtRepeat.setColFocus("rptScalStudPmntPop", vnRow, "rdCbbStudBankCd");
								return;
							}
							if(ValueUtil.isNull(vsStudAcctNo)){
								//i번째의계좌번호를 입력하십시오.
								util.Msg.alert("NLS-CSS-M032", [vnRow]);
								ExtRepeat.setColFocus("rptScalStudPmntPop", vnRow, "rdIptStudAcctCd");
								return;
							}
							if(ValueUtil.isNull(vsStudOwerNm)){
								//i번째의 소유자를 입력하십시오.
								util.Msg.alert("NLS-CSS-M033", [vnRow]);
								ExtRepeat.setColFocus("rptScalStudPmntPop", vnRow, "rdIptOwnerNm");
								return;
							}
						}
						
						util.Grid.setRowState(app, "grdScalStudPmntPop", cpr.data.tabledata.RowState.UPDATED, vnRow);
						util.Grid.setRowState(app, "grdScalStudPop", cpr.data.tabledata.RowState.UPDATED, vnRow);
					}  
					
					// 지급일괄생성 서브미션
					util.DataMap.setValue(app, "dmCheckStudPmnt", "STUD_ID", "");
					//strCommand: crtPmnt 
					util.Submit.send(app, "subCrtPmnt", function(pbSuccess){
						if(pbSuccess){
							//checkStudPmnt 체크하여 담겨져 있다면 학번 출력.
							var vsStudId = util.DataMap.getValue(app, "dmCheckStudPmnt", "STUD_ID");
							if(!ValueUtil.isNull(vsStudId)) {
								
								var vnFindIdx = util.Grid.selectRowByCondition(app, "grdScalStudPmntPop" , "/root/resList/rptScalStudPmnt/row/STUD_ID", "==", vsStudId, 0);
								var vnRowIdx = Number(vnFindIdx) + 1;
								// @1번째 데이터는 지급횟수를 초과하여 처리할 수 없습니다.
								util.Msg.alert("NLS-CSS-M050", [vnRowIdx]);
								util.Grid.restoreRow(app, "grdScalStudPmntPop", vnRowIdx);
								return;
							}
							
							if(ExtPopUp.isPopUp()){
								ExtPopUp.closeLayeredPopup("doList", null);
							}	
						} 
						
					});
				};
				
				/**
				 * @desc 장학생 목록 rowSelect 시 바인드 적용
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onRowSelect_RptScalStudPmntPop = function() {
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtControl.refreshBind(["binRoPmntCiiUnit"]);
				};
				
				/**
				 * @desc 장학생 목록 valuechage 이벤트
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onValueChanged_RptScalStudPmntPop = function(psDiv) {
					var vnIdx = util.Grid.getIndex(app, "grdScalStudPmntPop");
					
					// 지급금액은 0보다 커야함
					if(psDiv == "AMT"){
						var vnPmntAmt = Number(util.Grid.getCellValue(app, "grdScalStudPmntPop", psDiv, vnIdx));
						if(vnPmntAmt<=0) {
							//지급금액은 0보다 커야 합니다.
							util.Msg.alert("NLS-CSS-M049");
							util.Grid.setCellValue(app, "grdScalStudPmntPop", psDiv, "", vnIdx);
							return;
						}
					
					//단위계산일 경우 지급금액=지급기준의기준값*단위계산값 표시
					}else if(psDiv == "UNIT_CALC_VAL"){
						
						var vsPmntDivRcd = util.Grid.getCellValue(app, "grdScalStudPmntPop", "PMNT_CII_RCD", vnIdx);
						if(vsPmntDivRcd == "CH201UNT") {
							var vnRsltAmt = Number(util.Grid.getCellValue(app, "grdScalStudPmntPop", "CII_VAL", vnIdx)) * Number(util.Grid.getCellValue(app, "grdScalStudPmntPop", "UNIT_CALC_VAL", vnIdx));
							util.Grid.setCellValue(app, "grdScalStudPmntPop", "AMT", vnRsltAmt, vnIdx);
						}
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListItem");
			dataSet_1.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListFnreDivRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListUnitRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListBankDiv");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsScalStudPmnt");
			dataSet_5.parseData({
				"info": "CSS_SCAL_STUD_PMNT@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO,PMNT_SERIAL_NO,PROC_TYPE_RCD",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "STUD_NO"},
					{"name": "REP_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "TOT_RCC_AMT"},
					{"name": "ITEM_CD"},
					{"name": "UNIT_RCD"},
					{"name": "UNIT_NM"},
					{"name": "UNIT_ALOT_VAL"},
					{"name": "UNIT_CALC_VAL"},
					{"name": "AMT"},
					{"name": "REMARK"},
					{"name": "PMNT_SERIAL_NO"},
					{"name": "PROC_TYPE_RCD"},
					{"name": "STUD_BANK_CD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "PROC_RSLT"},
					{"name": "BANK_CD"},
					{"name": "BANK_NM"},
					{"name": "ACCT_NO"},
					{"name": "SHR_OWNER_NM"},
					{"name": "PMNT_CII_RCD"},
					{"name": "CII_VAL"},
					{"name": "FNRE_DIV_RCD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsScalStud");
			dataSet_6.parseData({
				"info": "CSS_SCAL_STUD@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO",
				"columns": [
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "TOT_RCC_AMT"},
					{"name": "ITEM_CD"},
					{"name": "UNIT_RCD"},
					{"name": "UNIT_NM"},
					{"name": "UNIT_ALOT_VAL"},
					{"name": "UNIT_CALC_VAL"},
					{"name": "AMT"},
					{"name": "REMARK"},
					{"name": "PMNT_SERIAL_NO"},
					{"name": "PROC_TYPE_RCD"},
					{"name": "STUD_BANK_CD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "REP_NM"},
					{"name": "SA_CD"},
					{"name": "SA_NM"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "PROC_RSLT"},
					{"name": "BANK_CD"},
					{"name": "BANK_NM"},
					{"name": "ACCT_NO"},
					{"name": "SHR_OWNER_NM"},
					{"name": "PMNT_CII_RCD"},
					{"name": "CII_VAL"},
					{"name": "PMNT_ITV_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsListPmntAmtCii");
			dataSet_7.parseData({
				"columns": [
					{"name": "FNRE_DIV_RCD"},
					{"name": "SCAL_FEE_CD"},
					{"name": "ITEM_CD"},
					{"name": "UNIT_RCD"},
					{"name": "PMNT_CII_RCD"},
					{"name": "CII_VAL"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			var dataMap_1 = new cpr.data.DataMap("dmSearchCond");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptNm",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strSsObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeNm",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls1",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls2",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls3",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls4",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls5",
						"dataType": "string"
					},
					{
						"name": "strPmntDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPmntItvRcd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strProcPlanDt",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmCheckStudPmnt");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "PMNT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PMNT_ITV_RCD",
						"dataType": "string"
					},
					{
						"name": "PMNT_SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "SA_CD",
						"dataType": "string"
					},
					{
						"name": "STUD_BANK_CD",
						"dataType": "string"
					},
					{
						"name": "SCAL_AMT",
						"dataType": "string"
					},
					{
						"name": "AMT",
						"dataType": "string"
					},
					{
						"name": "REMARK",
						"dataType": "string"
					},
					{
						"name": "PROC_TYPE_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_BANK_NM",
						"dataType": "string"
					},
					{
						"name": "PROC_PLAN_DT",
						"dataType": "string"
					},
					{
						"name": "ITEM_CD",
						"dataType": "string"
					},
					{
						"name": "DIV_PAY_NO",
						"dataType": "string"
					},
					{
						"name": "PAY_GRP_KEY",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_NM",
						"dataType": "string"
					},
					{
						"name": "STUD_ID",
						"dataType": "string"
					},
					{
						"name": "SMT_RCD",
						"dataType": "string"
					},
					{
						"name": "SA_NM",
						"dataType": "string"
					},
					{
						"name": "ITEM_NM",
						"dataType": "string"
					},
					{
						"name": "SHR_OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "UNIT_CALC_VAL",
						"dataType": "string"
					},
					{
						"name": "ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "OWNER_NM",
						"dataType": "string"
					},
					{
						"name": "BANK_CD",
						"dataType": "string"
					},
					{
						"name": "SCH_YEAR_RCD",
						"dataType": "string"
					},
					{
						"name": "OBJ_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "FNRE_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "STUD_NO",
						"dataType": "string"
					},
					{
						"name": "BANK_NM",
						"dataType": "string"
					},
					{
						"name": "PROC_DT",
						"dataType": "string"
					},
					{
						"name": "FNRE_DIV_NM",
						"dataType": "string"
					},
					{
						"name": "SERIAL_NO",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CD",
						"dataType": "string"
					},
					{
						"name": "REP_NM",
						"dataType": "string"
					},
					{
						"name": "STUD_ACCT_NO",
						"dataType": "string"
					},
					{
						"name": "PROC_RSLT",
						"dataType": "string"
					},
					{
						"name": "PROC_RSLT_YEAR",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssCollScalPmntCrt/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/css/StdCssCollScalPmntCrt/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_7, false);
			submission_2.addResponseData(dataSet_5, false);
			submission_2.addResponseData(dataSet_6, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subCrtPmnt");
			submission_3.action = "/css/StdCssCollScalPmntCrt/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_2);
			submission_3.addResponseData(dataMap_3, false);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1105px",
					"width": "60px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaCssScalCollSchPop");
				if(typeof onEmaCssScalCollSchPopAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaCssScalCollSchPopAppReady);
				}
				cpr.core.App.load("app/css/impStdCssScalCollSchPop", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "1100px",
					"height": "75px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1170px",
				"height": "82px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SCRSSTUD");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "252px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScalStudPmntPop");
				grid_1.init({
					"dataSet": app.lookup("dsScalStudPmnt"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "55px"},
						{"width": "54px"},
						{"width": "90px"},
						{"width": "33px"},
						{"width": "33px"},
						{"width": "93px"},
						{"width": "67px"},
						{"width": "60px"},
						{"width": "57px"},
						{"width": "62px"},
						{"width": "64px"},
						{"width": "80px"},
						{"width": "55px"},
						{"width": "69px"},
						{"width": "70px"},
						{"width": "72px"},
						{"width": "97px"},
						{"width": "69px"},
						{"width": "85px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-DLG-COL-C008");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("NLS-DLG-COL-C009");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PMNTDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYITV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-RCCREC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-FIRSRDIVRCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ITEMZ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-UNIT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-UNITCALVALUE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PAYAMNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-BANK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ACCT_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-OWNER");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptScalAmt");
										output_2.dataType = "number";
										output_2.format = "s#,###";
										output_2.style.css({
											"text-align" : "right"
										});
										output_2.bind("value").toDataColumn("SCAL_AMT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "PMNT_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbPmntDivCd");
										comboBox_1.enabled = false;
										comboBox_1.hideButton = true;
										(function(comboBox_1){
											comboBox_1.setItemSet(app.lookup("dsListPmntDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("PMNT_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PMNT_ITV_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbPmntItvCd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListPmntItvRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("PMNT_ITV_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "TOT_RCC_AMT";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptTotRccAmt");
										output_3.dataType = "number";
										output_3.format = "s#,###";
										output_3.style.css({
											"text-align" : "right"
										});
										output_3.bind("value").toDataColumn("TOT_RCC_AMT");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "FNRE_DIV_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbFnreDivRcd");
										comboBox_3.userAttr({"require": "Y"});
										(function(comboBox_3){
											comboBox_3.addItem(new cpr.controls.Item("선택", ""));
											comboBox_3.setItemSet(app.lookup("dsListFnreDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("FNRE_DIV_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbItemCd");
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListItem"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("ITEM_CD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "UNIT_RCD";
									cell.control = (function(){
										var comboBox_5 = new cpr.controls.ComboBox("gdCbbUnitRcd");
										comboBox_5.enabled = false;
										comboBox_5.hideButton = true;
										(function(comboBox_5){
											comboBox_5.setItemSet(app.lookup("dsListUnitRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_5);
										comboBox_5.bind("value").toDataColumn("UNIT_RCD");
										return comboBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "UNIT_CALC_VAL";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIptUnitCalcVal");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999,999,999,999";
										numberEditor_1.bind("value").toDataColumn("UNIT_CALC_VAL");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIptAmt");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999,999,999,999";
										numberEditor_2.userAttr({"require": "Y"});
										numberEditor_2.bind("value").toDataColumn("AMT");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "STUD_BANK_CD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbStudBankCd");
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsListBankDiv"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("STUD_BANK_CD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "STUD_ACCT_NO";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIptStudAcctCd");
										inputBox_1.maxLength = 50;
										inputBox_1.bind("value").toDataColumn("STUD_ACCT_NO");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIptOwnerNm");
										inputBox_2.maxLength = 100;
										inputBox_2.bind("value").toDataColumn("OWNER_NM");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIptRemark");
										inputBox_3.maxLength = 1000;
										inputBox_3.bind("value").toDataColumn("REMARK");
										return inputBox_3;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdScalStudPmntPopSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdScalStudPmntPopSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1160px",
					"height": "394px"
				});
				var button_2 = new cpr.controls.Button("btnSaveCrtPmnt");
				button_2.value = "";
				button_2.style.setClasses(["btn-save"]);
				button_2.bind("value").toLanguage("UI-SCR-COLLMK");
				if(typeof onBtnSaveCrtPmntClick == "function") {
					button_2.addEventListener("click", onBtnSaveCrtPmntClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "1105px",
					"width": "60px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optProcPlanDt");
				output_4.value = "";
				output_4.style.setClasses(["require"]);
				output_4.bind("value").toLanguage("NLS-SCR-PROCPLANDT");
				container.addChild(output_4, {
					"top": "6px",
					"left": "915px",
					"width": "80px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipProcPlanDt");
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optProcPlanDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcPlanDt");
				container.addChild(dateInput_1, {
					"top": "6px",
					"left": "1000px",
					"width": "100px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "122px",
				"left": "5px",
				"width": "1170px",
				"height": "428px"
			});
			
			var grid_2 = new cpr.controls.Grid("grdScalStudPop");
			grid_2.visible = false;
			grid_2.init({
				"dataSet": app.lookup("dsScalStud"),
				"columns": [
					{"width": "40px"},
					{"width": "73px"},
					{"width": "88px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "104px"},
					{"width": "90px"},
					{"width": "93px"},
					{"width": "86px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "80px"},
					{"width": "81px"},
					{"width": "117px"},
					{"width": "117px"},
					{"width": "117px"}
				],
				"header": {
					"rows": [{"height": "27px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.text = "No";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-SCR-FNDTNCD");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_CD_NM");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SPVS_COL_CD_NM");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SPVS_COL_CD");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.style.setClasses(["require"]);
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 15},
							"configurator": function(cell){
								cell.style.setClasses(["require"]);
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 16},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 17},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 18},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 19},
							"configurator": function(cell){
								cell.bind("text").toLanguage("UI-DB-SB_SMRY");
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "25px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "rowindex";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "STUD_ID";
								cell.style.css({
									"text-align" : "center"
								});
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "SCH_YEAR_RCD";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "SMT_RCD";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 4},
							"configurator": function(cell){
								cell.columnName = "SERIAL_NO";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 5},
							"configurator": function(cell){
								cell.columnName = "SCAL_FEE_CD";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 6},
							"configurator": function(cell){
								cell.columnName = "SCAL_FEE_NM";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 7},
							"configurator": function(cell){
								cell.columnName = "OBJ_DIV_RCD";
								cell.control = (function(){
									var output_5 = new cpr.controls.Output("gdOptScalAmt1");
									output_5.dataType = "number";
									output_5.format = "s#,###";
									output_5.style.css({
										"text-align" : "right"
									});
									output_5.bind("value").toDataColumn("OBJ_DIV_RCD");
									return output_5;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 8},
							"configurator": function(cell){
								cell.columnName = "SCAL_AMT";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 9},
							"configurator": function(cell){
								cell.columnName = "PMNT_DIV_RCD";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 10},
							"configurator": function(cell){
								cell.columnName = "PMNT_ITV_RCD";
								cell.control = (function(){
									var output_6 = new cpr.controls.Output("gdOptTotRccAmt1");
									output_6.dataType = "number";
									output_6.format = "s#,###";
									output_6.style.css({
										"text-align" : "right"
									});
									output_6.bind("value").toDataColumn("PMNT_ITV_RCD");
									return output_6;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 11},
							"configurator": function(cell){
								cell.columnName = "TOT_RCC_AMT";
								cell.control = (function(){
									var comboBox_7 = new cpr.controls.ComboBox("gdCbbFnreDivRcd1");
									(function(comboBox_7){
										comboBox_7.setItemSet(app.lookup("dsListFnreDivRcd"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_7);
									comboBox_7.bind("value").toDataColumn("TOT_RCC_AMT");
									return comboBox_7;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 12},
							"configurator": function(cell){
								cell.columnName = "ITEM_CD";
								cell.control = (function(){
									var comboBox_8 = new cpr.controls.ComboBox("gdCbbItemCd1");
									(function(comboBox_8){
										comboBox_8.setItemSet(app.lookup("dsListItem"), {
											"label": "ITEM_NM",
											"value": "ITEM_CD"
										});
									})(comboBox_8);
									comboBox_8.bind("value").toDataColumn("ITEM_CD");
									return comboBox_8;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 13},
							"configurator": function(cell){
								cell.columnName = "UNIT_RCD";
								cell.control = (function(){
									var comboBox_9 = new cpr.controls.ComboBox("gdCbbUnitRcd1");
									(function(comboBox_9){
										comboBox_9.setItemSet(app.lookup("dsListUnitRcd"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_9);
									comboBox_9.bind("value").toDataColumn("UNIT_RCD");
									return comboBox_9;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 14},
							"configurator": function(cell){
								cell.columnName = "UNIT_NM";
								cell.control = (function(){
									var numberEditor_3 = new cpr.controls.NumberEditor("gdIptUnitCalcVal1");
									numberEditor_3.spinButton = false;
									numberEditor_3.format = "999,999,999,999";
									numberEditor_3.bind("value").toDataColumn("UNIT_NM");
									return numberEditor_3;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 15},
							"configurator": function(cell){
								cell.columnName = "UNIT_ALOT_VAL";
								cell.control = (function(){
									var numberEditor_4 = new cpr.controls.NumberEditor("gdIptAmt1");
									numberEditor_4.spinButton = false;
									numberEditor_4.format = "999,999,999,999";
									numberEditor_4.bind("value").toDataColumn("UNIT_ALOT_VAL");
									return numberEditor_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 16},
							"configurator": function(cell){
								cell.columnName = "UNIT_CALC_VAL";
								cell.control = (function(){
									var comboBox_10 = new cpr.controls.ComboBox("gdCbbStudBankCd1");
									(function(comboBox_10){
										comboBox_10.setItemSet(app.lookup("dsListBankDiv"), {
											"label": "CD_NM",
											"value": "CD"
										});
									})(comboBox_10);
									comboBox_10.bind("value").toDataColumn("UNIT_CALC_VAL");
									return comboBox_10;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 17},
							"configurator": function(cell){
								cell.columnName = "AMT";
								cell.control = (function(){
									var inputBox_4 = new cpr.controls.InputBox("gdIptStudAcctCd1");
									inputBox_4.bind("value").toDataColumn("AMT");
									return inputBox_4;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 18},
							"configurator": function(cell){
								cell.columnName = "REMARK";
								cell.control = (function(){
									var inputBox_5 = new cpr.controls.InputBox("gdIptOwnerNm1");
									inputBox_5.bind("value").toDataColumn("REMARK");
									return inputBox_5;
								})();
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 19},
							"configurator": function(cell){
								cell.columnName = "UPT_STATUS";
								cell.control = (function(){
									var inputBox_6 = new cpr.controls.InputBox("gdIptRemark1");
									inputBox_6.bind("value").toDataColumn("UPT_STATUS");
									return inputBox_6;
								})();
							}
						}
					]
				}
			});
			container.addChild(grid_2, {
				"top": "553px",
				"left": "80px",
				"width": "375px",
				"height": "30px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseCancel");
			button_3.value = "";
			button_3.style.setClasses(["btn-commit"]);
			button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_3.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_3, {
				"top": "556px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "일괄장학생지급생성";
	cpr.core.Platform.INSTANCE.register(app);
})();
