/*
 * App URI: app/css/stdCssCScalFee
 * Source Location: app/css/stdCssCScalFee.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCScalFee", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCScalFee.xtm"/>
			
			/**
			 * 장학금관리
			 * @class stdCssCScalFee
			 * @author Aeyoung Lee 2016. 2. 23
			 */
			var stdCssCScalFee = function() {
				var moPage = new Page();
				// 임포트용 데이터 통신 오브젝트
				var moPObject = new Page();
					
				// 탭 정의
				var TAB = {
					MANAGE	: "tabManage",
					HIS    	: "tabHistory",
					LAN   	: "tabLan",
					PMNT   	: "tabPmnt",
					QUAL   	: "tabQual"
				};
					
				// 탭버튼 정의
				var TAB_BTN = {
					tabManage	: "tabBtnManage",
					tabHistory	: "tabBtnHistory",
					tabLan    	: "tabBtnLan",
					tabPmnt    	: "tabBtnPmnt",
					tabQual    	: "tabBtnQual"
				};
				
				// 객체검색팝업 호출
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId		:	"btnFrfDeptPop",
					iCd				:	"",
					iNm				:	"ipbFrfDeptNmBase",
					iObjDivRcd		:	["CC009OG"],
					iStartObject   	:   "",
					iOtDivRcd		:	"",
					iOtIsTreeView	:	"",
					iLanDivRcd		:	"/root/resOnLoad/strSystemLan",
					iKeyDate		:	"dipKeyDt",
					iKeyEndDate		:	"",
					oObjDivRcd		:	"",
					oCd				:	"ipbFrfDeptCdBase",
					oCdNm			:	"ipbFrfDeptNmBase",
					oBegDt			:	"",
					oEndDt			:	"",
					oLanDivRcd		:	"",
					func 			:  null
				}];
				
				// 재단검색팝업 호출
				moIdsForStdCssPFndtnPop = [
				{ 
					controlId		: "btnFrfFndtnPop",		
					iKeyDate		: "dipKeyDt",			
					iScalFndtnCd	: "",					
					iScalFndtnNm	: "ipbFrfScalFndtnNmBase",
					oScalFndtnCd	: "ipbFrfScalFndtnCdBase",	
					oScalFndtnNm	: "ipbFrfScalFndtnNmBase",			
					oStDt			: "",			
					oEndDt			: "",			
					oRepNm			: "",				
					oChagDeptNm	: "",					
					oInturNm		: "",				
					oAddr1			: "",				
					oAddr2			: "",				
					oDrtTelNo		: "",				
					func 			: null
				}];
				
				var msSystemLanDivRcd = "";
				var msCurrentDt = "";
				var msKeyDt = "";
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc OnLoad 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				function doOnLoad() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptBase","frfBase","rptBaseHistory","rptBaseLan","rptPmntAmt","rptQualCii"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData", "grpDataDtl"]);
					
					// 데이터관리  tab으로 이동
					ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
					
					// 기준일자 조회하는 내부 팝업 호출을 위한 단위시스템코드 설정
					setUnitSystem("CSS");
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbScalFeeCls1","cbbScalFeeCls2","cbbScalFeeCls3","cbbScalFeeCls4","cbbScalFeeCls5"]);
							
							msSystemLanDivRcd = util.DataMap.getValue(app, "dmResOnLoad", "strSystemLan");
							msCurrentDt = util.DataMap.getValue(app, "dmResOnLoad", "strCutDt");
							msKeyDt = util.DataMap.getValue(app, "dmResOnLoad", "strKeyDt");
							
							util.Control.setValue(app, "dipKeyDt", msKeyDt);	
							//ExtControl.setValue("dipKeyDtHistory", msKeyDt);	
							
							util.Control.setFocus(app, "ipbScalNm");
						}
					}, true);
				};
				
				/**
				 * @desc 기준일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_BtnYearSmt = function() {
					//기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDt","impSchYearSmt");
				};
				
				/**
				 * @desc 기준일자 Enter KeyDown 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onKeyUp_DipKeyDt = function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				};
			
				/**
				 * @desc 장학금명 Enter KeyDown 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onKeyDown_IpbScalNm= function(strKeyType, strKeyStatus) {
					// 엔터키 입력시 조회
					if(e.keyCode == cpr.events.KeyCode.ENTER){
						util.Header.clickSearch(app);
					}
				}
				
				/**
				 * @desc 조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["dipKeyDt"])){
						return false;
					}
					
					// 데이터관리  tab으로 이동
					ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
					util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
					
					// pkValue 초기화
					ExtRepeat.setPkValues("rptBase", "");
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							
							if(util.Grid.getRowCount(app, "grdBase") == 0){
								// 데이터관리  tab으로 이동
								ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
								util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
								// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
								doCompareFrfEnable();
								
								// "조회된 내역이 없습니다."
								util.Msg.notify(app, "NLS.WRN.M005");
							}else{
								// "조회되었습니다."
								util.Msg.notify(app, "NLS.INF.M024");	
							}	
						}
					});
				};
				
				/**
				 * @desc 장학금목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				function doList(poCallBackFunc) {
					//strCommand: listBase 
					util.Submit.send(app, "subBaseList", function(pbSuccess){
						if(pbSuccess){
							
							util.Control.redraw(app, "grdBase");
							
			//				// 폐기처리로 인해 데이터가 없어질경우 [데이터관리] 텝으로 이동하기 위함.
			//				var strTmpCd = ExtInstance.getValue("/root/reqSelRow/strTmpScalFndtnCd");
			//				var vnLength = ExtInstance.getNodeListLength("/root/resList/rptBase/row[child::SCAL_FNDTN_CD = '"+ strTmpCd +"']");
			//				if(ValueUtil.isNull(strTmpCd) || vnLength == 0){
								if(util.Grid.getRowCount(app, "grdBase") == 0){
									// 데이터관리  tab으로 이동
									ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
									util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
									// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
									doCompareFrfEnable();
								}
			//					ExtModel.dispatch("tabBtnManage","DOMActivate");
			//				}
							
						} 
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [rptBase]장학금목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onRowSelect_RptBase = function() {
					
					util.DataMap.setValue(app, "dmReqKey", "strScalFeeCd", util.Grid.getCellValue(app, "grdBase", "SCAL_FEE_CD"));  // 장학금코드
					util.DataMap.setValue(app, "dmReqKey", "strScalFeeNm", util.Grid.getCellValue(app, "grdBase", "SCAL_FEE_NM"));  // 장학금
					util.DataMap.setValue(app, "dmReqKey", "strRefKey"	, util.Grid.getCellValue(app, "grdBase", "REF_KEY")); 	  // 참조키
					util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", util.Grid.getCellValue(app, "grdBase", "LAN_DIV_RCD"));  // 언어구분
					
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					doTabChange(vsSelTabId);
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				function doCompareFrfEnable() {
					
					var vnIdx = util.Grid.getIndex(app, "grdBase");
					var vsStaus = util.Grid.getRowState(app, "grdBase", vnIdx);
					
					// 마스터 로우 없을경우 프리폼 리셋
					if(!vnIdx) util.Control.reset(app, "frfBase");
					
					if( (!vnIdx) || vsStaus == "delete") {
						util.Control.setEnable(app, false, ["frfBase"]);	
					}else{
						
						util.Control.setEnable(app, true, ["frfBase"]);
						
						// 신규일때만 활성화처리 그 외(복사 등) 비활성화
						var vsFlagGbn = util.Grid.getCellValue(app, "grdBase", "FLAG_GBN", vnIdx);
						if( vsStaus == "insert" && vsFlagGbn != "C"){
							//ExtControl.setEnable(true, "ipbFrfScalFeeCdBase");
							util.Control.setReadOnly(app, false, "ipbFrfScalFeeCdBase");
						}
						else{
							//ExtControl.setEnable(false, "ipbFrfScalFeeCdBase");
							util.Control.setReadOnly(app, true, "ipbFrfScalFeeCdBase");
						}	
					}	
				};
				
				/**
				 * @desc [tabBtnManage]데이터관리 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_TabBtnManage = function() {
					doTabChange(TAB.MANAGE);
				};
				
				/**
				 * @desc [tabBtnHistory]이력관리 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_TabBtnHistory = function() {
					doTabChange(TAB.HIS);
				};
				
				/**
				 * @desc [tabBtnLan]언어 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_TabBtnLan = function() {
					doTabChange(TAB.LAN);
				};
				
				/**
				 * @desc [tabBtnPmnt]지급금액기준 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_TabBtnPmnt = function() {
					doTabChange(TAB.PMNT);
				}
				
				/**
				 * @desc [tabBtnQual]자격기준 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 23
				 */
				moPage.onClick_TabBtnQual = function() {
					doTabChange(TAB.QUAL);
				}
				
				/**
				 * @desc 탭 변경시
				 * @param  {String} psCaseId 탭페이지명
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doTabChange(psCaseId) {
					// 장학금목록 선택된 ROW 검사
					var vnSelectRowIdx = util.Grid.getIndex(app, "grdBase");
					
					if (!vnSelectRowIdx) {
						// 데이터관리 프리폼 초기화
						util.Control.reset(app, "frfBase");
						// 데이터관리  tab으로 이동
						ExtTab.setTabBtn("tabMain", TAB_BTN.tabManage);
						util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
						
						return;
					}
					
					util.Control.setEnable(app, true, ["grpData"]);
					
					// 선택된 TAB
					var vsSelTabId = util.Tab.getSelectedId(app, "tabMain");
					
					// 1. 현재 선택된 탭의 상태 체크
					if(psCaseId != vsSelTabId){
						switch (vsSelTabId) {
							// 1-1. 데이터관리
							case TAB.MANAGE : {
								// 데이터관리 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdBase"], "CRM") ){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 재단 목록 변경이 일어난 후 다른탭으로 이동시 리셋 처리
									if(util.Grid.isModified(app, ["grdBase"])){
										util.Grid.revertAllData(app, "grdBase");
										util.Control.reset(app, "frfBase");
									}
								}	
								break;
							}
							
							// 1-2. 이력관리
							case TAB.HIS : {
								// 이력관리 리피트 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdBaseHistory"], "CRM")){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 리셋 처리
									if(util.Grid.isModified(app, ["grdBaseHistory"]) ){
										util.Grid.revertAllData(app, "grdBaseHistory");
									}
								}
								break;
							}
							
							// 1-3. 언어
							case TAB.LAN : {
								// 언어 리피트 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdBaseLan"], "CRM")){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 언어 목록 변경이 일어난 후 다른탭으로 이동시 리셋 처리
									if(util.Grid.isModified(app, ["grdBaseLan"])){
										util.Grid.revertAllData(app, "grdBaseLan");
										util.Control.reset(app, "frfBaseLan");
									}
								}
								break;
							}
							
							// 1-4. 지급금액기준
							case TAB.PMNT : {
								// 지급금액기준 리피트 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdPmntAmt"], "CRM")){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 지급금액기준 변경이 일어난 후 다른탭으로 이동시 리셋 처리
									if(util.Grid.isModified(app, ["grdPmntAmt"])){
										util.Grid.revertAllData(app, "grdPmntAmt");
									}
								}
								break;
							}
							
							// 1-5. 자격기준
							case TAB.QUAL : {
								// 자격기준 리피트 변경내역 있는 경우
								if(util.Grid.isModified(app, ["grdQualCii"], "CRM")){
									// tab 이동 하지 않음
									ExtTab.setTabBtn("tabMain", TAB_BTN[vsSelTabId]);
									return false;
								}else{
									// 자격기준 변경이 일어난 후 다른탭으로 이동시 리셋 처리
									if(util.Grid.isModified(app, ["grdQualCii"])){
										util.Grid.revertAllData(app, "grdQualCii");
									}
								}
								break;
							}
						}
					}
				
					// 2. 탭변경
					util.Tab.setSelectedTabItem(app, "tabMain", psCaseId);
					
					// 3. 탭변경 후 처리 로직
					switch (psCaseId) {
						// 3-1. 데이터관리 조회
						case TAB.MANAGE : {
							doListDtl();
							break;
						}
						// 3-2. 이력관리 조회
						case TAB.HIS : {
							doListHistory();
							break;
						}
						// 3-3. 언어 조회
						case TAB.LAN : {
							doListLan();
							break;
						}
						// 3-4. 지급금액기준 조회
						case TAB.PMNT : {
							doListPmnt();
							break;
						}
						// 3-5. 자격기준 조회
						case TAB.QUAL : {
							doListQual();
							break;
						}
					}
				};
				
				/**
				 * @desc 장학금(프리폼) 조회
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doListDtl() {
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBase","frfBase");
					
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
				};
				
				/**
				 * @desc 히스토리(이력)목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doListHistory(poCallBackFunc) {
					
					util.Control.setValue(app, "dipKeyDtHistory", util.DataMap.getValue(app, "dmReqKey", "strKeyDt"));
					
					// 이력관리 조회 서브이션 
					//strCommand: listBaseHist 
					util.Submit.send(app, "subBaseListHistory", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdBaseHistory");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 언어목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doListLan(poCallBackFunc) {
					
					// 언어목록 조회 서브이션 
					//strCommand: listBaseLan 
					util.Submit.send(app, "subBaseListLan", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdBaseLan");
							
							if(util.Grid.getRowCount(app, "grdBaseLan") <= 0){
								util.Control.reset(app, "frfBaseLan");
								// 프리폼 비활성화 제어
								doCompareFrfEnableLan();	
							}	
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 지급금액기준목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doListPmnt(poCallBackFunc) {
					
					util.Control.redraw(app, ["ipbScalFeeCdPmnt","ipbScalFeeNmPmnt"]);
					
					// 언어목록 조회 서브이션 
					//strCommand: listPmntAmtCii 
					util.Submit.send(app, "subPmntAmtCiiList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdPmntAmt");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 자격기준목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				function doListQual(poCallBackFunc) {
					
					util.Control.redraw(app, ["ipbScalFeeCdQual","ipbScalFeeNmQual"]);
					
					// 언어목록 조회 서브이션 
					//strCommand: listQualCii 
					util.Submit.send(app, "subQualCiiList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdQualCii");
						}
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc [frfBase]장학금 onUpdate 이벤트
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onUpdate_FrfBase = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptBase", "frfBase");
				};
				
				/**
				 * @desc [btnFrfDeptPop]행정부서 검색 버튼 클릭
				 * @param sender
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnFrfDeptPop = function(sender) {
					doOnClickStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [ipbFrfDeptNmBase]행정부서 값변경 이벤트
				 * @param sender
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onValueChanged_IpbFrfDeptNmBase = function(sender) {
					doOnChangeStdCmnPObjSch(sender);
				};
				
				/**
				 * @desc [btnFrfFndtnPop]재단 검색 버튼 클릭
				 * @param sender
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnFrfFndtnPop = function(sender) {
					doOnClickStdCssPFndtnPop(sender);
				};
				
				/**
				 * @desc [ipbFrfScalFndtnNmBase]재단 값변경 이벤트
				 * @param sender
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onValueChanged_IpbFrfScalFndtnNmBase = function(sender) {
					doOnChangeStdCssPFndtnPop(sender);
				};
				
				/**
				 * @desc [ipbFrfScalFeeCdBase] 장학금코드 변경 이벤트
						- 장학금코드가 이미 사용중인 건인지 체크
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onValueChanged_IpbFrfScalFeeCdBase = function() {
					
					var vsStatus = util.Grid.getRowState(app, "grdBase");
					
					if(vsStatus == "insert"){
						
						util.DataMap.setValue(app, "dmReqCheck", "strScalFeeCd", util.Control.getValue(app, "ipbFrfScalFeeCdBase"));	// 장학금코드
						util.DataMap.setValue(app, "dmReqCheck", "strStDt"	  , "");	
						util.DataMap.setValue(app, "dmReqCheck", "strEndDt"	  , "");	
						
						//strCommand: checkScalFeeCd 
						util.Submit.send(app, "subCheckScalFeeCd", function(pbSuccess){
							if(pbSuccess){
								var vsCnt = util.DataMap.getValue(app, "dmResList", "resultCount");
								if(Number(vsCnt) > 0){
									util.Msg.alert("NLS-CSS-M078");
									util.Control.setValue(app, "ipbFrfScalFeeCdBase", "");
								}
							}
						});
					}	
				};
				
				/**
				 * @desc [btnCopy]복사 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnCopy = function() {
					// 데이터관리 변경내역 있는 경우
					if(util.Grid.isModified(app, ["grdBase"])){
						var vsMsgParam = ExtControl.getTextValue("lblTitleFrfBase");
						//@의 시점 복사 작업은 [작업저장]후 진행하시기 바랍니다.
						util.Msg.alert("NLS-CSS-M089", [vsMsgParam]);
						return false;
					}	
					
					// 기준일자 필수 체크
					if(!util.validate(app, ["dipKeyDt"])){
						return false;
					}
					
					// 마스터 리피트 row 선택여부 체크
					var vnOrgRowIdx = util.Grid.getIndex(app, "grdBase");
					if(vnOrgRowIdx == "0"){
						var vsMsgParam = util.Grid.getTitle(app, "grdBaseBase");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					var vsStDt = util.Grid.getCellValue(app, "grdBase", "ST_DT", vnOrgRowIdx).substring(0, 8);
					var vsEndDt = util.Grid.getCellValue(app, "grdBase", "END_DT", vnOrgRowIdx).substring(0, 8);
					var vsKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDt").substring(0, 8);
					
					if(vsEndDt != "99991231"){
						// 종료일이 9999-12-31인 데이터만 @1할 수 있습니다. 
						util.Msg.alert("NLS-CSS-M001", [NLS.NSCR.COPY]);
						return;
					}	
					
					if(vsStDt >= vsKeyDate){
						// 기준일자는 유효기간의 시작일보다 이후여야 합니다. 
						util.Msg.alert("NLS-CSS-M003");
						return;
					}	
					
					// 폐기여부 확인--??
					if(Number(vsEndDt) <= Number(vsKeyDate)){
						var vsMsgParam = ExtControl.getTextValue("lblTitleFrfBase");
						// "폐기된 @은(는) 복사할 수 없습니다. 이력관리 탭에서 복구해주시기 바랍니다." 메시지 출력.
						util.Msg.alert("NLS-WRN-M208", [vsMsgParam]);
						return;
					}
					
					// 신규로우 추가
					var vnNextRow   = util.Grid.insertRow(app, "grdBase", null, vnOrgRowIdx);
					
					ExtRepeat.copyToRowData("rptBase", vnOrgRowIdx, "rptBase", vnNextRow);
					
					// 기본값 세팅
					util.Grid.setCellValue(app, "grdBase", "UPT_STATUS", "N"					, vnNextRow);
					util.Grid.setCellValue(app, "grdBase", "LAN_DIV_RCD", msSystemLocale		, vnNextRow);
					util.Grid.setCellValue(app, "grdBase", "ST_DT"	   , vsKeyDate+"000000"	, vnNextRow);
					util.Grid.setCellValue(app, "grdBase", "END_DT"	   , "99991231000000"	, vnNextRow);
					util.Grid.setCellValue(app, "grdBase", "REF_KEY"	   , ""					, vnNextRow);
					util.Grid.setCellValue(app, "grdBase", "FLAG_GBN"   , "C"				, vnNextRow);
					
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBase","frfBase", vnNextRow);
					
					// 셋팅하고 로우체인지가 일어나는게 아니므로 호출해야함
					doCompareFrfEnable();	
					
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "ipbFrfScalFeeNmBase");
				};
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnNew = function() {
					// 복사한 이력이 존재하는지 확인
					var vnCopyNodeLength = ExtInstance.getNodeListLength("/root/resList/rptBase/row[child::FLAG_GBN='C']");
					if(vnCopyNodeLength > 0){
						//복사중인 데이터가 있습니다. 저장 후 진행하세요.
						util.Msg.alert("NLS-CSS-M088");
						return false;
					}
					
					// 기준일자 필수 체크
					if(!util.validate(app, ["dipKeyDt"])){
						return false;
					}
					
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdBase");
					
					// 신규 Defalut값 설정 
					util.Grid.setCellValue(app, "grdBase", "ST_DT", util.DataMap.getValue(app, "dmReqKey", "strKeyDt"), vnIdx);
					util.Grid.setCellValue(app, "grdBase", "END_DT", "99991231000000", vnIdx);
					util.Grid.setCellValue(app, "grdBase", "OBJ_DIV_RCD", "CC009SS", vnIdx);
					util.Grid.setCellValue(app, "grdBase", "DEPT_OBJ_DIV_RCD", "CC009OG", vnIdx);
					util.Grid.setCellValue(app, "grdBase", "LAN_DIV_RCD", msSystemLocale, vnIdx);
					util.Grid.setCellValue(app, "grdBase", "FLAG_GBN", "N", vnIdx);
					
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBase","frfBase");
					
					// 셋팅하고 로우체인지가 일어나는게 아니므로 호출해야함
					doCompareFrfEnable();	
					
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "ipbFrfScalFeeCdBase");
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnDel = function() {
					
					// 마스터 리피트 row 선택여부 체크
					var vnOrgRowIdx = util.Grid.getIndex(app, "grdBase");
					if(vnOrgRowIdx == "0"){
						var vsMsgParam = util.Grid.getTitle(app, "grdBaseBase");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					var vsRptStatus = util.Grid.getRowState(app, "grdBase", vnOrgRowIdx);
					if(vsRptStatus == "insert"){
						// 삭제
						util.Grid.deleteRow(app, "grdBase");
						// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
						doCompareFrfEnable();
					}else{
						
						// 복사한 이력이 존재하는지 확인
						var vnCopyNodeLength = ExtInstance.getNodeListLength("/root/resList/rptBase/row[child::FLAG_GBN='C']");
						if(vnCopyNodeLength > 0){
							//복사중인 데이터가 있습니다. 저장 후 진행하세요.
							util.Msg.alert("NLS-CSS-M088");
							return false;
						}
						
						var vsScalFeeCd = util.Grid.getCellValue(app, "grdBase", "SCAL_FEE_CD", vnOrgRowIdx);
						var vsStDt = util.Grid.getCellValue(app, "grdBase", "ST_DT", vnOrgRowIdx).substring(0, 8);
						var vsEndDt = util.Grid.getCellValue(app, "grdBase", "END_DT", vnOrgRowIdx).substring(0, 8);
						var vsKeyDate = util.DataMap.getValue(app, "dmReqKey", "strKeyDt").substring(0, 8);
						
						if(vsEndDt != "99991231"){
							// 종료일이 9999-12-31인 데이터만 @1할 수 있습니다. 
							util.Msg.alert("NLS-CSS-M001", [NLS.NSCR.DEL]);
							return;
						}	
						
						// 장학금코드 사용 중인지 체크
						util.DataMap.setValue(app, "dmReqCheck", "strScalFeeCd", vsScalFeeCd);	// 장학금코드
							
						//strCommand: checkScalCdUsedForDel 
						util.Submit.send(app, "subCheckScalCdUsed", function(pbSuccess){
							if(pbSuccess){
								var vsCheck = util.DataMap.getValue(app, "dmResList", "strCheckUsed");
								if(vsCheck == "Y"){
									//사용중인 @1 코드입니다
									util.Msg.alert("NLS-CSS-M013", [NLS.NSCR.SCRS]);
									return;
								}
								
								// 삭제
								util.Grid.deleteRow(app, "grdBase");
								// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
								doCompareFrfEnable();
							}
						});
					}	
				};
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnRestore = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdBase");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnable();
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBase", "frfBase");
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnSave = function() {
					doSave();
				};
				
				/**
				 * @desc [btnSave]데이터관리 저장 전 체크
						- 연속장학금여부가 Y인경우 지급횟수 반드시 입력
						- 지급횟수에 값이 있을시 숫자인지, 0보다 큰지 체크
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doCheckBefSaveBase() {
					
					var vnRpnCnt = util.Grid.getRowCount(app, "grdBase");
					
					for(var i = 1; i <= vnRpnCnt; i++){
						
						var vsCntiScalYn = util.Grid.getCellValue(app, "grdBase", "CNTI_SCAL_YN", i);
						var vsPmntCnt = util.Grid.getCellValue(app, "grdBase", "PMNT_CNT", i); 
						if(vsCntiScalYn == "Y" && ValueUtil.isNull(vsPmntCnt)) {
							util.Msg.alert("NLS-CSS-M029");
							util.Control.setFocus(app, "ipbFrfPmntCntBase");
							return false;
						}
						
						if(!ValueUtil.isNull(vsPmntCnt)){
							if(!ValueUtil.isNumber(vsPmntCnt)){
								util.Msg.alert("NLS-WRN-M104", [NLS.NSCR.PAYCNT]);	
								util.FreeForm.setValue(app, "frfBase", "PMNT_CNT", "");
								return false;
							}else if(Number(vsPmntCnt) < 1){
								util.Msg.alert("NLS-CSS-M076");
								util.FreeForm.setValue(app, "frfBase", "PMNT_CNT", "");
								return false;
							}	
						}	
					}	
					
					return true;
				};
				
				/**
				 * @desc 장학금목록 저장
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doSave() {
					
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdBase"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdBase")) return false;
					
					// 데이터관리 저장전 체크로직
					if(!doCheckBefSaveBase()) return false;
					
					//strCommand: saveBase 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							
							//조회건수가 0건이면 프리폼이 내역이 반영되지 않기 떄문
							util.Control.reset(app, "frfBase");
							
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.MANAGE);
						}
					});
				};
				
				/**
				 * @desc 폐기/복구일자(돋보기버튼) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnYearSmtHis = function() {
					//기준일자 임포트(달력컨트롤ID,임포트ID)
					doOnclickSchYearSmt("dipKeyDtHistory","impSchYearSmt");
				};
				
				/**
				 * @desc 마스터 그리드의 pk_colvalues 값 세팅
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee at 2016. 2. 12
				 */
				moPage.setCssBaseInfoPkColRowValue = function(vpRptDetail){
					var vsPkColValues = ExtRepeat.getPKColRowValues(vpRptDetail);					
					if(!ValueUtil.isNull(vsPkColValues)){
						ExtRepeat.setPkValues("rptBase", vsPkColValues);
					}
				};
				
				/**
				 * @desc 기준일 이전날짜 추출
				 * @param 기준일
				 * @return  기준일 이전일
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.getBefDate = function(psKeyDate) {
					
					var y  = psKeyDate.substring(0, 4);
					var m = psKeyDate.substring(4, 6);
					var d  = psKeyDate.substring(6, 8);
					var befDt = new Date(y, m - 1, d - 1);
					var befDtYear = befDt.getFullYear().toString();	
					var befDtMonth = eval(befDt.getMonth() + 1).toString();
					var befDtDate = befDt.getDate().toString();
					
					if (befDtMonth.length == 1) befDtMonth = "0" + befDtMonth;
					if (befDtDate.length == 1) befDtDate = "0" + befDtDate;
					
					var vsBefDate = befDtYear + befDtMonth + befDtDate + "000000";
					
					return vsBefDate;
				};
				
				/**
				 * @desc [btnDisUse]폐기 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnDisUse = function() {
					doDisUseHistory();
				};
				
				/**
				 * @desc 장학금 폐기
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doDisUseHistory() {
					var vnCnt = Number(util.Grid.getRowCount(app, "grdBaseHistory"));
					if(vnCnt == 0) return;
					
					// 폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDtHistory")) return false;
					
					// 조회조건 기준일자 : 마스터 포커스용
					var vsSchKeyDt = util.DataMap.getValue(app, "dmReqKey", "strKeyDt").substring(0, 8);
					var vsKeyDtHist = util.Control.getValue(app, "dipKeyDtHistory").substring(0, 8);
					
					var vnMaxRowIdx = null;
					var vsMaxEndDt 	= null;
					var vsMaxStDt 	= null;
					for (var i = 1; i <= vnCnt; i++) {
						var vsEndDt = util.Grid.getCellValue(app, "grdBaseHistory", "END_DT", i).substring(0, 8);
						var vsStDt  = util.Grid.getCellValue(app, "grdBaseHistory", "ST_DT", i).substring(0, 8);
						if (vsEndDt == "99991231") {
							vsMaxEndDt 	= vsEndDt;
							vsMaxStDt   = vsStDt;
							vnMaxRowIdx = i;
							break;
						}
					}
					
					// 종료일자가 99991231이 아닐때, 폐기 불가
					if (vsMaxEndDt == null) {
						// "폐기 가능한 데이터가 없습니다." 메시지 표시
						util.Msg.alert("NLS-INF-M029");
						return;
					}
					
					// 폐기일자 -1
					var vsBefDate = this.getBefDate(vsKeyDtHist).substring(0, 8);	
					
					if (vsMaxStDt > vsBefDate) {
						// 해당 기준일자로 폐기가능한 테이터가 없습니다.
						util.Msg.alert("NLS-CSS-M007", [NLS.NSCR.DISUSE]);
						return;
					}
					
					// 장학금코드 사용 중인지 체크
					util.DataMap.setValue(app, "dmReqCheck", "strScalFeeCd", util.DataMap.getValue(app, "dmReqKey", "strScalFeeCd"));	// 장학금코드
					util.DataMap.setValue(app, "dmReqCheck", "strKeyDtHistory", vsKeyDtHist);									// 폐기일자
					
					// 폐기 가능여부 체크
					//strCommand: checkScalCdUsedForDisUse 
					util.Submit.send(app, "subCheckScalCdUsed", function(pbSuccess){
						if(pbSuccess){
							//폐기 가능할때 
							var vsCheck = util.DataMap.getValue(app, "dmResList", "strCheckUsed");
							if(vsCheck == "Y"){
								// 사용중인 장학금 코드입니다.
								util.Msg.alert("NLS-CSS-M013" ,[NLS.NSCR.SCRS]);
								return;
							}
								
							// 전날자로 타겟로우의 종료일자 업데이트
							var vsMsgDate = vsKeyDtHist.substring(0, 4) + NLS.NSCR.YEAR + vsKeyDtHist.substring(4, 6) + NLS.NSCR.MONTH + vsKeyDtHist.substring(6, 8) + NLS.NSCR.DAY;
							
							// "@부로 폐기합니다. \n진행하시겠습니까?" 메시지
							if(util.Msg.confirm("NLS-CRM-M047", [vsMsgDate]) ){
								util.Grid.setCellValue(app, "grdBaseHistory", "END_DT", vsBefDate + "000000", vnMaxRowIdx);
								util.Grid.selectRow(app, "grdBaseHistory", vnMaxRowIdx, true);
								
								/*
									그리드에 pk_colvalues를 넣는다.
									조회 후 찾아주기 위함.
								*/
								if(vsSchKeyDt+"000000" >= vsMaxStDt+"000000"){
									this.setCssBaseInfoPkColRowValue("rptBaseHistory");
								}else{
									this.setCssBaseInfoPkColRowValue("rptBase");
								}
								
								doSaveHis();
							}
						}
					});
				};
				
				/**
				 * @desc [btnDisUseCanc]폐기취소 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnDisUseCanc = function() {
					doUseCancHistory();
				};
				
				/**
				 * @desc 장학금 폐기취소
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doUseCancHistory() {
					var vnCnt = util.Grid.getRowCount(app, "grdBaseHistory");
					if(vnCnt == 0) return;	
					
					// 조회조건 기준일자 : 마스터 포커스용
					var vsSchKeyDt = util.DataMap.getValue(app, "dmReqKey", "strKeyDt").substring(0, 8);
					
					var vnMaxRowIdx = null;
					var vsMaxEndDt 	= null;
					var vsMaxStDt   = null;
					for (var i = 1; i <= vnCnt; i++) {
						var vsStDt  = util.Grid.getCellValue(app, "grdBaseHistory", "ST_DT", i).substring(0, 8);
						var vsEndDt = util.Grid.getCellValue(app, "grdBaseHistory", "END_DT", i).substring(0, 8);
						if ((vsMaxEndDt == null) || (vsMaxEndDt != null && vsMaxEndDt < vsEndDt)) {
							vsMaxStDt  = vsStDt;
							vsMaxEndDt = vsEndDt;
							vnMaxRowIdx = i;
						}
					}
			
					if (vsMaxEndDt == "99991231" ) {
						// 폐기처리된 데이터가 없습니다
						util.Msg.alert("NLS-CSS-M009");
						return;
					}
					
					// "마지막 데이터의 종료일이 9999년 12월 31일로 변경됩니다. \n진행하시겠습니까?" 메시지
					if(util.Msg.confirm("NLS-CRM-M048") ){
						util.Grid.setCellValue(app, "grdBaseHistory", "END_DT", "99991231000000", vnMaxRowIdx);
						util.Grid.selectRow(app, "grdBaseHistory", vnMaxRowIdx);
						
						/*
							그리드에 pk_colvalues를 넣는다.
							조회 후 찾아주기 위함.
						*/
						if(vsSchKeyDt+"000000" >= vsMaxStDt+"000000"){
							this.setCssBaseInfoPkColRowValue("rptBaseHistory");
						}else{
							this.setCssBaseInfoPkColRowValue("rptBase");
						}
						
						// 이력사항 변경사항 저장
						doSaveHis();
					}
				};
				
				/**
				 * @desc [btnRecover]복구 onClick 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				moPage.onClick_BtnRecover = function() {
					doRecoverHistory();
				};
				
				/**
				 * @desc 장학금 복구 : 가장 최근의 레코드를 카피하여 insert한다. (단, 기준일자가 최종일자보다 커야 한다.)
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doRecoverHistory() {
					var vnCnt = util.Grid.getRowCount(app, "grdBaseHistory");
					if(vnCnt == 0) return;
					
					// 폐기/복구일자 유효성 체크
					if(!util.validate(app, "dipKeyDtHistory")) return false;
					
					var vsSchKeyDt = util.DataMap.getValue(app, "dmReqKey", "strKeyDt").substring(0, 8);	// 조회조건 기준일자 : 마스터 포커스용
					var vsKeyDtHistory = util.Control.getValue(app, "dipKeyDtHistory").substring(0, 8);	// 폐기/복구일자
					
					var vsMaxStDt   = null;
					var vsMaxEndDt  = null;
					var vnMaxRowIdx = null;
					for (var i = 1; i <= vnCnt; i++) {
						var vsStDt = util.Grid.getCellValue(app, "grdBaseHistory", "ST_DT", i).substring(0, 8);
						var vsEndDt = util.Grid.getCellValue(app, "grdBaseHistory", "END_DT", i).substring(0, 8);
						if ((vsMaxEndDt == null) || (vsMaxEndDt != null && vsMaxEndDt < vsEndDt)) {
							vsMaxStDt = vsStDt;
							vsMaxEndDt = vsEndDt;
							vnMaxRowIdx = i;
						}
					}
					
					if(vsMaxEndDt == "99991231"){
						util.Msg.alert("NLS-CSS-M075");
						return;
					}	
					
					if (vsMaxEndDt >= vsKeyDtHistory) {
						util.Msg.alert("NLS-CSS-M007", [NLS.NSCR.RECOVERY]);
						return;
					}
					
					 var vsMsgDate = vsKeyDtHistory.substring(0, 4) + NLS.NSCR.YEAR + vsKeyDtHistory.substring(4, 6) + NLS.NSCR.MONTH + vsKeyDtHistory.substring(6, 8) + NLS.NSCR.DAY;
					 
					//  "시작일 @ 종료일 9999년12월31일로 데이터가 복구됩니다. \n진행하시겠습니까?"
					 if (util.Msg.confirm("NLS-CRM-M049", [vsMsgDate]) ) {
						/*
							그리드에 pk_colvalues를 넣는다.
							조회 후 찾아주기 위함.
						*/
						if(vsSchKeyDt+"000000" >= vsMaxStDt+"000000"){
							this.setCssBaseInfoPkColRowValue("rptBaseHistory");
						}else{
							this.setCssBaseInfoPkColRowValue("rptBase");
						} 
						
						var vnNextRow = util.Grid.insertRow(app, "grdBaseHistory", null, vnMaxRowIdx);
						ExtRepeat.copyToRowData("rptBaseHistory", vnMaxRowIdx, "rptBaseHistory", vnNextRow);
						
						util.Grid.setCellValue(app, "grdBaseHistory", "ST_DT"	  , vsKeyDtHistory + "000000", vnNextRow);
						util.Grid.setCellValue(app, "grdBaseHistory", "END_DT"	  , "99991231000000"		 , vnNextRow);
						util.Grid.setCellValue(app, "grdBaseHistory", "REF_KEY"	  , ""						 , vnNextRow);
						util.Grid.setCellValue(app, "grdBaseHistory", "UPT_STATUS" , "N"						 , vnNextRow);
						
						// 이력사항 변경사항 저장
						doSaveHis();
					 }
				};
				
				/**
				 * @desc 이력관리목록 변경사항 저장
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 24
				 */
				function doSaveHis() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdBaseHistory"], "MSG")){
						return false;
					}
					
					//strCommand: saveBaseHist 
					util.Submit.send(app, "subSaveHistory", function(pbSuccess){
						if(pbSuccess) {
			//				// 디테일 저장시 마스터의 포커스를 찾아가기위한 인스턴스 설정
			//				var vsSbCd =  ExtInstance.getValue("/root/reqSelRow/strSbCd");
			//				ExtInstance.setValue("/root/reqSelRow/strTmpSbCd", vsSbCd);
							util.Control.redraw(app, "grdBaseHistory");
							
							//재단목록조회
							doList(function(pbSuccess) {
								if (pbSuccess){
									// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M025");
									
			//						// 탭이동용 인스턴스 초기화
			//						ExtInstance.setValue("/root/reqSelRow/strTmpSbCd", "");
								}
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");
							util.Tab.setSelectedTabItem(app, "tabMain", TAB.HIS);
						}
					});
				};
				
				/**
				 * @desc [rptBaseLan]언어목록 onRowSelect 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onRowSelect_RptBaseLan = function() {
					// 리피트 특정 row 데이터를 프리폼 copy
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBaseLan", "frfBaseLan");
					// 프리폼 비활성화 제어
					doCompareFrfEnableLan();
				};
				
				/**
				 * @desc [frfBaseLan]언어목록 onUpdate 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onUpdate_FrfBaseLan = function() {
					// 프리폼 업데이트내용 그리드 반영
			//TO-BE: <ExtFreeForm.updateToRpt> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtFreeForm.updateToRpt("rptBaseLan", "frfBaseLan");
				};
				
				/**
				 * @desc  마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어(언어목록)
				 *			    1. index가 지정되지 않았을 경우
				 *			    2. 현재 index의 로우가 삭제 상태일 경우 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doCompareFrfEnableLan() {
					
					if( (!util.Grid.getIndex(app, "grdBaseLan")) || util.Grid.getRowState(app, "grdBaseLan") == cpr.data.tabledata.RowState.DELETED){
						util.Control.setEnable(app, false, ["frfBaseLan"]);	
					} else {
						util.Control.setEnable(app, true, ["frfBaseLan"]);	
						
						// 기본언어인 경우 프리폼항목 Enable false
						var vaDefLanPkEnableCtl = ["cbbFrfLanDivRcdLan"];
						var vaDefLanEnableCtl = ["ipbFrfScalFeeNmLan", "ipbFrfShortNmLan", "ipbFrfPrtScalFeeNmLan", "txtFrfDesc1Lan", "txtFrfDesc2Lan", "txtFrfDesc3Lan", "txtFrfDesc4Lan", "txtFrfDesc5Lan"];
						
						var vsStandLan = util.DataMap.getValue(app, "dmReqKey", "strLanDivRcd");
						var vsLan = util.Grid.getCellValue(app, "grdBaseLan", "LAN_DIV_RCD");
						
						if(vsStandLan == vsLan && util.Grid.getRowState(app, "grdBaseLan") != cpr.data.tabledata.RowState.INSERTED){
							util.Control.setEnable(app, false, vaDefLanPkEnableCtl);	
							util.Control.setEnable(app, false, vaDefLanEnableCtl);	
						}else if(util.Grid.getRowState(app, "grdBaseLan") == ""){
							util.Control.setEnable(app, false, vaDefLanPkEnableCtl);	
							util.Control.setEnable(app, true, vaDefLanEnableCtl);	
						}else{
							util.Control.setEnable(app, true, vaDefLanPkEnableCtl);	
							util.Control.setEnable(app, true, vaDefLanEnableCtl);		
						}
					}
					
					// 언어목록 변경사항 에따른 재단목록 Enable 처리
					if(util.Grid.isModified(app, "grdBaseLan")){
						util.Control.setEnable(app, false, ["grpData"]);
					}else {
						util.Control.setEnable(app, true, ["grpData"]);
					}
				};
				
				/**
				 * @desc [btnNewLan]신규(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnNewLan = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdBaseLan");
					
					// 신규 Defalut값 설정 		
					util.Grid.setCellValue(app, "grdBaseLan", "SCAL_FEE_CD", util.DataMap.getValue(app, "dmReqKey", "strScalFeeCd"));	// 장학금코드
					util.Grid.setCellValue(app, "grdBaseLan", "REF_KEY"	  , util.DataMap.getValue(app, "dmReqKey", "strRefKey"));	// 참조키
					
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBaseLan", "frfBaseLan", vnIdx);
					
					// 프리폼 항목 포커스
					util.Control.setFocus(app,  "cbbFrfLanDivRcdLan");
				};
				
				/**
				 * @desc [btnDelLan]삭제(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnDelLan = function() {
					// 기본언어구분
					var vsStnLanDivRcd = ValueUtil.fixNull(util.DataMap.getValue(app, "dmReqKey", "strLanDivRcd"));
					var vsLanDivRcd =  util.FreeForm.getValue(app, "frfBaseLan", "LAN_DIV_RCD")
					
					var vsUptStatus = util.Grid.getRowState(app, "grdBaseLan", "UPT_STATUS");
					if (vsStnLanDivRcd == vsLanDivRcd && vsUptStatus != "insert"){
						// 기본언어레코드는 삭제할 수 없습니다. 메시지 표시
						util.Msg.alert("NLS-WRN-M010");
						return;
					}
					
					// 삭제
					util.Grid.deleteRow(app, "grdBaseLan");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnableLan();
				};
				
				/**
				 * @desc [btnRestoreLan]작업취소(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnRestoreLan = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdBaseLan");
					// 취소내용 프리폼 반영
			//TO-BE: <ExtRepeat.copyRowForm> 그리드-프리폼인 경우에는 selection바인딩으로 처리하기 때문에 불필요함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.copyRowForm("rptBaseLan", "frfBaseLan");
					// 마스터 리피트 상태에 따른 디테일 프리폼 비활성화 제어
					doCompareFrfEnableLan();
				};
				
				/**
				 * @desc [btnSaveLan]작업저장(언어) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnSaveLan = function() {
					// 언어목록 변경사항 저장
					doSaveLan();
				};
				
				/**
				 * @desc 언어목록 변경사항 저장
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doSaveLan() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdBaseLan"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdBaseLan")) return false;
					
					//strCommand: saveBaseLan 
					util.Submit.send(app, "subSaveLan", function(pbSuccess){
						if(pbSuccess) {
							// 언어목록 조회
							doListLan(function(pbSuccessList) {
								if(pbSuccessList){
									// "갱신된 데이터가 조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else {
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");
						}
					});
				};
				
				/**
				 * @desc 해당 리피트의 순번(serial_no) 리턴
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doGetMaxSerialNo(psRptNm) {
					var vnCnt = util.Grid.getRowCount(app, psRptNm);
					var vnMaxSerialNo = 0;
					for (var i = 1; i <= vnCnt; i++) {
						var vsSerialNo = Number(util.Grid.getCellValue(app, psRptNm, "SERIAL_NO", i));
						if (vnMaxSerialNo < vsSerialNo) {
							vnMaxSerialNo = vsSerialNo;
						}
					}
					return vnMaxSerialNo+1;
				};
				
				
				/**
				 * @desc [btnNewPmnt]신규(지급금액기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnNewPmnt = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdPmntAmt","rdCbbFnreDivRcdPmnt");
					
					// 신규 Defalut값 설정 		
					util.Grid.setCellValue(app, "grdPmntAmt", "ST_DT" , util.DataMap.getValue(app, "dmReqKey", "strKeyDt"));
					util.Grid.setCellValue(app, "grdPmntAmt", "END_DT", "99991231000000");
					util.Grid.setCellValue(app, "grdPmntAmt", "SCAL_FEE_CD", util.DataMap.getValue(app, "dmReqKey", "strScalFeeCd"));	// 장학금코드
					util.Grid.setCellValue(app, "grdPmntAmt", "OBJ_DIV_RCD", "CC009SS");
					util.Grid.setCellValue(app, "grdPmntAmt", "SERIAL_NO", doGetMaxSerialNo("grdPmntAmt"));
				};
				
				/**
				 * @desc [btnDelPmnt]삭제(지급금액기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnDelPmnt = function() {
					// 삭제
					util.Grid.deleteRow(app, "grdPmntAmt");
				};
				
				/**
				 * @desc [btnRestorePmnt]작업취소(지급금액기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnRestorePmnt = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdPmntAmt");
				};
				
				/**
				 * @desc [btnSavePmnt]작업저장(지급금액기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnSavePmnt = function() {
					// 지급금액기준 변경사항 저장
					doSavePmnt();
				};
				
				/**
				 * @desc [btnSavePmnt]지급금액기준 저장 전 체크
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doCheckBefSavePmnt() {
					
					var vnRpnCnt = util.Grid.getRowCount(app, "grdPmntAmt");
					
					for(var i = 1; i <= vnRpnCnt; i++){
						
						var vsStatus = util.Grid.getRowState(app, "grdPmntAmt", i);
						var vsPmntCiiRcd = util.Grid.getCellValue(app, "grdPmntAmt", "PMNT_CII_RCD", i);
						var vsUnitRcd = util.Grid.getCellValue(app, "grdPmntAmt", "UNIT_RCD", i); 
						
						if(vsStatus != "delete" && vsPmntCiiRcd == "CH201UNT" &&  ValueUtil.isNull(vsUnitRcd)){
							util.Msg.alert("NLS-CSS-M080", [i]);
							return false;
						}	
					}	
					
					//항목기준/재원구분별
				  	if(!doCheckDupDate("rptPmntAmt", "ITEM_CD", null, "ST_DT", "END_DT", [NLS.NSCR.ITEMSTD + "/" + NLS.NSCR.FIRSRDIVRCD], "FNRE_DIV_RCD")){
				   		return false;
					}
					
					//단위계산/재원구분별
				 	if(!doCheckDupDate("rptPmntAmt", "PMNT_CII_RCD", "CH201UNT", "ST_DT", "END_DT", [NLS.NSCR.UNITCAL + "/" + NLS.NSCR.FIRSRDIVRCD], "FNRE_DIV_RCD")){
						return false;	
					}	
					
					return true;
				};
				
				/**
				 * @desc 컬럼[psCompareColId]의 value별 겹치는 날짜가 존재하는지 체크
				 * @param {?} psRptId
				 * @param {?} psCompareColId
				 * @param {?} psCompareColValue
				 * @param {?} psStDtId
				 * @param {?} psEndDtId
				 * @param {?} paMsg
				 * @param {?} psCompareColIdSub
				 * @return Boolean	
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doCheckDupDate(psRptId, psCompareColId, psCompareColValue, psStDtId, psEndDtId, paMsg, psCompareColIdSub) {
			  		var vnCnt = util.Grid.getRowCount(app, psRptId);
			  		for (var i = 1; i <= vnCnt; i++) {
			   			if(util.Grid.getRowState(app, psRptId,i) == cpr.data.tabledata.RowState.DELETED) continue;
						
			   			var vbCompareColBase = util.Grid.getCellValue(app, psRptId, psCompareColId, i);
						if(!ValueUtil.isNull(psCompareColIdSub)) var vbCompareColBaseSub = util.Grid.getCellValue(app, psRptId, psCompareColIdSub, i);
						
						// 비교값이 존재하는 경우 비교값과 대상값이 같은 경우만 체크
						if( (!ValueUtil.isNull(psCompareColValue)) && (vbCompareColBase != psCompareColValue) ) continue; 
						
						var vbBegDtBase = util.Grid.getCellValue(app, psRptId, psStDtId, i).substring(0, 8);
						var vbEndDtBase = util.Grid.getCellValue(app, psRptId, psEndDtId, i).substring(0, 8);
						
						for(var j = 1; j <= vnCnt; j++){
							if(i == j) continue;
							if(util.Grid.getRowState(app, psRptId, j) == cpr.data.tabledata.RowState.DELETED) continue;
							
			 				var vbCompareCol =  util.Grid.getCellValue(app, psRptId, psCompareColId, j);
			 				var vbBegDt = util.Grid.getCellValue(app, psRptId, psStDtId, j).substring(0, 8);
			 				var vbEndDt = util.Grid.getCellValue(app, psRptId, psEndDtId, j).substring(0, 8);
							
							//비교하는 특정값이 있는 경우
							if(!ValueUtil.isNull(psCompareColValue)){
								
								if(vbCompareCol == psCompareColValue){
									
									var vbCompareColSub = util.Grid.getCellValue(app, psRptId, psCompareColIdSub, j);
									
									if(vbCompareColBaseSub == vbCompareColSub) {
										if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
										if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
									}
								}else{
									
									if(vbBegDt >= vbBegDtBase && vbBegDt <= vbEndDtBase){
										util.Msg.alert("NLS-CSS-M079", [NLS.NSCR.UNITCAL]);
										return false;
									}
									if(vbEndDt >= vbBegDtBase && vbEndDt <= vbEndDtBase){
										util.Msg.alert("NLS-CSS-M079", [NLS.NSCR.UNITCAL]);
										return false;
									}
									
									if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt){
										util.Msg.alert("NLS-CSS-M079", [NLS.NSCR.UNITCAL]);
										return false;
									}
									if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt){
										util.Msg.alert("NLS-CSS-M079", [NLS.NSCR.UNITCAL]);
										return false;
									}	
									
								}	
								
							// 특정값 아닐 경우
							}else{
								
								if(!ValueUtil.isNull(psCompareColIdSub)){
									
									var vbCompareColSub = util.Grid.getCellValue(app, psRptId, psCompareColIdSub, j);
									
									if(vbCompareColBase == vbCompareCol && vbCompareColBaseSub == vbCompareColSub) {
										if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
										if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
									}
									
								}else{
									
									if(vbCompareColBase == vbCompareCol) {
										if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt) {
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
										if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt) {
											util.Msg.alert("NLS-CSS-M079", paMsg);
											return false;
										}
									}
								}
							}	
						}   
			 		}
			 		return true;
				};
				
				/**
				 * @desc 지급기준/재원구분 중복체크 
				 * @param {?} pbGrxId
				 * @param {?} pbCompareColId 지급기준
				 * @param {?} pbCompareColValue 단위계산값[CH201UNT]
				 * @param {?} pbBegDtId
				 * @param {?} pbEndDtId
				 * @param {?} pbCompareColIdSub 재원구분
				 * @return Boolean	
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doCheckDupDatePmntCiiRcd(pbGrxId, pbCompareColId, pbCompareColValue, pbBegDtId, pbEndDtId, pbCompareColIdSub) {
			  		var vnCnt = util.Grid.getRowCount(app, pbGrxId);
			  		for (var i = 1; i <= vnCnt; i++) {
			   			if(util.Grid.getRowState(app, pbGrxId, i) == cpr.data.tabledata.RowState.DELETED) continue;
						
			   			var vbCompareColBase = util.Grid.getCellValue(app, pbGrxId, pbCompareColId, i);
						
						// row의 지급기준이 단위계산값일 경우
			   			if(vbCompareColBase == pbCompareColValue) {
							var vbBegDtBase = util.Grid.getCellValue(app, pbGrxId, pbBegDtId, i);	
							var vbEndDtBase = util.Grid.getCellValue(app, pbGrxId, pbEndDtId, i);
							
							//재원구분
							var vbCompareColBaseSub = util.Grid.getCellValue(app, pbGrxId, pbCompareColIdSub, i);
							
							if( (!ValueUtil.isNull(vbBegDtBase)) && (!ValueUtil.isNull(vbEndDtBase)) && (!ValueUtil.isNull(vbCompareColBaseSub)) ){
								for (var j = 1; j <= vnCnt; j++) {
									
									if(util.Grid.getRowState(app, pbGrxId, j) == cpr.data.tabledata.RowState.DELETED) continue;
						   			if(i == j) continue;
									
									var vbBegDt = util.Grid.getCellValue(app, pbGrxId, pbBegDtId, j);
					 				var vbEndDt = util.Grid.getCellValue(app, pbGrxId, pbEndDtId, j);
									
									var vbCompareCol = util.Grid.getCellValue(app, pbGrxId, pbCompareColId, j);			//지급기준
									var vbCompareColSub = util.Grid.getCellValue(app, pbGrxId, pbCompareColIdSub, j);	//재원구분
									
									//단위계산별
									if(vbCompareCol == pbCompareColValue){
										
										//재원이 같을경우
										if(vbCompareColBaseSub == vbCompareColSub){
											if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt){
												util.Msg.alert("NLS-CSS-M079", [NLS.SCR.UNITCAL+"/"+NLS.SCR.FIRSRDIVRCD]);
												return false;
											}
											if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt){
												util.Msg.alert("NLS-CSS-M079", [NLS.SCR.UNITCAL+"/"+NLS.SCR.FIRSRDIVRCD]);
												return false;
											}
										}
										
									//단위계산끼리아닐경우 날짜가 같으면 안됨.	
									}else{
										if(vbBegDt <= vbBegDtBase && vbBegDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", [NLS.SCR.UNITCAL]);
											return false;
										}
										if(vbBegDt <= vbEndDtBase && vbEndDtBase <= vbEndDt){
											util.Msg.alert("NLS-CSS-M079", [NLS.SCR.UNITCAL]);
											return false;
										}
									}			
					 		 	}
							}
						}
				 	}
			 		return true;
				};
				
				/**
				 * @desc 지급금액기준 변경사항 저장
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doSavePmnt() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdPmntAmt"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdPmntAmt")) return false;
					
					// 업무적 로직 체크
					if(!doCheckBefSavePmnt()) return false;
					
					//strCommand: savePmntAmtCii 
					util.Submit.send(app, "subSavePmntAmtCii", function(pbSuccess){
						if(pbSuccess){
							// 지급금액기준목록 조회
							doListPmnt(function(pbSuccessList) {
								if(pbSuccessList){
									// "갱신된 데이터가 조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");
						}
					});
				};
				
				/**
				 * @desc 지급금액기준 리피트 row Select Event
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onRowSelect_RptPmntAmt = function() {
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtControl.refreshBind("binRoPmntCiiUnit");
				};
				
				/**
				 * @desc 지급금액기준 리피트 Value Change Event
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				function doAfterValueChangRptPmntAmt(psDiv) {
					
					var vnRowIdx = util.Grid.getIndex(app, "grdPmntAmt");
					var vsValue = util.Grid.getCellValue(app, "grdPmntAmt", psDiv, vnRowIdx);
					var vnValue = null;
					
					if(psDiv == "SERIAL_NO"){
						if(vsValue <= 0){
							util.Msg.alert("NLS-CSS-M052");
							util.Grid.setCellValue(app, "grdPmntAmt", psDiv, "", vnRowIdx);	
							return false;
						}
					}	
					
					if(psDiv == "ST_DT" || psDiv == "END_DT"){
						var vsStDt = util.Grid.getCellValue(app, "grdPmntAmt", "ST_DT", vnRowIdx);
						var vsEndDt = util.Grid.getCellValue(app, "grdPmntAmt", "END_DT", vnRowIdx);
						
						if(vsStDt != "" && vsEndDt != "") {
							if(vsStDt > vsEndDt){
								util.Msg.alert("NLS-WRN-M016");
								util.Grid.setCellValue(app, "grdPmntAmt", psDiv, "", vnRowIdx);	
								return false;
							}
						}
					}
					
					if(psDiv == "PMNT_CII_RCD"){
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//			ExtControl.refreshBind("binRoPmntCiiUnit");
						
						if(vsValue != "CH201UNT"){
							util.Grid.setCellValue(app, "grdPmntAmt", "UNIT_RCD", "", vnRowIdx);	
							util.Grid.setCellValue(app, "grdPmntAmt", "UNIT_ALOT_VAL", "", vnRowIdx);	
			            }
			            
						if(vsValue == "CH201RAT"){
							if(Number(util.Grid.getCellValue(app, "grdPmntAmt", "CII_VAL", vnRowIdx)) > 100) {
								//지급기준이 비율인 경우 기준값은 100을 넘을 수 없습니다.
								util.Msg.alert("NLS-CSS-M024");
								util.Grid.setCellValue(app, "grdPmntAmt", psDiv, "", vnRowIdx);	
								return false;
							}
						}
					}	
					
					if(psDiv == "CII_VAL"){
						if(vsValue <= 0){
							util.Msg.alert("NLS-CRS-M006", [NLS.NSCR.STDVAL]);
							util.Grid.setCellValue(app, "grdPmntAmt", psDiv, "", vnRowIdx);	
							return false;
						}
						
						if(util.Grid.getCellValue(app, "grdPmntAmt", "PMNT_CII_RCD", vnRowIdx) == "CH201RAT") {
							if(Number(vsValue) > 100){
								//지급기준이 비율인 경우 기준값은 100을 넘을 수 없습니다.
								util.Msg.alert("NLS-CSS-M024");
								util.Grid.setCellValue(app, "grdPmntAmt", psDiv, "", vnRowIdx);	
								return false;
							}
						}
					}	
				};
				
				
				/**
				 * @desc [btnNewQual]신규(자격기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				moPage.onClick_BtnNewQual = function() {
					// 신규로우 추가
					var vnIdx = util.Grid.insertRow(app, "grdQualCii","rdCbbQualCiiRcdQual");
					
					// 신규 Defalut값 설정 		
					util.Grid.setCellValue(app, "grdQualCii", "ST_DT" , util.DataMap.getValue(app, "dmReqKey", "strKeyDt"));
					util.Grid.setCellValue(app, "grdQualCii", "END_DT", "99991231000000");
					util.Grid.setCellValue(app, "grdQualCii", "SCAL_FEE_CD", util.DataMap.getValue(app, "dmReqKey", "strScalFeeCd"));	// 장학금코드
					util.Grid.setCellValue(app, "grdQualCii", "OBJ_DIV_RCD", "CC009SS");
					util.Grid.setCellValue(app, "grdQualCii", "SERIAL_NO", doGetMaxSerialNo("grdQualCii"));
				};
				
				/**
				 * @desc [btnDelQual]삭제(자격기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				moPage.onClick_BtnDelQual = function() {
					// 삭제
					util.Grid.deleteRow(app, "grdQualCii");
				};
				
				/**
				 * @desc [btnRestoreQual]작업취소(자격기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 25
				 */
				moPage.onClick_BtnRestoreQual = function() {
					// 작업취소
					util.Grid.restoreRow(app, "grdQualCii");
				};
				
				/**
				 * @desc [btnSaveQual]작업저장(자격기준) onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				moPage.onClick_BtnSaveQual = function() {
					// 자격기준 변경사항 저장
					doSaveQual();
				};
				
				/**
				 * @desc 자격기준 변경사항 저장
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				function doSaveQual() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdQualCii"], "MSG")){
						return false;
					}
					
					// 리피트 Validation Check
					if(!util.validate(app, "grdQualCii")) return false;
					
					// 자격기준별 중복체크
					if(!doCheckDupDate("rptQualCii", "QUAL_CII_RCD", null, "ST_DT", "END_DT", [NLS.NSCR.QUALISTD], null)) return false;
					
					//strCommand: saveQualCii 
					util.Submit.send(app, "subSaveQualCii", function(pbSuccess){
						if(pbSuccess){
							// 자격기준목록 조회
							doListQual(function(pbSuccessList) {
								if(pbSuccessList){
									// "갱신된 데이터가 조회되었습니다." header 메세지 표시
									util.Msg.notify(app, "NLS.INF.M025");
								}
							});
						}else{
							// "저장중 오류가 발생하였습니다." 메시지 표시
							util.Msg.notify(app, "NLS.WRN.M119");
						}
					});
				};
				
				/**
				 * @desc 자격기준 리피트 row Select Event
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				moPage.onRowSelect_RptQualCii = function() {
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtControl.refreshBind(["binRoQualCiiNum1","binRoQualCiiNum2","binRoQualCiiChar1","binRoQualCiiChar2"]);
				};
				
				/**
				 * @desc 자격기준 리피트 Value Change Event
				 * @param 
				 * @return  
				 * @author Aeyoung Lee 2016. 2. 26
				 */
				function doAfterValueChangRptQualCii(psDiv) {
					
					var vnRowIdx = util.Grid.getIndex(app, "grdQualCii");
					var vsValue = util.Grid.getCellValue(app, "grdQualCii", psDiv, vnRowIdx);
					var vnValue = null;
					
					if(psDiv == "SERIAL_NO"){
						if(vsValue <= 0){
							util.Msg.alert("NLS-CSS-M052");
							util.Grid.setCellValue(app, "grdQualCii", psDiv, "", vnRowIdx);	
							return false;
						}
					}	
					
					if(psDiv == "ST_DT" || psDiv == "END_DT"){
						var vsStDt = util.Grid.getCellValue(app, "grdQualCii", "ST_DT", vnRowIdx);
						var vsEndDt = util.Grid.getCellValue(app, "grdQualCii", "END_DT", vnRowIdx);
						
						if(vsStDt != "" && vsEndDt != "") {
							if(vsStDt > vsEndDt){
								util.Msg.alert("NLS-WRN-M016");
								util.Grid.setCellValue(app, "grdQualCii", psDiv, "", vnRowIdx);	
								return false;
							}
						}
					}
					
					if(psDiv == "QUAL_CII_RCD"){
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//			ExtControl.refreshBind(["binRoQualCiiNum1","binRoQualCiiNum2","binRoQualCiiChar1","binRoQualCiiChar2"]);
						
						var vnNodeLength = util.DataSet.getRowCount(app, "dsListQualCii");
						
						var vsPrp1 = ExtInstance.getValue("/root/resOnLoad/listQualCii/row", "CD_PRP1", "child::CD='" + vsValue + "'");
						var vsPrp2 = ExtInstance.getValue("/root/resOnLoad/listQualCii/row", "CD_PRP2", "child::CD='" + vsValue + "'");
						var vsPrp3 = ExtInstance.getValue("/root/resOnLoad/listQualCii/row", "CD_PRP3", "child::CD='" + vsValue + "'");
						var vsPrp4 = ExtInstance.getValue("/root/resOnLoad/listQualCii/row", "CD_PRP4", "child::CD='" + vsValue + "'");
						
						
						if(vsPrp1 != "Y"){
							util.Grid.setCellValue(app, "grdQualCii", "CII_NUM_VAL1", "", vnRowIdx);	
						}	
						
						if(vsPrp2 != "Y"){
							util.Grid.setCellValue(app, "grdQualCii", "CII_NUM_VAL2", "", vnRowIdx);	
						}	
						
						if(vsPrp3 != "Y"){
							util.Grid.setCellValue(app, "grdQualCii", "CII_CHAR_VAL1", "", vnRowIdx);	
						}
						
						if(vsPrp4 != "Y"){
							util.Grid.setCellValue(app, "grdQualCii", "CII_CHAR_VAL2", "", vnRowIdx);	
						}
					}	
					
				};
				
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListScalFeeCls1");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListScalFeeCls2");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListScalFeeCls3");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListScalFeeCls4");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListScalFeeCls5");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListLanDivRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsListItem");
			dataSet_7.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsListMngDeptDiv");
			dataSet_8.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsListFnreDivRcd");
			dataSet_9.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsListPmntDiv");
			dataSet_10.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsListUnitRcd");
			dataSet_11.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsListQualCii");
			dataSet_12.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"},
					{"name": "CD_PRP1"},
					{"name": "CD_PRP2"},
					{"name": "CD_PRP3"},
					{"name": "CD_PRP4"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			
			var dataSet_13 = new cpr.data.DataSet("dsListPmntCii");
			dataSet_13.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_13);
			
			var dataSet_14 = new cpr.data.DataSet("dsListPmntItv");
			dataSet_14.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_14);
			
			var dataSet_15 = new cpr.data.DataSet("dsBase");
			dataSet_15.parseData({
				"info": "CSS_BASE_INFO@SCAL_FEE_CD,ST_DT,END_DT,OBJ_DIV_RCD",
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "LAN_DIV_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "SCAL_FNDTN_CD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "WRK_SCAL_YN"},
					{"name": "DUP_PMNT_YN"},
					{"name": "MNG_DEPT_DIV_RCD"},
					{"name": "STUD_REQ_YN"},
					{"name": "CNTI_SCAL_YN"},
					{"name": "PMNT_CNT"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "CERT_SHEET_NPRT_YN"},
					{"name": "PRT_ORD"},
					{"name": "SCAL_FEE_CLS1_RCD"},
					{"name": "SCAL_FEE_CLS2_RCD"},
					{"name": "SCAL_FEE_CLS3_RCD"},
					{"name": "SCAL_FEE_CLS4_RCD"},
					{"name": "SCAL_FEE_CLS5_RCD"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"},
					{"name": "DEPT_NM"},
					{"name": "SCAL_FNDTN_NM"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_15);
			
			var dataSet_16 = new cpr.data.DataSet("dsFrfBase");
			dataSet_16.parseData({
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "LAN_DIV_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "SCAL_FNDTN_CD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "WRK_SCAL_YN"},
					{"name": "DUP_PMNT_YN"},
					{"name": "MNG_DEPT_DIV_RCD"},
					{"name": "STUD_REQ_YN"},
					{"name": "CNTI_SCAL_YN"},
					{"name": "PMNT_CNT"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "CERT_SHEET_NPRT_YN"},
					{"name": "PRT_ORD"},
					{"name": "SCAL_FEE_CLS1_RCD"},
					{"name": "SCAL_FEE_CLS2_RCD"},
					{"name": "SCAL_FEE_CLS3_RCD"},
					{"name": "SCAL_FEE_CLS4_RCD"},
					{"name": "SCAL_FEE_CLS5_RCD"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"},
					{"name": "DEPT_NM"},
					{"name": "SCAL_FNDTN_NM"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_16);
			
			var dataSet_17 = new cpr.data.DataSet("dsBaseHistory");
			dataSet_17.parseData({
				"info": "CSS_BASE_INFO@SCAL_FEE_CD,ST_DT,END_DT,OBJ_DIV_RCD",
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "LAN_DIV_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "SCAL_FNDTN_CD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "WRK_SCAL_YN"},
					{"name": "DUP_PMNT_YN"},
					{"name": "MNG_DEPT_DIV_RCD"},
					{"name": "STUD_REQ_YN"},
					{"name": "CNTI_SCAL_YN"},
					{"name": "PMNT_CNT"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "CERT_SHEET_NPRT_YN"},
					{"name": "PRT_ORD"},
					{"name": "SCAL_FEE_CLS1_RCD"},
					{"name": "SCAL_FEE_CLS2_RCD"},
					{"name": "SCAL_FEE_CLS3_RCD"},
					{"name": "SCAL_FEE_CLS4_RCD"},
					{"name": "SCAL_FEE_CLS5_RCD"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"},
					{"name": "DEPT_NM"},
					{"name": "SCAL_FNDTN_NM"},
					{"name": "FLAG_GBN"}
				],
				"rows": []
			});
			app.register(dataSet_17);
			
			var dataSet_18 = new cpr.data.DataSet("dsBaseLan");
			dataSet_18.parseData({
				"info": "CSS_BASE_INFO_LAN@REF_KEY,LAN_DIV_RCD,SCAL_FEE_CD",
				"columns": [
					{"name": "REF_KEY"},
					{"name": "SCAL_FEE_CD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"}
				],
				"rows": []
			});
			app.register(dataSet_18);
			
			var dataSet_19 = new cpr.data.DataSet("dsFrfBaseLan");
			dataSet_19.parseData({
				"columns": [
					{"name": "REF_KEY"},
					{"name": "SCAL_FEE_CD"},
					{"name": "LAN_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"}
				],
				"rows": []
			});
			app.register(dataSet_19);
			
			var dataSet_20 = new cpr.data.DataSet("dsPmntAmt");
			dataSet_20.parseData({
				"info": "CSS_PMNT_AMT_CII@SCAL_FEE_CD,ST_DT,END_DT,OBJ_DIV_RCD,SERIAL_NO",
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "REF_KEY"},
					{"name": "FNRE_DIV_RCD"},
					{"name": "PMNT_CII_RCD"},
					{"name": "ITEM_CD"},
					{"name": "CII_VAL"},
					{"name": "UNIT_RCD"},
					{"name": "UNIT_ALOT_VAL"},
					{"name": "ST_DT"},
					{"name": "END_DT"}
				],
				"rows": []
			});
			app.register(dataSet_20);
			
			var dataSet_21 = new cpr.data.DataSet("dsQualCii");
			dataSet_21.parseData({
				"info": "CSS_QUAL_CII@SCAL_FEE_CD,ST_DT,END_DT,OBJ_DIV_RCD,SERIAL_NO",
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "REF_KEY"},
					{"name": "QUAL_CII_RCD"},
					{"name": "CII_NUM_VAL1"},
					{"name": "CII_NUM_VAL2"},
					{"name": "CII_CHAR_VAL1"},
					{"name": "CII_CHAR_VAL2"},
					{"name": "ST_DT"},
					{"name": "END_DT"}
				],
				"rows": []
			});
			app.register(dataSet_21);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strKeyDt",
						"dataType": "string"
					},
					{
						"name": "strEndYn",
						"dataType": "string"
					},
					{
						"name": "strScalNm",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls1",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls2",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls3",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls4",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls5",
						"dataType": "string"
					},
					{
						"name": "strKeyDtHistory",
						"dataType": "string"
					},
					{
						"name": "strKeyDtAddr",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeNm",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strRefKey",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strSystemLan",
						"dataType": "string"
					},
					{
						"name": "strCutDt",
						"dataType": "string"
					},
					{
						"name": "strKeyDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqCheck");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strKeyDtHistory",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strCheckUsed",
						"dataType": "string"
					},
					{
						"name": "resultCount",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalFee/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataSet_9, false);
			submission_1.addResponseData(dataSet_10, false);
			submission_1.addResponseData(dataSet_11, false);
			submission_1.addResponseData(dataSet_12, false);
			submission_1.addResponseData(dataSet_13, false);
			submission_1.addResponseData(dataSet_14, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subBaseList");
			submission_2.action = "/css/StdCssScalFee/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_15, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subBaseListHistory");
			submission_3.action = "/css/StdCssScalFee/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_17, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subBaseListLan");
			submission_4.action = "/css/StdCssScalFee/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_18, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subPmntAmtCiiList");
			submission_5.action = "/css/StdCssScalFee/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addResponseData(dataSet_20, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subQualCiiList");
			submission_6.action = "/css/StdCssScalFee/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataSet_21, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subSave");
			submission_7.action = "/css/StdCssScalFee/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataSet_15);
			submission_7.addRequestData(dataMap_1);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subSaveHistory");
			submission_8.action = "/css/StdCssScalFee/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataSet_17);
			submission_8.addRequestData(dataMap_1);
			app.register(submission_8);
			
			var submission_9 = new cpr.protocols.Submission("subSaveLan");
			submission_9.action = "/css/StdCssScalFee/";
			submission_9.mediaType = "application/x-www-form-urlencoded";
			submission_9.addRequestData(dataSet_18);
			app.register(submission_9);
			
			var submission_10 = new cpr.protocols.Submission("subSavePmntAmtCii");
			submission_10.action = "/css/StdCssScalFee/";
			submission_10.mediaType = "application/x-www-form-urlencoded";
			submission_10.addRequestData(dataSet_20);
			app.register(submission_10);
			
			var submission_11 = new cpr.protocols.Submission("subSaveQualCii");
			submission_11.action = "/css/StdCssScalFee/";
			submission_11.mediaType = "application/x-www-form-urlencoded";
			submission_11.addRequestData(dataSet_21);
			app.register(submission_11);
			
			var submission_12 = new cpr.protocols.Submission("subCheckScalFeeCd");
			submission_12.action = "/css/StdCssScalFee/";
			submission_12.mediaType = "application/x-www-form-urlencoded";
			submission_12.addRequestData(dataMap_3);
			submission_12.addResponseData(dataMap_4, false);
			app.register(submission_12);
			
			var submission_13 = new cpr.protocols.Submission("subCheckScalCdUsed");
			submission_13.action = "/css/StdCssScalFee/";
			submission_13.mediaType = "application/x-www-form-urlencoded";
			submission_13.addRequestData(dataMap_3);
			submission_13.addResponseData(dataMap_4, false);
			app.register(submission_13);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optKeyDt");
				output_1.value = "";
				output_1.style.setClasses(["require"]);
				output_1.bind("value").toLanguage("UI-SCR-STDDT");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "90px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipKeyDt");
				dateInput_1.format = "YYYY-MM-DD";
				dateInput_1.userAttr({"require": "Y"});
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optKeyDt.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDt");
				if(typeof onDipKeyDtKeyup == "function") {
					dateInput_1.addEventListener("keyup", onDipKeyDtKeyup);
				}
				container.addChild(dateInput_1, {
					"top": "5px",
					"left": "100px",
					"width": "131px",
					"height": "25px"
				});
				var checkBox_1 = new cpr.controls.CheckBox("ckbEndYn");
				checkBox_1.value = "";
				checkBox_1.trueValue = "Y";
				checkBox_1.falseValue = "";
				checkBox_1.text = "폐기장학금포함";
				checkBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strEndYn");
				container.addChild(checkBox_1, {
					"top": "5px",
					"left": "260px",
					"width": "120px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnYearSmt");
				button_2.value = "";
				button_2.style.setClasses(["btn-pop-search"]);
				if(typeof onBtnYearSmtClick == "function") {
					button_2.addEventListener("click", onBtnYearSmtClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "230px",
					"width": "20px",
					"height": "25px"
				});
				var inputBox_1 = new cpr.controls.InputBox("ipbScalNm");
				inputBox_1.maxLength = 200;
				inputBox_1.bind("fieldLabel").toExpression("#optFndtnNm.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalNm");
				if(typeof onIpbScalNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbScalNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "485px",
					"width": "150px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optScalNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
				container.addChild(output_2, {
					"top": "5px",
					"left": "390px",
					"width": "90px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optScalFeeCls1");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-SCRSDIVCD1");
				container.addChild(output_3, {
					"top": "5px",
					"left": "645px",
					"width": "90px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optScalFeeCls2");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-SCRSDIVCD2");
				container.addChild(output_4, {
					"top": "5px",
					"left": "900px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbScalFeeCls1");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls1");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListScalFeeCls1"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "740px",
					"width": "150px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbScalFeeCls2");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls2");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsListScalFeeCls2"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "5px",
					"left": "995px",
					"width": "150px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optScalFeeCls3");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-SCRSDIVCD3");
				container.addChild(output_5, {
					"top": "30px",
					"left": "390px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbScalFeeCls3");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls3");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsListScalFeeCls3"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "485px",
					"width": "150px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optScalFeeCls4");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-SCRSDIVCD4");
				container.addChild(output_6, {
					"top": "30px",
					"left": "645px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbScalFeeCls4");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls4");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsListScalFeeCls4"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "740px",
					"width": "150px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optScalFeeCls5");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-SCRSDIVCD5");
				container.addChild(output_7, {
					"top": "30px",
					"left": "900px",
					"width": "90px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbScalFeeCls5");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls5");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsListScalFeeCls5"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "30px",
					"left": "995px",
					"width": "150px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "57px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SUBLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "226px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdBase");
				grid_1.init({
					"dataSet": app.lookup("dsBase"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "80px"},
						{"width": "118px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "96px"},
						{"width": "96px"},
						{"width": "96px"},
						{"width": "96px"},
						{"width": "96px"},
						{"width": "75px"},
						{"width": "95px"},
						{"width": "69px"},
						{"width": "70px"},
						{
							"width": "70px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_FEE_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_FEE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRSDIV1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRSDIV2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRSDIV3");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRSDIV4");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-SCRSDIV5");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PMNTDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-MANMDEPDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-CONTSCRS");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAMTCNT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-OG");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_8 = new cpr.controls.Output();
										output_8.style.css({
											"text-align" : "center"
										});
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CD";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptStDt");
										output_9.dataType = "date";
										output_9.format = "YYYY-MM-DD";
										output_9.bind("value").toDataColumn("ST_DT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("gdOptEndDt");
										output_10.dataType = "date";
										output_10.format = "YYYY-MM-DD";
										output_10.style.css({
											"text-align" : "center"
										});
										output_10.bind("value").toDataColumn("END_DT");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS1_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("gdCbbScalFeeCls1Rcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsListScalFeeCls1"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SCAL_FEE_CLS1_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS2_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("gdCbbScalFeeCls2Rcd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsListScalFeeCls2"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SCAL_FEE_CLS2_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS3_RCD";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("gdCbbScalFeeCls3Rcd");
										comboBox_8.enabled = false;
										comboBox_8.hideButton = true;
										(function(comboBox_8){
											comboBox_8.setItemSet(app.lookup("dsListScalFeeCls3"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("SCAL_FEE_CLS3_RCD");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS4_RCD";
									cell.control = (function(){
										var comboBox_9 = new cpr.controls.ComboBox("gdCbbScalFeeCls4Rcd");
										comboBox_9.enabled = false;
										comboBox_9.hideButton = true;
										(function(comboBox_9){
											comboBox_9.setItemSet(app.lookup("dsListScalFeeCls4"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_9);
										comboBox_9.bind("value").toDataColumn("SCAL_FEE_CLS4_RCD");
										return comboBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS5_RCD";
									cell.control = (function(){
										var comboBox_10 = new cpr.controls.ComboBox("gdCbbScalFeeCls5Rcd");
										comboBox_10.enabled = false;
										comboBox_10.hideButton = true;
										(function(comboBox_10){
											comboBox_10.setItemSet(app.lookup("dsListScalFeeCls5"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_10);
										comboBox_10.bind("value").toDataColumn("SCAL_FEE_CLS5_RCD");
										return comboBox_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "PMNT_DIV_RCD";
									cell.control = (function(){
										var comboBox_11 = new cpr.controls.ComboBox("gdCbbPmntDivRcd");
										comboBox_11.enabled = false;
										comboBox_11.hideButton = true;
										(function(comboBox_11){
											comboBox_11.setItemSet(app.lookup("dsListPmntDiv"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_11);
										comboBox_11.bind("value").toDataColumn("PMNT_DIV_RCD");
										return comboBox_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "MNG_DEPT_DIV_RCD";
									cell.control = (function(){
										var comboBox_12 = new cpr.controls.ComboBox("gdCbbMngDeptDivRcd");
										comboBox_12.enabled = false;
										comboBox_12.hideButton = true;
										comboBox_12.userAttr({"require": "Y"});
										(function(comboBox_12){
											comboBox_12.addItem(new cpr.controls.Item("선택", ""));
											comboBox_12.setItemSet(app.lookup("dsListMngDeptDiv"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_12);
										comboBox_12.bind("value").toDataColumn("MNG_DEPT_DIV_RCD");
										return comboBox_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "CNTI_SCAL_YN";
									cell.control = (function(){
										var checkBox_2 = new cpr.controls.CheckBox("gdCkbCntiScalYn");
										checkBox_2.enabled = false;
										checkBox_2.value = "";
										checkBox_2.trueValue = "Y";
										checkBox_2.falseValue = "";
										checkBox_2.text = "";
										checkBox_2.style.css({
											"text-align" : "center"
										});
										checkBox_2.bind("value").toDataColumn("CNTI_SCAL_YN");
										return checkBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "PMNT_CNT";
									cell.style.css({
										"text-align" : "right"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "DEPT_NM";
									cell.style.css({
										"text-align" : "right"
									});
								}
							}
						]
					}
				});
				if(typeof onGrdBaseSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdBaseSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "205px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "97px",
				"left": "5px",
				"width": "1225px",
				"height": "242px"
			});
			
			var group_3 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_4 = new cpr.controls.layouts.XYLayout();
			group_3.setLayout(xYLayout_4);
			(function(container){
				var tabFolder_1 = new cpr.controls.TabFolder("tabMain");
				
				var tabItem_1 = (function(tabFolder){
					var tabItem_1 = new cpr.controls.TabItem();
					tabItem_1.text = "tab1";
					tabItem_1.name = "tabManage";
					var group_4 = new cpr.controls.Container("grpManage");
					// Layout
					var formLayout_1 = new cpr.controls.layouts.FormLayout();
					formLayout_1.topMargin = "0px";
					formLayout_1.rightMargin = "0px";
					formLayout_1.bottomMargin = "0px";
					formLayout_1.leftMargin = "0px";
					formLayout_1.horizontalSpacing = "0px";
					formLayout_1.verticalSpacing = "0px";
					formLayout_1.setColumns(["1fr"]);
					formLayout_1.setRows(["1fr"]);
					group_4.setLayout(formLayout_1);
					(function(container){
						var group_5 = linker.group_5 = new cpr.controls.Container("frfBase");
						group_5.style.setClasses(["form-box"]);
						// Layout
						var xYLayout_5 = new cpr.controls.layouts.XYLayout();
						group_5.setLayout(xYLayout_5);
						(function(container){
							var inputBox_2 = new cpr.controls.InputBox("ipbFrfScalFeeNmBase");
							inputBox_2.maxLength = 200;
							inputBox_2.userAttr({"require": "Y"});
							inputBox_2.bind("fieldLabel").toExpression("#optFrfScalFeeNmBase.value");
							inputBox_2.bind("value").toDataColumn("SCAL_FEE_NM");
							container.addChild(inputBox_2, {
								"top": "55px",
								"left": "120px",
								"width": "270px",
								"height": "25px"
							});
							var dateInput_2 = new cpr.controls.DateInput("dipFrfStDtBase");
							dateInput_2.readOnly = true;
							dateInput_2.maxDate = new Date(9999, 11, 31);
							dateInput_2.bind("fieldLabel").toExpression("#optFrfStDtBase.value");
							dateInput_2.bind("value").toDataColumn("ST_DT");
							container.addChild(dateInput_2, {
								"top": "5px",
								"left": "120px",
								"width": "110px",
								"height": "25px"
							});
							var output_11 = new cpr.controls.Output("optFrfStDtBase");
							output_11.value = "";
							output_11.style.setClasses(["require"]);
							output_11.bind("value").toLanguage("UI-DB-ST_DT");
							container.addChild(output_11, {
								"top": "5px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var output_12 = new cpr.controls.Output("optFrfEndDtBase");
							output_12.value = "";
							output_12.style.setClasses(["require"]);
							output_12.bind("value").toLanguage("UI-DB-END_DT");
							container.addChild(output_12, {
								"top": "5px",
								"left": "240px",
								"width": "110px",
								"height": "25px"
							});
							var dateInput_3 = new cpr.controls.DateInput("dipFrfEndDtBase");
							dateInput_3.readOnly = true;
							dateInput_3.maxDate = new Date(9999, 11, 31);
							dateInput_3.bind("fieldLabel").toExpression("#optFrfEndDt.value");
							dateInput_3.bind("value").toDataColumn("END_DT");
							container.addChild(dateInput_3, {
								"top": "5px",
								"left": "355px",
								"width": "110px",
								"height": "25px"
							});
							var output_13 = new cpr.controls.Output("optFrfScalFeeNmBase");
							output_13.value = "";
							output_13.style.setClasses(["require"]);
							output_13.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
							container.addChild(output_13, {
								"top": "55px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var inputBox_3 = new cpr.controls.InputBox("ipbFrfScalFeeCdBase");
							inputBox_3.maxLength = 10;
							inputBox_3.bind("fieldLabel").toExpression("#optFrfScalFeeCdBase.value");
							inputBox_3.bind("value").toDataColumn("SCAL_FEE_CD");
							if(typeof onIpbFrfScalFeeCdBaseValueChange == "function") {
								inputBox_3.addEventListener("value-change", onIpbFrfScalFeeCdBaseValueChange);
							}
							container.addChild(inputBox_3, {
								"top": "30px",
								"left": "120px",
								"width": "110px",
								"height": "25px"
							});
							var output_14 = new cpr.controls.Output("optFrfScalFeeCdBase");
							output_14.value = "";
							output_14.style.setClasses(["require"]);
							output_14.bind("value").toLanguage("UI-DB-SCAL_FEE_CD");
							container.addChild(output_14, {
								"top": "30px",
								"left": "5px",
								"width": "111px",
								"height": "25px"
							});
							var output_15 = new cpr.controls.Output("optFrfDesc1Base");
							output_15.value = "";
							output_15.bind("value").toLanguage("UI-DB-DESC1");
							container.addChild(output_15, {
								"top": "30px",
								"left": "795px",
								"width": "110px",
								"height": "35px"
							});
							var textArea_1 = new cpr.controls.TextArea("txtFrfDesc1Base");
							textArea_1.maxLength = 1000;
							textArea_1.bind("fieldLabel").toExpression("#optFrfDesc1Base.value");
							textArea_1.bind("value").toDataColumn("DESC1");
							container.addChild(textArea_1, {
								"top": "30px",
								"left": "910px",
								"width": "280px",
								"height": "35px"
							});
							var inputBox_4 = new cpr.controls.InputBox("ipbFrfShortNmBase");
							inputBox_4.maxLength = 100;
							inputBox_4.bind("fieldLabel").toExpression("#optFrfShortNmBase.value");
							inputBox_4.bind("value").toDataColumn("SHORT_NM");
							container.addChild(inputBox_4, {
								"top": "80px",
								"left": "120px",
								"width": "270px",
								"height": "25px"
							});
							var output_16 = new cpr.controls.Output("optFrfShortNmBase");
							output_16.value = "";
							output_16.bind("value").toLanguage("UI-GLS-SHORT_NM");
							container.addChild(output_16, {
								"top": "80px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var output_17 = new cpr.controls.Output("optFrfPrtNmBase");
							output_17.value = "";
							output_17.bind("value").toLanguage("UI-SCR-PRTNAME");
							container.addChild(output_17, {
								"top": "105px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var inputBox_5 = new cpr.controls.InputBox("ipbFrfPrtNmBase");
							inputBox_5.maxLength = 200;
							inputBox_5.bind("fieldLabel").toExpression("#optFrfPrtNmBase.value");
							inputBox_5.bind("value").toDataColumn("PRT_SCAL_FEE_NM");
							container.addChild(inputBox_5, {
								"top": "105px",
								"left": "120px",
								"width": "270px",
								"height": "25px"
							});
							var output_18 = new cpr.controls.Output("optFrfScalFeeCls1Base");
							output_18.value = "";
							output_18.bind("value").toLanguage("UI-SCR-SCRSDIV1");
							container.addChild(output_18, {
								"top": "180px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var output_19 = new cpr.controls.Output("optFrfScalFeeCls2Base");
							output_19.value = "";
							output_19.bind("value").toLanguage("UI-SCR-SCRSDIV2");
							container.addChild(output_19, {
								"top": "205px",
								"left": "5px",
								"width": "110px",
								"height": "25px"
							});
							var output_20 = new cpr.controls.Output("optFrfDeptNmBase");
							output_20.value = "";
							output_20.style.setClasses(["require"]);
							output_20.bind("value").toLanguage("UI-GLS-OG");
							container.addChild(output_20, {
								"top": "30px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var inputBox_6 = new cpr.controls.InputBox("ipbFrfDeptNmBase");
							inputBox_6.userAttr({"require": "Y"});
							inputBox_6.bind("fieldLabel").toExpression("#optFrfDeptNmBase.value");
							inputBox_6.bind("value").toDataColumn("DEPT_NM");
							if(typeof onIpbFrfDeptNmBaseValueChange == "function") {
								inputBox_6.addEventListener("value-change", onIpbFrfDeptNmBaseValueChange);
							}
							container.addChild(inputBox_6, {
								"top": "30px",
								"left": "515px",
								"width": "250px",
								"height": "25px"
							});
							var output_21 = new cpr.controls.Output("optFrfChargerNmBase");
							output_21.value = "";
							output_21.bind("value").toLanguage("UI-SCR-PMNTDIV");
							container.addChild(output_21, {
								"top": "55px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var inputBox_7 = new cpr.controls.InputBox("ipbFrfScalFndtnNmBase");
							inputBox_7.bind("fieldLabel").toExpression("#optFrfScalFndtnNmBase.value");
							inputBox_7.bind("value").toDataColumn("SCAL_FNDTN_NM");
							if(typeof onIpbFrfScalFndtnNmBaseValueChange == "function") {
								inputBox_7.addEventListener("value-change", onIpbFrfScalFndtnNmBaseValueChange);
							}
							container.addChild(inputBox_7, {
								"top": "80px",
								"left": "515px",
								"width": "250px",
								"height": "25px"
							});
							var output_22 = new cpr.controls.Output("optFrfScalFndtnNmBase");
							output_22.value = "";
							output_22.bind("value").toLanguage("UI-SCR-SCRSFNDTN");
							container.addChild(output_22, {
								"top": "80px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var output_23 = new cpr.controls.Output("optFrfDesc2Base");
							output_23.value = "";
							output_23.bind("value").toLanguage("UI-DB-DESC2");
							container.addChild(output_23, {
								"top": "70px",
								"left": "795px",
								"width": "110px",
								"height": "35px"
							});
							var textArea_2 = new cpr.controls.TextArea("txtFrfDesc2Base");
							textArea_2.maxLength = 1000;
							textArea_2.bind("fieldLabel").toExpression("#optFrfDesc2Base.value");
							textArea_2.bind("value").toDataColumn("DESC2");
							container.addChild(textArea_2, {
								"top": "70px",
								"left": "910px",
								"width": "280px",
								"height": "35px"
							});
							var checkBox_3 = new cpr.controls.CheckBox("ckbFrfWrkScalYnBase");
							checkBox_3.value = "";
							checkBox_3.trueValue = "Y";
							checkBox_3.falseValue = "";
							checkBox_3.text = "근로장학";
							checkBox_3.bind("value").toDataColumn("WRK_SCAL_YN");
							container.addChild(checkBox_3, {
								"top": "130px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var checkBox_4 = new cpr.controls.CheckBox("ckbFrfDupPmntYnBase");
							checkBox_4.value = "";
							checkBox_4.trueValue = "Y";
							checkBox_4.falseValue = "";
							checkBox_4.text = "중복지급";
							checkBox_4.bind("value").toDataColumn("DUP_PMNT_YN");
							container.addChild(checkBox_4, {
								"top": "130px",
								"left": "135px",
								"width": "120px",
								"height": "25px"
							});
							var checkBox_5 = new cpr.controls.CheckBox("ckbFrfStudReqYnBase");
							checkBox_5.value = "";
							checkBox_5.trueValue = "Y";
							checkBox_5.falseValue = "";
							checkBox_5.text = "학생신청";
							checkBox_5.bind("value").toDataColumn("STUD_REQ_YN");
							container.addChild(checkBox_5, {
								"top": "130px",
								"left": "265px",
								"width": "120px",
								"height": "25px"
							});
							var checkBox_6 = new cpr.controls.CheckBox("ckbFrfCntiScalYnBase");
							checkBox_6.value = "";
							checkBox_6.trueValue = "Y";
							checkBox_6.falseValue = "";
							checkBox_6.text = "연속장학";
							checkBox_6.bind("value").toDataColumn("CNTI_SCAL_YN");
							container.addChild(checkBox_6, {
								"top": "155px",
								"left": "5px",
								"width": "120px",
								"height": "25px"
							});
							var checkBox_7 = new cpr.controls.CheckBox("ckbFrfCertSheetNprtYnBase");
							checkBox_7.value = "";
							checkBox_7.trueValue = "Y";
							checkBox_7.falseValue = "";
							checkBox_7.text = "증명서미출력";
							checkBox_7.bind("value").toDataColumn("CERT_SHEET_NPRT_YN");
							container.addChild(checkBox_7, {
								"top": "155px",
								"left": "265px",
								"width": "120px",
								"height": "25px"
							});
							var output_24 = new cpr.controls.Output("optFrfPmntCntBase");
							output_24.value = "";
							output_24.bind("value").toLanguage("UI-SCR-PAMTCNT");
							container.addChild(output_24, {
								"top": "155px",
								"left": "135px",
								"width": "75px",
								"height": "25px"
							});
							var numberEditor_1 = new cpr.controls.NumberEditor("ipbFrfPmntCntBase");
							numberEditor_1.format = "999";
							numberEditor_1.bind("fieldLabel").toExpression("#optFrfPmntCntBase.value");
							numberEditor_1.bind("value").toDataColumn("PMNT_CNT");
							container.addChild(numberEditor_1, {
								"top": "155px",
								"left": "215px",
								"width": "40px",
								"height": "25px"
							});
							var comboBox_13 = new cpr.controls.ComboBox("cbbFrfScalFeeCls1Base");
							comboBox_13.bind("fieldLabel").toExpression("#optFrfScalFeeCls1Base.value");
							comboBox_13.bind("value").toDataColumn("SCAL_FEE_CLS1_RCD");
							(function(comboBox_13){
								comboBox_13.setItemSet(app.lookup("dsListScalFeeCls1"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_13);
							container.addChild(comboBox_13, {
								"top": "180px",
								"left": "120px",
								"width": "270px",
								"height": "25px"
							});
							var comboBox_14 = new cpr.controls.ComboBox("cbbFrfScalFeeCls2Base");
							comboBox_14.bind("fieldLabel").toExpression("#optFrfScalFeeCls2Base.value");
							comboBox_14.bind("value").toDataColumn("SCAL_FEE_CLS2_RCD");
							(function(comboBox_14){
								comboBox_14.setItemSet(app.lookup("dsListScalFeeCls2"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_14);
							container.addChild(comboBox_14, {
								"top": "205px",
								"left": "120px",
								"width": "270px",
								"height": "25px"
							});
							var output_25 = new cpr.controls.Output("optFrfScalFeeCls3Base");
							output_25.value = "";
							output_25.bind("value").toLanguage("UI-SCR-SCRSDIV3");
							container.addChild(output_25, {
								"top": "155px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_15 = new cpr.controls.ComboBox("cbbFrfScalFeeCls3Base");
							comboBox_15.bind("fieldLabel").toExpression("#optFrfScalFeeCls3Base.value");
							comboBox_15.bind("value").toDataColumn("SCAL_FEE_CLS3_RCD");
							(function(comboBox_15){
								comboBox_15.setItemSet(app.lookup("dsListScalFeeCls3"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_15);
							container.addChild(comboBox_15, {
								"top": "155px",
								"left": "515px",
								"width": "270px",
								"height": "25px"
							});
							var output_26 = new cpr.controls.Output("optFrfScalFeeCls4Base");
							output_26.value = "";
							output_26.bind("value").toLanguage("UI-SCR-SCRSDIV4");
							container.addChild(output_26, {
								"top": "180px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_16 = new cpr.controls.ComboBox("cbbFrfScalFeeCls4Base");
							comboBox_16.bind("fieldLabel").toExpression("#optFrfScalFeeCls4Base.value");
							comboBox_16.bind("value").toDataColumn("SCAL_FEE_CLS4_RCD");
							(function(comboBox_16){
								comboBox_16.setItemSet(app.lookup("dsListScalFeeCls4"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_16);
							container.addChild(comboBox_16, {
								"top": "180px",
								"left": "515px",
								"width": "270px",
								"height": "25px"
							});
							var output_27 = new cpr.controls.Output("optFrfScalFeeCls5Base");
							output_27.value = "";
							output_27.bind("value").toLanguage("UI-SCR-SCRSDIV5");
							container.addChild(output_27, {
								"top": "205px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_17 = new cpr.controls.ComboBox("cbbFrfScalFeeCls5Base");
							comboBox_17.bind("fieldLabel").toExpression("#optFrfScalFeeCls5Base.value");
							comboBox_17.bind("value").toDataColumn("SCAL_FEE_CLS5_RCD");
							(function(comboBox_17){
								comboBox_17.setItemSet(app.lookup("dsListScalFeeCls5"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_17);
							container.addChild(comboBox_17, {
								"top": "205px",
								"left": "515px",
								"width": "270px",
								"height": "25px"
							});
							var output_28 = new cpr.controls.Output("optFrfMngDeptDivRcdBase");
							output_28.value = "";
							output_28.style.setClasses(["require"]);
							output_28.bind("value").toLanguage("UI-SCR-MANMDEPDIV");
							container.addChild(output_28, {
								"top": "105px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_18 = new cpr.controls.ComboBox("cbbFrfMngDeptDivRcdBase");
							comboBox_18.userAttr({"require": "Y"});
							comboBox_18.bind("fieldLabel").toExpression("#optFrfMngDeptDivRcdBase.value");
							comboBox_18.bind("value").toDataColumn("MNG_DEPT_DIV_RCD");
							(function(comboBox_18){
								comboBox_18.setItemSet(app.lookup("dsListMngDeptDiv"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_18);
							container.addChild(comboBox_18, {
								"top": "105px",
								"left": "515px",
								"width": "270px",
								"height": "25px"
							});
							var output_29 = new cpr.controls.Output("optFrfRepNmBase5");
							output_29.value = "";
							output_29.bind("value").toLanguage("UI-DB-PMNT_ITV_RCD");
							container.addChild(output_29, {
								"top": "130px",
								"left": "400px",
								"width": "110px",
								"height": "25px"
							});
							var comboBox_19 = new cpr.controls.ComboBox("cbbFrfPmntItvRcdBase");
							comboBox_19.bind("value").toDataColumn("PMNT_ITV_RCD");
							(function(comboBox_19){
								comboBox_19.setItemSet(app.lookup("dsListPmntItv"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_19);
							container.addChild(comboBox_19, {
								"top": "130px",
								"left": "515px",
								"width": "105px",
								"height": "25px"
							});
							var output_30 = new cpr.controls.Output("optFrfRepNmBase6");
							output_30.value = "";
							output_30.bind("value").toLanguage("UI-DB-PRT_ORD");
							container.addChild(output_30, {
								"top": "130px",
								"left": "630px",
								"width": "90px",
								"height": "25px"
							});
							var inputBox_8 = new cpr.controls.InputBox("ipbFrfPrtOrdBase");
							inputBox_8.maxLength = 10;
							inputBox_8.bind("fieldLabel").toExpression("#optFrfPrtNmBase.value");
							inputBox_8.bind("value").toDataColumn("PRT_ORD");
							container.addChild(inputBox_8, {
								"top": "130px",
								"left": "725px",
								"width": "60px",
								"height": "25px"
							});
							var comboBox_20 = new cpr.controls.ComboBox("cbbFrfPmntDivRcdBase");
							comboBox_20.bind("value").toDataColumn("PMNT_DIV_RCD");
							(function(comboBox_20){
								comboBox_20.setItemSet(app.lookup("dsListPmntDiv"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_20);
							container.addChild(comboBox_20, {
								"top": "55px",
								"left": "515px",
								"width": "270px",
								"height": "25px"
							});
							var output_31 = new cpr.controls.Output("optFrfDesc3Base");
							output_31.value = "";
							output_31.bind("value").toLanguage("UI-DB-DESC3");
							container.addChild(output_31, {
								"top": "110px",
								"left": "795px",
								"width": "110px",
								"height": "35px"
							});
							var output_32 = new cpr.controls.Output("optFrfDesc4Base");
							output_32.value = "";
							output_32.bind("value").toLanguage("UI-DB-DESC4");
							container.addChild(output_32, {
								"top": "150px",
								"left": "795px",
								"width": "110px",
								"height": "35px"
							});
							var output_33 = new cpr.controls.Output("optFrfDesc5Base");
							output_33.value = "";
							output_33.bind("value").toLanguage("UI-DB-DESC5");
							container.addChild(output_33, {
								"top": "190px",
								"left": "795px",
								"width": "110px",
								"height": "35px"
							});
							var textArea_3 = new cpr.controls.TextArea("txtFrfDesc3Base");
							textArea_3.maxLength = 1000;
							textArea_3.bind("fieldLabel").toExpression("#optFrfDesc3Base.value");
							textArea_3.bind("value").toDataColumn("DESC3");
							container.addChild(textArea_3, {
								"top": "110px",
								"left": "910px",
								"width": "280px",
								"height": "35px"
							});
							var textArea_4 = new cpr.controls.TextArea("txtFrfDesc4Base");
							textArea_4.maxLength = 1000;
							textArea_4.bind("fieldLabel").toExpression("#optFrfDesc4Base.value");
							textArea_4.bind("value").toDataColumn("DESC4");
							container.addChild(textArea_4, {
								"top": "150px",
								"left": "910px",
								"width": "280px",
								"height": "35px"
							});
							var textArea_5 = new cpr.controls.TextArea("txtFrfDesc5Base");
							textArea_5.maxLength = 1000;
							textArea_5.bind("fieldLabel").toExpression("#optFrfDesc5Base.value");
							textArea_5.bind("value").toDataColumn("DESC5");
							container.addChild(textArea_5, {
								"top": "190px",
								"left": "910px",
								"width": "280px",
								"height": "35px"
							});
							var button_3 = new cpr.controls.Button("btnFrfDeptPop");
							button_3.value = "";
							button_3.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfDeptPopClick == "function") {
								button_3.addEventListener("click", onBtnFrfDeptPopClick);
							}
							container.addChild(button_3, {
								"top": "30px",
								"left": "765px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_9 = new cpr.controls.InputBox("ipbFrfDeptCdBase");
							inputBox_9.visible = false;
							inputBox_9.bind("fieldLabel").toExpression("#optFrfDeptNmBase.value");
							inputBox_9.bind("value").toDataColumn("DEPT_CD");
							container.addChild(inputBox_9, {
								"top": "7px",
								"left": "515px",
								"width": "35px",
								"height": "25px"
							});
							var button_4 = new cpr.controls.Button("btnFrfFndtnPop");
							button_4.value = "";
							button_4.style.setClasses(["btn-pop-search"]);
							if(typeof onBtnFrfFndtnPopClick == "function") {
								button_4.addEventListener("click", onBtnFrfFndtnPopClick);
							}
							container.addChild(button_4, {
								"top": "80px",
								"left": "765px",
								"width": "20px",
								"height": "25px"
							});
							var inputBox_10 = new cpr.controls.InputBox("ipbFrfScalFndtnCdBase");
							inputBox_10.visible = false;
							inputBox_10.bind("fieldLabel").toExpression("#optFrfScalFndtnNmBase.value");
							inputBox_10.bind("value").toDataColumn("SCAL_FNDTN_CD");
							container.addChild(inputBox_10, {
								"top": "7px",
								"left": "560px",
								"width": "35px",
								"height": "25px"
							});
						})(group_5);
						container.addChild(group_5, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "235px"
						});
						var button_5 = new cpr.controls.Button("btnNew");
						button_5.value = "";
						button_5.style.setClasses(["btn-new"]);
						button_5.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewClick == "function") {
							button_5.addEventListener("click", onBtnNewClick);
						}
						container.addChild(button_5, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var button_6 = new cpr.controls.Button("btnCopy");
						button_6.value = "";
						button_6.bind("value").toLanguage("UI-SCR-COPY");
						if(typeof onBtnCopyClick == "function") {
							button_6.addEventListener("click", onBtnCopyClick);
						}
						container.addChild(button_6, {
							"top": "5px",
							"left": "886px",
							"width": "60px",
							"height": "25px"
						});
						var button_7 = new cpr.controls.Button("btnDel");
						button_7.value = "";
						button_7.style.setClasses(["btn-delete"]);
						button_7.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelClick == "function") {
							button_7.addEventListener("click", onBtnDelClick);
						}
						container.addChild(button_7, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var button_8 = new cpr.controls.Button("btnSave");
						button_8.value = "";
						button_8.style.setClasses(["btn-save"]);
						button_8.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveClick == "function") {
							button_8.addEventListener("click", onBtnSaveClick);
						}
						container.addChild(button_8, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_3 = new udc.com.comFormTitle();
						userDefinedControl_3.bind("title").toLanguage("UI-SCR-HISTORYLST");
						container.addChild(userDefinedControl_3, {
							"top": "5px",
							"left": "5px",
							"width": "140px",
							"height": "25px"
						});
						var button_9 = new cpr.controls.Button("btnRestore");
						button_9.value = "";
						button_9.style.setClasses(["btn-restore"]);
						button_9.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreClick == "function") {
							button_9.addEventListener("click", onBtnRestoreClick);
						}
						container.addChild(button_9, {
							"top": "5px",
							"left": "1082px",
							"width": "60px",
							"height": "25px"
						});
					})(group_4);
					tabItem_1.content = group_4;
					tabItem_1.bind("text").toLanguage("UI-SCR-DATAMANG");
					return tabItem_1;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_1);
				
				var tabItem_2 = (function(tabFolder){
					var tabItem_2 = new cpr.controls.TabItem();
					tabItem_2.text = "tab1";
					tabItem_2.name = "tabHistory";
					var group_6 = new cpr.controls.Container("grpHistory");
					// Layout
					var formLayout_2 = new cpr.controls.layouts.FormLayout();
					formLayout_2.topMargin = "0px";
					formLayout_2.rightMargin = "0px";
					formLayout_2.bottomMargin = "0px";
					formLayout_2.leftMargin = "0px";
					formLayout_2.horizontalSpacing = "0px";
					formLayout_2.verticalSpacing = "0px";
					formLayout_2.setColumns(["1fr"]);
					formLayout_2.setRows(["1fr"]);
					group_6.setLayout(formLayout_2);
					(function(container){
						var button_10 = new cpr.controls.Button("btnSaveRecover");
						button_10.value = "";
						button_10.bind("value").toLanguage("UI-SCR-RECOVERY");
						if(typeof onBtnSaveRecoverClick == "function") {
							button_10.addEventListener("click", onBtnSaveRecoverClick);
						}
						container.addChild(button_10, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var button_11 = new cpr.controls.Button("btnSaveDisUseCanc");
						button_11.value = "";
						button_11.bind("value").toLanguage("UI-SCR-DISUSECANCL");
						if(typeof onBtnSaveDisUseCancClick == "function") {
							button_11.addEventListener("click", onBtnSaveDisUseCancClick);
						}
						container.addChild(button_11, {
							"top": "5px",
							"left": "1080px",
							"width": "60px",
							"height": "25px"
						});
						var button_12 = new cpr.controls.Button("btnSaveDisUse");
						button_12.value = "";
						button_12.bind("value").toLanguage("UI-SCR-DISUSE");
						if(typeof onBtnSaveDisUseClick == "function") {
							button_12.addEventListener("click", onBtnSaveDisUseClick);
						}
						container.addChild(button_12, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_4 = linker.userDefinedControl_4 = new udc.com.comTitle();
						userDefinedControl_4.bind("title").toLanguage("UI-SCR-HISTORYLST");
						container.addChild(userDefinedControl_4, {
							"top": "5px",
							"left": "5px",
							"width": "255px",
							"height": "25px"
						});
						var output_34 = new cpr.controls.Output("optKeyDtHistory");
						output_34.value = "";
						output_34.style.setClasses(["require"]);
						output_34.bind("value").toLanguage("UI-SCR-DISUSERECOVDT");
						container.addChild(output_34, {
							"top": "5px",
							"left": "751px",
							"width": "110px",
							"height": "25px"
						});
						var dateInput_4 = new cpr.controls.DateInput("dipKeyDtHistory");
						dateInput_4.format = "YYYY-MM-DD";
						dateInput_4.style.css({
							"text-align" : "center"
						});
						dateInput_4.bind("fieldLabel").toExpression("#optKeyDtHistory.value");
						dateInput_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strKeyDtHistory");
						container.addChild(dateInput_4, {
							"top": "5px",
							"left": "866px",
							"width": "120px",
							"height": "25px"
						});
						var button_13 = new cpr.controls.Button("btnYearSmtHis");
						button_13.value = "";
						button_13.style.setClasses(["btn-pop-search"]);
						if(typeof onBtnYearSmtHisClick == "function") {
							button_13.addEventListener("click", onBtnYearSmtHisClick);
						}
						container.addChild(button_13, {
							"top": "5px",
							"left": "986px",
							"width": "20px",
							"height": "25px"
						});
						var grid_2 = linker.grid_2 = new cpr.controls.Grid("grdBaseHistory");
						grid_2.init({
							"dataSet": app.lookup("dsBaseHistory"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "85px"},
								{"width": "107px"},
								{"width": "85px"},
								{"width": "85px"},
								{"width": "100px"},
								{"width": "110px"},
								{"width": "95px"},
								{"width": "95px"},
								{"width": "95px"},
								{"width": "95px"},
								{"width": "95px"},
								{"width": "80px"},
								{"width": "105px"},
								{"width": "70px"},
								{"width": "70px"},
								{"width": "75px"},
								{"width": "100px"},
								{"width": "75px"},
								{"width": "75px"},
								{"width": "75px"},
								{"width": "100px"},
								{"width": "70px"},
								{"width": "110px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SCAL_FEE_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SCAL_FEE_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-ST_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-END_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PRTNAME");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSDIV1");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSDIV2");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSDIV3");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSDIV4");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSDIV5");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PMNTDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-MANMDEPDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-CONTSCRS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PAMTCNT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PAYITV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-SCRSFNDTN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-WRKSCRSH");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-DUP_PMNT_YN");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-STUDAPL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-CERTSHEETNPRINT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-PRT_ORD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-OG");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_35 = new cpr.controls.Output();
												output_35.style.css({
													"text-align" : "center"
												});
												return output_35;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
											cell.control = (function(){
												var output_36 = new cpr.controls.Output("gdOptStDtHis");
												output_36.dataType = "date";
												output_36.format = "YYYY-MM-DD";
												output_36.style.css({
													"text-align" : "center"
												});
												output_36.bind("value").toDataColumn("ST_DT");
												return output_36;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "END_DT";
											cell.control = (function(){
												var output_37 = new cpr.controls.Output("rbOptEndDtHis");
												output_37.dataType = "date";
												output_37.format = "YYYY-MM-DD";
												output_37.style.css({
													"text-align" : "center"
												});
												output_37.bind("value").toDataColumn("END_DT");
												return output_37;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "PRT_SCAL_FEE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CLS1_RCD";
											cell.control = (function(){
												var comboBox_21 = new cpr.controls.ComboBox("rbCbbScalFeeCls1RcdHis");
												comboBox_21.enabled = false;
												comboBox_21.hideButton = true;
												(function(comboBox_21){
													comboBox_21.setItemSet(app.lookup("dsListScalFeeCls1"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_21);
												comboBox_21.bind("value").toDataColumn("SCAL_FEE_CLS1_RCD");
												return comboBox_21;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CLS2_RCD";
											cell.control = (function(){
												var comboBox_22 = new cpr.controls.ComboBox("rbCbbScalFeeCls2RcdHis");
												comboBox_22.enabled = false;
												comboBox_22.hideButton = true;
												(function(comboBox_22){
													comboBox_22.setItemSet(app.lookup("dsListScalFeeCls2"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_22);
												comboBox_22.bind("value").toDataColumn("SCAL_FEE_CLS2_RCD");
												return comboBox_22;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CLS3_RCD";
											cell.control = (function(){
												var comboBox_23 = new cpr.controls.ComboBox("rbCbbScalFeeCls3RcdHis");
												comboBox_23.enabled = false;
												comboBox_23.hideButton = true;
												(function(comboBox_23){
													comboBox_23.setItemSet(app.lookup("dsListScalFeeCls3"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_23);
												comboBox_23.bind("value").toDataColumn("SCAL_FEE_CLS3_RCD");
												return comboBox_23;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 11},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CLS4_RCD";
											cell.control = (function(){
												var comboBox_24 = new cpr.controls.ComboBox("rbCbbScalFeeCls4RcdHis");
												comboBox_24.enabled = false;
												comboBox_24.hideButton = true;
												(function(comboBox_24){
													comboBox_24.setItemSet(app.lookup("dsListScalFeeCls4"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_24);
												comboBox_24.bind("value").toDataColumn("SCAL_FEE_CLS4_RCD");
												return comboBox_24;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 12},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CLS5_RCD";
											cell.control = (function(){
												var comboBox_25 = new cpr.controls.ComboBox("rbCbbScalFeeCls5RcdHis");
												comboBox_25.enabled = false;
												comboBox_25.hideButton = true;
												(function(comboBox_25){
													comboBox_25.setItemSet(app.lookup("dsListScalFeeCls5"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_25);
												comboBox_25.bind("value").toDataColumn("SCAL_FEE_CLS5_RCD");
												return comboBox_25;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 13},
										"configurator": function(cell){
											cell.columnName = "PMNT_DIV_RCD";
											cell.control = (function(){
												var comboBox_26 = new cpr.controls.ComboBox("rbCbbPmntDivRcdHis");
												comboBox_26.enabled = false;
												comboBox_26.hideButton = true;
												(function(comboBox_26){
													comboBox_26.setItemSet(app.lookup("dsListPmntDiv"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_26);
												comboBox_26.bind("value").toDataColumn("PMNT_DIV_RCD");
												return comboBox_26;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 14},
										"configurator": function(cell){
											cell.columnName = "MNG_DEPT_DIV_RCD";
											cell.control = (function(){
												var comboBox_27 = new cpr.controls.ComboBox("rbCbbMngDeptDivRcdHis");
												comboBox_27.enabled = false;
												comboBox_27.hideButton = true;
												(function(comboBox_27){
													comboBox_27.setItemSet(app.lookup("dsListMngDeptDiv"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_27);
												comboBox_27.bind("value").toDataColumn("MNG_DEPT_DIV_RCD");
												return comboBox_27;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 15},
										"configurator": function(cell){
											cell.columnName = "STUD_REQ_YN";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 16},
										"configurator": function(cell){
											cell.columnName = "CNTI_SCAL_YN";
											cell.control = (function(){
												var checkBox_8 = new cpr.controls.CheckBox("rbCbbCntiScalYnHis");
												checkBox_8.enabled = false;
												checkBox_8.value = "";
												checkBox_8.trueValue = "Y";
												checkBox_8.falseValue = "";
												checkBox_8.text = "";
												checkBox_8.style.css({
													"text-align" : "center"
												});
												checkBox_8.bind("value").toDataColumn("CNTI_SCAL_YN");
												return checkBox_8;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 17},
										"configurator": function(cell){
											cell.columnName = "PMNT_CNT";
											cell.style.css({
												"text-align" : "right"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 18},
										"configurator": function(cell){
											cell.columnName = "PMNT_ITV_RCD";
											cell.control = (function(){
												var comboBox_28 = new cpr.controls.ComboBox("rbCbbMngDeptDivRcdHis1");
												comboBox_28.enabled = false;
												comboBox_28.hideButton = true;
												(function(comboBox_28){
													comboBox_28.setItemSet(app.lookup("dsListPmntItv"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_28);
												comboBox_28.bind("value").toDataColumn("PMNT_ITV_RCD");
												return comboBox_28;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 19},
										"configurator": function(cell){
											cell.columnName = "SCAL_FNDTN_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 20},
										"configurator": function(cell){
											cell.columnName = "WRK_SCAL_YN";
											cell.control = (function(){
												var checkBox_9 = new cpr.controls.CheckBox("rbCkbWrkScalYnHis");
												checkBox_9.enabled = false;
												checkBox_9.value = "";
												checkBox_9.trueValue = "Y";
												checkBox_9.falseValue = "";
												checkBox_9.text = "";
												checkBox_9.style.css({
													"text-align" : "center"
												});
												checkBox_9.bind("value").toDataColumn("WRK_SCAL_YN");
												return checkBox_9;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 21},
										"configurator": function(cell){
											cell.columnName = "DUP_PMNT_YN";
											cell.control = (function(){
												var checkBox_10 = new cpr.controls.CheckBox("rbCkbDupPmntYnHis");
												checkBox_10.enabled = false;
												checkBox_10.value = "";
												checkBox_10.trueValue = "Y";
												checkBox_10.falseValue = "";
												checkBox_10.text = "";
												checkBox_10.style.css({
													"text-align" : "center"
												});
												checkBox_10.bind("value").toDataColumn("DUP_PMNT_YN");
												return checkBox_10;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 22},
										"configurator": function(cell){
											cell.columnName = "STUD_REQ_YN";
											cell.control = (function(){
												var checkBox_11 = new cpr.controls.CheckBox("rbCkbStudReqYnHis");
												checkBox_11.enabled = false;
												checkBox_11.value = "";
												checkBox_11.trueValue = "Y";
												checkBox_11.falseValue = "";
												checkBox_11.text = "";
												checkBox_11.style.css({
													"text-align" : "center"
												});
												checkBox_11.bind("value").toDataColumn("STUD_REQ_YN");
												return checkBox_11;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 23},
										"configurator": function(cell){
											cell.columnName = "CERT_SHEET_NPRT_YN";
											cell.control = (function(){
												var checkBox_12 = new cpr.controls.CheckBox("rbCkbCertSheetNprtYnHis");
												checkBox_12.enabled = false;
												checkBox_12.value = "";
												checkBox_12.trueValue = "Y";
												checkBox_12.falseValue = "";
												checkBox_12.text = "";
												checkBox_12.style.css({
													"text-align" : "center"
												});
												checkBox_12.bind("value").toDataColumn("CERT_SHEET_NPRT_YN");
												return checkBox_12;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 24},
										"configurator": function(cell){
											cell.columnName = "PRT_ORD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 25},
										"configurator": function(cell){
											cell.columnName = "DEPT_NM";
										}
									}
								]
							}
						});
						container.addChild(grid_2, {
							"top": "30px",
							"left": "5px",
							"width": "1201px",
							"height": "235px"
						});
					})(group_6);
					tabItem_2.content = group_6;
					tabItem_2.bind("text").toLanguage("UI-SCR-HSTMNG");
					return tabItem_2;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_2);
				
				var tabItem_3 = (function(tabFolder){
					var tabItem_3 = new cpr.controls.TabItem();
					tabItem_3.text = "tab1";
					tabItem_3.name = "tabLan";
					var group_7 = new cpr.controls.Container("grpLan");
					// Layout
					var formLayout_3 = new cpr.controls.layouts.FormLayout();
					formLayout_3.topMargin = "0px";
					formLayout_3.rightMargin = "0px";
					formLayout_3.bottomMargin = "0px";
					formLayout_3.leftMargin = "0px";
					formLayout_3.horizontalSpacing = "0px";
					formLayout_3.verticalSpacing = "0px";
					formLayout_3.setColumns(["1fr"]);
					formLayout_3.setRows(["1fr"]);
					group_7.setLayout(formLayout_3);
					(function(container){
						var button_14 = new cpr.controls.Button("btnSaveLan");
						button_14.value = "";
						button_14.style.setClasses(["btn-save"]);
						button_14.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveLanClick == "function") {
							button_14.addEventListener("click", onBtnSaveLanClick);
						}
						container.addChild(button_14, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_5 = linker.userDefinedControl_5 = new udc.com.comTitle();
						userDefinedControl_5.bind("title").toLanguage("UI-SCR-LANLST");
						container.addChild(userDefinedControl_5, {
							"top": "5px",
							"left": "5px",
							"width": "215px",
							"height": "25px"
						});
						var button_15 = new cpr.controls.Button("btnDelLan");
						button_15.value = "";
						button_15.style.setClasses(["btn-delete"]);
						button_15.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelLanClick == "function") {
							button_15.addEventListener("click", onBtnDelLanClick);
						}
						container.addChild(button_15, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var group_8 = linker.group_8 = new cpr.controls.Container("frfBaseLan");
						group_8.style.setClasses(["form-box"]);
						// Layout
						var xYLayout_6 = new cpr.controls.layouts.XYLayout();
						group_8.setLayout(xYLayout_6);
						(function(container){
							var output_38 = new cpr.controls.Output("optFrfLanDivRcdLan");
							output_38.value = "";
							output_38.style.setClasses(["require"]);
							output_38.bind("value").toLanguage("UI-SCR-LANDIS");
							container.addChild(output_38, {
								"top": "5px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var output_39 = new cpr.controls.Output("optFrfDesc1Lan");
							output_39.value = "";
							output_39.bind("value").toLanguage("UI-DB-DESC1");
							container.addChild(output_39, {
								"top": "5px",
								"left": "270px",
								"width": "100px",
								"height": "40px"
							});
							var inputBox_11 = new cpr.controls.InputBox("ipbFrfScalFeeCdLan");
							inputBox_11.enabled = false;
							inputBox_11.readOnly = true;
							inputBox_11.maxLength = 10;
							inputBox_11.userAttr({"require": "Y"});
							inputBox_11.bind("fieldLabel").toExpression("#optFrfScalFeeCdLan.value");
							inputBox_11.bind("value").toDataColumn("SCAL_FEE_CD");
							container.addChild(inputBox_11, {
								"top": "30px",
								"left": "110px",
								"width": "150px",
								"height": "25px"
							});
							var output_40 = new cpr.controls.Output("optFrfScalFeeCdLan");
							output_40.value = "";
							output_40.style.setClasses(["require"]);
							output_40.bind("value").toLanguage("UI-DB-SCAL_FEE_CD");
							container.addChild(output_40, {
								"top": "30px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var textArea_6 = new cpr.controls.TextArea("txtFrfDesc1Lan");
							textArea_6.maxLength = 1000;
							textArea_6.bind("fieldLabel").toExpression("#optFrfDesc1Lan.value");
							textArea_6.bind("value").toDataColumn("DESC1");
							container.addChild(textArea_6, {
								"top": "5px",
								"left": "375px",
								"width": "230px",
								"height": "40px"
							});
							var output_41 = new cpr.controls.Output("optFrfScalFeeNmLan");
							output_41.value = "";
							output_41.style.setClasses(["require"]);
							output_41.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
							container.addChild(output_41, {
								"top": "55px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var inputBox_12 = new cpr.controls.InputBox("ipbFrfScalFeeNmLan");
							inputBox_12.maxLength = 200;
							inputBox_12.userAttr({"require": "Y"});
							inputBox_12.bind("fieldLabel").toExpression("#optFrfScalFeeNmLan.value");
							inputBox_12.bind("value").toDataColumn("SCAL_FEE_NM");
							container.addChild(inputBox_12, {
								"top": "55px",
								"left": "110px",
								"width": "150px",
								"height": "25px"
							});
							var comboBox_29 = new cpr.controls.ComboBox("cbbFrfLanDivRcdLan");
							comboBox_29.userAttr({"require": "Y"});
							comboBox_29.bind("fieldLabel").toExpression("#optFrfLanDivRcdLan.value");
							comboBox_29.bind("value").toDataColumn("LAN_DIV_RCD");
							(function(comboBox_29){
								comboBox_29.setItemSet(app.lookup("dsListLanDivRcd"), {
									"label": "CD_NM",
									"value": "CD"
								});
							})(comboBox_29);
							container.addChild(comboBox_29, {
								"top": "5px",
								"left": "110px",
								"width": "150px",
								"height": "25px"
							});
							var output_42 = new cpr.controls.Output("optFrfShortNmLan");
							output_42.value = "";
							output_42.bind("value").toLanguage("UI-GLS-SHORT_NM");
							container.addChild(output_42, {
								"top": "80px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var inputBox_13 = new cpr.controls.InputBox("ipbFrfShortNmLan");
							inputBox_13.maxLength = 100;
							inputBox_13.bind("fieldLabel").toExpression("#optFrfShortNmLan.value");
							inputBox_13.bind("value").toDataColumn("SHORT_NM");
							container.addChild(inputBox_13, {
								"top": "80px",
								"left": "110px",
								"width": "150px",
								"height": "25px"
							});
							var output_43 = new cpr.controls.Output("optFrfPrtScalFeeNmLan");
							output_43.value = "";
							output_43.bind("value").toLanguage("UI-SCR-PRTNAME");
							container.addChild(output_43, {
								"top": "105px",
								"left": "5px",
								"width": "100px",
								"height": "25px"
							});
							var inputBox_14 = new cpr.controls.InputBox("ipbFrfPrtScalFeeNmLan");
							inputBox_14.maxLength = 200;
							inputBox_14.bind("fieldLabel").toExpression("#optFrfPrtScalFeeNmLan.value");
							inputBox_14.bind("value").toDataColumn("PRT_SCAL_FEE_NM");
							container.addChild(inputBox_14, {
								"top": "105px",
								"left": "110px",
								"width": "150px",
								"height": "25px"
							});
							var output_44 = new cpr.controls.Output("optFrfDesc2Lan");
							output_44.value = "";
							output_44.bind("value").toLanguage("UI-DB-DESC2");
							container.addChild(output_44, {
								"top": "50px",
								"left": "270px",
								"width": "100px",
								"height": "40px"
							});
							var textArea_7 = new cpr.controls.TextArea("txtFrfDesc2Lan");
							textArea_7.maxLength = 1000;
							textArea_7.bind("fieldLabel").toExpression("#optFrfDesc2Lan.value");
							textArea_7.bind("value").toDataColumn("DESC2");
							container.addChild(textArea_7, {
								"top": "50px",
								"left": "375px",
								"width": "230px",
								"height": "40px"
							});
							var output_45 = new cpr.controls.Output("optFrfDesc3Lan");
							output_45.value = "";
							output_45.bind("value").toLanguage("UI-DB-DESC3");
							container.addChild(output_45, {
								"top": "95px",
								"left": "270px",
								"width": "100px",
								"height": "40px"
							});
							var textArea_8 = new cpr.controls.TextArea("txtFrfDesc3Lan");
							textArea_8.maxLength = 1000;
							textArea_8.bind("fieldLabel").toExpression("#optFrfDesc3Lan.value");
							textArea_8.bind("value").toDataColumn("DESC3");
							container.addChild(textArea_8, {
								"top": "95px",
								"left": "375px",
								"width": "230px",
								"height": "40px"
							});
							var output_46 = new cpr.controls.Output("optFrfDesc4Lan");
							output_46.value = "";
							output_46.bind("value").toLanguage("UI-DB-DESC4");
							container.addChild(output_46, {
								"top": "140px",
								"left": "270px",
								"width": "100px",
								"height": "40px"
							});
							var textArea_9 = new cpr.controls.TextArea("txtFrfDesc4Lan");
							textArea_9.maxLength = 1000;
							textArea_9.bind("fieldLabel").toExpression("#optFrfDesc4Lan.value");
							textArea_9.bind("value").toDataColumn("DESC4");
							container.addChild(textArea_9, {
								"top": "140px",
								"left": "375px",
								"width": "230px",
								"height": "40px"
							});
							var output_47 = new cpr.controls.Output("optFrfDesc5Lan");
							output_47.value = "";
							output_47.bind("value").toLanguage("UI-DB-DESC5");
							container.addChild(output_47, {
								"top": "185px",
								"left": "270px",
								"width": "100px",
								"height": "40px"
							});
							var textArea_10 = new cpr.controls.TextArea("txtFrfDesc5Lan");
							textArea_10.maxLength = 1000;
							textArea_10.bind("fieldLabel").toExpression("#optFrfDesc5Lan.value");
							textArea_10.bind("value").toDataColumn("DESC5");
							container.addChild(textArea_10, {
								"top": "185px",
								"left": "375px",
								"width": "230px",
								"height": "40px"
							});
						})(group_8);
						container.addChild(group_8, {
							"top": "30px",
							"left": "592px",
							"width": "614px",
							"height": "235px"
						});
						var button_16 = new cpr.controls.Button("btnNewLan");
						button_16.value = "";
						button_16.style.setClasses(["btn-new"]);
						button_16.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewLanClick == "function") {
							button_16.addEventListener("click", onBtnNewLanClick);
						}
						container.addChild(button_16, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var button_17 = new cpr.controls.Button("btnRestoreLan");
						button_17.value = "";
						button_17.style.setClasses(["btn-restore"]);
						button_17.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreLanClick == "function") {
							button_17.addEventListener("click", onBtnRestoreLanClick);
						}
						container.addChild(button_17, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
						var grid_3 = linker.grid_3 = new cpr.controls.Grid("grdBaseLan");
						grid_3.init({
							"dataSet": app.lookup("dsBaseLan"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "78px"},
								{"width": "80px"},
								{"width": "123px"},
								{"width": "103px"},
								{"width": "122px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SCAL_FEE_CD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-LANDIS");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-SCAL_FEE_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-GLS-SHORT_NM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-PRTNAME");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_48 = new cpr.controls.Output();
												output_48.style.css({
													"text-align" : "center"
												});
												return output_48;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_CD";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "LAN_DIV_RCD";
											cell.control = (function(){
												var comboBox_30 = new cpr.controls.ComboBox("gdCbbLanDivRcdLan");
												comboBox_30.enabled = false;
												comboBox_30.hideButton = true;
												(function(comboBox_30){
													comboBox_30.setItemSet(app.lookup("dsListLanDivRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_30);
												comboBox_30.bind("value").toDataColumn("LAN_DIV_RCD");
												return comboBox_30;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "SCAL_FEE_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "SHORT_NM";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "PRT_SCAL_FEE_NM";
										}
									}
								]
							}
						});
						if(typeof onGrdBaseLanSelectionChange == "function") {
							grid_3.addEventListener("selection-change", onGrdBaseLanSelectionChange);
						}
						container.addChild(grid_3, {
							"top": "30px",
							"left": "5px",
							"width": "579px",
							"height": "235px"
						});
					})(group_7);
					tabItem_3.content = group_7;
					tabItem_3.bind("text").toLanguage("UI-GLS-LAN");
					return tabItem_3;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_3);
				
				var tabItem_4 = (function(tabFolder){
					var tabItem_4 = new cpr.controls.TabItem();
					tabItem_4.text = "tab1";
					tabItem_4.name = "tabPmnt";
					var group_9 = new cpr.controls.Container("grpPmnt");
					// Layout
					var formLayout_4 = new cpr.controls.layouts.FormLayout();
					formLayout_4.topMargin = "0px";
					formLayout_4.rightMargin = "0px";
					formLayout_4.bottomMargin = "0px";
					formLayout_4.leftMargin = "0px";
					formLayout_4.horizontalSpacing = "0px";
					formLayout_4.verticalSpacing = "0px";
					formLayout_4.setColumns(["1fr"]);
					formLayout_4.setRows(["1fr"]);
					group_9.setLayout(formLayout_4);
					(function(container){
						var grid_4 = linker.grid_4 = new cpr.controls.Grid("grdPmntAmt");
						grid_4.init({
							"dataSet": app.lookup("dsPmntAmt"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "60px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "121px"},
								{"width": "119px"},
								{"width": "111px"},
								{"width": "111px"},
								{"width": "111px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ST_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-END_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-FIRSRDIVRCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-PAYDIV");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-TUITIONITEM");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-CII_VAL");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-UNIT_RCD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-SCR-UNITALOTVALU");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_49 = new cpr.controls.Output();
												output_49.style.css({
													"text-align" : "center"
												});
												return output_49;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SERIAL_NO";
											cell.control = (function(){
												var output_50 = new cpr.controls.Output("gdOptSerialNoPmnt");
												output_50.dataType = "number";
												output_50.format = "##########";
												output_50.style.css({
													"text-align" : "center"
												});
												output_50.bind("value").toDataColumn("SERIAL_NO");
												return output_50;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
											cell.control = (function(){
												var dateInput_5 = new cpr.controls.DateInput("gdDipStDtPmnt");
												dateInput_5.format = "YYYY-MM-DD";
												dateInput_5.userAttr({"require": "Y"});
												dateInput_5.style.css({
													"text-align" : "center"
												});
												dateInput_5.bind("value").toDataColumn("ST_DT");
												return dateInput_5;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "END_DT";
											cell.control = (function(){
												var dateInput_6 = new cpr.controls.DateInput("gdDipEndDtPmnt");
												dateInput_6.format = "YYYY-MM-DD";
												dateInput_6.userAttr({"require": "Y"});
												dateInput_6.style.css({
													"text-align" : "center"
												});
												dateInput_6.bind("value").toDataColumn("END_DT");
												return dateInput_6;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "FNRE_DIV_RCD";
											cell.control = (function(){
												var comboBox_31 = new cpr.controls.ComboBox("gdCbbFnreDivRcdPmnt");
												comboBox_31.userAttr({"require": "Y"});
												(function(comboBox_31){
													comboBox_31.addItem(new cpr.controls.Item("선택", ""));
													comboBox_31.setItemSet(app.lookup("dsListFnreDivRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_31);
												comboBox_31.bind("value").toDataColumn("FNRE_DIV_RCD");
												return comboBox_31;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "PMNT_CII_RCD";
											cell.control = (function(){
												var comboBox_32 = new cpr.controls.ComboBox("gdCbbPmntCiiRcdPmnt");
												comboBox_32.userAttr({"require": "Y"});
												(function(comboBox_32){
													comboBox_32.addItem(new cpr.controls.Item("선택", ""));
													comboBox_32.setItemSet(app.lookup("dsListPmntCii"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_32);
												comboBox_32.bind("value").toDataColumn("PMNT_CII_RCD");
												return comboBox_32;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "ITEM_CD";
											cell.control = (function(){
												var comboBox_33 = new cpr.controls.ComboBox("gdCbbItemCdPmnt");
												(function(comboBox_33){
													comboBox_33.setItemSet(app.lookup("dsListItem"), {
														"label": "ITEM_NM",
														"value": "ITEM_CD"
													});
												})(comboBox_33);
												comboBox_33.bind("value").toDataColumn("ITEM_CD");
												return comboBox_33;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "CII_VAL";
											cell.control = (function(){
												var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbCiiValPmnt");
												numberEditor_2.spinButton = false;
												numberEditor_2.format = "9,990";
												numberEditor_2.userAttr({"require": "Y"});
												numberEditor_2.bind("value").toDataColumn("CII_VAL");
												return numberEditor_2;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "UNIT_RCD";
											cell.control = (function(){
												var comboBox_34 = new cpr.controls.ComboBox("gdCbbUnitRcdPmnt");
												(function(comboBox_34){
													comboBox_34.setItemSet(app.lookup("dsListUnitRcd"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_34);
												comboBox_34.bind("value").toDataColumn("UNIT_RCD");
												return comboBox_34;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 10},
										"configurator": function(cell){
											cell.columnName = "UNIT_ALOT_VAL";
											cell.control = (function(){
												var numberEditor_3 = new cpr.controls.NumberEditor("gdIpbUnitAlotValPmnt");
												numberEditor_3.spinButton = false;
												numberEditor_3.format = "9,990";
												numberEditor_3.bind("value").toDataColumn("UNIT_ALOT_VAL");
												return numberEditor_3;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdPmntAmtSelectionChange == "function") {
							grid_4.addEventListener("selection-change", onGrdPmntAmtSelectionChange);
						}
						container.addChild(grid_4, {
							"top": "55px",
							"left": "5px",
							"width": "1201px",
							"height": "209px"
						});
						var userDefinedControl_6 = linker.userDefinedControl_6 = new udc.com.comTitle();
						userDefinedControl_6.bind("title").toLanguage("UI-SCR-PAYAMTSTDLST");
						container.addChild(userDefinedControl_6, {
							"top": "30px",
							"left": "5px",
							"width": "285px",
							"height": "25px"
						});
						var button_18 = new cpr.controls.Button("btnNewPmnt");
						button_18.value = "";
						button_18.style.setClasses(["btn-new"]);
						button_18.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewPmntClick == "function") {
							button_18.addEventListener("click", onBtnNewPmntClick);
						}
						container.addChild(button_18, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var button_19 = new cpr.controls.Button("btnDelPmnt");
						button_19.value = "";
						button_19.style.setClasses(["btn-delete"]);
						button_19.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelPmntClick == "function") {
							button_19.addEventListener("click", onBtnDelPmntClick);
						}
						container.addChild(button_19, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var button_20 = new cpr.controls.Button("btnSavePmnt");
						button_20.value = "";
						button_20.style.setClasses(["btn-save"]);
						button_20.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSavePmntClick == "function") {
							button_20.addEventListener("click", onBtnSavePmntClick);
						}
						container.addChild(button_20, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
						var output_51 = new cpr.controls.Output("optScalFeeCdPmnt");
						output_51.value = "";
						output_51.bind("value").toLanguage("UI-DB-SCAL_FEE_CD");
						container.addChild(output_51, {
							"top": "5px",
							"left": "5px",
							"width": "110px",
							"height": "25px"
						});
						var output_52 = new cpr.controls.Output("optScalFeeNmPmnt");
						output_52.value = "";
						output_52.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
						container.addChild(output_52, {
							"top": "5px",
							"left": "220px",
							"width": "110px",
							"height": "25px"
						});
						var inputBox_15 = new cpr.controls.InputBox("ipbScalFeeCdPmnt");
						inputBox_15.readOnly = true;
						inputBox_15.bind("fieldLabel").toExpression("#optScalFeeCdPmnt.value");
						inputBox_15.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCd");
						container.addChild(inputBox_15, {
							"top": "5px",
							"left": "120px",
							"width": "90px",
							"height": "25px"
						});
						var inputBox_16 = new cpr.controls.InputBox("ipbScalFeeNmPmnt");
						inputBox_16.readOnly = true;
						inputBox_16.bind("fieldLabel").toExpression("#optScalFeeNmPmnt.value");
						inputBox_16.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeNm");
						container.addChild(inputBox_16, {
							"top": "5px",
							"left": "335px",
							"width": "240px",
							"height": "25px"
						});
						var button_21 = new cpr.controls.Button("btnRestorePmnt");
						button_21.value = "";
						button_21.style.setClasses(["btn-restore"]);
						button_21.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestorePmntClick == "function") {
							button_21.addEventListener("click", onBtnRestorePmntClick);
						}
						container.addChild(button_21, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
					})(group_9);
					tabItem_4.content = group_9;
					tabItem_4.bind("text").toLanguage("UI-SCR-PAYAMTSTD");
					return tabItem_4;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_4);
				
				var tabItem_5 = (function(tabFolder){
					var tabItem_5 = new cpr.controls.TabItem();
					tabItem_5.text = "tab1";
					tabItem_5.name = "tabQual";
					var group_10 = new cpr.controls.Container("grpQual");
					// Layout
					var formLayout_5 = new cpr.controls.layouts.FormLayout();
					formLayout_5.topMargin = "0px";
					formLayout_5.rightMargin = "0px";
					formLayout_5.bottomMargin = "0px";
					formLayout_5.leftMargin = "0px";
					formLayout_5.horizontalSpacing = "0px";
					formLayout_5.verticalSpacing = "0px";
					formLayout_5.setColumns(["1fr"]);
					formLayout_5.setRows(["1fr"]);
					group_10.setLayout(formLayout_5);
					(function(container){
						var output_53 = new cpr.controls.Output("optScalFeeCdQual");
						output_53.value = "";
						output_53.bind("value").toLanguage("UI-DB-SCAL_FEE_CD");
						container.addChild(output_53, {
							"top": "5px",
							"left": "5px",
							"width": "110px",
							"height": "25px"
						});
						var inputBox_17 = new cpr.controls.InputBox("ipbScalFeeCdQual");
						inputBox_17.readOnly = true;
						inputBox_17.bind("fieldLabel").toExpression("#optScalFeeCdQual.value");
						inputBox_17.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCd");
						container.addChild(inputBox_17, {
							"top": "5px",
							"left": "120px",
							"width": "90px",
							"height": "25px"
						});
						var output_54 = new cpr.controls.Output("optScalFeeNmQual");
						output_54.value = "";
						output_54.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
						container.addChild(output_54, {
							"top": "5px",
							"left": "220px",
							"width": "110px",
							"height": "25px"
						});
						var inputBox_18 = new cpr.controls.InputBox("ipbScalFeeNmQual");
						inputBox_18.readOnly = true;
						inputBox_18.bind("fieldLabel").toExpression("#optScalFeeNmQual.value");
						inputBox_18.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeNm");
						container.addChild(inputBox_18, {
							"top": "5px",
							"left": "335px",
							"width": "240px",
							"height": "25px"
						});
						var button_22 = new cpr.controls.Button("btnNewQual");
						button_22.value = "";
						button_22.style.setClasses(["btn-new"]);
						button_22.bind("value").toLanguage("UI-SCR-NEW");
						if(typeof onBtnNewQualClick == "function") {
							button_22.addEventListener("click", onBtnNewQualClick);
						}
						container.addChild(button_22, {
							"top": "5px",
							"left": "951px",
							"width": "60px",
							"height": "25px"
						});
						var button_23 = new cpr.controls.Button("btnDelQual");
						button_23.value = "";
						button_23.style.setClasses(["btn-delete"]);
						button_23.bind("value").toLanguage("UI-SCR-DELETE");
						if(typeof onBtnDelQualClick == "function") {
							button_23.addEventListener("click", onBtnDelQualClick);
						}
						container.addChild(button_23, {
							"top": "5px",
							"left": "1016px",
							"width": "60px",
							"height": "25px"
						});
						var userDefinedControl_7 = linker.userDefinedControl_7 = new udc.com.comTitle();
						userDefinedControl_7.bind("title").toLanguage("UI-SCR-ELIGCRITLST");
						container.addChild(userDefinedControl_7, {
							"top": "30px",
							"left": "5px",
							"width": "285px",
							"height": "25px"
						});
						var grid_5 = linker.grid_5 = new cpr.controls.Grid("grdQualCii");
						grid_5.init({
							"dataSet": app.lookup("dsQualCii"),
							"columns": [
								{"width": "25px"},
								{"width": "40px"},
								{"width": "60px"},
								{"width": "100px"},
								{"width": "100px"},
								{"width": "208px"},
								{"width": "111px"},
								{"width": "111px"},
								{"width": "111px"},
								{"width": "111px"}
							],
							"header": {
								"rows": [{"height": "27px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.text = "F";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.text = "No";
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-ST_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-DB-END_DT");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.style.setClasses(["require"]);
											cell.bind("text").toLanguage("UI-SCR-QUALSTD");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CII_NUM_VAL1");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CII_NUM_VAL2");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CII_CHAR_VAL1");
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.bind("text").toLanguage("UI-DB-CII_CHAR_VAL2");
										}
									}
								]
							},
							"detail": {
								"rows": [{"height": "25px"}],
								"cells": [
									{
										"constraint": {"rowIndex": 0, "colIndex": 0},
										"configurator": function(cell){
											cell.control = (function(){
												var output_55 = new cpr.controls.Output();
												output_55.style.css({
													"text-align" : "center"
												});
												return output_55;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 1},
										"configurator": function(cell){
											cell.columnType = "rowindex";
											cell.style.css({
												"text-align" : "center"
											});
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 2},
										"configurator": function(cell){
											cell.columnName = "SERIAL_NO";
											cell.control = (function(){
												var output_56 = new cpr.controls.Output("gdOptSerialNoQual");
												output_56.dataType = "number";
												output_56.format = "##########";
												output_56.style.css({
													"text-align" : "center"
												});
												output_56.bind("value").toDataColumn("SERIAL_NO");
												return output_56;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 3},
										"configurator": function(cell){
											cell.columnName = "ST_DT";
											cell.control = (function(){
												var dateInput_7 = new cpr.controls.DateInput("gdDipStDtQual");
												dateInput_7.format = "YYYY-MM-DD";
												dateInput_7.userAttr({"require": "Y"});
												dateInput_7.style.css({
													"text-align" : "center"
												});
												dateInput_7.bind("value").toDataColumn("ST_DT");
												return dateInput_7;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 4},
										"configurator": function(cell){
											cell.columnName = "END_DT";
											cell.control = (function(){
												var dateInput_8 = new cpr.controls.DateInput("gdDipEndDtQual");
												dateInput_8.format = "YYYY-MM-DD";
												dateInput_8.userAttr({"require": "Y"});
												dateInput_8.style.css({
													"text-align" : "center"
												});
												dateInput_8.bind("value").toDataColumn("END_DT");
												return dateInput_8;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 5},
										"configurator": function(cell){
											cell.columnName = "QUAL_CII_RCD";
											cell.control = (function(){
												var comboBox_35 = new cpr.controls.ComboBox("gdCbbQualCiiRcdQual");
												comboBox_35.userAttr({"require": "Y"});
												(function(comboBox_35){
													comboBox_35.addItem(new cpr.controls.Item("선택", ""));
													comboBox_35.setItemSet(app.lookup("dsListQualCii"), {
														"label": "CD_NM",
														"value": "CD"
													});
												})(comboBox_35);
												comboBox_35.bind("value").toDataColumn("QUAL_CII_RCD");
												return comboBox_35;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 6},
										"configurator": function(cell){
											cell.columnName = "CII_NUM_VAL1";
											cell.control = (function(){
												var inputBox_19 = new cpr.controls.InputBox("gdIpbCiiNumVal1Qual");
												inputBox_19.maxLength = 15;
												inputBox_19.bind("value").toDataColumn("CII_NUM_VAL1");
												return inputBox_19;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 7},
										"configurator": function(cell){
											cell.columnName = "CII_NUM_VAL2";
											cell.control = (function(){
												var inputBox_20 = new cpr.controls.InputBox("gdIpbCiiNumVal2Qual");
												inputBox_20.maxLength = 15;
												inputBox_20.bind("value").toDataColumn("CII_NUM_VAL2");
												return inputBox_20;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 8},
										"configurator": function(cell){
											cell.columnName = "CII_CHAR_VAL1";
											cell.control = (function(){
												var inputBox_21 = new cpr.controls.InputBox("gdIpbCiiCharVal1Qual");
												inputBox_21.maxLength = 50;
												inputBox_21.bind("value").toDataColumn("CII_CHAR_VAL1");
												return inputBox_21;
											})();
										}
									},
									{
										"constraint": {"rowIndex": 0, "colIndex": 9},
										"configurator": function(cell){
											cell.columnName = "CII_CHAR_VAL2";
											cell.control = (function(){
												var inputBox_22 = new cpr.controls.InputBox("gdIpbCiiCharVal2Qual");
												inputBox_22.maxLength = 50;
												inputBox_22.bind("value").toDataColumn("CII_CHAR_VAL2");
												return inputBox_22;
											})();
										}
									}
								]
							}
						});
						if(typeof onGrdQualCiiSelectionChange == "function") {
							grid_5.addEventListener("selection-change", onGrdQualCiiSelectionChange);
						}
						container.addChild(grid_5, {
							"top": "55px",
							"left": "5px",
							"width": "1201px",
							"height": "209px"
						});
						var button_24 = new cpr.controls.Button("btnRestoreQual");
						button_24.value = "";
						button_24.style.setClasses(["btn-restore"]);
						button_24.bind("value").toLanguage("UI-SCR-WRKCANCL");
						if(typeof onBtnRestoreQualClick == "function") {
							button_24.addEventListener("click", onBtnRestoreQualClick);
						}
						container.addChild(button_24, {
							"top": "5px",
							"left": "1081px",
							"width": "60px",
							"height": "25px"
						});
						var button_25 = new cpr.controls.Button("btnSaveQual");
						button_25.value = "";
						button_25.style.setClasses(["btn-save"]);
						button_25.bind("value").toLanguage("UI-SCR-WRKSAVE");
						if(typeof onBtnSaveQualClick == "function") {
							button_25.addEventListener("click", onBtnSaveQualClick);
						}
						container.addChild(button_25, {
							"top": "5px",
							"left": "1146px",
							"width": "60px",
							"height": "25px"
						});
					})(group_10);
					tabItem_5.content = group_10;
					tabItem_5.bind("text").toLanguage("UI-SCR-QUALSTD");
					return tabItem_5;
				})(tabFolder_1);
				tabFolder_1.addTabItem(tabItem_5);
				tabFolder_1.setSelectedTabItem(tabItem_1);
				container.addChild(tabFolder_1, {
					"top": "58px",
					"left": "5px",
					"width": "1213px",
					"height": "270px"
				});
				var button_26 = new cpr.controls.Button("tabBtnLan");
				button_26.value = "";
				button_26.bind("value").toLanguage("UI-GLS-LAN");
				if(typeof onTabBtnLanClick == "function") {
					button_26.addEventListener("click", onTabBtnLanClick);
				}
				container.addChild(button_26, {
					"top": "30px",
					"left": "207px",
					"width": "100px",
					"height": "28px"
				});
				var button_27 = new cpr.controls.Button("tabBtnHistory");
				button_27.value = "";
				button_27.bind("value").toLanguage("UI-SCR-HSTMNG");
				if(typeof onTabBtnHistoryClick == "function") {
					button_27.addEventListener("click", onTabBtnHistoryClick);
				}
				container.addChild(button_27, {
					"top": "30px",
					"left": "106px",
					"width": "100px",
					"height": "28px"
				});
				var button_28 = new cpr.controls.Button("tabBtnManage");
				button_28.value = "";
				button_28.bind("value").toLanguage("UI-SCR-DATAMANG");
				if(typeof onTabBtnManageClick == "function") {
					button_28.addEventListener("click", onTabBtnManageClick);
				}
				container.addChild(button_28, {
					"top": "30px",
					"left": "5px",
					"width": "100px",
					"height": "28px"
				});
				var userDefinedControl_8 = new udc.com.comFormTitle();
				userDefinedControl_8.bind("title").toLanguage("UI-SCR-SUBDETAIL");
				container.addChild(userDefinedControl_8, {
					"top": "5px",
					"left": "5px",
					"width": "140px",
					"height": "25px"
				});
				var button_29 = new cpr.controls.Button("tabBtnPmnt");
				button_29.value = "";
				button_29.bind("value").toLanguage("UI-SCR-PAYAMTSTD");
				if(typeof onTabBtnPmntClick == "function") {
					button_29.addEventListener("click", onTabBtnPmntClick);
				}
				container.addChild(button_29, {
					"top": "30px",
					"left": "449px",
					"width": "100px",
					"height": "28px"
				});
				var button_30 = new cpr.controls.Button("tabBtnQual");
				button_30.value = "";
				button_30.bind("value").toLanguage("UI-SCR-QUALSTD");
				if(typeof onTabBtnQualClick == "function") {
					button_30.addEventListener("click", onTabBtnQualClick);
				}
				container.addChild(button_30, {
					"top": "30px",
					"left": "550px",
					"width": "100px",
					"height": "28px"
				});
			})(group_3);
			container.addChild(group_3, {
				"top": "344px",
				"left": "5px",
				"width": "1225px",
				"height": "333px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSchYearSmt");
			cpr.core.App.load("app/imp/impDialogSchYearSmt", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "35px",
				"left": "1250px",
				"width": "325px",
				"height": "75px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "675px",
				"left": "15px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch2");
			cpr.core.App.load("app/css/impStdCssPFndtnPop", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "675px",
				"left": "120px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
			linker.group_5.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_1));
			linker.userDefinedControl_4.ctrl = linker.grid_2;
			linker.userDefinedControl_5.ctrl = linker.grid_3;
			linker.group_8.setBindContext(new cpr.bind.GridSelectionContext(linker.grid_3));
			linker.userDefinedControl_6.ctrl = linker.grid_4;
			linker.userDefinedControl_7.ctrl = linker.grid_5;
		}
	});
	app.title = "장학금관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
