/*
 * App URI: app/css/stdCssCScalStudCntiStud
 * Source Location: app/css/stdCssCScalStudCntiStud.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCScalStudCntiStud", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCScalStudCntiStud.xtm"/>
			
			
			var stdCssCScalStudCntiStud = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/* 
				 * 장학금 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCssPScalFeeSch = [
				{
					controlId 	: "rdBtnScalFeeNm",
					iCd 		: null,
					iNm 		: "rdIpbScalFeeNm",
					iObjDivRcd 	: "CC009SS",
					iLanDivRcd 	:  "/root/resList/strDefLanDivRcd",
					iKeyDate	: null,
					iCntiScalYn : "Y",
					oScalFeeCd 	: "rdIpbScalFeeCd",
					oScalFeeNm 	: "rdIpbScalFeeNm",
					oObjDivRcd 	: "rdIpbSsObjDivRcd",
					oPmntCnt	: "rdIpbPmntCnt",
					func : function() {}
				}
				];
			
				/**
				 * doOnLoad  화면 오픈 시 서브미션 
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */
				function doOnLoad(){
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptCssCntiScalStud"]);
					
					// 부모창에 있는 값 셋팅
					var voParentInfo = moPage.parent.moCmnInfo;
					util.DataMap.setValue(app, "dmSchedule", "strSchYearRcd", voParentInfo.schYearRcd);
					util.DataMap.setValue(app, "dmSchedule", "strSmtRcd"	  , voParentInfo.smtRcd);
					util.DataMap.setValue(app, "dmSchedule", "strStDt"	  , voParentInfo.stDt);
					util.DataMap.setValue(app, "dmSchedule", "strEndDt"	  , voParentInfo.endDt);
					util.DataMap.setValue(app, "dmReqKey", "strStudId"	 		  , voParentInfo.studId);
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							this.setParentMsg(NLS.INF.M024);		
						}
					});
				};
			
				/**
				 * @desc 연속장학생을 조회한다.
				 * @param poCallBackFunc 콜백 함수
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, ["rptCssCntiScalStud"]);
						}
						
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * onClick_BtnNew 신규버튼 클릭이벤트
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnNew = function(){
					var vnNewRow = util.Grid.insertRow(app, "grdCssCntiScalStud", "rdDipStDt");
					util.Grid.setCellValue(app, "grdCssCntiScalStud", "STUD_ID", util.DataMap.getValue(app, "dmReqKey", "strStudId"), vnNewRow);
				};
				
				/**
				 * @desc 삭제버튼 클릭 이벤트
				 * @param   
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				moPage.onClick_BtnDel = function() {
					var vnRowIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdCssCntiScalStud");
					if(ValueUtil.isNull(vnRowIdx)){
						var vsMsgParam = util.Grid.getTitle(app, "grdCssCntiScalStudCssCntiScalStud");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}	
					
					// 장학생여부
					// 장학생테이블에 해당 학번/장학금코드/장학금객체코드 에 해당하는 자료가 있는 경우 삭제불가
					var vsScalStudYn = util.Grid.getCellValue(app, "grdCssCntiScalStud", "SCAL_STUD_YN", vnRowIdx);
					if (vsScalStudYn != "Y") {
						util.Grid.deleteRow(app, "grdCssCntiScalStud");
					} else {
						// 학기 장학생자료가 존재하는 장학금입니다. 삭제 불가능합니다.
						util.Msg.alert("NLS-CSS-M090");
					}
				};
				
				/**
				 * onClick_BtnNew 작업취소버튼 클릭이벤트
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnRestore = function(){
					util.Grid.restoreRow(app, "grdCssCntiScalStud");
				};
			
				 /**
				 * onClick_BtnSave 작업저장버튼 클릭이벤트
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */
				moPage.onClick_BtnSave = function(){
					// 변경사항 체크
					if(!util.Grid.isModified(app, ["grdCssCntiScalStud"], null)){
						moPage.setParentMsg(NLS.WRN.M007);
						return false;
					}
					
					// Validation Check
					if(!util.validate(app, ["grdCssCntiScalStud"])) return false;
					
					// 외부지급횟수 체크
					if(!doCheckPmntCnt()) return false;
					
					// 저장서브미션
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
								
						if(pbSuccess){
							
							var vsUnValidScalFeeCd = util.DataMap.getValue(app, "dmResList", "unValidScalFeeCd");
			                var vbUnValidMsg = util.DataMap.getValue(app, "dmResList", "unValidMsg");
			                if (!ValueUtil.isNull(vsUnValidScalFeeCd)) {
								var vnIdx = util.Grid.selectRowByCondition(app, "grdCssCntiScalStud" , "/root/resList/rptCssCntiScalStud/row/SCAL_FEE_CD", "==", vsUnValidScalFeeCd, 0);
			
								ExtRepeat.setColFocus("rptCssCntiScalStud", Number(vnIdx) + 1, "rdDipStDt");
								// 연속장학생의 @1번째 데이타에서 @2
								util.Msg.alert("NLS-CSS-M065", [Number(vnIdx) + 1, vbUnValidMsg]);
								return false;					
			                } else {
			                     //저장성공 메세지 출력
								doList(function(pbSuccessList) {
									// "갱신된 데이터가 조회되었습니다."
									if(pbSuccessList) {
										this.setParentMsg(NLS.INF.M025);
									}
								});
			                }
						}	
					});
				};
			
				/**
				 * doCheckPmntCnt 외부지급횟수 체크
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doCheckPmntCnt(){
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdCssCntiScalStud"); i++) {
							
						var vbPmntCnt = Number(util.Grid.getCellValue(app, "grdCssCntiScalStud", "PMNT_CNT", i));
						var vbOutPmntCnt = Number(util.Grid.getCellValue(app, "grdCssCntiScalStud", "OUT_PMNT_CNT", i));
						var vbUptStatus = util.Grid.getRowState(app, "grdCssCntiScalStud", i);
						
						if(vbUptStatus != "delete" && (!ValueUtil.isNull(vbOutPmntCnt))){
							if(vbPmntCnt < vbOutPmntCnt){
								// 연속장학생의 @1번째 데이타에서 외부지급횟수는 지급횟수보다 클 수 없습니다
			                    util.Msg.alert("NLS-CSS-M062", [i]);
								ExtRepeat.setColFocus("rptCssCntiScalStud", i, "rdIpbOutPmntCnt");
			                    return false;
			                }
						}
					}
					return true;
				};
				
				/**
				 * onValueChanged_RptCssCntiScalStud 연속장학생 
				 *	- 장학금변경 : 장학금검색
				 *  - 시작일자, 종료일자 유효성 체크
				 * @member stdCssPFndPop
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onValueChanged_RptCssCntiScalStud = function(sender, psColDiv){
					
					var vnIdx = util.Grid.getIndex(app, "grdCssCntiScalStud");
					var vsStDt = util.Grid.getCellValue(app, "grdCssCntiScalStud", "ST_DT", vnIdx);
			        var vsEndDt = util.Grid.getCellValue(app, "grdCssCntiScalStud", "END_DT", vnIdx);
					
					if(psColDiv == "SCAL_FEE_NM") {
			            if(doSetCiiDt()) doOnChangeStdCssPScalFeePop(sender);;
			            
			        } else if(psColDiv == "ST_DT"){
			            if ((!ValueUtil.isNull(vsStDt)) && (!ValueUtil.isNull(vsEndDt))){
			                if(vsStDt > vsEndDt){
								util.Grid.setCellValue(app, "grdCssCntiScalStud", "ST_DT", null, vnIdx);
								// 시작일이 종료일 보다 클 수 없습니다
			                    util.Msg.alert("NLS-CSS-M063");
			                }
			            }
			                    
			        } else if(psColDiv == "END_DT"){
			            if ((!ValueUtil.isNull(vsStDt)) && (!ValueUtil.isNull(vsEndDt))){
			                if(vsStDt > vsEndDt){
								util.Grid.setCellValue(app, "grdCssCntiScalStud", "ST_DT", null, vnIdx);
								// 시작일이 종료일 보다 클 수 없습니다
			                    util.Msg.alert("NLS-CSS-M063");
			                }
			            }
			        }
					
				};
				
				/**
				 * rowChage_RptCssCntiScalStud - 연속장학생 로우체인지 이벤트
				 * @desc 신규일 경우에만 장학금검색 되도록 함.
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				moPage.rowChage_RptCssCntiScalStud = function(){
					var vnIdx = util.Grid.getIndex(app, "grdCssCntiScalStud");
					var vsStatus = util.Grid.getRowState(app, "grdCssCntiScalStud", vnIdx);
					
					if(vsStatus == "insert"){
						util.Control.setReadOnly(app, false, ["rdIpbScalFeeNm","rdBtnScalFeeNm"]);	
					}else{
						util.Control.setReadOnly(app, true, ["rdIpbScalFeeNm","rdBtnScalFeeNm"]);	
					}	
					
				};
				
				/**
				 * @desc 장학금검색시 기준일자 셋팅
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				function doSetCiiDt() {
					var vnIdx = util.Grid.getIndex(app, "grdCssCntiScalStud");
					var vsStDt = util.Grid.getCellValue(app, "grdCssCntiScalStud", "ST_DT", vnIdx);
			        var vsEndDt = util.Grid.getCellValue(app, "grdCssCntiScalStud", "END_DT", vnIdx);
					
					if(ValueUtil.isNull(vsStDt)){
			            util.Msg.alert("NLS-CSS-M066");
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "SCAL_FEE_CD", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "SCAL_FEE_NM", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "SS_OBJ_DIV_RCD", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "PMNT_CNT", null, vnIdx);
						
						ExtRepeat.setColFocus("rptCssCntiScalStud", vnIdx, "rdDipStDt");
			            return false;
						
			        } else if(ValueUtil.isNull(vsEndDt)){
			            util.Msg.alert("NLS-CSS-M067");
			            util.Grid.setCellValue(app, "grdCssCntiScalStud", "SCAL_FEE_CD", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "SCAL_FEE_NM", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "SS_OBJ_DIV_RCD", null, vnIdx);
						util.Grid.setCellValue(app, "grdCssCntiScalStud", "PMNT_CNT", null, vnIdx);
						
						ExtRepeat.setColFocus("rptCssCntiScalStud", vnIdx, "rdDipEndDt");
			            return false;
						
			        } else {
						moPObject.moIdsForStdCssPScalFeeSch[0].iKeyDate = vsEndDt;
			            return true;
			        }
				};
				
				/**
				 * @desc 장학금검색 버튼 클릭 이벤트
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				moPage.onClick_RdBtnScalFeeNm = function(sender) {
					if(doSetCiiDt()) {
						doOnClickStdCssPScalFeePop(sender);
					}
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				moPage.setParentMsg = function(psMsgCode) {
					util.Msg.notify(app, psMsgCode);	
				};
				
				/**
				 * @desc 변경사항체크 - 부모창에서 호출용
				 * @param psCtrlId 
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 3.
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdCssCntiScalStud"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListFnreDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListStudBank");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListPmntDiv");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListPmntItv");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListProcStat");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListUnitRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsListWrkEval");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsListItem");
			dataSet_8.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsCssCntiScalStud");
			dataSet_9.parseData({
				"info": "CSS_CNTI_SCAL_STUD@STUD_ID,SCAL_FEE_CD,SS_OBJ_DIV_RCD",
				"columns": [
					{"name": "SCAL_STUD_YN"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "PMNT_CNT"},
					{"name": "VA_NO"},
					{"name": "OUT_PMNT_CNT"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "STUD_ID"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "REF_KEY"},
					{"name": "SCAL_FEE_CD"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			var dataMap_1 = new cpr.data.DataMap("dmSchedule");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [{
					"name": "strStudId",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOnload");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strAutoScalFeeCalc",
						"dataType": "string"
					},
					{
						"name": "strDefLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strDefLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "unValidRowIndex",
						"dataType": "string"
					},
					{
						"name": "unValidMsg",
						"dataType": "string"
					},
					{
						"name": "unValidScalFeeCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalStudCntiStud/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataSet_9, false);
			submission_1.addResponseData(dataMap_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSave");
			submission_2.action = "/css/StdCssScalStudCntiStud/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataSet_9);
			submission_2.addResponseData(dataMap_4, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("NLS-SCR-REGFEEFNDTNLST");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "256px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdCssCntiScalStud");
				grid_1.init({
					"dataSet": app.lookup("dsCssCntiScalStud"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "90px"},
						{"width": "89px"},
						{"width": "123px"},
						{"width": "87px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "163px"},
						{"width": "165px"},
						{"width": "168px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-FNDTNNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHAG_DEPT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHARGER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipStDt");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.userAttr({"require": "Y"});
										dateInput_1.style.css({
											"text-align" : "center"
										});
										dateInput_1.bind("value").toDataColumn("ST_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipEndDt");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.userAttr({"require": "Y"});
										dateInput_2.style.css({
											"text-align" : "center"
										});
										dateInput_2.bind("value").toDataColumn("END_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbScalFeeNm");
										inputBox_1.maxLength = 200;
										inputBox_1.userAttr({"require": "Y"});
										inputBox_1.bind("value").toDataColumn("SCAL_FEE_NM");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PMNT_CNT";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbPmntCnt");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999";
										numberEditor_1.bind("value").toDataColumn("PMNT_CNT");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "OUT_PMNT_CNT";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbOutPmntCnt");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999";
										numberEditor_2.bind("value").toDataColumn("OUT_PMNT_CNT");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "VA_NO";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbVaNo");
										inputBox_2.maxLength = 30;
										inputBox_2.bind("value").toDataColumn("VA_NO");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "DESC1";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbDesc1");
										inputBox_3.maxLength = 1000;
										inputBox_3.bind("value").toDataColumn("DESC1");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DESC2";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbDesc2");
										inputBox_4.maxLength = 1000;
										inputBox_4.bind("value").toDataColumn("DESC2");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "DESC3";
									cell.control = (function(){
										var inputBox_5 = new cpr.controls.InputBox("gdIpbDesc3");
										inputBox_5.maxLength = 1000;
										inputBox_5.bind("value").toDataColumn("DESC3");
										return inputBox_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CD";
									cell.control = (function(){
										var inputBox_6 = new cpr.controls.InputBox("gdIpbScalFeeCd");
										inputBox_6.maxLength = 1000;
										inputBox_6.bind("value").toDataColumn("SCAL_FEE_CD");
										return inputBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "SS_OBJ_DIV_RCD";
									cell.control = (function(){
										var inputBox_7 = new cpr.controls.InputBox("gdIpbSsObjDivRcd");
										inputBox_7.maxLength = 1000;
										inputBox_7.bind("value").toDataColumn("SS_OBJ_DIV_RCD");
										return inputBox_7;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdCssCntiScalStudSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdCssCntiScalStudSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1014px",
					"height": "394px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEWREG");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "764px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-REGCHG");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "827px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-REGCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "892px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "957px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "430px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "587px",
				"left": "5px",
				"width": "96px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSearch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "695px",
				"left": "35px",
				"width": "100px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCssCScalStudCntiStud";
	cpr.core.Platform.INSTANCE.register(app);
})();
