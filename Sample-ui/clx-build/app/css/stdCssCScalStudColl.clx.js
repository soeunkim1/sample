/*
 * App URI: app/css/stdCssCScalStudColl
 * Source Location: app/css/stdCssCScalStudColl.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCScalStudColl", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCScalStudColl.xtm"/>
			
			/**
			 * 일괄장학생관리
			 * @class stdCssCScalStudColl
			 * @author Aeyoung Lee 2016. 3. 11
			 */
			var stdCssCScalStudColl = function() {
				var moPage = new Page();
				var moPObject 	= new PObject();
				
				/**
				 * 장학생(상세)팝업 관련 설정사항
				 */
				moPObject.moScalStudDtlParam = {
					progMode 	: null,
				  	studId   	: null,
				  	schYearRcd  : null,
				  	smtRcd   	: null,
				  	stDt  		: null,
				  	endDt  		: null,
				  	serialNo  	: null,
					saCd 		: null,
					studNm 		: null
				};
				
				/**
				 * @desc import 헤더 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onLoadImportDone_ImpTitle = function() {
					// import 헤더 초기화
					doHeaderOnLoad();
				};
				
				/**
				 * @desc import 조회조건 초기화
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onLoadImportDone_ImpCssScalCollSch = function() {
					onLoadCollImp();
				};
				
				/**
				 * @desc OnLoad 이벤트
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doOnLoad() {
					// 리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptScalStud"]);
					// 검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", ["grpData"]);
					
					// 서브미션 호출
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbProcStatRcd", "cbbProcStatRcdChange"]);
							util.Control.redraw(app, ["grdScalStud"]);
							
							util.Control.setFocus(app, "ipbDeptNmImp");
						}
					}, true);
				};
				
				/**
				 * @desc 조회 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnSearch = function() {
					 // 작업영역 리피트 변경 내역 체크
					if(util.Grid.isModified(app, "", "CRM")){
						return false;
					}
					
					// 조회조건 필수 체크
					if(!util.validate(app, ["grpSearch"])){
						return false;
					}
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							util.Msg.notify(app, "NLS.INF.M024");					
						}
					});
				};
				
				/**
				 * @desc 장학생목록 조회
				 * @param poCallBackFunc 콜백정의
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "grdScalStud");
						} 
						
						// 조회 후 콜백함수 수행
						if (util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * @desc 리피트 더블클릭 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onDoubleClick_RptScalStud = function() {
					doOpenDtl("UPD");
				};
				
				/**
				 * @desc [btnNew]신규 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnNew = function() {
					doOpenDtl("NEW");
				};
				
				/**
				 * @desc [btnDel]삭제 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnDel = function() {
					doUpdSts("delete");
				};
				
				/**
				 * @desc [btnRestore]작업취소 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnRestore = function() {
					util.Grid.restoreRow(app, "grdScalStud");
				};
				
				/**
				 * @desc [btnSave]작업저장 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnSave = function() {
					doSave();
				};
				
				/**
				 * @desc 장학생 저장
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doSave() {
					// 리피트 변경사항 체크
					if(!util.Grid.isModified(app, ["grdScalStud"], "MSG")){
						return false;
					}
					
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess){
						if(pbSuccess){
							doList(function(pbListSuccess) {
								// 조회 : "갱신된 데이터가 조회되었습니다." header 메세지 표시
								if (pbListSuccess) util.Msg.notify(app, "NLS.INF.M025");
							});
						}
					});
				};
				
				/**
				 * @desc [btnStatChg]처리상태변경 onClick 이벤트
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				moPage.onClick_BtnStatChg = function() {
					// Validation Check
					if(!util.validate(app, ["cbbProcStatRcdChange","dipProcStatRcdDt"])) return false;
					
					doUpdSts("change");
				};
				
				/**
				 * @desc 신규나 변경시 팝업창 호출
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doOpenDtl(psMode) {
					// 리피트 변경사항 체크
					if(util.Grid.isModified(app, ["grdScalStud"], "CRM")){
						return false;
					}
					
					var voScalStudDtlParam = moPObject.moScalStudDtlParam;
					
					// 초기화
					voScalStudDtlParam.progMode = null;
					voScalStudDtlParam.studId = null;
					voScalStudDtlParam.schYearRcd = null;
					voScalStudDtlParam.smtRcd = null;
					voScalStudDtlParam.stDt = null;
					voScalStudDtlParam.endDt = null;
					voScalStudDtlParam.serialNo = null;
					
					// 팝업호출 정보 셋팅
					voScalStudDtlParam.progMode = psMode;
					voScalStudDtlParam.schYearRcd = ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/YEAR");
					voScalStudDtlParam.smtRcd = ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/SMT");
					voScalStudDtlParam.stDt = ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/ST_DT");
					voScalStudDtlParam.endDt = ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/END_DT");
					
					if(psMode == "UPD"){
						var vnIdx = util.Grid.getIndex(app, "grdScalStud");
						if(util.Grid.getIndex(app, "grdScalStud") == null) return;
						voScalStudDtlParam.serialNo = util.Grid.getCellValue(app, "grdScalStud", "SERIAL_NO", vnIdx);
						voScalStudDtlParam.studId = util.Grid.getCellValue(app, "grdScalStud", "STUD_ID", vnIdx);
						voScalStudDtlParam.saCd = util.Grid.getCellValue(app, "grdScalStud", "SA_CD", vnIdx);
						voScalStudDtlParam.studNm = util.Grid.getCellValue(app, "grdScalStud", "REP_NM", vnIdx);
					}
					
					// 팝업호출
					ExtPopUp.openLayeredPopup("/xtm/css/stdCssCScalStudDtl.xtm", 812, 600);
				};
				
				/**
				 * @desc 처리상태변경, 삭제 클릭시 
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doUpdSts(psProcess) {
					if(!doSetParameter(psProcess)){
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [NLS.NSCR.SCRSTUDLST]);
						return;
					}
					
					//strCommand: chkScalFeePmnt 
					util.Submit.send(app, "subUpdSts", function(pbSuccess){
						if(pbSuccess){
							// 로직 체크 결과 판별
							if(doChkResult()){
								if(psProcess == "delete"){
									// row 삭제
									util.Grid.deleteRow(app, "grdScalStud");
								}else if(psProcess == "change"){
									// 처리상태 일괄변경
									doStatChange();
								}	
							}	
						}
					});
				};
				
				/**
				 * @desc 그리드의 멀티선택된 row들의 조회조건들을 하나의 스트링으로 만드는 작업
				 * @param 
				 * @return void
				 * @author Aeyoung Lee 2016. 3. 15
				 */
				function doSetParameter(psProcess) {
					// 처리상태 변경인 경우에만 체크박스 체크
					if(psProcess == "change"){
						var vnChekNodeLength = ExtInstance.getNodeListLength("/root/resList/rptScalStud/row[child::DEL_CKB='Y']");
						if (vnChekNodeLength <= 0 ) {
							return false;
						}
					}	
					
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdScalStud");
					if(vsPanelCheckIdx == null)  return false;
					
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}		
					
					var vsStudId, vsSerialNo, vsScalFeeCd;
					for(var i = voPanelChk.length - 1; i >= 0; i--) {
						
						if(i == voPanelChk.length - 1){
							vsStudId = util.Grid.getCellValue(app, "grdScalStud", "STUD_ID", voPanelChk[i]);
							vsSerialNo = util.Grid.getCellValue(app, "grdScalStud", "SERIAL_NO", voPanelChk[i]);
							vsScalFeeCd = util.Grid.getCellValue(app, "grdScalStud", "SCAL_FEE_CD", voPanelChk[i]);
						}else{
							vsStudId += "," + util.Grid.getCellValue(app, "grdScalStud", "STUD_ID", voPanelChk[i]);
							vsSerialNo += "," + util.Grid.getCellValue(app, "grdScalStud", "SERIAL_NO", voPanelChk[i]);
							vsScalFeeCd += "," + util.Grid.getCellValue(app, "grdScalStud", "SCAL_FEE_CD", voPanelChk[i]);
						}	
					}  
					
					util.DataMap.setValue(app, "dmReqKey", "strStudIdC", vsStudId);
					util.DataMap.setValue(app, "dmReqKey", "strSerialNo", vsSerialNo);
					util.DataMap.setValue(app, "dmReqKey", "strScalFeeCdC", vsScalFeeCd);
					ExtInstance.setValue("/root/reqKey/strSchYearRcdC", ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/YEAR"));
					ExtInstance.setValue("/root/reqKey/strSmtRcdC", ExtInstance.getValue("instance('insCssScalCollSch')/root/reqKey/date/SMT"));
					
					return true;
				};	
				
				/**
				 * @desc 처리상태변경이나 삭제시 조건체크하고 체크된 로우의 키값을 셋팅
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee at 2016. 2. 12
				 */
				function doChkResult(){
					var vnNodeLength = util.DataSet.getRowCount(app, "dsUpdList");
					if(vnNodeLength > 0){
						var voNode = ExtInstance.getNodeToObject("/root/resList/updList/row[1]");
						
						if(ValueUtil.isNull(voNode.STUD_ID)) return true;
						
						var vsProcTypeRcd = voNode.PROC_TYPE_RCD;
						var vsProcDt = voNode.PROC_DT;
						var vsDivPayNo = voNode.DIV_PAY_NO;
						var vsPayGrpKey = voNode.PAY_GRP_KEY;
						var vsErrMsg;
						
						if("CH303RCC" == vsProcTypeRcd) vsErrMsg = "A";
						else if("CH303TRN" == vsProcTypeRcd) vsErrMsg = "D";
						else if(!ValueUtil.isNull(vsPayGrpKey)) vsErrMsg = "B";	
						else if(!ValueUtil.isNull(vsDivPayNo)) vsErrMsg = "C";
						
						var vsCond = voNode.STUD_ID + "/" + voNode.SERIAL_NO + "/" + voNode.SCAL_FEE_CD;	
						
						var vnFindIdx = util.Grid.selectRowByCondition(app, "grdScalStud" , "/root/resList/rptScalStud/row/FIND_KEY", "==", vsCond, 0);
						var vnRowIdx = Number(vnFindIdx) + 1;
						
						if(vsErrMsg == "A") util.Msg.alert("NLS-CSS-M045", [vnRowIdx, NLS.NSCR.RCC]);  //@1번째 데이터가 환수 처리되었기 때문에 더이상 진행할 수 없습니다.
						else if(vsErrMsg == "B") util.Msg.alert("NLS-CSS-M085", [vnRowIdx]);	//@1번째 데이터가 납입그룹키가 존재하여 처리할 수 없습니다.
						else if(vsErrMsg == "C") util.Msg.alert("NLS-CSS-M086", [vnRowIdx]);	//@1번째 데이터가 분납번호가 존재하여 처리할 수 없습니다.
						else if(vsErrMsg == "D") util.Msg.alert("NLS-CSS-M045", [vnRowIdx, NLS.NSCR.TRANSZ]);	//@1번째 데이터가 이월 처리되었기 때문에 더이상 진행할 수 없습니다.
						
						return false;
					}
					return true;
				};
				
				/**
				 * @desc 처리상태 일괄변경
				 * @param 
				 * @return  void
				 * @author Aeyoung Lee at 2016. 2. 12
				 */
				function doStatChange(){
					var vsPanelCheckIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdScalStud");
					var voPanelChk;
					
					if(String(vsPanelCheckIdx).indexOf(",") != -1){
						voPanelChk = vsPanelCheckIdx.split(",");
					}else{
						voPanelChk = new Array();
						voPanelChk[0] = vsPanelCheckIdx;
					}		
					
					var vsProcStatRcd = util.Control.getValue(app, "cbbProcStatRcdChange");
					var vsProcDate =  util.Control.getValue(app, "dipProcStatRcdDt").substring(0, 8);
					for(var i = voPanelChk.length - 1; i >= 0; i--) {
						var vnRow = voPanelChk[i];
						
						var vsSetDateColId = "";
						switch(vsProcStatRcd){
							// 확정
							case "CH301CFM" :
								vsSetDateColId = "CNFM_DT";
								util.Grid.setCellValue(app, "grdScalStud", "CANCEL_DT", "", vnRow);
								break;
							// 취소	
							case "CH301CAN" :
								vsSetDateColId = "CANCEL_DT";
								break;
							// 신청	
							case "CH301REQ" :
								vsSetDateColId = "REQ_DT";
								break;
						}
						
						util.Grid.setCellValue(app, "grdScalStud", "PROC_STAT_RCD", vsProcStatRcd, vnRow);
						if(!ValueUtil.isNull(vsSetDateColId)){
							util.Grid.setCellValue(app, "grdScalStud", vsSetDateColId, vsProcDate, vnRow);	
						}	
						ExtRepeat.updateRow("rptScalStud", null, vnRow, false);
						
					}  
					
					ExtRepeat.refresh("rptScalStud");
					
					//처리상태가 일괄 변경되었습니다. 
					util.Msg.notify(app, "NLS.CSS.M028");
				};
				
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsYearList");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListPrcdStatRcd");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsSmtList");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsScalStud");
			dataSet_4.parseData({
				"info": "CSS_SCAL_STUD@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO",
				"columns": [
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "HOPE_OG_OBJ_DIV_RCD"},
					{"name": "SA_CD"},
					{"name": "REQ_DESC"},
					{"name": "WRK_CHAG_OPRT"},
					{"name": "SCAL_AMT"},
					{"name": "WRK_EVAL_RCD"},
					{"name": "HOPE_WRK_DEPT_CD"},
					{"name": "PMNT_DIV_NM"},
					{"name": "WRK_END_DT"},
					{"name": "HOPE_WRK_DEPT_NM"},
					{"name": "OG_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "STUD_ID"},
					{"name": "REMARK"},
					{"name": "WRK_DEPT_NM"},
					{"name": "SMT_RCD"},
					{"name": "SMT_NM"},
					{"name": "SA_NM"},
					{"name": "CANCEL_DT"},
					{"name": "REQ_DT"},
					{"name": "PMNT_ITV_NM"},
					{"name": "PROC_STAT_RCD"},
					{"name": "CANCEL_DESC"},
					{"name": "STUD_NO"},
					{"name": "SCH_YEAR_NM"},
					{"name": "WRK_DEPT_CD"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "WRK_EVAL_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "PROC_STAT_NM"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "REP_NM"},
					{"name": "CNFM_DT"},
					{"name": "WRK_ST_DT"},
					{"name": "PROC_RSLT"},
					{"name": "PROC_RSLT_YEAR"},
					{"name": "FIND_KEY"},
					{"name": "RCC_AMT"},
					{"name": "TOT_SCAL_AMT"},
					{"name": "CGT_SMT_CNT"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsUpdList");
			dataSet_5.parseData({
				"columns": [
					{"name": "STUD_ID"},
					{"name": "PROC_DT"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "PROC_TYPE_RCD"},
					{"name": "DIV_PAY_NO"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcdC",
						"dataType": "string"
					},
					{
						"name": "strSmtRcdC",
						"dataType": "string"
					},
					{
						"name": "strStudIdC",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCdC",
						"dataType": "string"
					},
					{
						"name": "strSerialNo",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strProcStatRcd",
						"dataType": "string"
					},
					{
						"name": "strProcStatRcdChange",
						"dataType": "string"
					},
					{
						"name": "strProcDate",
						"dataType": "string"
					},
					{
						"name": "strCnfmEndDt",
						"dataType": "string"
					},
					{
						"name": "strCnfmStDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalStudColl/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_2, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/css/StdCssScalStudColl/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_1, false);
			submission_2.addResponseData(dataSet_3, false);
			submission_2.addResponseData(dataSet_4, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subUpdSts");
			submission_3.action = "/css/StdCssScalStudColl/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_5, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subSave");
			submission_4.action = "/css/StdCssScalStudColl/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataSet_4);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "1158px",
					"width": "60px",
					"height": "25px"
				});
				var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaCssScalCollSchgrpSearch");
				if(typeof onEmaCssScalCollSchgrpSearchAppReady == "function") {
					embeddedApp_1.addEventListener("app-ready", onEmaCssScalCollSchgrpSearchAppReady);
				}
				cpr.core.App.load("app/css/impStdCssScalCollSch", function(app) {
					if(app){
						embeddedApp_1.app = app;
					}
				});
				container.addChild(embeddedApp_1, {
					"top": "5px",
					"left": "5px",
					"width": "1153px",
					"height": "75px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbProcStatRcd");
				comboBox_1.bind("fieldLabel").toExpression("#optProcStatRcd.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcStatRcd");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListPrcdStatRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "55px",
					"left": "540px",
					"width": "160px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optProcStatRcd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-PRCSTATE");
				container.addChild(output_1, {
					"top": "55px",
					"left": "455px",
					"width": "80px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optCnfmDt1");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-CNFM_ST_DT");
				container.addChild(output_2, {
					"top": "55px",
					"left": "1058px",
					"width": "20px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optCnfmDt2");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-CNFM_END_DT");
				container.addChild(output_3, {
					"top": "55px",
					"left": "1077px",
					"width": "25px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optCnfmDt");
				output_4.value = "";
				output_4.bind("value").toLanguage("NLS-DLG-LBL-EXT002");
				container.addChild(output_4, {
					"top": "55px",
					"left": "710px",
					"width": "81px",
					"height": "25px"
				});
				var dateInput_1 = new cpr.controls.DateInput("dipCnfmStDt");
				dateInput_1.style.css({
					"text-align" : "center"
				});
				dateInput_1.bind("fieldLabel").toExpression("#optCnfmDt1.value");
				dateInput_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strCnfmStDt");
				container.addChild(dateInput_1, {
					"top": "55px",
					"left": "795px",
					"width": "120px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optText1");
				output_5.value = "~";
				container.addChild(output_5, {
					"top": "55px",
					"left": "915px",
					"width": "15px",
					"height": "25px"
				});
				var dateInput_2 = new cpr.controls.DateInput("dipCnfmEndDt");
				dateInput_2.style.css({
					"text-align" : "center"
				});
				dateInput_2.bind("fieldLabel").toExpression("#optCnfmDt2.value");
				dateInput_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strCnfmEndDt");
				container.addChild(dateInput_2, {
					"top": "55px",
					"left": "930px",
					"width": "120px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "1225px",
				"height": "82px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("UI-SCR-SCRSLIST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "252px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScalStud");
				grid_1.init({
					"dataSet": app.lookup("dsScalStud"),
					"columns": [
						{"width": "25px"},
						{"width": "25px"},
						{"width": "40px"},
						{"width": "70px"},
						{"width": "70px"},
						{"width": "107px"},
						{"width": "45px"},
						{"width": "45px"},
						{"width": "60px"},
						{"width": "45px"},
						{"width": "90px"},
						{"width": "110px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "90px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "100px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "117px"},
						{"width": "117px"},
						{"width": "117px"},
						{"width": "91px"},
						{"width": "89px"},
						{"width": "78px"},
						{"width": "130px"},
						{"width": "136px"},
						{"width": "159px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.text = "F";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.text = "No";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-STUD_ID");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-NAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ASGN");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SHYR");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_FEE_CD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_FEE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_AMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PMNTDIV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PAYITV");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-PRCSTATE");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQ_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CNFM_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-HPWRKDEP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-WRKDEP");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-WRK_CHAG_OPRT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-WRK_BEG_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-WRK_END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-WRKEVAL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REQ_DESC");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CANCEL_DESC");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnType = "checkbox";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output();
										output_6.style.css({
											"text-align" : "center"
										});
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnType = "rowindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "STUD_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "SA_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "PROC_RSLT_YEAR";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SMT_NM";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "CGT_SMT_CNT";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SCAL_AMT";
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("gdOptScalAmt");
										output_7.dataType = "number";
										output_7.format = "s#,###";
										output_7.style.css({
											"text-align" : "right"
										});
										output_7.bind("value").toDataColumn("SCAL_AMT");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "RCC_AMT";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptRccAmt");
										output_8.dataType = "number";
										output_8.format = "s#,###";
										output_8.style.css({
											"text-align" : "right"
										});
										output_8.bind("value").toDataColumn("RCC_AMT");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "TOT_SCAL_AMT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptTotScalAmt");
										output_9.dataType = "number";
										output_9.format = "s#,###";
										output_9.style.css({
											"text-align" : "right"
										});
										output_9.bind("value").toDataColumn("TOT_SCAL_AMT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "PMNT_DIV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "PMNT_ITV_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "PROC_STAT_RCD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCddProcStatRcd");
										comboBox_2.enabled = false;
										comboBox_2.hideButton = true;
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListPrcdStatRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("PROC_STAT_RCD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.columnName = "REQ_DT";
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("gdOptReqDt");
										output_10.dataType = "date";
										output_10.format = "YYYY-MM-DD";
										output_10.style.css({
											"text-align" : "center"
										});
										output_10.bind("value").toDataColumn("REQ_DT");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.columnName = "CNFM_DT";
									cell.control = (function(){
										var output_11 = new cpr.controls.Output("gdOptCnfmDt");
										output_11.dataType = "date";
										output_11.format = "YYYY-MM-DD";
										output_11.style.css({
											"text-align" : "center"
										});
										output_11.bind("value").toDataColumn("CNFM_DT");
										return output_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DT";
									cell.control = (function(){
										var output_12 = new cpr.controls.Output("gdOptCancelDt");
										output_12.dataType = "date";
										output_12.format = "YYYY-MM-DD";
										output_12.style.css({
											"text-align" : "center"
										});
										output_12.bind("value").toDataColumn("CANCEL_DT");
										return output_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.columnName = "HOPE_WRK_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.columnName = "WRK_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.columnName = "WRK_CHAG_OPRT";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.columnName = "WRK_ST_DT";
									cell.control = (function(){
										var output_13 = new cpr.controls.Output("gdOptWrkStDt");
										output_13.dataType = "date";
										output_13.format = "YYYY-MM-DD";
										output_13.style.css({
											"text-align" : "center"
										});
										output_13.bind("value").toDataColumn("WRK_ST_DT");
										return output_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.columnName = "WRK_END_DT";
									cell.control = (function(){
										var output_14 = new cpr.controls.Output("gdOptWrkEndDt");
										output_14.dataType = "date";
										output_14.format = "YYYY-MM-DD";
										output_14.style.css({
											"text-align" : "center"
										});
										output_14.bind("value").toDataColumn("WRK_END_DT");
										return output_14;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.columnName = "WRK_EVAL_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.columnName = "REMARK";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.columnName = "REQ_DESC";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.columnName = "CANCEL_DESC";
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.expr = "\"합계\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.expr = "getSum(\"SCAL_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.expr = "getSum(\"RCC_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.expr = "getSum(\"TOT_SCAL_AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 18},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 19},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 20},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 21},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 22},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 23},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 24},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 25},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 26},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 27},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 28},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 29},
								"configurator": function(cell){
									cell.expr = "\"\"";
								}
							}
						]
					}
				});
				if(typeof onGrdScalStudDblclick == "function") {
					grid_1.addEventListener("dblclick", onGrdScalStudDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1213px",
					"height": "517px"
				});
				var button_2 = new cpr.controls.Button("btnNew");
				button_2.value = "";
				button_2.style.setClasses(["btn-new"]);
				button_2.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_2.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "961px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnDel");
				button_3.value = "";
				button_3.style.setClasses(["btn-delete"]);
				button_3.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_3.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "1027px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnRestore");
				button_4.value = "";
				button_4.style.setClasses(["btn-restore"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_4.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "1092px",
					"width": "60px",
					"height": "25px"
				});
				var button_5 = new cpr.controls.Button("btnSave");
				button_5.value = "";
				button_5.style.setClasses(["btn-save"]);
				button_5.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_5.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_5, {
					"top": "5px",
					"left": "1156px",
					"width": "60px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbProcStatRcdChange");
				comboBox_3.userAttr({"require": "Y"});
				comboBox_3.bind("fieldLabel").toExpression("#optStatChg.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcStatRcdChange");
				(function(comboBox_3){
					comboBox_3.setItemSet(app.lookup("dsListPrcdStatRcd"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "5px",
					"left": "695px",
					"width": "137px",
					"height": "25px"
				});
				var dateInput_3 = new cpr.controls.DateInput("dipProcStatRcdDt");
				dateInput_3.userAttr({"require": "Y"});
				dateInput_3.style.css({
					"text-align" : "center"
				});
				dateInput_3.bind("fieldLabel").toExpression("#optProcStatRcdDt.value");
				dateInput_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strProcDate");
				container.addChild(dateInput_3, {
					"top": "5px",
					"left": "837px",
					"width": "113px",
					"height": "25px"
				});
				var button_6 = new cpr.controls.Button("btnStatChg");
				button_6.value = "";
				button_6.bind("value").toLanguage("UI-SCR-PRCSTATCHG");
				if(typeof onBtnStatChgClick == "function") {
					button_6.addEventListener("click", onBtnStatChgClick);
				}
				container.addChild(button_6, {
					"top": "5px",
					"left": "597px",
					"width": "90px",
					"height": "25px"
				});
				var output_15 = new cpr.controls.Output("optStatChg");
				output_15.value = "변경처리상태";
				container.addChild(output_15, {
					"top": "5px",
					"left": "270px",
					"width": "107px",
					"height": "25px"
				});
				var output_16 = new cpr.controls.Output("optProcStatRcdDt");
				output_16.value = "";
				output_16.bind("value").toLanguage("UI-DB-PROC_DT");
				container.addChild(output_16, {
					"top": "5px",
					"left": "390px",
					"width": "107px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "122px",
				"left": "3px",
				"width": "1225px",
				"height": "552px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "일괄장학생관리";
	cpr.core.Platform.INSTANCE.register(app);
})();
