/*
 * App URI: app/css/stdCssCScalStudDtl
 * Source Location: app/css/stdCssCScalStudDtl.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCScalStudDtl", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCScalStudDtl.xtm"/>
			
			
			var stdCssCScalStudDtl = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * 필수Param
				 * - progMode
				 * - schYearRcd
				 * - smtRcd
				 * - begDt
				 * - endDt
				 * 
				 * 선택Param
				 * - studId
				 * - UPD, ADD 모드일때 serialNo는 필수
				 */
				var moScalStudDtlParam = {
					progMode	: null,
					
					schYearRcd 	: null,
					smtRcd 		: null,
					stDt		: null,
					endDt		: null,
					currentDt 	: null,
					
					studId 		: null,
					studNo 		: null,
					studNm		: null,
					ogCd		: null,
					ogNm		: null,
					saCd   		: null,
					saNm		: null,
					spCd		: null,
					spNm		: null,
					statRcd		: null,
					statNm		: null,
					
					serialNo 	: null
				};
			
				/**
				 * 학생검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCsrPStSearch = [
				{
					controlId 		: "btnFrfStudPop",
					iStudNo 		: "ipbFrfStudId",	
					iStudId 		: "",
					iStudNm 		: "",
					iKeyDate 		: "/root/reqKey/strEndDt",
					iObjDivRcd 		: "",
					iObjCd 			: "",
					iObjNm 			: "",
					iAuthYN 		: "",
					iStatRcd 		: "",
					iStudDivRcd		: "",
					oStudId 		: "ipbFrfStudIdObj",
					oStudNo 		: "ipbFrfStudId",
					oStudNm 		: "ipbFrfStudNm",
					oStatNm 		: "",
					oStatRcd 		: "",
					oProcRslt 		: "",
					oProcRsltYear 	: "",
					oSaNm			: "",
					oSaCd 			: "",
					oSpNm 			: "",
					oSpCd 			: "",
					oOgNm 			: "",
					oOgCd 			: "",
					oStudDivRcd		: "",
					oStudDivNm		: "",
					oBirthday		: "",
					oGenderRcd		: "",
					oGenderNm		: "",
					func : function(poParam) {
						doStSearch(poParam);
					}
				}
				];
			
				/* 
				 * 장학금 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCssPScalFeeSch = [
				{
					controlId 	: "btnFrfScalFeePop",
					iCd 		: null,
					iNm 		: "ipbFrfScalFeeNm",
					iObjDivRcd 	: "CC009SS",
					iLanDivRcd 	:  "/root/resOnload/strDefLanDivRcd",
					iKeyDate	:  "/root/reqKey/strEndDt",
					oScalFeeCd 	: "ipbFrfScalFeeCd",
					oScalFeeNm 	: "ipbFrfScalFeeNm",
					oObjDivRcd 	: "ipbFrfSsObjDivRcd",
					oPmntDivRcd : "cbbFrfPmntDivRcd",
					oPmntItvRcd : "cbbFrfPmntItvRcd",
					func : function(poParam) {
						if(!!poParam.result.SCAL_FEE_CD) doGetAmt(poParam);
					}
				}
				];
			
				/* 
				 * 객체 검색팝업 관련 설정사항
				 */
				moPObject.moIdsForStdCmnPObjSch = [
				{
					controlId 	: "btnFrfHopeDeptPop",
					iCd 		: "",
					iNm 		: "ipbFrfHopeWrkDeptNm",
					iObjDivRcd 	: ["CC009OG"],
					iLanDivRcd 	: "/root/resOnload/strDefLanDivRcd",
					iKeyDate 	: "/root/reqKey/strEndDt",
					oObjDivRcd 	: "ipbFrfHopeOgObjDivRcd",
					oCd 		: "ipbFrfHopeWrkDeptCd",
					oCdNm 		: "ipbFrfHopeWrkDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: null
				}, 
				{
					controlId 	: "btnFrfWrkDeptPop",
					iCd 		: "",
					iNm 		: "ipbFrfWrkDeptNm",
					iObjDivRcd 	: ["CC009OG"],
					iLanDivRcd 	: "/root/resOnload/strDefLanDivRcd",
					iKeyDate 	: "/root/reqKey/strEndDt",
					oObjDivRcd 	: "ipbFrfOgObjDivRcd",
					oCd 		: "ipbFrfWrkDeptCd",
					oCdNm 		: "ipbFrfWrkDeptNm",
					oStDt 		: "",
					oEndDt 		: "",
					oLanDivRcd 	: "",
					func 		: null
				}
				];
			
				var moCtrlVal = {
					//이와 동일한 변수명을 선언하여 값을 전달해 주도록 한다.
					scalFeeCls1 : "", //장학금구분코드1
					scalFeeCls2 : "", //장학금구분코드2
					scalFeeCls3 : "", //장학금구분코드3
					scalFeeCls4 : "", //장학금구분코드4
					scalFeeCls5 : "", //장학금구분코드5
					
					deptCd : "", //부서코드(선택, 넘겨받은 코드의 상위부서까지 모두검색)
					deptObjDivRcd : "", //구분객체(부서코드 받을시 필수, 행정부서,학사부서 등)
					
					mngDeptDiv : "", //관리부서구분코드(선택)
					wrkScalYn : "", //근로장학여부(선택: null, Y, N)
					studReqYn : "", //학생신청여부(선택: Y)
					cntiScalYn : "" //연속장학여부(선택: Y)
				};
			
				var moForScalValid = {
					studId		: null,
					schYearRcd	: null,
					smtRcd		: null,
					scalFeeCd	: null,
					objDivRcd	: null,
					progMode	: null,
					wrkDeptCd	: null, 
					ogObjDivRcd	: null, 
					listResult	: null
				};
			
				var maCtlEnable = ["ipbFrfStudId", "btnFrfStudPop"];
				var maCtlDivOrPayEnable = ["ipbFrfScalFeeNm", "btnFrfScalFeePop", "cbbFrfProcStatRcd", "cbbFrfPmntDivRcd", "cbbFrfPmntItvRcd", "btnNew", "btnDel"];
			
				var maStudId = ["ipbFrfScalFeeNm", "btnFrfScalFeePop", "cbbFrfProcStatRcd", "cbbFrfPmntDivRcd", "cbbFrfPmntItvRcd", "dipFrfReqDt", "dipFrfCnfmDt","dipFrfCancelDt"
								, "txtFrfReqDesc", "txtFrfRemark", "txtFrfCancelDesc"
								, "ipbFrfHopeWrkDeptNm", "btnFrfHopeDeptPop","ipbFrfWrkDeptNm", "btnFrfWrkDeptPop", "ipbFrfWrkChagOprt", "dipFrfWrkStDt", "dipFrfWrkEndDt"
								, "cbbFrfWrkEvalRcd", "btnNew", "btnDel", "btnSave", "btnRestore", "btnFrfScalFeeNm", "btnFrfHopeWrkDeptNm", "btnFrfWrkDeptNm"];
			
				/**
				 * doOnLoad  화면 오픈 시 서브미션 
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */
				function doOnLoad(){					
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["frfScalStud", "rptScalStudPmnt"]);
					
					//암호화컬럼 설정
					ExtRepeat.addOriginCol("rptScalStudPmnt", ["STUD_ACCT_NO"]);
					
					// 호출한 페이지에서 파라미터 받기.		
					if(!ExtPopUp.isPopUp()) return;
					
					var voScalStudDtlParam =  ExtPopUp.getParentVal("moScalStudDtlParam");
					if(!doProgModCommon(voScalStudDtlParam)) return false;
					
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["frfScalStud","grdScalStudPmnt"]);
							
							var vbProgMode = voScalStudDtlParam.progMode;
							switch (vbProgMode) {
								case "NEW" : {
									doProgModNew(voScalStudDtlParam);
									util.Control.setFocus(app, "ipbFrfStudId");
									break;
								}
								case "ADD" : {
									doProgModAdd(voScalStudDtlParam, function(pbSuccess){	
										if(pbSuccess){
											util.Control.setFocus(app, "ipbFrfScalFeeNm");
										}
									});
									break;
								}
								case "UPD" : {
									doProgModUpd(voScalStudDtlParam, function(pbSuccess){
										if(pbSuccess) {
											util.Control.setFocus(app, "ipbFrfScalFeeNm");
										}
									});
									break;
								}
							}
						}
					});
				};
			
				/**
				 * doParentGet  호출한 페이지에서 파라미터 받기.
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doProgModCommon(poScalStudDtlParam){
					
					if(poScalStudDtlParam.progMode != "NEW" && poScalStudDtlParam.progMode != "ADD" && poScalStudDtlParam.progMode != "UPD"){
						//@1 잘못된 호출로 인해 정상적인 수행이 불가합니다. (다시 시도하거나, 전산담당자 문의바랍니다.)
						util.Msg.alert("NLS-CSS-M056", ["progMode"]);
						return false;
					}
					if(ValueUtil.isNull(poScalStudDtlParam.schYearRcd)){
						util.Msg.alert("NLS-CSS-M056", ["schYearRcd"]);
						return false;
					}
					if(ValueUtil.isNull(poScalStudDtlParam.smtRcd)){
						util.Msg.alert("NLS-CSS-M056", ["smtRcd"]);
						return false;
					}
					if(ValueUtil.isNull(poScalStudDtlParam.stDt)){
						util.Msg.alert("NLS-CSS-M056", ["stDt"]);
						return false;
					}
					if(ValueUtil.isNull(poScalStudDtlParam.endDt)){
						util.Msg.alert("NLS-CSS-M056", ["endDt"]);
						return false;
					}
					
					var voScalStudDtlParam = moScalStudDtlParam;
					voScalStudDtlParam.progMode = poScalStudDtlParam.progMode;
					voScalStudDtlParam.schYearRcd = poScalStudDtlParam.schYearRcd;
					voScalStudDtlParam.smtRcd = poScalStudDtlParam.smtRcd;
					voScalStudDtlParam.stDt = poScalStudDtlParam.stDt;
					voScalStudDtlParam.endDt = poScalStudDtlParam.endDt;
					
					moPObject.moIdsForStdCsrPStSearch[0].iKeyDate = voScalStudDtlParam.endDt;
					moPObject.moIdsForStdCssPScalFeeSch[0].iKeyDate = voScalStudDtlParam.endDt;
					moPObject.moIdsForStdCmnPObjSch[0].iKeyDate = voScalStudDtlParam.endDt;
					moPObject.moIdsForStdCmnPObjSch[1].iKeyDate = voScalStudDtlParam.endDt;
					
					util.DataMap.setValue(app, "dmReqKey", "strProgMode", poScalStudDtlParam.progMode);
					util.DataMap.setValue(app, "dmReqKey", "strSchYearRcd", poScalStudDtlParam.schYearRcd);
					util.DataMap.setValue(app, "dmReqKey", "strSmtRcd", poScalStudDtlParam.smtRcd);
					util.DataMap.setValue(app, "dmReqKey", "strStDt", poScalStudDtlParam.stDt);
					util.DataMap.setValue(app, "dmReqKey", "strEndDt", poScalStudDtlParam.endDt);
					
					return true;
				};
			
				/**
				 * doSearch 신규모드
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doProgModNew(poScalStudDtlParam){
					util.Control.setEnable(app, false, maStudId);
					util.Control.setEnable(app, true, maCtlEnable);	
					
					// insert
					util.FreeForm.insertRow(app, "frfScalStud");
				};
			
				/**
				 * doSearch 추가
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doProgModAdd(poScalStudDtlParam, poCallbackFunc){
					if(ValueUtil.isNull(poScalStudDtlParam.studId)){
						util.Msg.alert("NLS-CSS-M056", ["studId"]);
						return false;
					}
					
					// 2016.08.31 학년도학기에 따른 학번 클리어 주석으로 해당학기에 따른 sa를 못가지고 올 수 있음
					// saCd를 활용하는 처리로직이 없음을 판단하여 주석
			//		if(ValueUtil.isNull(poScalStudDtlParam.saCd)){
			//			ComMsg.alert(NLS.CSS.M056, ["saCd"]);
			//			return false;
			//		}
					
					util.Control.setEnable(app, false, maCtlEnable);
					
					var voScalStudDtlParam = moScalStudDtlParam;
					voScalStudDtlParam.studId = poScalStudDtlParam.studId; 
					voScalStudDtlParam.saCd = poScalStudDtlParam.saCd;
					
			//		moCtrlVal.deptCd = poScalStudDtlParam.saCd;
			//		moCtrlVal.deptObjDivRcd = "CC009SA";
					
					util.DataMap.setValue(app, "dmReqKey", "strStudId", poScalStudDtlParam.studId);
					util.Control.setValue(app, "ipbFrfStudIdObj", poScalStudDtlParam.studId);
					util.Control.setValue(app, "ipbFrfStudNm", poScalStudDtlParam.studNm);
					
					doChangeStudId(poScalStudDtlParam,
						function(pbSuccess) {
							//strCommand: studBankInfo 
							util.Submit.send(app, "subStudBankInfo", function(pbSuccess){
								if(util.isFunc(poCallbackFunc)) poCallbackFunc(pbSuccess);
							});
						}
					);
				};
			
				/**
				 * doSearch 수정
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doProgModUpd(poScalStudDtlParam, poCallbackFunc){
					if(ValueUtil.isNull(poScalStudDtlParam.studId)){
						util.Msg.alert("NLS-CSS-M056", ["studId"]);
						return false;
					}
					if(ValueUtil.isNull(poScalStudDtlParam.serialNo)){
						util.Msg.alert("NLS-CSS-M056", ["serialNo"]);
						return false;
					}
					
					// 2016.08.31 학년도학기에 따른 학번 클리어 주석으로 해당학기에 따른 sa를 못가지고 올 수 있음
					// saCd를 활용하는 처리로직이 없음을 판단하여 주석
			//		if(ValueUtil.isNull(poScalStudDtlParam.saCd)){
			//			ComMsg.alert(NLS.CSS.M056, ["saCd"]);
			//			return false;
			//		}
					
					util.Control.setEnable(app, false, maCtlEnable);
					
					var voScalStudDtlParam = moScalStudDtlParam;
					voScalStudDtlParam.studId = poScalStudDtlParam.studId;
					voScalStudDtlParam.studNo = poScalStudDtlParam.studNo;
					voScalStudDtlParam.serialNo = poScalStudDtlParam.serialNo;
					voScalStudDtlParam.saCd = poScalStudDtlParam.saCd;
					
			//		moCtrlVal.deptCd = poScalStudDtlParam.saCd;
			//		moCtrlVal.deptObjDivRcd = "CC009SA";
					
					util.DataMap.setValue(app, "dmReqKey", "strStudId", poScalStudDtlParam.studId);
					util.DataMap.setValue(app, "dmReqKey", "strSerialNo", poScalStudDtlParam.serialNo);
					
					//strCommand: scalStud 
					util.Submit.send(app, "subScalStud", function(pbSuccess) {		
						if(pbSuccess){
			//TO-BE: 단독 프리폼에 대한 데이터 바인딩은 공통단에서 자동 처리됨(삭제 필요)
							ExtFreeForm.copyToInstance("frfScalStud", "/root/resList/listScalStud/row", 1);
							util.Control.redraw(app, ["grdScalStudPmnt"]);
							
							// 분납 혹은 납입그룹키가 있는 경우 
							var vbDivOrPay = util.DataMap.getValue(app, "dmResList", "strDivOrPay");					
							if(vbDivOrPay == "Y"){
								util.Control.setEnable(app, false, maCtlDivOrPayEnable);
								util.Control.setReadOnly(app, true, "rptScalStudPmnt");
							} else {
								util.Control.setEnable(app, true, maCtlDivOrPayEnable);
								util.Control.setReadOnly(app, false, "rptScalStudPmnt");
							}
							
							// 장학지급금액 기준(CSS_PMNT_AMT_CII) 조회
							if(!ValueUtil.isNull(util.Control.getValue(app, "ipbFrfScalFeeCd"))) {
								
								util.DataMap.setValue(app, "dmReqKey", "strScalFeeCd", util.Control.getValue(app, "ipbFrfScalFeeCd"));
								util.DataMap.setValue(app, "dmReqKey", "strSsObjDivRcd", util.Control.getValue(app, "ipbFrfSsObjDivRcd"));
								
								//strCommand: scalFeeEtcInfo 
								util.Submit.send(app, "subScalFeeEtcInfo", function(pbSuccess) {
									
									if(pbSuccess) {
										var vsPmntCiiRcd =  util.DataSet.getValue(app, "dsListPmntAmtCii", "PMNT_CII_RCD", 1);
										var vsCiiVal =  util.DataSet.getValue(app, "dsListPmntAmtCii", "CII_VAL", 1);
										var vsUnitRcd =  util.DataSet.getValue(app, "dsListPmntAmtCii", "UNIT_RCD", 1);
										
										util.Control.setValue(app, "ipbFrfPmntCiiRcd", vsPmntCiiRcd);
										util.Control.setValue(app, "ipbFrfCiiVal", vsCiiVal);
										util.Control.setValue(app, "ipbFrfUnitRcd", vsUnitRcd);
										
										// 지급구분이 단위계산
										var vaUnitCtrl = ["rdIpbCiiVal", "rdCbbUnitRcd", "rdIpbUnitCalcVal"];
										
										//지급기준코드가 단위계산일경우 단위코드, 단위계산값, 기준값 필수항목 셋팅
										if(vsPmntCiiRcd == "CH201UNT"){
											util.Control.setUserAttr(app, vaUnitCtrl, "require", "Y");
										}else{
											util.Control.setUserAttr(app, vaUnitCtrl, "require", "");
										}	
										
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//							ExtControl.refreshBind("binRoPmntCiiUnit");
									}
								});
							}
							
							// 해당학생 계좌
							ExtSubmission.sendEx("subStudBankInfo", "studBankInfo");
						}
						
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(true);
					});
				};
			
				/**
				 * doSearch 학생Id 변경 시 프리폼 신규상태로 하고 기본 정보 세팅
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doChangeStudId(poParam, poCallbackFunc){
					util.DataMap.setValue(app, "dmReqKey", "strStudId", poParam.studId);
					
					util.FreeForm.insertRow(app, "frfScalStud");
					util.Grid.setCellValue(app, "frfScalStud", "STUD_ID", poParam.studId, 1);
					util.Grid.setCellValue(app, "frfScalStud", "STUD_NO", poParam.studNo, 1);
					util.Grid.setCellValue(app, "frfScalStud", "STUD_NM", poParam.studNm	, 1);
					util.Grid.setCellValue(app, "frfScalStud", "SCH_YEAR_RCD", poParam.schYearRcd, 1);
					util.Grid.setCellValue(app, "frfScalStud", "SMT_RCD", poParam.smtRcd, 1);
					
					doGetCurrentMaxSerialNo(function(vnCurrentMaxSerialNo) {
						if(!ValueUtil.isNull(vnCurrentMaxSerialNo)){
							
							var vnSerialNo = Number(vnCurrentMaxSerialNo) + 1;
							
							util.Grid.setCellValue(app, "frfScalStud", "SERIAL_NO", vnSerialNo, 1);
							
							moScalStudDtlParam.studId = poParam.studId;
							moScalStudDtlParam.serialNo = vnSerialNo; 
							
							util.Control.reset(app, "rptScalStudPmnt");
							
							if(util.isFunc(poCallbackFunc)) poCallbackFunc(true);
						}
					});
				};
			
				/**
				 * doGetCurrentMaxSerialNo 장학생 테이블 학번, 학년도, 학기로 장학생 테이블의 최대 순번값을 구해옴
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doGetCurrentMaxSerialNo(poCallbackFunc){
					var vsCurrentMaxSerialNo = "";
					//strCommand: serialNo 
					util.Submit.send(app, "subSerialNo", function(pbSuccess){							
						if(pbSuccess){
							vsCurrentMaxSerialNo = util.DataMap.getValue(app, "dmReqKey", "strSerialNo");
						}else{
							vsCurrentMaxSerialNo = null;
						}
						
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(vsCurrentMaxSerialNo);
					});
				};
			
				/**
				 * onClick_BtnFrfStudPop 학생검색버튼클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnFrfStudPop = function(sender){
					doOnClickStdCsrPStSearch(sender);
				};
			
				/**
				 * onValueChage_InputFrfStudId 학생변경이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onValueChage_InputFrfStudId = function(sender){
					doOnChangeStdCsrPStSearch(sender);
				};	
			
				/**
				 * doStSearch 학생검색을 통한 학생정보를 장학생정보(moScalStudDtlParam)에 셋팅
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doStSearch(poParam){
					moScalStudDtlParam.studId 	= null;
					moScalStudDtlParam.studNo 	= null; 
					moScalStudDtlParam.studNm 	= null;
					moScalStudDtlParam.ogCd		= null;
					moScalStudDtlParam.ogNm		= null;
					moScalStudDtlParam.saCd   	= null;
					moScalStudDtlParam.saNm		= null;
					moScalStudDtlParam.spCd		= null;
					moScalStudDtlParam.spNm		= null;
					moScalStudDtlParam.statRcd	= null;
					moScalStudDtlParam.statNm	= null;
					
					var vbStudId = poParam.Result.strStudId;
					if(!ValueUtil.isNull(vbStudId)){
						util.Control.setEnable(app, true, maStudId);
						
						moScalStudDtlParam.studId 	= vbStudId;
						moScalStudDtlParam.studNo 	= poParam.Result.strStudNo; 
						moScalStudDtlParam.studNm 	= poParam.Result.strStudNm;
						moScalStudDtlParam.ogCd		= poParam.Result.strOgCd;
						moScalStudDtlParam.ogNm		= poParam.Result.strOgNm;
						moScalStudDtlParam.saCd   	= poParam.Result.strSaCd;
						moScalStudDtlParam.saNm		= poParam.Result.strSaNm;
						moScalStudDtlParam.spCd		= poParam.Result.strSpCd;
						moScalStudDtlParam.spNm		= poParam.Result.strSpNm;
						moScalStudDtlParam.statRcd	= poParam.Result.strStatRcd;
						moScalStudDtlParam.statNm	= poParam.Result.strStatNm;
						
						moCtrlVal.deptCd = poParam.Result.strSaCd;
						moCtrlVal.deptObjDivRcd = "CC009SA";
						
						doChangeStudId(moScalStudDtlParam, 
							function(pbSuccess) {
								if(pbSuccess){
									util.DataMap.setValue(app, "dmReqKey", "strStudId", vbStudId);
									ExtSubmission.sendEx("subStudBankInfo", "studBankInfo");
								}
							}
						);
					}else{
						doResetAll();
					}	
				};	
			
				/**
				 * onClick_BtnFrfScalFeePop 장학금검색버튼클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnFrfScalFeePop = function(sender){
					doOnClickStdCssPScalFeePop(sender);
				};
			
				/**
				 * onValueChage_InputFrfScalFeeNm 장학금변경이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onValueChage_InputFrfScalFeeNm = function(sender){
					doOnChangeStdCssPScalFeePop(sender);
				};	
			
				/**
				 * doGetAmt 장학금검색 이후 장학금 유효성 체크, 금액산출
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doGetAmt(poParam){
					// 장학금지급기준 정보 조회
					doScalFeeEtcInfo(poParam.result, function(pbSuccess) {
						if(pbSuccess) {
							// 장학금 유효성 체크
							doCheckValid(poParam.result, function(pbSuccess) {
								if(pbSuccess){
									// 장학금 자동계산
									doCalcScalFee();
								}else{
									//서브미션을 통해 받아오던 리스트를 부모창에서 받아서 결과창에 뿌려준다.
									var vnScalFeeValidRst = util.DataSet.getRowCount(app, "dsListResult");
									
									if(vnScalFeeValidRst > 0){
										doShowRstMsgList("impStdCssScalValidRst");
									}	
								}
							});
						}
					});
				};
			
				/**
				 * doScalFeeEtcInfo 장학지급금액 기준(CSS_PMNT_AMT_CII) 조회
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doScalFeeEtcInfo(poResult, poCallbackFunc){
					
					util.DataMap.setValue(app, "dmReqKey", "strScalFeeCd", poResult.SCAL_FEE_CD);
					util.DataMap.setValue(app, "dmReqKey", "strSsObjDivRcd", poResult.OBJ_DIV_RCD);
					
					//strCommand: scalFeeEtcInfo 
					util.Submit.send(app, "subScalFeeEtcInfo", function(pbSuccess){							
						if(pbSuccess){
							
							var vbPmntCiiRcd = util.DataSet.getValue(app, "dsListPmntAmtCii", "PMNT_CII_RCD", 1);
							var vsCiiVal =  util.DataSet.getValue(app, "dsListPmntAmtCii", "CII_VAL", 1);
							var vbUnitRcd = util.DataSet.getValue(app, "dsListPmntAmtCii", "UNIT_RCD", 1);
							
							util.Control.setValue(app, "ipbFrfPmntCiiRcd", vbPmntCiiRcd);
							util.Control.setValue(app, "ipbFrfCiiVal", vsCiiVal);
							util.Control.setValue(app, "ipbFrfUnitRcd", vbUnitRcd);
							
							// 지급구분이 단위계산
							var vaUnitCtrl = ["rdIpbCiiVal", "rdCbbUnitRcd", "rdIpbUnitCalcVal"];
							
							//지급기준코드가 단위계산일경우 단위코드, 단위계산값, 기준값 필수항목 셋팅
							if(vbPmntCiiRcd == "CH201UNT"){
								util.Control.setUserAttr(app, vaUnitCtrl, "require", "Y");
							}else{
								util.Control.setUserAttr(app, vaUnitCtrl, "require", "");
							}	
							
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//				ExtControl.refreshBind("binRoPmntCiiUnit");
						}
						
						if(util.isFunc(poCallbackFunc)) poCallbackFunc(pbSuccess);
					});
				};	
			
				/**
				 * doCheckValid 장학금유효성체크 -> 서비스팩토리 호출
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doCheckValid(poResult, poCallbackFunc){
					util.DataMap.setValue(app, "dmScalFeeBaseInfo", "SCAL_FEE_CD", poResult.SCAL_FEE_CD);
					util.DataMap.setValue(app, "dmScalFeeBaseInfo", "OBJ_DIV_RCD", poResult.OBJ_DIV_RCD);
					
					//strCommand: checkValid 
					util.Submit.send(app, "subCheckValid", function(pbSuccess) {
						
						if(pbSuccess){
							var vbPass = util.DataMap.getValue(app, "dmChkValid", "strPass");
							if(vbPass == "Y"){
								if(util.isFunc(poCallbackFunc)) poCallbackFunc(true);
							} else {
								if(util.isFunc(poCallbackFunc)) poCallbackFunc(false);
							}
						}
					});
				};	
			
				/**
				 * doCalcScalFee 장학금액 계산
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doCalcScalFee(){
					var vbSuccess = true;
					
					// 장학금자동계산여부 (CH304)
					var vbAutoScalFeeCalc =  util.DataMap.getValue(app, "dmResOnload", "strAutoScalFeeCalc");
					if(vbAutoScalFeeCalc != "Y"){
						doSetDelFlag();
						return vbSuccess;
					}
					
					var vbScalFeeCd = util.FreeForm.getValue(app, "frfScalStud", "SCAL_FEE_CD");
					var vbSsObjDivRcd = util.FreeForm.getValue(app, "frfScalStud", "SS_OBJ_DIV_RCD");
					var vbSerialNo = util.FreeForm.getValue(app, "frfScalStud", "SERIAL_NO");
					
					util.DataMap.setValue(app, "dmReqKey", "strScalFeeCd", vbScalFeeCd);
					util.DataMap.setValue(app, "dmReqKey", "strSsObjDivRcd", vbSsObjDivRcd);
					util.DataMap.setValue(app, "dmReqKey", "strSerialNo", vbSerialNo);
					
					//장학금 지급 정보를 자동 생성합니다. (작업중인 지급 정보는 삭제처리 됩니다.)
					if (util.Msg.confirm("NLS-CRM-M033") !=  "1") {
						doSetDelFlag();
						return;
					}
					
					//신규로우 삭제
					var vnNewLength = ExtInstance.getNodeListLength("/root/resList/rptScalStudPmnt/row[child::UPT_STATUS='N']");
					if(vnNewLength > 0){
						util.Grid.deleteRow(app, "grdScalStudPmnt");
					}	
					
					//장학금지급코드
					util.DataMap.setValue(app, "dmReqKey", "strPmntCiiRcd", util.Control.getValue(app, "ipbFrfPmntCiiRcd"));
			
					ExtRepeat.setCRUDAttr("rptScalStudPmnt", "alltype", "true");
					//장학금자동계산 서브미션
					//strCommand: calcScalFee 
					util.Submit.send(app, "subCalcScalFee", function(pbSuccess) {
						if (pbSuccess) {
							ExtRepeat.setCRUDAttr("rptScalStudPmnt", "alltype", "false");
							
							util.Control.redraw(app, "grdScalStudPmnt");
							
							var vnCnt = util.Grid.getRowCount(app, "grdScalStudPmnt");
							for (var i = 1; i <= vnCnt; i++) {
								
								//기존로우들은 DEL, 신규자동 계산된 로우들은 INS
								var vsUptFlag = util.Grid.getCellValue(app, "grdScalStudPmnt", "UPT_FLAG", i);
								if(vsUptFlag == "DEL"){
									util.Grid.setCellValue(app, "grdScalStudPmnt", AppConstants.CUD_COL_REF, "D", i, false, true);
									util.Grid.setRowState(app, "grdScalStudPmnt", cpr.data.tabledata.RowState.DELETED, i);
								} else if (vsUptFlag == "INS"){
									util.Grid.setCellValue(app, "grdScalStudPmnt", "REMARK", util.FreeForm.getValue(app, "frfScalStud", "txtFrfRemark"), i);
									util.Grid.setCellValue(app, "grdScalStudPmnt", AppConstants.CUD_COL_REF, "N", i, false, true);
									util.Grid.setRowState(app, "grdScalStudPmnt", cpr.data.tabledata.RowState.INSERTED, i);
								}
							}
							
							doSetChangedSum();
							
							// 처리 결과 메시지 
							var vsMsg = util.DataMap.getValue(app, "dmResList", "strMsg");
							if(!ValueUtil.isNull(vsMsg)){
								util.Msg.alert("vsMsg");
							}
						}
					});
				};
			
				/**
				 * doSetDelFlag 기존로우를 삭제처리
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doSetDelFlag(){
					ExtRepeat.refresh("rptScalStudPmnt");
					
					//신규로우 삭제
					var vnNewLength = ExtInstance.getNodeListLength("/root/resList/rptScalStudPmnt/row[child::UPT_STATUS='N']");
					if(vnNewLength > 0){
						util.Grid.deleteRow(app, "grdScalStudPmnt");
					}	
					//기존로우 삭제 
					var vnCnt = util.Grid.getRowCount(app, "grdScalStudPmnt");
					for (var i = 1; i <=  util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
						util.Grid.setCellValue(app, "grdScalStudPmnt", AppConstants.CUD_COL_REF, "D", i, false, true);
						util.Grid.setRowState(app, "grdScalStudPmnt", cpr.data.tabledata.RowState.DELETED, i);
					}
					doSetChangedSum();
				};
			
				/**
				 * doSetChangedSum 장학생 지급내역의 금액을 프리폼 장학금금액에 셋팅한다.
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doSetChangedSum(){
					var vnSum = 0;
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
						var vbUptStatus = util.Grid.getRowState(app, "grdScalStudPmnt", i);
						
						if(vbUptStatus != "delete"){
							vnSum = vnSum + Number(util.Grid.getCellValue(app, "grdScalStudPmnt", "AMT", i));
						}
					}
					util.FreeForm.setValue(app, "frfScalStud", "SCAL_AMT", vnSum);
				};
			
				/**
				 * onClick_InputFrfHopeDeptNm 희망부서검색버튼클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnFrfHopeDeptPop = function(sender){
					doOnClickStdCmnPObjSch(sender);
				};
			
				/**
				 * onValueChage_InputFrfHopeDeptNm 희망부서변경이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */
				moPage.onValueChage_InputFrfHopeDeptNm = function(sender){
					doOnChangeStdCmnPObjSch(sender);
				};
			
				/**
				 * onClick_BtnFrfStudPop 근로부서검색버튼클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnFrfWrkDeptPop = function(sender){
					doOnClickStdCmnPObjSch(sender);
				};
			
				/**
				 * onValueChage_InputFrfStudId 근로부서변경이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onValueChage_InputFrfWrkDeptNm = function(sender){
					doOnChangeStdCmnPObjSch(sender);
				};	
			
			
			
				/**
				 * doResetAll 프리폼, 리피트 초기화 및 신규상태롤 셋팅
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doResetAll(){
					// 초기화
					util.Control.reset(app, "rptScalStudPmnt");
					util.FreeForm.insertRow(app, "frfScalStud");
					// 지긊기준금액 초기화
					ExtInstance.reset("","/root/resList/listPmntAmtCii", true);
					// 학생계좌번호 초기화
					ExtInstance.reset("","/root/resList/studBankInfo", true);
					
					util.Control.setEnable(app, false, maStudId);
				};
			
				
				/**
				 * doClearScaFeeInfo 장학금정보 초기화
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doClearScaFeeInfo(){
					util.FreeForm.setValue(app, "frfScalStud", "SCAL_FEE_CD", "", false);
					util.FreeForm.setValue(app, "frfScalStud", "SCAL_FEE_NM", "", false);
					util.FreeForm.setValue(app, "frfScalStud", "SS_OBJ_DIV_RCD", "", false);
					util.FreeForm.setValue(app, "frfScalStud", "PMNT_DIV_RCD", "", false);
					util.FreeForm.setValue(app, "frfScalStud", "PMNT_ITV_RCD", "", false);
					
					// 지긊기준금액 초기화
					ExtInstance.reset("","/root/resList/listPmntAmtCii", true);
				};
			
				/**
				 * onClick_BtnNew 신규버튼 클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnNew = function(){
					// 장학금명 입력여부
					var vsScalFeeCd = util.FreeForm.getValue(app, "frfScalStud", "SCAL_FEE_CD");								
					if(ValueUtil.isNull(vsScalFeeCd)){
						util.Msg.alert("NLS-INF-M017", [ExtControl.getTextValue("lblFrfScalFeeNm")]);
						util.Control.setFocus(app, "ipbFrfScalFeeNm");
						return;
					}
					
					var vnNewRow = util.Grid.insertRow(app, "grdScalStudPmnt", "rdCbbFnreDivRcd");
					
					var voScalStudDtlParam = moScalStudDtlParam;
					util.Grid.setCellValue(app, "grdScalStudPmnt", "STUD_ID", voScalStudDtlParam.studId, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "SCH_YEAR_RCD", voScalStudDtlParam.schYearRcd, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "SMT_RCD", voScalStudDtlParam.smtRcd, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "SERIAL_NO", voScalStudDtlParam.serialNo, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "PROC_TYPE_RCD", "CH303PMT", vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "PMNT_SERIAL_NO", doGetNewPmntSerialNo(), vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "REMARK", util.FreeForm.getValue(app, "frfScalStud", "txtFrfRemark"), vnNewRow);
					
					var vsStudBankRcd = util.DataMap.getValue(app, "dmStudBankInfo", "strBankRcd");
					var vsStudAcctNo = util.DataMap.getValue(app, "dmStudBankInfo", "strAcctNo");
					var vsOwnerNm = util.DataMap.getValue(app, "dmStudBankInfo", "strOwnerNm");
					
					util.Grid.setCellValue(app, "grdScalStudPmnt", "STUD_BANK_CD", vsStudBankRcd, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "STUD_ACCT_NO", vsStudAcctNo, vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudPmnt", "OWNER_NM", vsOwnerNm, vnNewRow);
				};
			
				/**
				 * doGetNewPmntSerialNo 장학생지급-Max(지긊순번) 구하기
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doGetNewPmntSerialNo(){
					var vnMaxPmntSerialNo = 0;
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
						var vnPmntSerialNo = Number(util.Grid.getCellValue(app, "grdScalStudPmnt", "PMNT_SERIAL_NO", i));
						if(vnMaxPmntSerialNo < vnPmntSerialNo){
							vnMaxPmntSerialNo = vnPmntSerialNo;
						}
					}
					return ++vnMaxPmntSerialNo;
				};
			
				/**
				 * onClick_BtnNew 삭제버튼 클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnDel = function(){
					//리피트 row 선택여부 체크
					var vnOrgRowIdx = util.Grid.getIndex(app, "grdScalStudPmnt");
					if(vnOrgRowIdx == "0"){
						var vsMsgParam = util.Grid.getTitle(app, "grdScalStudPmntScalStudPmnt");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}
					
					//선택한 자료의 품의번호 존재시 삭제불가
					var vsBillNo = util.Grid.getCellValue(app, "grdScalStudPmnt", "BILL_NO", vnOrgRowIdx);
					if(!ValueUtil.isNull(vsBillNo)){
						//결의된 지급내역입니다. 삭제가 불가능합니다.
						util.Msg.alert("NLS-CSS-M087");
						return false;
					}
					
					var vsDivPayNo =  util.Grid.getCellValue(app, "grdScalStudPmnt", "DIV_PAY_NO", vnOrgRowIdx);
					var vsPayGrpKey = util.Grid.getCellValue(app, "grdScalStudPmnt", "PAY_GRP_KEY", vnOrgRowIdx);
					
					if(ValueUtil.isNull(vsDivPayNo) && ValueUtil.isNull(vsPayGrpKey)){
						util.Grid.deleteRow(app, "grdScalStudPmnt");
					} else {
						// 삭제할 수 없습니다.
						util.Msg.alert("NLS-CSS-M055");
					}
					
					doSetChangedSum();
				};
			
				/**
				 * onClick_BtnNew 작업취소버튼 클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onClick_BtnRestore = function(){
					util.Grid.restoreRow(app, "grdScalStudPmnt");
				};
			
				 /**
				 * onClick_BtnSave 작업저장버튼 클릭이벤트
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */
				moPage.onClick_BtnSave = function(){
					// 변경사항 체크
					if(!util.Grid.isModified(app, ["frfScalStud","grdScalStudPmnt"], "MSG")){
						app.close();
						return;
					}
					
			//		// 지급구분이 단위계산
			//		var vsPmntCiiRcd = ExtControl.getValue("ipbFrfPmntCiiRcd");
			//		var vaUnitCtrl = ["rdIpbCiiVal", "rdCbbUnitRcd", "rdIpbUnitCalcVal"];
			//		
			//		//지급기준코드가 단위계산일경우 단위코드, 단위계산값, 기준값 필수항목 셋팅
			//		if(vsPmntCiiRcd == "CH201UNT"){
			//			ExtControl.setAttr(vaUnitCtrl, "udattr", "notNull=yes");
			//		}else{
			//			ExtControl.setAttr(vaUnitCtrl, "udattr", "");
			//		}	
					
					// Validation Check
					if(!util.validate(app, ["frfScalStud","grdScalStudPmnt"])) return false;
					
					// 근로기간 정합성 체크
					if(!docheckWrkDt()) return false;
					
					// 지급구분이 '사전감면'인 경우 등록금 항목 필수입력체크
					// 지급기준이 '단위'인 경우 기준값,단위,단위계산값 필수입력체크
					if(!doCheckItemCdNullable()) return false;
					
					// 처리예정일이 있으면 금액이 > 0 이어야 함
					if(!doCheckAmt()) return false;
					
					// 저장서브미션
					//strCommand: savePmnt 
					util.Submit.send(app, "subSave", function(pbSuccess) {
								
						if(pbSuccess){
							
							if(ExtPopUp.isPopUp()){
								ExtPopUp.getParentScript("setParentMsg", NLS.INF.M001);
								ExtPopUp.closeLayeredPopup("doList", null);
							}	
						}
					});
				};
			
				/**
				 * docheckWrkDt 근로기간 적합성 체크
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function docheckWrkDt(){
					var vsWrkStDt = util.FreeForm.getValue(app, "frfScalStud", "WRK_ST_DT");
					var vsWrkEndDt = util.FreeForm.getValue(app, "frfScalStud", "WRK_END_DT");
					
					if ((!ValueUtil.isNull(vsWrkStDt)) && (!ValueUtil.isNull(vsWrkEndDt))) {
						if(vsWrkStDt > vsWrkEndDt){
							//근로기간의 시작일이 종료일보다 큽니다.
							util.Msg.alert("NLS-CSS-M058");				
							return false;
						}
					} else if (ValueUtil.isNull(vsWrkStDt) && (!ValueUtil.isNull(vsWrkEndDt))) {
						//근로기간에서 종료일만 입력될 수 없습니다.
						util.Msg.alert("NLS-CSS-M059");
						return false;
					} else if ((!ValueUtil.isNull(vsWrkStDt)) && (ValueUtil.isNull(vsWrkEndDt))) {
						//근로기간의 시작일만 입력될 수 없습니다.
						util.Msg.alert("NLS-CSS-M060");
						return false;
					}
					
					return true;
				};
			
				/**
				 * doCheckItemCdNullable 사전감면의 경우 등록금항목 필수 입력여부 체크
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doCheckItemCdNullable(){
					if(util.FreeForm.getValue(app, "frfScalStud", "PMNT_DIV_RCD") == "CH001BEF"){
						
						for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
							
							var vbItemCd = util.Grid.getCellValue(app, "grdScalStudPmnt", "ITEM_CD", i);
							var vbUptStatus = util.Grid.getRowState(app, "grdScalStudPmnt", i);
							if(vbUptStatus != "delete" && (ValueUtil.isNull(vbItemCd))){
								//장학생 지급의 @1번째 데이타에서 항목은(는) 필수 입력항목입니다.
								util.Msg.alert("NLS-CSS-M069", [i+""]);
								ExtRepeat.setColFocus("rptScalStudPmnt", i, "rdCbbItemCd");
								return false;
							}
						}
					}
					
					var vnUntCnt = ExtInstance.getNodeListLength("/root/resList/listPmntAmtCii/row[child::PMNT_CII_RCD='CH201UNT']");
					if(vnUntCnt > 0){
						var vsTitleNm = util.Grid.getTitle(app, "grdScalStudPmntScalStudPmnt");
						for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
							
							var vsCiiVal = util.Grid.getCellValue(app, "grdScalStudPmnt", "CII_VAL", i);
							var vsUnitVal = util.Grid.getCellValue(app, "grdScalStudPmnt", "UNIT_CALC_VAL", i);
							var vsUnitRcd = util.Grid.getCellValue(app, "grdScalStudPmnt", "UNIT_RCD", i);
							
							var vbUptStatus = util.Grid.getRowState(app, "grdScalStudPmnt", i);
							if(vbUptStatus != "delete"){
								//기준값
								if(ValueUtil.isNull(vsCiiVal)){
									//장학생 지급의 @1번째 데이타에서 항목은(는) 필수 입력항목입니다.
									util.Msg.alert("NLS-CSS-M091", [vsTitleNm, i+"", NLS.NSCR.STDVAL]);
									ExtRepeat.setColFocus("rptScalStudPmnt", i, "rdIpbCiiVal");
									return false;
								}
								
								//단위
								if(ValueUtil.isNull(vsUnitRcd)){
									//장학생 지급의 @1번째 데이타에서 항목은(는) 필수 입력항목입니다.
									util.Msg.alert("NLS-CSS-M091", [vsTitleNm, i+"", NLS.NSCR.UNIT]);
									ExtRepeat.setColFocus("rptScalStudPmnt", i, "rdCbbUnitRcd");
									return false;
								}
								
								//단위계산값
								if(ValueUtil.isNull(vsUnitVal)){
									//장학생 지급의 @1번째 데이타에서 항목은(는) 필수 입력항목입니다.
									util.Msg.alert("NLS-CSS-M091", [vsTitleNm, i+"", NLS.NSCR.UNITCALVAL]);
									ExtRepeat.setColFocus("rptScalStudPmnt", i, "rdIpbUnitCalcVal");
									return false;
								}
							}
						}
					}	
					
					return true;
				};
			
				/**
				 * doCheckAmt 처리예정일이 있으면 금액이 > 0 이어야 함
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				function doCheckAmt(){
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudPmnt"); i++) {
						var vbAmt = util.Grid.getCellValue(app, "grdScalStudPmnt", "AMT", i);
						var vsProcPlanDt = util.Grid.getCellValue(app, "grdScalStudPmnt", "PROC_PLAN_DT", i);
						
						if(!ValueUtil.isNull(vsProcPlanDt)){
							var vbUptStatus = util.Grid.getRowState(app, "grdScalStudPmnt", i);
							if(vbUptStatus != "delete" && vbAmt <= 0){
								//장학금지급의 @1번째 데이타에서 금액은 0보다 커야 합니다.
								util.Msg.alert("NLS-CSS-M057", [i+""]);
								ExtRepeat.setColFocus("rptScalStudPmnt", i, "rdIpbAmt");
								return false;
							}
						}
					}
					return true;
				};
			
				/**
				 * onValueChanged_RptScalStudPmnt 장학생 지급 
					- 장학금지급금액기준이 '단위계산'일 경우 단위계산값 * 기준값 = 금액 셋팅
					- 장학금지급금액의 총금액을 장학생의 장학금액에 셋팅
				 * @member stdCssCScalStudDtl
				 * @type void
				 * @author AeyoungLee 2016. 2. 23.
				 */	
				moPage.onValueChanged_RptScalStudPmnt = function(psColDiv){
					var vnIdx = util.Grid.getIndex(app, "grdScalStudPmnt");
					//최초 조회한 지급내역테이블에서 단위계산이 한개라도 있을경우 모두 단위계산으로 인식.
					var vnUnitNodeLength = ExtInstance.getNodeListLength("/root/resList/listPmntAmtCii/row[child::PMNT_CII_RCD='CH201UNT']");
					
					if(psColDiv == "UNIT_CALC_VAL" || psColDiv == "CII_VAL"){
						if(vnUnitNodeLength > 0){
							var vbUnitCalcVal = Number(util.Grid.getCellValue(app, "grdScalStudPmnt", "UNIT_CALC_VAL", vnIdx));
							var vbCiiVal = Number(util.Grid.getCellValue(app, "grdScalStudPmnt", "CII_VAL", vnIdx));
							util.Grid.setCellValue(app, "grdScalStudPmnt", "AMT", vbUnitCalcVal * vbCiiVal, vnIdx);
						}	
					}
					
					doSetChangedSum();
				};
			
				
				
				moPage.onRowSelect_RptScalStudPmnt = function() {
			//TO-BE: <ExtControl.refreshBind> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtControl.refreshBind("binRoPmntCiiUnit");
				};
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListFnreDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListStudBank");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD_NM"},
					{"name": "CD"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListPmntDiv");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListPmntItv");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListProcStat");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsListUnitRcd");
			dataSet_6.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			
			var dataSet_7 = new cpr.data.DataSet("dsListWrkEval");
			dataSet_7.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_7);
			
			var dataSet_8 = new cpr.data.DataSet("dsListItem");
			dataSet_8.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_8);
			
			var dataSet_9 = new cpr.data.DataSet("dsScalStudPmnt");
			dataSet_9.parseData({
				"info": "CSS_SCAL_STUD_PMNT@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO,PROC_TYPE_RCD,PMNT_SERIAL_NO",
				"columns": [
					{"name": "PMNT_SERIAL_NO"},
					{"name": "FNRE_DIV_RCD"},
					{"name": "ITEM_CD"},
					{"name": "CII_VAL"},
					{"name": "UNIT_RCD"},
					{"name": "UNIT_CALC_VAL"},
					{"name": "UNIT_ALOT_VAL"},
					{"name": "AMT"},
					{"name": "PROC_PLAN_DT"},
					{"name": "PROC_DT"},
					{"name": "STUD_BANK_CD"},
					{"name": "STUD_ACCT_NO"},
					{"name": "OWNER_NM"},
					{"name": "REMARK"},
					{"name": "DIV_PAY_NO"},
					{"name": "PAY_GRP_KEY"},
					{"name": "PROC_TYPE_RCD"},
					{"name": "BILL_NO"},
					{"name": "STUD_ID"},
					{"name": "SMT_RCD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "REF_KEY"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "PMNT_CII_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "UPT_FLAG"}
				],
				"rows": []
			});
			app.register(dataSet_9);
			
			var dataSet_10 = new cpr.data.DataSet("dsListScalStud");
			dataSet_10.parseData({
				"columns": [
					{"name": "STUD_NO"},
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "PROC_STAT_RCD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "REQ_DT"},
					{"name": "CNFM_DT"},
					{"name": "CANCEL_DT"},
					{"name": "REQ_DESC"},
					{"name": "REMARK"},
					{"name": "CANCEL_DESC"},
					{"name": "HOPE_OG_OBJ_DIV_RCD"},
					{"name": "HOPE_WRK_DEPT_CD"},
					{"name": "HOPE_WRK_DEPT_NM"},
					{"name": "WRK_CHAG_OPRT"},
					{"name": "WRK_EVAL_RCD"},
					{"name": "OG_OBJ_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "WRK_END_DT"},
					{"name": "WRK_DEPT_NM"},
					{"name": "REF_KEY"},
					{"name": "WRK_DEPT_CD"},
					{"name": "WRK_ST_DT"},
					{"name": "STUD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_10);
			
			var dataSet_11 = new cpr.data.DataSet("dsFrfScalStud");
			dataSet_11.parseData({
				"columns": [
					{"name": "STUD_NO"},
					{"name": "STUD_ID"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "SMT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SS_OBJ_DIV_RCD"},
					{"name": "SCAL_AMT"},
					{"name": "PROC_STAT_RCD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "REQ_DT"},
					{"name": "CNFM_DT"},
					{"name": "CANCEL_DT"},
					{"name": "REQ_DESC"},
					{"name": "REMARK"},
					{"name": "CANCEL_DESC"},
					{"name": "HOPE_OG_OBJ_DIV_RCD"},
					{"name": "HOPE_WRK_DEPT_CD"},
					{"name": "HOPE_WRK_DEPT_NM"},
					{"name": "WRK_CHAG_OPRT"},
					{"name": "WRK_EVAL_RCD"},
					{"name": "OG_OBJ_DIV_RCD"},
					{"name": "UPD_USER_ID"},
					{"name": "WRK_END_DT"},
					{"name": "WRK_DEPT_NM"},
					{"name": "REF_KEY"},
					{"name": "WRK_DEPT_CD"},
					{"name": "WRK_ST_DT"},
					{"name": "STUD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_11);
			
			var dataSet_12 = new cpr.data.DataSet("dsListPmntAmtCii");
			dataSet_12.parseData({
				"columns": [
					{"name": "PMNT_CII_RCD"},
					{"name": "FNRE_DIV_RCD"},
					{"name": "CII_VAL"},
					{"name": "SCAL_FEE_CD"},
					{"name": "UNIT_RCD"},
					{"name": "ITEM_CD"}
				],
				"rows": []
			});
			app.register(dataSet_12);
			
			var dataSet_13 = new cpr.data.DataSet("dsListResult");
			dataSet_13.parseData({
				"columns": [
					{"name": "MSG"},
					{"name": "NUMBER"}
				],
				"rows": []
			});
			app.register(dataSet_13);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strProgMode",
						"dataType": "string"
					},
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					},
					{
						"name": "strSerialNo",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					},
					{
						"name": "strStudNm",
						"dataType": "string"
					},
					{
						"name": "strOgObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strWrkDeptCd",
						"dataType": "string"
					},
					{
						"name": "strSsObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strPmntCiiRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmScalFeeBaseInfo");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "ST_DT",
						"dataType": "string"
					},
					{
						"name": "END_DT",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_NM",
						"dataType": "string"
					},
					{
						"name": "OBJ_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "LAN_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SHORT_NM",
						"dataType": "string"
					},
					{
						"name": "PRT_SCAL_FEE_NM",
						"dataType": "string"
					},
					{
						"name": "DEPT_OBJ_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "DEPT_CD",
						"dataType": "string"
					},
					{
						"name": "MNG_DEPT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FNDTN_CD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CLS1_RCD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CLS2_RCD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CLS3_RCD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CLS4_RCD",
						"dataType": "string"
					},
					{
						"name": "SCAL_FEE_CLS5_RCD",
						"dataType": "string"
					},
					{
						"name": "REF_KEY",
						"dataType": "string"
					},
					{
						"name": "WRK_SCAL_YN",
						"dataType": "string"
					},
					{
						"name": "DUP_PMNT_YN",
						"dataType": "string"
					},
					{
						"name": "CNTI_SCAL_YN",
						"dataType": "string"
					},
					{
						"name": "PMNT_CNT",
						"dataType": "string"
					},
					{
						"name": "CERT_SHEET_NPRT_YN",
						"dataType": "string"
					},
					{
						"name": "STUD_REQ_YN",
						"dataType": "string"
					},
					{
						"name": "PMNT_ITV_RCD",
						"dataType": "string"
					},
					{
						"name": "PMNT_DIV_RCD",
						"dataType": "string"
					},
					{
						"name": "PRT_ORD",
						"dataType": "string"
					},
					{
						"name": "DESC1",
						"dataType": "string"
					},
					{
						"name": "DESC2",
						"dataType": "string"
					},
					{
						"name": "DESC3",
						"dataType": "string"
					},
					{
						"name": "DESC4",
						"dataType": "string"
					},
					{
						"name": "DESC5",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOnload");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strAutoScalFeeCalc",
						"dataType": "string"
					},
					{
						"name": "strDefLanDivRcd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmStudBankInfo");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strOwnerNm",
						"dataType": "string"
					},
					{
						"name": "strBankRcd",
						"dataType": "string"
					},
					{
						"name": "strAcctNo",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmChkValid");
			dataMap_5.parseData({
				"columns" : [{
					"name": "strPass",
					"dataType": "string"
				}]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmResList");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strDivOrPay",
						"dataType": "string"
					},
					{
						"name": "strMsg",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalStudDtl/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_6, false);
			submission_1.addResponseData(dataSet_7, false);
			submission_1.addResponseData(dataSet_8, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subSerialNo");
			submission_2.action = "/css/StdCssScalStudDtl/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataMap_1, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subScalStud");
			submission_3.action = "/css/StdCssScalStudDtl/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataMap_1);
			submission_3.addResponseData(dataSet_10, false);
			submission_3.addResponseData(dataSet_9, false);
			submission_3.addResponseData(dataMap_6, false);
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subCheckValid");
			submission_4.action = "/css/StdCssScalStudDtl/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addRequestData(dataMap_2);
			submission_4.addRequestData(dataMap_1);
			submission_4.addResponseData(dataSet_13, false);
			submission_4.addResponseData(dataMap_5, false);
			app.register(submission_4);
			
			var submission_5 = new cpr.protocols.Submission("subCalcScalFee");
			submission_5.action = "/css/StdCssScalStudDtl/";
			submission_5.mediaType = "application/x-www-form-urlencoded";
			submission_5.addRequestData(dataMap_1);
			submission_5.addRequestData(dataSet_9);
			submission_5.addResponseData(dataSet_9, false);
			submission_5.addResponseData(dataMap_6, false);
			app.register(submission_5);
			
			var submission_6 = new cpr.protocols.Submission("subScalFeeEtcInfo");
			submission_6.action = "/css/StdCssScalStudDtl/";
			submission_6.mediaType = "application/x-www-form-urlencoded";
			submission_6.addRequestData(dataMap_1);
			submission_6.addResponseData(dataSet_12, false);
			app.register(submission_6);
			
			var submission_7 = new cpr.protocols.Submission("subStudBankInfo");
			submission_7.action = "/css/StdCssScalStudDtl/";
			submission_7.mediaType = "application/x-www-form-urlencoded";
			submission_7.addRequestData(dataMap_1);
			submission_7.addResponseData(dataMap_4, false);
			app.register(submission_7);
			
			var submission_8 = new cpr.protocols.Submission("subSave");
			submission_8.action = "/css/StdCssScalStudDtl/";
			submission_8.mediaType = "application/x-www-form-urlencoded";
			submission_8.addRequestData(dataSet_11);
			submission_8.addRequestData(dataSet_9);
			submission_8.addRequestData(dataMap_1);
			app.register(submission_8);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_rptFndtnSch");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("NLS-SCR-REGFEEFNDTNLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "256px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScalStudPmnt");
				grid_1.init({
					"dataSet": app.lookup("dsScalStudPmnt"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "70px"},
						{"width": "89px"},
						{"width": "104px"},
						{"width": "87px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "120px"},
						{"width": "90px"},
						{"width": "144px"},
						{"width": "130px"},
						{"width": "130px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-FNDTNNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHAG_DEPT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-DB-CHARGER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "PMNT_SERIAL_NO";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "FNRE_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdCbbFnreDivRcd");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
											comboBox_1.setItemSet(app.lookup("dsListFnreDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("FNRE_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbItemCd");
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListItem"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("ITEM_CD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "CII_VAL";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbCiiVal");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999,999,999,999";
										numberEditor_1.bind("value").toDataColumn("CII_VAL");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "UNIT_RCD";
									cell.control = (function(){
										var comboBox_3 = new cpr.controls.ComboBox("gdCbbUnitRcd");
										(function(comboBox_3){
											comboBox_3.setItemSet(app.lookup("dsListUnitRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_3);
										comboBox_3.bind("value").toDataColumn("UNIT_RCD");
										return comboBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "UNIT_CALC_VAL";
									cell.control = (function(){
										var numberEditor_2 = new cpr.controls.NumberEditor("gdIpbUnitCalcVal");
										numberEditor_2.spinButton = false;
										numberEditor_2.format = "999,999,999,999";
										numberEditor_2.bind("value").toDataColumn("UNIT_CALC_VAL");
										return numberEditor_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var numberEditor_3 = new cpr.controls.NumberEditor("gdIpbAmt");
										numberEditor_3.spinButton = false;
										numberEditor_3.format = "999,999,999,999";
										numberEditor_3.bind("value").toDataColumn("AMT");
										return numberEditor_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PROC_PLAN_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipProcPlanDt");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.style.css({
											"text-align" : "center"
										});
										dateInput_1.bind("value").toDataColumn("PROC_PLAN_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipProcDt");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.style.css({
											"text-align" : "center"
										});
										dateInput_2.bind("value").toDataColumn("PROC_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "STUD_BANK_CD";
									cell.control = (function(){
										var comboBox_4 = new cpr.controls.ComboBox("gdCbbStudBankCd");
										(function(comboBox_4){
											comboBox_4.setItemSet(app.lookup("dsListStudBank"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_4);
										comboBox_4.bind("value").toDataColumn("STUD_BANK_CD");
										return comboBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "STUD_ACCT_NO";
									cell.control = (function(){
										var numberEditor_4 = new cpr.controls.NumberEditor("gdIpbStudAcctNo");
										numberEditor_4.spinButton = false;
										numberEditor_4.format = "999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999,999";
										numberEditor_4.bind("value").toDataColumn("STUD_ACCT_NO");
										return numberEditor_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 13},
								"configurator": function(cell){
									cell.columnName = "OWNER_NM";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbOwnerNm");
										inputBox_1.maxLength = 100;
										inputBox_1.bind("value").toDataColumn("OWNER_NM");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 14},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_2.maxLength = 1000;
										inputBox_2.bind("value").toDataColumn("REMARK");
										return inputBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 15},
								"configurator": function(cell){
									cell.columnName = "DIV_PAY_NO";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 16},
								"configurator": function(cell){
									cell.columnName = "PAY_GRP_KEY";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 17},
								"configurator": function(cell){
									cell.columnName = "BILL_NO";
								}
							}
						]
					}
				});
				if(typeof onGrdScalStudPmntSelectionChange == "function") {
					grid_1.addEventListener("selection-change", onGrdScalStudPmntSelectionChange);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "790px",
					"height": "210px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEWREG");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "542px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-REGCHG");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "607px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-REGCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "672px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "737px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "326px",
				"left": "5px",
				"width": "802px",
				"height": "246px"
			});
			
			var group_2 = new cpr.controls.Container("grp_frfScalStud");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var group_3 = new cpr.controls.Container("frfScalStud");
				group_3.style.setClasses(["form-box"]);
				// Layout
				var xYLayout_4 = new cpr.controls.layouts.XYLayout();
				group_3.setLayout(xYLayout_4);
				(function(container){
					var inputBox_3 = new cpr.controls.InputBox("ipbFrfScalFeeNm");
					inputBox_3.maxLength = 200;
					inputBox_3.userAttr({"require": "Y"});
					inputBox_3.bind("fieldLabel").toExpression("#optFrfScalFeeNm.value");
					inputBox_3.bind("value").toDataMap(app.lookup("dmRow"), "SCAL_FEE_NM");
					if(typeof onIpbFrfScalFeeNmValueChange == "function") {
						inputBox_3.addEventListener("value-change", onIpbFrfScalFeeNmValueChange);
					}
					container.addChild(inputBox_3, {
						"top": "30px",
						"left": "366px",
						"width": "149px",
						"height": "25px"
					});
					var output_2 = new cpr.controls.Output("optFrfStudId");
					output_2.value = "";
					output_2.style.setClasses(["require"]);
					output_2.bind("value").toLanguage("UI-DB-ST_DT");
					container.addChild(output_2, {
						"top": "5px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_3 = new cpr.controls.Output("optFrfStudNm");
					output_3.value = "";
					output_3.bind("value").toLanguage("UI-DB-END_DT");
					container.addChild(output_3, {
						"top": "5px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var dateInput_3 = new cpr.controls.DateInput("dipFrfReqDt");
					dateInput_3.maxDate = new Date(9999, 11, 31);
					dateInput_3.style.css({
						"text-align" : "center"
					});
					dateInput_3.bind("fieldLabel").toExpression("#optFrfReqDt.value");
					dateInput_3.bind("value").toDataMap(app.lookup("dmRow"), "REQ_DT");
					container.addChild(dateInput_3, {
						"top": "80px",
						"left": "90px",
						"width": "150px",
						"height": "25px"
					});
					var output_4 = new cpr.controls.Output("optFrfProcStatRcd");
					output_4.value = "";
					output_4.style.setClasses(["require"]);
					output_4.bind("value").toLanguage("UI-DB-SCAL_FEE_NM");
					container.addChild(output_4, {
						"top": "55px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_4 = new cpr.controls.InputBox("ipbFrfSerialNo");
					inputBox_4.enabled = false;
					inputBox_4.maxLength = 10;
					inputBox_4.bind("fieldLabel").toExpression("#optFrfSerialNo.value");
					inputBox_4.bind("value").toDataMap(app.lookup("dmRow"), "SERIAL_NO");
					container.addChild(inputBox_4, {
						"top": "30px",
						"left": "91px",
						"width": "149px",
						"height": "25px"
					});
					var output_5 = new cpr.controls.Output("optFrfSerialNo");
					output_5.value = "";
					output_5.style.setClasses(["require"]);
					output_5.bind("value").toLanguage("UI-DB-SCAL_FEE_CD");
					container.addChild(output_5, {
						"top": "30px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var textArea_1 = new cpr.controls.TextArea("txtFrfReqDesc");
					textArea_1.maxLength = 1000;
					textArea_1.bind("fieldLabel").toExpression("#optFrfReqDesc.value");
					textArea_1.bind("value").toDataMap(app.lookup("dmRow"), "REQ_DESC");
					container.addChild(textArea_1, {
						"top": "105px",
						"left": "90px",
						"width": "700px",
						"height": "35px"
					});
					var output_6 = new cpr.controls.Output("optFrfReqDt");
					output_6.value = "";
					output_6.bind("value").toLanguage("UI-GLS-SHORT_NM");
					container.addChild(output_6, {
						"top": "80px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var output_7 = new cpr.controls.Output("optFrfReqDesc");
					output_7.value = "";
					output_7.bind("value").toLanguage("UI-SCR-PRTNAME");
					container.addChild(output_7, {
						"top": "105px",
						"left": "5px",
						"width": "80px",
						"height": "35px"
					});
					var output_8 = new cpr.controls.Output("optFrfRemark");
					output_8.value = "";
					output_8.bind("value").toLanguage("UI-SCR-SCRSDIV1");
					container.addChild(output_8, {
						"top": "145px",
						"left": "5px",
						"width": "80px",
						"height": "35px"
					});
					var output_9 = new cpr.controls.Output("optFrfCancelDesc");
					output_9.value = "";
					output_9.bind("value").toLanguage("UI-SCR-SCRSDIV2");
					container.addChild(output_9, {
						"top": "185px",
						"left": "5px",
						"width": "80px",
						"height": "35px"
					});
					var output_10 = new cpr.controls.Output("optFrfScalFeeNm");
					output_10.value = "";
					output_10.style.setClasses(["require"]);
					output_10.bind("value").toLanguage("UI-GLS-OG");
					container.addChild(output_10, {
						"top": "30px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_5 = new cpr.controls.InputBox("ipbFrfStudNm");
					inputBox_5.enabled = false;
					inputBox_5.readOnly = true;
					inputBox_5.bind("fieldLabel").toExpression("#optFrfStudNm.value");
					inputBox_5.bind("value").toDataMap(app.lookup("dmRow"), "STUD_NM");
					container.addChild(inputBox_5, {
						"top": "5px",
						"left": "366px",
						"width": "150px",
						"height": "25px"
					});
					var output_11 = new cpr.controls.Output("optFrfPmntDivRcd");
					output_11.value = "";
					output_11.style.setClasses(["require"]);
					output_11.bind("value").toLanguage("UI-SCR-PMNTDIV");
					container.addChild(output_11, {
						"top": "55px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var output_12 = new cpr.controls.Output("optFrfCnfmDt");
					output_12.value = "";
					output_12.bind("value").toLanguage("UI-SCR-SCRSFNDTN");
					container.addChild(output_12, {
						"top": "80px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var textArea_2 = new cpr.controls.TextArea("txtFrfRemark");
					textArea_2.maxLength = 1000;
					textArea_2.bind("fieldLabel").toExpression("#optFrfRemark.value");
					textArea_2.bind("value").toDataMap(app.lookup("dmRow"), "REMARK");
					container.addChild(textArea_2, {
						"top": "145px",
						"left": "90px",
						"width": "700px",
						"height": "35px"
					});
					var comboBox_5 = new cpr.controls.ComboBox("cbbFrfProcStatRcd");
					comboBox_5.userAttr({"require": "Y"});
					comboBox_5.bind("fieldLabel").toExpression("#optFrfProcStatRcd.value");
					comboBox_5.bind("value").toDataMap(app.lookup("dmRow"), "PROC_STAT_RCD");
					(function(comboBox_5){
						comboBox_5.setItemSet(app.lookup("dsListProcStat"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_5);
					container.addChild(comboBox_5, {
						"top": "55px",
						"left": "90px",
						"width": "150px",
						"height": "25px"
					});
					var textArea_3 = new cpr.controls.TextArea("txtFrfCancelDesc");
					textArea_3.maxLength = 1000;
					textArea_3.bind("fieldLabel").toExpression("#optFrfCancelDesc.value");
					textArea_3.bind("value").toDataMap(app.lookup("dmRow"), "CANCEL_DESC");
					container.addChild(textArea_3, {
						"top": "185px",
						"left": "90px",
						"width": "700px",
						"height": "35px"
					});
					var button_5 = new cpr.controls.Button("btnFrfStudPop");
					button_5.value = "";
					button_5.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfStudPopClick == "function") {
						button_5.addEventListener("click", onBtnFrfStudPopClick);
					}
					container.addChild(button_5, {
						"top": "5px",
						"left": "241px",
						"width": "20px",
						"height": "25px"
					});
					var button_6 = new cpr.controls.Button("btnFrfScalFeePop");
					button_6.value = "";
					button_6.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfScalFeePopClick == "function") {
						button_6.addEventListener("click", onBtnFrfScalFeePopClick);
					}
					container.addChild(button_6, {
						"top": "30px",
						"left": "515px",
						"width": "20px",
						"height": "25px"
					});
					var inputBox_6 = new cpr.controls.InputBox("ipbFrfStudId");
					inputBox_6.maxLength = 20;
					inputBox_6.userAttr({"require": "Y"});
					inputBox_6.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_6.bind("value").toDataMap(app.lookup("dmRow"), "STUD_NO");
					if(typeof onIpbFrfStudIdValueChange == "function") {
						inputBox_6.addEventListener("value-change", onIpbFrfStudIdValueChange);
					}
					container.addChild(inputBox_6, {
						"top": "5px",
						"left": "91px",
						"width": "149px",
						"height": "25px"
					});
					var dateInput_4 = new cpr.controls.DateInput("dipFrfCnfmDt");
					dateInput_4.maxDate = new Date(9999, 11, 31);
					dateInput_4.style.css({
						"text-align" : "center"
					});
					dateInput_4.bind("fieldLabel").toExpression("#optFrfCnfmDt.value");
					dateInput_4.bind("value").toDataMap(app.lookup("dmRow"), "CNFM_DT");
					container.addChild(dateInput_4, {
						"top": "80px",
						"left": "365px",
						"width": "150px",
						"height": "25px"
					});
					var comboBox_6 = new cpr.controls.ComboBox("cbbFrfPmntDivRcd");
					comboBox_6.userAttr({"require": "Y"});
					comboBox_6.bind("fieldLabel").toExpression("#optFrfPmntDivRcd.value");
					comboBox_6.bind("value").toDataMap(app.lookup("dmRow"), "PMNT_DIV_RCD");
					(function(comboBox_6){
						comboBox_6.setItemSet(app.lookup("dsListPmntDiv"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_6);
					container.addChild(comboBox_6, {
						"top": "55px",
						"left": "365px",
						"width": "150px",
						"height": "25px"
					});
					var output_13 = new cpr.controls.Output("optFrfCancelDt");
					output_13.value = "";
					output_13.bind("value").toLanguage("UI-SCR-SCRSFNDTN");
					container.addChild(output_13, {
						"top": "80px",
						"left": "555px",
						"width": "80px",
						"height": "25px"
					});
					var output_14 = new cpr.controls.Output("optFrfPmntItvRcd");
					output_14.value = "";
					output_14.style.setClasses(["require"]);
					output_14.bind("value").toLanguage("UI-SCR-PMNTDIV");
					container.addChild(output_14, {
						"top": "55px",
						"left": "555px",
						"width": "80px",
						"height": "25px"
					});
					var output_15 = new cpr.controls.Output("optFrfScalAmt");
					output_15.value = "";
					output_15.bind("value").toLanguage("UI-GLS-OG");
					container.addChild(output_15, {
						"top": "30px",
						"left": "555px",
						"width": "80px",
						"height": "25px"
					});
					var dateInput_5 = new cpr.controls.DateInput("dipFrfCancelDt");
					dateInput_5.maxDate = new Date(9999, 11, 31);
					dateInput_5.style.css({
						"text-align" : "center"
					});
					dateInput_5.bind("fieldLabel").toExpression("#optFrfCancelDt.value");
					dateInput_5.bind("value").toDataMap(app.lookup("dmRow"), "CANCEL_DT");
					container.addChild(dateInput_5, {
						"top": "80px",
						"left": "640px",
						"width": "150px",
						"height": "25px"
					});
					var comboBox_7 = new cpr.controls.ComboBox("cbbFrfPmntItvRcd");
					comboBox_7.userAttr({"require": "Y"});
					comboBox_7.bind("fieldLabel").toExpression("#optFrfPmntItvRcd.value");
					comboBox_7.bind("value").toDataMap(app.lookup("dmRow"), "PMNT_ITV_RCD");
					(function(comboBox_7){
						comboBox_7.setItemSet(app.lookup("dsListPmntItv"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_7);
					container.addChild(comboBox_7, {
						"top": "55px",
						"left": "640px",
						"width": "150px",
						"height": "25px"
					});
					var output_16 = new cpr.controls.Output("optFrfHopeWrkDeptNm");
					output_16.value = "";
					output_16.bind("value").toLanguage("UI-DB-ST_DT");
					container.addChild(output_16, {
						"top": "225px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_7 = new cpr.controls.InputBox("ipbFrfHopeWrkDeptNm");
					inputBox_7.maxLength = 200;
					inputBox_7.bind("fieldLabel").toExpression("#optFrfHopeWrkDeptNm.value");
					inputBox_7.bind("value").toDataMap(app.lookup("dmRow"), "HOPE_WRK_DEPT_NM");
					if(typeof onIpbFrfHopeWrkDeptNmValueChange == "function") {
						inputBox_7.addEventListener("value-change", onIpbFrfHopeWrkDeptNmValueChange);
					}
					container.addChild(inputBox_7, {
						"top": "225px",
						"left": "90px",
						"width": "150px",
						"height": "25px"
					});
					var button_7 = new cpr.controls.Button("btnFrfHopeDeptPop");
					button_7.value = "";
					button_7.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfHopeDeptPopClick == "function") {
						button_7.addEventListener("click", onBtnFrfHopeDeptPopClick);
					}
					container.addChild(button_7, {
						"top": "225px",
						"left": "240px",
						"width": "20px",
						"height": "25px"
					});
					var output_17 = new cpr.controls.Output("optFrfWrkDeptNm");
					output_17.value = "";
					output_17.bind("value").toLanguage("UI-DB-ST_DT");
					container.addChild(output_17, {
						"top": "225px",
						"left": "280px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_8 = new cpr.controls.InputBox("ipbFrfWrkDeptNm");
					inputBox_8.maxLength = 200;
					inputBox_8.bind("fieldLabel").toExpression("#optFrfWrkDeptNm.value");
					inputBox_8.bind("value").toDataMap(app.lookup("dmRow"), "WRK_DEPT_NM");
					if(typeof onIpbFrfWrkDeptNmValueChange == "function") {
						inputBox_8.addEventListener("value-change", onIpbFrfWrkDeptNmValueChange);
					}
					container.addChild(inputBox_8, {
						"top": "225px",
						"left": "365px",
						"width": "150px",
						"height": "25px"
					});
					var button_8 = new cpr.controls.Button("btnFrfWrkDeptPop");
					button_8.value = "";
					button_8.style.setClasses(["btn-pop-search"]);
					if(typeof onBtnFrfWrkDeptPopClick == "function") {
						button_8.addEventListener("click", onBtnFrfWrkDeptPopClick);
					}
					container.addChild(button_8, {
						"top": "225px",
						"left": "515px",
						"width": "20px",
						"height": "25px"
					});
					var output_18 = new cpr.controls.Output("optFrfWrkChagOprt");
					output_18.value = "";
					output_18.bind("value").toLanguage("UI-DB-ST_DT");
					container.addChild(output_18, {
						"top": "225px",
						"left": "555px",
						"width": "80px",
						"height": "25px"
					});
					var inputBox_9 = new cpr.controls.InputBox("ipbFrfWrkChagOprt");
					inputBox_9.maxLength = 200;
					inputBox_9.bind("fieldLabel").toExpression("#optFrfWrkChagOprt.value");
					inputBox_9.bind("value").toDataMap(app.lookup("dmRow"), "WRK_CHAG_OPRT");
					container.addChild(inputBox_9, {
						"top": "225px",
						"left": "640px",
						"width": "150px",
						"height": "25px"
					});
					var output_19 = new cpr.controls.Output("optFrfWrkDt");
					output_19.value = "";
					output_19.bind("value").toLanguage("UI-GLS-SHORT_NM");
					container.addChild(output_19, {
						"top": "250px",
						"left": "5px",
						"width": "80px",
						"height": "25px"
					});
					var dateInput_6 = new cpr.controls.DateInput("dipFrfWrkStDt");
					dateInput_6.maxDate = new Date(9999, 11, 31);
					dateInput_6.style.css({
						"text-align" : "center"
					});
					dateInput_6.bind("fieldLabel").toExpression("#optFrfWrkDt.value");
					dateInput_6.bind("value").toDataMap(app.lookup("dmRow"), "WRK_ST_DT");
					container.addChild(dateInput_6, {
						"top": "250px",
						"left": "90px",
						"width": "150px",
						"height": "25px"
					});
					var dateInput_7 = new cpr.controls.DateInput("dipFrfWrkEndDt");
					dateInput_7.maxDate = new Date(9999, 11, 31);
					dateInput_7.style.css({
						"text-align" : "center"
					});
					dateInput_7.bind("fieldLabel").toExpression("#optFrfWrkDt.value");
					dateInput_7.bind("value").toDataMap(app.lookup("dmRow"), "WRK_END_DT");
					container.addChild(dateInput_7, {
						"top": "250px",
						"left": "260px",
						"width": "150px",
						"height": "25px"
					});
					var output_20 = new cpr.controls.Output("optFrfWrkEvalRcd");
					output_20.value = "";
					output_20.bind("value").toLanguage("UI-SCR-PMNTDIV");
					container.addChild(output_20, {
						"top": "250px",
						"left": "555px",
						"width": "80px",
						"height": "25px"
					});
					var comboBox_8 = new cpr.controls.ComboBox("cbbFrfWrkEvalRcd");
					comboBox_8.bind("fieldLabel").toExpression("#optFrfWrkEvalRcd.value");
					comboBox_8.bind("value").toDataMap(app.lookup("dmRow"), "WRK_EVAL_RCD");
					(function(comboBox_8){
						comboBox_8.setItemSet(app.lookup("dsListWrkEval"), {
							"label": "CD_NM",
							"value": "CD"
						});
					})(comboBox_8);
					container.addChild(comboBox_8, {
						"top": "250px",
						"left": "640px",
						"width": "150px",
						"height": "25px"
					});
					var output_21 = new cpr.controls.Output("optText");
					output_21.value = "~";
					container.addChild(output_21, {
						"top": "250px",
						"left": "241px",
						"width": "15px",
						"height": "25px"
					});
					var inputBox_10 = new cpr.controls.InputBox("ipbFrfStudIdObj");
					inputBox_10.visible = false;
					inputBox_10.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_10.bind("value").toDataMap(app.lookup("dmRow"), "STUD_ID");
					container.addChild(inputBox_10, {
						"top": "5px",
						"left": "260px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_11 = new cpr.controls.InputBox("ipbFrfScalFeeCd");
					inputBox_11.visible = false;
					inputBox_11.maxLength = 10;
					inputBox_11.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_11.bind("value").toDataMap(app.lookup("dmRow"), "SCAL_FEE_CD");
					container.addChild(inputBox_11, {
						"top": "30px",
						"left": "534px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_12 = new cpr.controls.InputBox("ipbFrfSsObjDivRcd");
					inputBox_12.visible = false;
					inputBox_12.maxLength = 10;
					inputBox_12.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_12.bind("value").toDataMap(app.lookup("dmRow"), "SS_OBJ_DIV_RCD");
					container.addChild(inputBox_12, {
						"top": "30px",
						"left": "540px",
						"width": "14px",
						"height": "25px"
					});
					var inputBox_13 = new cpr.controls.InputBox("ipbFrfHopeWrkDeptCd");
					inputBox_13.visible = false;
					inputBox_13.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_13.bind("value").toDataMap(app.lookup("dmRow"), "HOPE_WRK_DEPT_CD");
					container.addChild(inputBox_13, {
						"top": "225px",
						"left": "259px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_14 = new cpr.controls.InputBox("ipbFrfHopeOgObjDivRcd");
					inputBox_14.visible = false;
					inputBox_14.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_14.bind("value").toDataMap(app.lookup("dmRow"), "HOPE_OG_OBJ_DIV_RCD");
					container.addChild(inputBox_14, {
						"top": "225px",
						"left": "269px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_15 = new cpr.controls.InputBox("ipbFrfOgObjDivRcd");
					inputBox_15.visible = false;
					inputBox_15.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_15.bind("value").toDataMap(app.lookup("dmRow"), "OG_OBJ_DIV_RCD");
					container.addChild(inputBox_15, {
						"top": "225px",
						"left": "544px",
						"width": "10px",
						"height": "25px"
					});
					var inputBox_16 = new cpr.controls.InputBox("ipbFrfWrkDeptCd");
					inputBox_16.visible = false;
					inputBox_16.bind("fieldLabel").toExpression("#optFrfStudId.value");
					inputBox_16.bind("value").toDataMap(app.lookup("dmRow"), "WRK_DEPT_CD");
					container.addChild(inputBox_16, {
						"top": "225px",
						"left": "534px",
						"width": "10px",
						"height": "25px"
					});
					var numberEditor_5 = new cpr.controls.NumberEditor("ipbFrfScalAmt");
					numberEditor_5.enabled = false;
					numberEditor_5.readOnly = true;
					numberEditor_5.format = "9,999,999,999";
					numberEditor_5.bind("fieldLabel").toExpression("#optFrfScalAmt.value");
					numberEditor_5.bind("value").toDataMap(app.lookup("dmRow"), "SCAL_AMT");
					container.addChild(numberEditor_5, {
						"top": "30px",
						"left": "640px",
						"width": "150px",
						"height": "25px"
					});
				})(group_3);
				container.addChild(group_3, {
					"top": "1px",
					"left": "5px",
					"width": "802px",
					"height": "280px"
				});
				var userDefinedControl_3 = new udc.com.comFormTitle();
				userDefinedControl_3.bind("title").toLanguage("NLS-SCR-REGFEEFNDTNLST");
				container.addChild(userDefinedControl_3, {
					"top": "5px",
					"left": "700px",
					"width": "97px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "0px",
				"width": "812px",
				"height": "290px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSearch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "600px",
				"left": "35px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCsrPStSearch");
			cpr.core.App.load("app/csr/impStdCsrPStSearch", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "600px",
				"left": "134px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaStdCmnPobjSch");
			cpr.core.App.load("app/cmn/impStdCmnPObjSch", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "600px",
				"left": "233px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_4 = new cpr.controls.EmbeddedApp("emaStdCssScalValidRst");
			cpr.core.App.load("app/css/impDialogScalValidResult", function(app) {
				if(app){
					embeddedApp_4.app = app;
				}
			});
			container.addChild(embeddedApp_4, {
				"top": "35px",
				"left": "820px",
				"width": "621px",
				"height": "245px"
			});
			
			var inputBox_17 = new cpr.controls.InputBox("ipbFrfPmntCiiRcd");
			inputBox_17.visible = false;
			inputBox_17.maxLength = 10;
			inputBox_17.bind("fieldLabel").toExpression("#optFrfStudId.value");
			inputBox_17.bind("value").toDataMap(app.lookup("dmRow"), "PMNT_CII_RCD");
			container.addChild(inputBox_17, {
				"top": "10px",
				"left": "649px",
				"width": "16px",
				"height": "25px"
			});
			
			var inputBox_18 = new cpr.controls.InputBox("ipbFrfCiiVal");
			inputBox_18.visible = false;
			inputBox_18.maxLength = 10;
			inputBox_18.bind("fieldLabel").toExpression("#optFrfStudId.value");
			inputBox_18.bind("value").toDataMap(app.lookup("dmRow"), "CII_VAL");
			container.addChild(inputBox_18, {
				"top": "10px",
				"left": "664px",
				"width": "16px",
				"height": "25px"
			});
			
			var inputBox_19 = new cpr.controls.InputBox("ipbFrfUnitRcd");
			inputBox_19.visible = false;
			inputBox_19.maxLength = 10;
			inputBox_19.bind("fieldLabel").toExpression("#optFrfStudId.value");
			inputBox_19.bind("value").toDataMap(app.lookup("dmRow"), "UNIT_RCD");
			container.addChild(inputBox_19, {
				"top": "10px",
				"left": "679px",
				"width": "16px",
				"height": "25px"
			});
			
			var button_9 = new cpr.controls.Button("btnCloseCancel");
			button_9.value = "";
			button_9.style.setClasses(["btn-commit"]);
			button_9.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_9.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_9, {
				"top": "576px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "장학생(상세)";
	cpr.core.Platform.INSTANCE.register(app);
})();
