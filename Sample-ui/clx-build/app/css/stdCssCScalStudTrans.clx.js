/*
 * App URI: app/css/stdCssCScalStudTrans
 * Source Location: app/css/stdCssCScalStudTrans.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssCScalStudTrans", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssCScalStudTrans.xtm"/>
			
			
			var stdCssCScalStudTrans = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/**
				 * doOnLoad  화면 오픈 시 서브미션 
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */
				function doOnLoad(){
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init(["rptScalStudTrans"]);
					
					// 부모창에 있는 값 셋팅
					var voParentInfo = moPage.parent.moCmnInfo;
					
					util.DataMap.setValue(app, "dmSchedule", "strSchYearRcd", voParentInfo.schYearRcd);
					util.DataMap.setValue(app, "dmSchedule", "strSmtRcd"	  , voParentInfo.smtRcd);
					util.DataMap.setValue(app, "dmSchedule", "strStDt"	  , voParentInfo.stDt);
					util.DataMap.setValue(app, "dmSchedule", "strEndDt"	  , voParentInfo.endDt);
					util.DataMap.setValue(app, "dmReqKey", "strStudId"	 		  , voParentInfo.studId);
					
					// 조회
					doList(function(pbSuccess) {
						if (pbSuccess){
							// "조회되었습니다."
							this.setParentMsg(NLS.INF.M024);		
						}
					});
				};
			
				/**
				 * @desc 장학금환수를 조회한다.
				 * @member stdCssCScalStudTrans
				 * @param poCallBackFunc 콜백 함수
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				function doList(poCallBackFunc) {
					
					//strCommand: onLoadTrans 
					util.Submit.send(app, "subOnLoad", function(pbSuccess) {
						if (pbSuccess) {
							util.Control.redraw(app, ["rptScalStudTrans"]);
						}
						
						if(util.isFunc(poCallBackFunc)) poCallBackFunc(pbSuccess);
					});
				};
				
				/**
				 * onClick_BtnNew 신규버튼 클릭이벤트
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */	
				moPage.onClick_BtnNew = function(){
					var vnNewRow = util.Grid.insertRow(app, "grdScalStudTrans", "rdBtnScalStudSearch");
					
					util.Grid.setCellValue(app, "grdScalStudTrans", "STUD_ID"	  , util.DataMap.getValue(app, "dmReqKey", "strStudId"), vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudTrans", "SCH_YEAR_RCD" , util.DataMap.getValue(app, "dmSchedule", "strSchYearRcd"), vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudTrans", "SMT_RCD"	  , util.DataMap.getValue(app, "dmSchedule", "strSmtRcd"), vnNewRow);
					util.Grid.setCellValue(app, "grdScalStudTrans", "PROC_TYPE_RCD", "CH303TRN", vnNewRow);
				};
				
				/**
				 * @desc 삭제버튼 클릭 이벤트
				 * @member stdCssCScalStudTrans
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				moPage.onClick_BtnDel = function() {
					var vnRowIdx = util.Grid.getCheckOrSelectedRowIndex(app, "grdScalStudTrans");
					if(ValueUtil.isNull(vnRowIdx)){
						var vsMsgParam = util.Grid.getTitle(app, "grdScalStudTransScalStudTrans");
						// "@(을)를 선택해주세요" 메시지 출력
						util.Msg.alert("NLS-INF-M045", [vsMsgParam]);
						return;
					}	
					
					util.Grid.deleteRow(app, "grdScalStudTrans");
				};
				
				/**
				 * onClick_BtnRestore 작업취소버튼 클릭이벤트
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */	
				moPage.onClick_BtnRestore = function(){
					util.Grid.restoreRow(app, "grdScalStudTrans");
				};
			
				 /**
				 * onClick_BtnSave 작업저장버튼 클릭이벤트
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */
				moPage.onClick_BtnSave = function(){
					// 변경사항 체크
					if(!util.Grid.isModified(app, ["grdScalStudTrans"], null)){
						moPage.setParentMsg(NLS.WRN.M007);
						return false;
					}
					
					// Validation Check
					if(!util.validate(app, ["grdScalStudTrans"])) return false;
					
					// 처리상태가 완료일경우 처리일 필수체크
					if(!doChkProcDt()){
						//처리상태가 완료인경우 처리일을 입력해야 합니다.
						util.Msg.alert("NLS-CSS-M025");
						return false;
					}	
					
					// 저장서브미션
					//strCommand: save 
					util.Submit.send(app, "subSave", function(pbSuccess) {
						if(pbSuccess){				
							 //저장성공 메세지 출력
							doList(function(pbSuccessList) {
								// "갱신된 데이터가 조회되었습니다."
								if(pbSuccessList) {
									this.setParentMsg(NLS.INF.M025);
								}
							});
						}
					});
				};
			
				/**
				 * doChkProcDt 처리상태가 완료일경우 처리일 필수처리
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */	
				function doChkProcDt(){
					var vbChked = true;
					for (var i = 1; i <= util.Grid.getRowCount(app, "grdScalStudTrans"); i++) {
						var vsProcStat = util.Grid.getCellValue(app, "grdScalStudTrans", "PROC_STAT_RCD", i);
						var vsProcPlanDt = util.Grid.getCellValue(app, "grdScalStudTrans", "PROC_DT", i);
						var vbUptStatus = util.Grid.getRowState(app, "grdScalStudTrans", i);
						
						if(vbUptStatus != "delete" && vsProcStat == "CH30402" && ValueUtil.isNull(vsProcPlanDt)){
							vbChked = false;
							break;
						}
					}
					return vbChked;
				};
				
				/**
				 * onValueChanged_RptCssCntiScalStud 장학금환수 변경 이벤트
				 * @member stdCssCScalStudTrans
				 * @type void
				 * @author AeyoungLee 2016. 4. 29.
				 */	
				moPage.onValueChanged_RptScalStudRcc = function(psColDiv){
					
					var vnIdx = util.Grid.getIndex(app, "grdScalStudTrans");
					
					if(psColDiv == "AMT"){
						var vsValue = util.Grid.getCellValue(app, "grdScalStudTrans", psColDiv, vnIdx);
						
						if (vsValue <= 0) {
							util.Msg.alert("NLS-CRS-M006", [NLS.NSCR.CARRIEDAMT]);
							util.Grid.setCellValue(app, "grdScalStudTrans", "AMT", "", vnIdx);
						}
						
						ExtRepeat.refresh("rptScalStudTrans");
			        }
					
				};
				
				/**
				 * @desc 순번에 따른 지급순번을 셋팅
				 * @member stdCssCScalStudTrans
				 * @param pnRowIdx 
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				function doSetPmntSerialNo(pnRowIdx) {
					var vsSerialNo = util.Grid.getCellValue(app, "grdScalStudTrans", "SERIAL_NO", pnRowIdx);
					if(ValueUtil.isNull(vsSerialNo)){
						util.Grid.setCellValue(app, "grdScalStudTrans", "PMNT_SERIAL_NO", "", pnRowIdx);
						return; 
					}	
					
					var vnPmntSerialNo = 1;
					var vbPlus = false;
					var vnRowCnt = util.Grid.getRowCount(app, "grdScalStudTrans");
					if(vnRowCnt != 0 && vnRowCnt != 1) {
						for (var i = 1; i <= vnRowCnt; i++) {
							var vsSerialNoDs = util.Grid.getCellValue(app, "grdScalStudTrans", "SERIAL_NO", i);
							if (vsSerialNoDs == vsSerialNo && pnRowIdx != i) {
								var vnNPmntSerialNo = util.Grid.getCellValue(app, "grdScalStudTrans", "PMNT_SERIAL_NO", i);
								vbPlus = true;
								if (vnPmntSerialNo < vnNPmntSerialNo) vnPmntSerialNo = vnNPmntSerialNo;
							}
						}
						if(vbPlus) vnPmntSerialNo++;
					}
					util.Grid.setCellValue(app, "grdScalStudTrans", "PMNT_SERIAL_NO", vnPmntSerialNo,  pnRowIdx);
				};
				
				/**
				 * @desc 장학금 지급검색 버튼 클릭 이벤트 
				 * @member stdCssCScalStudTrans
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				moPage.onClick_RdBtnScalStudSearch = function() {
					//2016.08.26 확정건만 나오는 거에서 처리상태 상관없이 조회되도록 수정
					doListSearchGrx("impDialogAllScalFeePmnt", "grdScalStudTrans", util.Grid.getIndex(app, "grdScalStudTrans"));
				};
				
				/**
				 * @desc 부모 헤더에 메세지 뿌리기
				 * @member stdCssCScalStudTrans
				 * @param psMsgCode 
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				moPage.setParentMsg = function(psMsgCode) {
					util.Msg.notify(app, psMsgCode);	
				};
				
				/**
				 * @desc 변경사항체크 - 부모창에서 호출용
				 * @member stdCssCScalStudTrans
				 * @return void
				 * @author Aeyoung Lee 2016. 4. 29.
				 */
				function doCheckDataChange() {
					if(util.Grid.isModified(app, ["grdScalStudTrans"], "CRM") ){
						return false;
					}else{
						return true;
					}
				};
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListFnreDivRcd");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListItemCd");
			dataSet_2.parseData({
				"columns": [
					{"name": "ITEM_CD"},
					{"name": "ITEM_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListProcStatRcd");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsScalStudTrans");
			dataSet_4.parseData({
				"info": "CSS_SCAL_STUD_PMNT@STUD_ID,SCH_YEAR_RCD,SMT_RCD,SERIAL_NO,PROC_TYPE_RCD,PMNT_SERIAL_NO",
				"columns": [
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "PMNT_SERIAL_NO"},
					{"name": "FNRE_DIV_RCD"},
					{"name": "ITEM_CD"},
					{"name": "AMT"},
					{"name": "PROC_PLAN_DT"},
					{"name": "PROC_DT"},
					{"name": "REMARK"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "UNIT_CALC_VAL"},
					{"name": "STUD_BANK_CD"},
					{"name": "OWNER_NM"},
					{"name": "PROC_TYPE_RCD"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "STUD_ID"},
					{"name": "SMT_RCD"},
					{"name": "STUD_ACCT_CD"},
					{"name": "PROC_STAT_RCD"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsScalStud");
			dataSet_5.parseData({
				"columns": [
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "WRK_CHAG_OPRT"},
					{"name": "SCAL_AMT"},
					{"name": "WRK_EVAL_RCD"},
					{"name": "PMNT_DIV_NM"},
					{"name": "OG_OBJ_DIV_RCD"},
					{"name": "REMARK"},
					{"name": "WRK_DEPT_NM"},
					{"name": "PMNT_ITV_NM"},
					{"name": "WRK_END_DT"},
					{"name": "SCAL_FEE_NM"},
					{"name": "REF_KEY"},
					{"name": "REQ_DT"},
					{"name": "STUD_ID"},
					{"name": "PROC_STAT_NM"},
					{"name": "SMT_RCD"},
					{"name": "WRK_DEPT_CD"},
					{"name": "WRK_EVAL_NM"},
					{"name": "SCH_YEAR_RCD"},
					{"name": "PROC_STAT_RCD"},
					{"name": "SERIAL_NO"},
					{"name": "SCAL_FEE_CD"},
					{"name": "CNFM_DT"},
					{"name": "WRK_ST_DT"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			var dataMap_1 = new cpr.data.DataMap("dmSchedule");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strSchYearRcd",
						"dataType": "string"
					},
					{
						"name": "strSmtRcd",
						"dataType": "string"
					},
					{
						"name": "strStDt",
						"dataType": "string"
					},
					{
						"name": "strEndDt",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmReqKey");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "strProcStatRcd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strStudId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOnload");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strDefLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmResList");
			dataMap_4.parseData({
				"columns" : [
					{
						"name": "strDefLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "unValidRowIndex",
						"dataType": "string"
					},
					{
						"name": "unValidMsg",
						"dataType": "string"
					},
					{
						"name": "unValidScalFeeCd",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_4);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalStudTrans/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_2);
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataMap_3, false);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subListSearch");
			submission_2.action = "/css/StdCssScalStudTrans/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_2);
			submission_2.addResponseData(dataSet_5, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subSave");
			submission_3.action = "/css/StdCssScalStudTrans/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			submission_3.addRequestData(dataSet_4);
			app.register(submission_3);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var group_1 = new cpr.controls.Container("grpDataDtl");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_1 = linker.userDefinedControl_1 = new udc.com.comTitle();
				userDefinedControl_1.bind("title").toLanguage("UI-SCR-SCRSTRANS");
				container.addChild(userDefinedControl_1, {
					"top": "5px",
					"left": "5px",
					"width": "256px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdScalStudTrans");
				grid_1.init({
					"dataSet": app.lookup("dsScalStudTrans"),
					"columns": [
						{"width": "25px"},
						{"width": "40px"},
						{"width": "20px"},
						{"width": "46px"},
						{"width": "120px"},
						{"width": "71px"},
						{"width": "100px"},
						{"width": "122px"},
						{"width": "108px"},
						{"width": "102px"},
						{"width": "100px"},
						{"width": "156px"},
						{
							"width": "100px",
							"visible": false
						}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-GLS-SERIAL_NO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-SCAL_FEE_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PAYSERIANO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-FIRSRDIVRCD");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-ITEMZ");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-CARRIEDAMT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.style.setClasses(["require"]);
									cell.bind("text").toLanguage("UI-SCR-PLANDT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-PROC_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-GLS-REMARK");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_1 = new cpr.controls.Output();
										output_1.style.css({
											"text-align" : "center"
										});
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "SERIAL_NO";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptSerialNo");
										output_2.dataType = "number";
										output_2.format = "##########";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("SERIAL_NO");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "PMNT_SERIAL_NO";
									cell.control = (function(){
										var output_3 = new cpr.controls.Output("gdOptPmntSerialNo");
										output_3.dataType = "number";
										output_3.format = "###";
										output_3.style.css({
											"text-align" : "center"
										});
										output_3.bind("value").toDataColumn("PMNT_SERIAL_NO");
										return output_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "FNRE_DIV_RCD";
									cell.control = (function(){
										var comboBox_1 = new cpr.controls.ComboBox("gdcbbFnreDivRcd");
										comboBox_1.userAttr({"require": "Y"});
										(function(comboBox_1){
											comboBox_1.addItem(new cpr.controls.Item("선택", ""));
											comboBox_1.setItemSet(app.lookup("dsListFnreDivRcd"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_1);
										comboBox_1.bind("value").toDataColumn("FNRE_DIV_RCD");
										return comboBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "ITEM_CD";
									cell.control = (function(){
										var comboBox_2 = new cpr.controls.ComboBox("gdCbbItemCd");
										(function(comboBox_2){
											comboBox_2.setItemSet(app.lookup("dsListItemCd"), {
												"label": "ITEM_NM",
												"value": "ITEM_CD"
											});
										})(comboBox_2);
										comboBox_2.bind("value").toDataColumn("ITEM_CD");
										return comboBox_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "AMT";
									cell.control = (function(){
										var numberEditor_1 = new cpr.controls.NumberEditor("gdIpbAmt");
										numberEditor_1.spinButton = false;
										numberEditor_1.format = "999,999,999,999,999";
										numberEditor_1.bind("value").toDataColumn("AMT");
										return numberEditor_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "PROC_PLAN_DT";
									cell.control = (function(){
										var dateInput_1 = new cpr.controls.DateInput("gdDipProcPlanDt");
										dateInput_1.format = "YYYY-MM-DD";
										dateInput_1.userAttr({"require": "Y"});
										dateInput_1.style.css({
											"text-align" : "center"
										});
										dateInput_1.bind("value").toDataColumn("PROC_PLAN_DT");
										return dateInput_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "PROC_DT";
									cell.control = (function(){
										var dateInput_2 = new cpr.controls.DateInput("gdDipProcDt");
										dateInput_2.format = "YYYY-MM-DD";
										dateInput_2.style.css({
											"text-align" : "center"
										});
										dateInput_2.bind("value").toDataColumn("PROC_DT");
										return dateInput_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.columnName = "REMARK";
									cell.control = (function(){
										var inputBox_1 = new cpr.controls.InputBox("gdIpbRemark");
										inputBox_1.maxLength = 1000;
										inputBox_1.bind("value").toDataColumn("REMARK");
										return inputBox_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 12},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CD";
									cell.control = (function(){
										var inputBox_2 = new cpr.controls.InputBox("gdIpbScalFeeCd");
										inputBox_2.maxLength = 1000;
										inputBox_2.bind("value").toDataColumn("SCAL_FEE_CD");
										return inputBox_2;
									})();
								}
							}
						]
					},
					"footer": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.control = (function(){
										var output_4 = new cpr.controls.Output("footer_output");
										output_4.value = "";
										output_4.bind("value").toLanguage("UI-GLS-SUM");
										return output_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.control = (function(){
										var output_5 = new cpr.controls.Output("footer_output");
										output_5.value = "";
										output_5.bind("value").toLanguage("UI-GLS-SUM");
										return output_5;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.control = (function(){
										var output_6 = new cpr.controls.Output("footer_output");
										output_6.value = "";
										output_6.bind("value").toLanguage("UI-GLS-SUM");
										return output_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.control = (function(){
										var output_7 = new cpr.controls.Output("footer_output");
										output_7.value = "";
										output_7.bind("value").toLanguage("UI-GLS-SUM");
										return output_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("footer_output");
										output_8.value = "";
										output_8.bind("value").toLanguage("UI-GLS-SUM");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("footer_output");
										output_9.value = "";
										output_9.bind("value").toLanguage("UI-GLS-SUM");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.control = (function(){
										var output_10 = new cpr.controls.Output("footer_output");
										output_10.value = "";
										output_10.bind("value").toLanguage("UI-GLS-SUM");
										return output_10;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.control = (function(){
										var output_11 = new cpr.controls.Output("footer_output");
										output_11.value = "합계";
										output_11.bind("value").toLanguage("UI-GLS-SUM");
										return output_11;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.expr = "getSum(\"AMT\")";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.control = (function(){
										var output_12 = new cpr.controls.Output("footer_output");
										output_12.value = "";
										output_12.bind("value").toLanguage("UI-GLS-SUM");
										return output_12;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.control = (function(){
										var output_13 = new cpr.controls.Output("footer_output");
										output_13.value = "";
										output_13.bind("value").toLanguage("UI-GLS-SUM");
										return output_13;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 11},
								"configurator": function(cell){
									cell.control = (function(){
										var output_14 = new cpr.controls.Output("footer_output");
										output_14.value = "";
										output_14.bind("value").toLanguage("UI-GLS-SUM");
										return output_14;
									})();
								}
							}
						]
					}
				});
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "1014px",
					"height": "394px"
				});
				var button_1 = new cpr.controls.Button("btnNew");
				button_1.value = "";
				button_1.style.setClasses(["btn-new"]);
				button_1.bind("value").toLanguage("UI-SCR-NEW");
				if(typeof onBtnNewClick == "function") {
					button_1.addEventListener("click", onBtnNewClick);
				}
				container.addChild(button_1, {
					"top": "5px",
					"left": "764px",
					"width": "60px",
					"height": "25px"
				});
				var button_2 = new cpr.controls.Button("btnDel");
				button_2.value = "";
				button_2.style.setClasses(["btn-delete"]);
				button_2.bind("value").toLanguage("UI-SCR-DELETE");
				if(typeof onBtnDelClick == "function") {
					button_2.addEventListener("click", onBtnDelClick);
				}
				container.addChild(button_2, {
					"top": "5px",
					"left": "827px",
					"width": "60px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnRestore");
				button_3.value = "";
				button_3.style.setClasses(["btn-restore"]);
				button_3.bind("value").toLanguage("UI-SCR-WRKCANCL");
				if(typeof onBtnRestoreClick == "function") {
					button_3.addEventListener("click", onBtnRestoreClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "892px",
					"width": "60px",
					"height": "25px"
				});
				var button_4 = new cpr.controls.Button("btnSave");
				button_4.value = "";
				button_4.style.setClasses(["btn-save"]);
				button_4.bind("value").toLanguage("UI-SCR-WRKSAVE");
				if(typeof onBtnSaveClick == "function") {
					button_4.addEventListener("click", onBtnSaveClick);
				}
				container.addChild(button_4, {
					"top": "5px",
					"left": "957px",
					"width": "60px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "0px",
				"left": "0px",
				"width": "1025px",
				"height": "430px"
			});
			
			var embeddedApp_1 = new cpr.controls.EmbeddedApp("emaSbpHeader");
			if(typeof onEmaSbpHeaderAppReady == "function") {
				embeddedApp_1.addEventListener("app-ready", onEmaSbpHeaderAppReady);
			}
			cpr.core.App.load("app/imp/impSbpHeader", function(app) {
				if(app){
					embeddedApp_1.app = app;
				}
			});
			container.addChild(embeddedApp_1, {
				"top": "587px",
				"left": "5px",
				"width": "96px",
				"height": "25px"
			});
			
			var embeddedApp_2 = new cpr.controls.EmbeddedApp("emaStdCssPScalFeeSearch");
			cpr.core.App.load("app/css/impStdCssPScalFeePop", function(app) {
				if(app){
					embeddedApp_2.app = app;
				}
			});
			container.addChild(embeddedApp_2, {
				"top": "695px",
				"left": "35px",
				"width": "100px",
				"height": "25px"
			});
			
			var embeddedApp_3 = new cpr.controls.EmbeddedApp("emaDialogAllScalFeePmnt");
			cpr.core.App.load("app/css/impDialogAllScalFee", function(app) {
				if(app){
					embeddedApp_3.app = app;
				}
			});
			container.addChild(embeddedApp_3, {
				"top": "45px",
				"left": "1040px",
				"width": "520px",
				"height": "230px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_1.ctrl = linker.grid_1;
		}
	});
	app.title = "stdCssCScalStudTrans";
	cpr.core.Platform.INSTANCE.register(app);
})();
