/*
 * App URI: app/css/stdCssPFndPop
 * Source Location: app/css/stdCssPFndPop.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssPFndPop", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssPFndPop.xtm"/>
			
			
			var stdCssPFndPop = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/*
				 * 부모 페이지에서 받아온 기본값을 받는 객체
				 * 내부적으로 Result라는 객체를 가지고 있으며, 부모에 넘겨줄 결과값을 저장
				 * @member stdCssPFndPop
				 * @author AeyoungLee 2016. 2. 23.
				 */
				moPObject.moStdCssPFndSearch = {
					// 팝업 작동 내부사용
					controlId : "",
					openedByChange : false,
					strScalFndtnCd : "",				
					strScalFndtnNm : "",			
					strKeyDate : "",			
					// 선택열 결과 리턴
					Result : {
						strScalFndtnCd : "",	//재단코드
						strScalFndtnNm : "",	//재단명
						strStDt : "",			//시작일자
						strEndDt : "",			//종료일자
						strRepNm : "",			//대표명
						strChagDeptNm : "",		//담당부서명
						strInturNm : "",		//설립자명
						strAddr1 : "",			//주소1
						strAddr2 : "",			//주소2
						strDrtTelNo : ""		//전화번호
					}
				};
				
				/**
				 * doOnLoadSetting  화면 오픈 시 수행되는 함수
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				moPage.onModelConstructDone_StdCssPFndPop = function(){
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptFndtnSch");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grp_rptFndtnSch");
					//호출한 페이지에서 파라미터 받기.
					doParentGet();
					//화면 온로드 서브미션 호출
					doOnLoad();
				}
				
				/**
				 * doSearch 조회 서브미션
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */	
				function doParentGet(){
					if(ExtPopUp.isPopUp()) {
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCssPFndSearch =  ExtPopUp.getParentVal("moStdCssPFndtnPop");
								
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCssPFndSearch) {
							if (key == "Result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCssPFndSearch [key] = voStdCssPFndSearch [key];
						}
						// 팝업이 뜬후에는 false로 고침.
						voStdCssPFndSearch.openedByChange = false;
					}
				}
				
				/**
				 * doSearch 조회 서브미션
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */	
				function doOnLoad(){
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moStdCssPFndSearch;
					
					if (voParam.strScalFndtnCd) {
						util.Control.setValue(app, "ipbScalFndtnCd", voParam.strScalFndtnCd);
					}
					
					if (voParam.strScalFndtnNm) {
						util.Control.setValue(app, "ipbScalFndtnNm", voParam.strScalFndtnNm);
					}
					
					if (voParam.strKeyDate) {
						util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
					}
					
					// 바로 검색 실행
					if ((voParam.strScalFndtnCd || voParam.strScalFndtnNm)) {
						util.Header.clickSearch(app);
					}
				};
					
					
				 /**
				 * doList 조회 
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				function doList() {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "rptFndtnSch");
							util.Msg.notify(app, "NLS.INF.M024");
						}
						
					});
				};
				
				/**
				 * doCloseOk (선택닫기 이벤트시 호출) 	
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				function doCloseOk() {
					var voResult = moStdCssPFndSearch.Result;
									
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdFndtnSch"))){
						//선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdFndtnSch");
					
					//선택된 데이터 변수 선언
					var vsScalFndtnCd = util.Grid.getCellValue(app, "grdFndtnSch", "SCAL_FNDTN_CD", vnIdx);
					var vsScalFndtnNm = util.Grid.getCellValue(app, "grdFndtnSch", "SCAL_FNDTN_NM", vnIdx);
					var vsStDt		  = util.Grid.getCellValue(app, "grdFndtnSch", "ST_DT"		 , vnIdx);
					var vsEndDt		  = util.Grid.getCellValue(app, "grdFndtnSch", "END_DT"	     , vnIdx);
					var vsRepNm		  = util.Grid.getCellValue(app, "grdFndtnSch", "REP_NM"	     , vnIdx);
					var vsChagDeptNm  = util.Grid.getCellValue(app, "grdFndtnSch", "CHAG_DEPT_NM" , vnIdx);
					var vsChargerNm	  = util.Grid.getCellValue(app, "grdFndtnSch", "CHARGER_NM"   , vnIdx);
					var vsInturNm	  = util.Grid.getCellValue(app, "grdFndtnSch", "INTUR_NM"     , vnIdx);
					var vsAddr1		  = util.Grid.getCellValue(app, "grdFndtnSch", "ADDR1"		 , vnIdx);
					var vsAddr2		  = util.Grid.getCellValue(app, "grdFndtnSch", "ADDR2"		 , vnIdx);
					var vsDrtTelNo	  = util.Grid.getCellValue(app, "grdFndtnSch", "DRT_TEL_NO"   , vnIdx);
					
					var voResult = moStdCssPFndSearch.Result;
					
					voResult.strScalFndtnCd	= vsScalFndtnCd;
					voResult.strScalFndtnNm	= vsScalFndtnNm;
					voResult.strStDt		= vsStDt;
					voResult.strEndDt		= vsEndDt;
					voResult.strRepNm		= vsRepNm;
					voResult.strChagDeptNm	= vsChagDeptNm;
					voResult.strInturNm		= vsInturNm;
					voResult.strAddr1		= vsAddr1;
					voResult.strAddr2		= vsAddr2;
					voResult.strDrtTelNo	= vsDrtTelNo;
					
					if(ExtPopUp.isPopUp()){
						ExtPopUp.closeLayeredPopup("callbackStdCssPFndtnPop", moStdCssPFndSearch);
					}				
				};
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsFndtnSch");
			dataSet_1.parseData({
				"columns": [
					{"name": "SCAL_FNDTN_CD"},
					{"name": "SCAL_FNDTN_NM"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "REP_NM"},
					{"name": "CHAG_DEPT_NM"},
					{"name": "CHARGER_NM"},
					{"name": "ADDR1"},
					{"name": "ADDR2"},
					{"name": "DRT_TEL_NO"},
					{"name": "SHORT_NM"},
					{"name": "INTU_BKGR"},
					{"name": "INTU_DT"},
					{"name": "LAN_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "REMARK"},
					{"name": "INTUR_NM"},
					{"name": "BIZM_NO"},
					{"name": "PRT_SCAL_FNDTN_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strScalFndtnCd",
						"dataType": "string"
					},
					{
						"name": "strScalFndtnNm",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			var submission_1 = new cpr.protocols.Submission("subList");
			submission_1.action = "/css/StdCssFndtnPop/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_1);
			submission_1.addResponseData(dataSet_1, false);
			app.register(submission_1);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var button_1 = new cpr.controls.Button("btnCloseOk");
			button_1.value = "";
			button_1.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_1.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_1, {
				"top": "410px",
				"left": "530px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseCancel");
			button_2.value = "";
			button_2.style.setClasses(["btn-commit"]);
			button_2.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_2.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_2, {
				"top": "410px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grp_rptFndtnSch");
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.bind("title").toLanguage("NLS-SCR-REGFEEFNDTNLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "256px",
					"height": "25px"
				});
				var grid_1 = linker.grid_1 = new cpr.controls.Grid("grdFndtnSch");
				grid_1.init({
					"dataSet": app.lookup("dsFndtnSch"),
					"columns": [
						{"width": "40px"},
						{"width": "70px"},
						{"width": "80px"},
						{"width": "88px"},
						{"width": "87px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"},
						{"width": "100px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FNDTNNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHAG_DEPT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHARGER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SCAL_FNDTN_CD";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCAL_FNDTN_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_1 = new cpr.controls.Output("gdOptStDt");
										output_1.dataType = "date";
										output_1.format = "YYYY-MM-DD";
										output_1.style.css({
											"text-align" : "center"
										});
										output_1.bind("value").toDataColumn("ST_DT");
										return output_1;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_2 = new cpr.controls.Output("gdOptEndDt");
										output_2.dataType = "date";
										output_2.format = "YYYY-MM-DD";
										output_2.style.css({
											"text-align" : "center"
										});
										output_2.bind("value").toDataColumn("END_DT");
										return output_2;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "REP_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "CHAG_DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "CHARGER_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "ADDR1";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "ADDR2";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "DRT_TEL_NO";
								}
							}
						]
					}
				});
				if(typeof onGrdFndtnSchRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdFndtnSchRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "575px",
					"height": "300"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "70px",
				"left": "5px",
				"width": "585px",
				"height": "335px"
			});
			
			var group_2 = new cpr.controls.Container("grpSearch");
			group_2.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("ipbScalFndtnNm");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFndtnNm");
				if(typeof onIpbScalFndtnNmKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbScalFndtnNmKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "120px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optScalFndtnNm");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-FNDTNNAME");
				container.addChild(output_3, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optScalFndtnCd");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_4, {
					"top": "5px",
					"left": "220px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbScalFndtnCd");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFndtnCd");
				if(typeof onIpbScalFndtnCdKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbScalFndtnCdKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "305px",
					"width": "105px",
					"height": "25px"
				});
				var button_3 = new cpr.controls.Button("btnSearch");
				button_3.value = "";
				button_3.style.setClasses(["btn-search"]);
				button_3.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				if(typeof onBtnSearchClick == "function") {
					button_3.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_3, {
					"top": "5px",
					"left": "515px",
					"width": "60px",
					"height": "25px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "35px",
				"left": "5px",
				"width": "585px",
				"height": "30px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
			// Linking
			linker.userDefinedControl_2.ctrl = linker.grid_1;
		}
	});
	app.title = "장학재단팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
