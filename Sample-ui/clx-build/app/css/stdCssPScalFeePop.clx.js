/*
 * App URI: app/css/stdCssPScalFeePop
 * Source Location: app/css/stdCssPScalFeePop.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/css/stdCssPScalFeePop", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			// Start - User Script
			﻿//아래 주석의 <xtmlink> 는 인텔리센스 기능을 위한 링크입니다. 지우지 마십시오.
			/// <xtmlink path="./stdCssPScalFeePop.xtm"/>
			
			
			var stdCssPScalFeePop = function() {
				var moPage = new Page();
				//임포트용 데이터 통신 오브젝트
				var moPObject = new PObject();
				
				/*
				 * 부모 페이지에서 받아온 기본값을 받는 객체
				 * 내부적으로 Result라는 객체를 가지고 있으며, 부모에 넘겨줄 결과값을 저장
				 * @member stdCssPScalFeePop
				 * @author AeyoungLee 2016. 2. 29.
				 */
				moPObject.moStdCssPScalFeePop = {
					// 팝업 작동 내부사용
					controlId : "",
					openedByChange : false,
					// 선택가능 범위를 제한함.
					objDivRcd : "CC009SS",
					lanDivRcd : "/root/resOnLoad/strDefLanDivRcd",
					// 검색어 기본값 지정
					strKeyDate    	 : "",
					strScalFeeCd 	 : "",
					strScalFeeNm     : "",
					strScalFeeCls1   : "",
					strScalFeeCls2   : "",
					strScalFeeCls3   : "",
					strScalFeeCls4   : "",
					strScalFeeCls5   : "",
					strDeptCd 		 : "",				
					strDeptObjDivRcd : "",				
					strMngDeptDiv    : "",				
					strWrkScalYn     : "",				
					strStudReqYn     : "",				
					strCntiScalYn    : "",
					// 선택열 결과 리턴 - 모든 칼럼을 넘겨줄 수 있도록 한다.
					result : {
						SCAL_FEE_CD : "",
						ST_DT : "",
						END_DT : "",
						OBJ_DIV_RCD : "", 
						REF_KEY : "",
						LAN_DIV_RCD : "", 
						DEPT_CD : "",
						DEPT_OBJ_DIV_RCD : "", 
						DEPT_NM : "",
						SCAL_FEE_NM : "",
						SHORT_NM : "",
						PRT_SCAL_FEE_NM : "",
						SCAL_FNDTN_CD : "",
						PMNT_DIV_RCD : "",
						WRK_SCAL_YN : "",
						DUP_PMNT_YN : "",
						MNG_DEPT_DIV_RCD : "",
						STUD_REQ_YN : "",
						CNTI_SCAL_YN : "",
						PMNT_CNT : "",
						PMNT_ITV_RCD : "",
						CERT_SHEET_NPRT_YN : "",
						PRT_ORD : "",
						SCAL_FEE_CLS1_RCD : "",
						SCAL_FEE_CLS2_RCD : "",
						SCAL_FEE_CLS3_RCD : "",
						SCAL_FEE_CLS4_RCD : "",
						SCAL_FEE_CLS5_RCD : "",
						DESC1 : "",
						DESC2 : "",
						DESC3 : "",
						DESC4 : "",
						DESC5 : ""
					}
				};
				
				/**
				 * doOnLoadSetting  화면 오픈 시 수행되는 함수
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				moPage.onModelConstructDone_StdCssPScalFeePop = function(){
					//리피트 초기 설정
			//TO-BE: <ExtRepeat.init> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtRepeat.init("rptScalFee");
					//검색조건 초기 설정
			//TO-BE: <ExtGroup.initSearchBox> 전환작업시 불필요하여 주석처리함(삭제 필요)(2020-12-21 : SULMOIHO)
			//		ExtGroup.initSearchBox("grpSearch", "grpData");
					
					//호출한 페이지에서 파라미터 받기.
					doParentGet();
					
					//화면 온로드 서브미션 호출
					doOnLoad();
				}
				
				/**
				 * doSearch 조회 서브미션
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */	
				function doParentGet(){
					if(ExtPopUp.isPopUp()) {
						// 호출한 페이지에서 파라미터 받기.													
						var voStdCssPScalFeeSch =  ExtPopUp.getParentVal("moStdCssPScalFeeSch");
								
						// 파라미터  값복사 (deep copy)
						for (var key in voStdCssPScalFeeSch) {
							if (key == "result") {
								// 결과 값은 복사하지 않음.
								continue;
							}
							moStdCssPScalFeePop [key] = voStdCssPScalFeeSch [key];
						}
						// 팝업이 뜬후에는 false로 고침.
						voStdCssPScalFeeSch.openedByChange = false;
					}
				}
				
				/**
				 * doSearch 조회 서브미션
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */	
				function doOnLoad(){
					// 파라미터 받아서 초기 검색조건 세팅.
					var voParam = moStdCssPScalFeePop;
					
					if (voParam.objDivRcd) {
						util.DataMap.setValue(app, "dmReqKey", "strObjDivRcd", voParam.objDivRcd);
					}
					if (voParam.lanDivRcd) {
						util.DataMap.setValue(app, "dmReqKey", "strLanDivRcd", voParam.lanDivRcd);
					}
					if (voParam.strScalFeeCd) {
						util.Control.setValue(app, "ipbScalFeeCd", voParam.strScalFeeCd);
					}
					if (voParam.strScalFeeNm) {
						util.Control.setValue(app, "ipbScalFeeNm", voParam.strScalFeeNm);
					}
					if (voParam.strScalFeeCls1) {
						util.Control.setValue(app, "cbbScalFeeCls1", voParam.strScalFeeCls1);
					}
					if (voParam.strScalFeeCls2) {
						util.Control.setValue(app, "cbbScalFeeCls2", voParam.strScalFeeCls2);
					}
					if (voParam.strScalFeeCls3) {
						util.Control.setValue(app, "cbbScalFeeCls3", voParam.strScalFeeCls3);
					}
					if (voParam.strScalFeeCls4) {
						util.Control.setValue(app, "cbbScalFeeCls4", voParam.strScalFeeCls4);
					}
					if (voParam.strScalFeeCls5) {
						util.Control.setValue(app, "cbbScalFeeCls5", voParam.strScalFeeCls5);
					}
					if (voParam.strKeyDate) {
						util.DataMap.setValue(app, "dmReqKey", "strKeyDate", voParam.strKeyDate);
					}
					if (voParam.strDeptCd) {
						util.DataMap.setValue(app, "dmReqKey", "strDeptCd", voParam.strDeptCd);
					}
					if (voParam.strDeptObjDivRcd) {
						util.DataMap.setValue(app, "dmReqKey", "strDeptObjDiv", voParam.strDeptObjDivRcd);
					}
					if (voParam.strMngDeptDiv) {
						util.DataMap.setValue(app, "dmReqKey", "strMngDeptDiv", voParam.strMngDeptDiv);
					}
					if (voParam.strWrkScalYn) {
						util.DataMap.setValue(app, "dmReqKey", "strWrkScalYn", voParam.strWrkScalYn);
					}
					if (voParam.strStudReqYn) {
						util.DataMap.setValue(app, "dmReqKey", "strStudReqYn", voParam.strStudReqYn);
					}
					if (voParam.strCntiScalYn) {
						util.DataMap.setValue(app, "dmReqKey", "strCntiScalYn", voParam.strCntiScalYn);
					}
						
					//strCommand: onLoad 
					util.Submit.send(app, "subOnLoad", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, ["cbbScalFeeCls1", "cbbScalFeeCls2", "cbbScalFeeCls3", "cbbScalFeeCls4", "cbbScalFeeCls5"]);
						}
							
						// 바로 검색 실행
						if ((voParam.strScalFeeCd || voParam.strScalFeeNm)) {
							util.Header.clickSearch(app);
						}
						
					});
				}
					
					
				 /**
				 * doList 조회 
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				function doList() {
					//strCommand: list 
					util.Submit.send(app, "subList", function(pbSuccess){
						if(pbSuccess){
							util.Control.redraw(app, "rptScalFee");
							util.Msg.notify(app, "NLS.INF.M024");
						}
						
					});
				};
				
				/**
				 * doCloseOk (선택닫기 이벤트시 호출) 	
				 * @member stdCssPScalFeePop
				 * @type void
				 * @author AeyoungLee 2016. 2. 29.
				 */
				function doCloseOk() {
					if(ValueUtil.isNull(util.Grid.getCheckOrSelectedRowIndex(app, "grdScalFee"))){
						//선택된 데이터가 없습니다.
						ComMsg.warn("M008");
						return false;
					}
					
					var vnIdx = util.Grid.getIndex(app, "grdScalFee");
					
					var voResult = moStdCssPScalFeePop.result;
					
					voResult.SCAL_FEE_CD		= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CD", vnIdx);
					voResult.ST_DT				= util.Grid.getCellValue(app, "grdScalFee", "ST_DT", vnIdx);
					voResult.END_DT				= util.Grid.getCellValue(app, "grdScalFee", "END_DT", vnIdx);
					voResult.OBJ_DIV_RCD		= util.Grid.getCellValue(app, "grdScalFee", "OBJ_DIV_RCD", vnIdx);
					voResult.REF_KEY			= util.Grid.getCellValue(app, "grdScalFee", "REF_KEY", vnIdx);
					voResult.LAN_DIV_RCD		= util.Grid.getCellValue(app, "grdScalFee", "LAN_DIV_RCD", vnIdx);
					voResult.DEPT_CD			= util.Grid.getCellValue(app, "grdScalFee", "DEPT_CD", vnIdx);
					voResult.DEPT_OBJ_DIV_RCD	= util.Grid.getCellValue(app, "grdScalFee", "DEPT_OBJ_DIV_RCD", vnIdx);
					voResult.DEPT_NM			= util.Grid.getCellValue(app, "grdScalFee", "DEPT_NM", vnIdx);
					voResult.SCAL_FEE_NM		= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_NM", vnIdx);
					voResult.SHORT_NM			= util.Grid.getCellValue(app, "grdScalFee", "SHORT_NM", vnIdx);
					voResult.PRT_SCAL_FEE_NM	= util.Grid.getCellValue(app, "grdScalFee", "PRT_SCAL_FEE_NM", vnIdx);
					voResult.SCAL_FNDTN_CD		= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FNDTN_CD", vnIdx);
					voResult.PMNT_DIV_RCD		= util.Grid.getCellValue(app, "grdScalFee", "PMNT_DIV_RCD", vnIdx);
					voResult.WRK_SCAL_YN		= util.Grid.getCellValue(app, "grdScalFee", "WRK_SCAL_YN", vnIdx);
					voResult.DUP_PMNT_YN		= util.Grid.getCellValue(app, "grdScalFee", "DUP_PMNT_YN", vnIdx);
					voResult.MNG_DEPT_DIV_RCD	= util.Grid.getCellValue(app, "grdScalFee", "MNG_DEPT_DIV_RCD", vnIdx);
					voResult.STUD_REQ_YN		= util.Grid.getCellValue(app, "grdScalFee", "STUD_REQ_YN", vnIdx);
					voResult.CNTI_SCAL_YN		= util.Grid.getCellValue(app, "grdScalFee", "CNTI_SCAL_YN", vnIdx);
					voResult.PMNT_CNT			= util.Grid.getCellValue(app, "grdScalFee", "PMNT_CNT", vnIdx);
					voResult.PMNT_ITV_RCD		= util.Grid.getCellValue(app, "grdScalFee", "PMNT_ITV_RCD", vnIdx);
					voResult.PRT_ORD			= util.Grid.getCellValue(app, "grdScalFee", "PRT_ORD", vnIdx);
					voResult.SCAL_FEE_CLS1_RCD	= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CLS1_RCD", vnIdx);
					voResult.SCAL_FEE_CLS2_RCD	= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CLS2_RCD", vnIdx);
					voResult.SCAL_FEE_CLS3_RCD	= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CLS3_RCD", vnIdx);
					voResult.SCAL_FEE_CLS4_RCD	= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CLS4_RCD", vnIdx);
					voResult.SCAL_FEE_CLS5_RCD	= util.Grid.getCellValue(app, "grdScalFee", "SCAL_FEE_CLS5_RCD", vnIdx);
					voResult.DESC1				= util.Grid.getCellValue(app, "grdScalFee", "DESC1", vnIdx);
					voResult.DESC2				= util.Grid.getCellValue(app, "grdScalFee", "DESC2", vnIdx);
					voResult.DESC3				= util.Grid.getCellValue(app, "grdScalFee", "DESC3", vnIdx);
					voResult.DESC4				= util.Grid.getCellValue(app, "grdScalFee", "DESC4", vnIdx);
					voResult.DESC5				= util.Grid.getCellValue(app, "grdScalFee", "DESC5", vnIdx);
					
					if(ExtPopUp.isPopUp()){
						ExtPopUp.closeLayeredPopup("callbackStdCssPScalFeePop", moStdCssPScalFeePop);
					}				
				}
			
				return moPage;
			};;
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsListScalFeeCls1");
			dataSet_1.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsListScalFeeCls2");
			dataSet_2.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsListScalFeeCls4");
			dataSet_3.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsListScalFeeCls5");
			dataSet_4.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_4);
			
			var dataSet_5 = new cpr.data.DataSet("dsListScalFeeCls3");
			dataSet_5.parseData({
				"columns": [
					{"name": "CD"},
					{"name": "CD_NM"}
				],
				"rows": []
			});
			app.register(dataSet_5);
			
			var dataSet_6 = new cpr.data.DataSet("dsScalFee");
			dataSet_6.parseData({
				"columns": [
					{"name": "SCAL_FEE_CD"},
					{"name": "ST_DT"},
					{"name": "END_DT"},
					{"name": "OBJ_DIV_RCD"},
					{"name": "REF_KEY"},
					{"name": "LAN_DIV_RCD"},
					{"name": "DEPT_CD"},
					{"name": "DEPT_NM"},
					{"name": "DEPT_OBJ_DIV_RCD"},
					{"name": "SCAL_FEE_NM"},
					{"name": "SHORT_NM"},
					{"name": "PRT_SCAL_FEE_NM"},
					{"name": "SCAL_FNDTN_CD"},
					{"name": "PMNT_DIV_RCD"},
					{"name": "PMNT_ITV_RCD"},
					{"name": "WRK_SCAL_YN"},
					{"name": "DUP_PMNT_YN"},
					{"name": "MNG_DEPT_DIV_RCD"},
					{"name": "STUD_REQ_YN"},
					{"name": "CNTI_SCAL_YN"},
					{"name": "PMNT_CNT"},
					{"name": "CERT_SHEET_NPRT_YN"},
					{"name": "PRT_ORD"},
					{"name": "SCAL_FEE_CLS1_RCD"},
					{"name": "SCAL_FEE_CLS2_RCD"},
					{"name": "SCAL_FEE_CLS3_RCD"},
					{"name": "SCAL_FEE_CLS4_RCD"},
					{"name": "SCAL_FEE_CLS5_RCD"},
					{"name": "DESC1"},
					{"name": "DESC2"},
					{"name": "DESC3"},
					{"name": "DESC4"},
					{"name": "DESC5"}
				],
				"rows": []
			});
			app.register(dataSet_6);
			var dataMap_1 = new cpr.data.DataMap("dmReqKey");
			dataMap_1.parseData({
				"columns" : [
					{
						"name": "strScalFeeCd",
						"dataType": "string"
					},
					{
						"name": "strScalFeeNm",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls1",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls2",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls3",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls4",
						"dataType": "string"
					},
					{
						"name": "strScalFeeCls5",
						"dataType": "string"
					},
					{
						"name": "strKeyDate",
						"dataType": "string"
					},
					{
						"name": "strLanDivRcd",
						"dataType": "string"
					},
					{
						"name": "strObjDivRcd",
						"dataType": "string"
					},
					{
						"name": "strDeptCd",
						"dataType": "string"
					},
					{
						"name": "strDeptObjDiv",
						"dataType": "string"
					},
					{
						"name": "strMngDeptDiv",
						"dataType": "string"
					},
					{
						"name": "strWrkScalYn",
						"dataType": "string"
					},
					{
						"name": "strStudReqYn",
						"dataType": "string"
					},
					{
						"name": "strCntiScalYn",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmCurrentDate");
			dataMap_2.parseData({
				"columns" : [
					{
						"name": "BEF_DT",
						"dataType": "string"
					},
					{
						"name": "CUT_DT",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmResOnLoad");
			dataMap_3.parseData({
				"columns" : [{
					"name": "strDefLanDivRcd",
					"dataType": "string"
				}]
			});
			app.register(dataMap_3);
			var submission_1 = new cpr.protocols.Submission("subOnLoad");
			submission_1.action = "/css/StdCssScalFeePop/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addResponseData(dataSet_1, false);
			submission_1.addResponseData(dataSet_2, false);
			submission_1.addResponseData(dataSet_3, false);
			submission_1.addResponseData(dataSet_5, false);
			submission_1.addResponseData(dataSet_4, false);
			submission_1.addResponseData(dataMap_2, false);
			submission_1.addResponseData(dataMap_3, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subList");
			submission_2.action = "/css/StdCssScalFeePop/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_1);
			submission_2.addResponseData(dataSet_6, false);
			app.register(submission_2);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var userDefinedControl_1 = new udc.com.appHeader("appheader1");
			container.addChild(userDefinedControl_1, {
				"top": "5px",
				"right": "5px",
				"left": "5px",
				"height": "25px"
			});
			
			var group_1 = new cpr.controls.Container("grpSearch");
			group_1.style.setClasses(["search-box"]);
			// Layout
			var xYLayout_2 = new cpr.controls.layouts.XYLayout();
			group_1.setLayout(xYLayout_2);
			(function(container){
				var inputBox_1 = new cpr.controls.InputBox("ipbScalFeeCd");
				inputBox_1.bind("fieldLabel").toExpression("#optScalFeeCd.value");
				inputBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCd");
				if(typeof onIpbScalFeeCdKeydown == "function") {
					inputBox_1.addEventListener("keydown", onIpbScalFeeCdKeydown);
				}
				container.addChild(inputBox_1, {
					"top": "5px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_1 = new cpr.controls.Output("optScalFeeCd");
				output_1.value = "";
				output_1.bind("value").toLanguage("UI-SCR-FNDTNNAME");
				container.addChild(output_1, {
					"top": "5px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var output_2 = new cpr.controls.Output("optScalFeeNm");
				output_2.value = "";
				output_2.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_2, {
					"top": "5px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var inputBox_2 = new cpr.controls.InputBox("ipbScalFeeNm");
				inputBox_2.bind("fieldLabel").toExpression("#optScalFeeNm.value");
				inputBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeNm");
				if(typeof onIpbScalFeeNmKeydown == "function") {
					inputBox_2.addEventListener("keydown", onIpbScalFeeNmKeydown);
				}
				container.addChild(inputBox_2, {
					"top": "5px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var button_1 = new cpr.controls.Button("btnSearch");
				button_1.value = "";
				button_1.style.setClasses(["btn-search"]);
				button_1.bind("value").toLanguage("UI-SCR-SCH");
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				if(typeof onBtnSearchClick == "function") {
					button_1.addEventListener("click", onBtnSearchClick);
				}
				container.addChild(button_1, {
					"top": "55px",
					"left": "515px",
					"width": "60px",
					"height": "25px"
				});
				var output_3 = new cpr.controls.Output("optScalFeeCls1");
				output_3.value = "";
				output_3.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_3, {
					"top": "5px",
					"left": "395px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_1 = new cpr.controls.ComboBox("cbbScalFeeCls1");
				comboBox_1.bind("fieldLabel").toExpression("#optScalFeeCls1.value");
				comboBox_1.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls1");
				(function(comboBox_1){
					comboBox_1.addItem(new cpr.controls.Item("전체", ""));
					comboBox_1.setItemSet(app.lookup("dsListScalFeeCls1"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_1);
				container.addChild(comboBox_1, {
					"top": "5px",
					"left": "480px",
					"width": "100px",
					"height": "25px"
				});
				var output_4 = new cpr.controls.Output("optScalFeeCls2");
				output_4.value = "";
				output_4.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_4, {
					"top": "30px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_2 = new cpr.controls.ComboBox("cbbScalFeeCls2");
				comboBox_2.bind("fieldLabel").toExpression("#optScalFeeCls2.value");
				comboBox_2.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls2");
				(function(comboBox_2){
					comboBox_2.addItem(new cpr.controls.Item("전체", ""));
					comboBox_2.setItemSet(app.lookup("dsListScalFeeCls2"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_2);
				container.addChild(comboBox_2, {
					"top": "30px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
				var output_5 = new cpr.controls.Output("optScalFeeCls3");
				output_5.value = "";
				output_5.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_5, {
					"top": "30px",
					"left": "200px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_3 = new cpr.controls.ComboBox("cbbScalFeeCls3");
				comboBox_3.bind("fieldLabel").toExpression("#optScalFeeCls3.value");
				comboBox_3.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls3");
				(function(comboBox_3){
					comboBox_3.addItem(new cpr.controls.Item("전체", ""));
					comboBox_3.setItemSet(app.lookup("dsListScalFeeCls3"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_3);
				container.addChild(comboBox_3, {
					"top": "30px",
					"left": "285px",
					"width": "100px",
					"height": "25px"
				});
				var output_6 = new cpr.controls.Output("optScalFeeCls4");
				output_6.value = "";
				output_6.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_6, {
					"top": "30px",
					"left": "395px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_4 = new cpr.controls.ComboBox("cbbScalFeeCls4");
				comboBox_4.bind("fieldLabel").toExpression("#optScalFeeCls4.value");
				comboBox_4.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls4");
				(function(comboBox_4){
					comboBox_4.addItem(new cpr.controls.Item("전체", ""));
					comboBox_4.setItemSet(app.lookup("dsListScalFeeCls4"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_4);
				container.addChild(comboBox_4, {
					"top": "30px",
					"left": "480px",
					"width": "100px",
					"height": "25px"
				});
				var output_7 = new cpr.controls.Output("optScalFeeCls5");
				output_7.value = "";
				output_7.bind("value").toLanguage("UI-SCR-FNDTNCD");
				container.addChild(output_7, {
					"top": "55px",
					"left": "5px",
					"width": "80px",
					"height": "25px"
				});
				var comboBox_5 = new cpr.controls.ComboBox("cbbScalFeeCls5");
				comboBox_5.bind("fieldLabel").toExpression("#optScalFeeCls5.value");
				comboBox_5.bind("value").toDataMap(app.lookup("dmReqKey"), "strScalFeeCls5");
				(function(comboBox_5){
					comboBox_5.addItem(new cpr.controls.Item("전체", ""));
					comboBox_5.setItemSet(app.lookup("dsListScalFeeCls5"), {
						"label": "CD_NM",
						"value": "CD"
					});
				})(comboBox_5);
				container.addChild(comboBox_5, {
					"top": "55px",
					"left": "90px",
					"width": "100px",
					"height": "25px"
				});
			})(group_1);
			container.addChild(group_1, {
				"top": "35px",
				"left": "5px",
				"width": "585px",
				"height": "82px"
			});
			
			var group_2 = new cpr.controls.Container("grpData");
			// Layout
			var xYLayout_3 = new cpr.controls.layouts.XYLayout();
			group_2.setLayout(xYLayout_3);
			(function(container){
				var userDefinedControl_2 = linker.userDefinedControl_2 = new udc.com.comTitle();
				userDefinedControl_2.ctrl = app.lookup("grdFndtnSch");
				userDefinedControl_2.bind("title").toLanguage("NLS-SCR-REGFEEFNDTNLST");
				container.addChild(userDefinedControl_2, {
					"top": "5px",
					"left": "5px",
					"width": "256px",
					"height": "25px"
				});
				var grid_1 = new cpr.controls.Grid("grdScalFee");
				grid_1.init({
					"dataSet": app.lookup("dsScalFee"),
					"columns": [
						{"width": "40px"},
						{"width": "76px"},
						{"width": "120px"},
						{"width": "80px"},
						{"width": "80px"},
						{"width": "126px"},
						{"width": "127px"},
						{"width": "124px"},
						{"width": "124px"},
						{"width": "128px"},
						{"width": "128px"}
					],
					"header": {
						"rows": [{"height": "27px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-STAFFNO");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-FNDTNNAME");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ST_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-END_DT");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-REP_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHAG_DEPT_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-CHARGER_NM");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR1");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-DB-ADDR2");
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.bind("text").toLanguage("UI-SCR-TEL");
								}
							}
						]
					},
					"detail": {
						"rows": [{"height": "25px"}],
						"cells": [
							{
								"constraint": {"rowIndex": 0, "colIndex": 0},
								"configurator": function(cell){
									cell.columnName = "_repeatindex";
									cell.style.css({
										"text-align" : "center"
									});
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 1},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CD";
									cell.control = (function(){
										var inputBox_3 = new cpr.controls.InputBox("gdIpbScalFeeCd");
										inputBox_3.readOnly = true;
										inputBox_3.style.css({
											"text-align" : "center"
										});
										inputBox_3.bind("value").toDataColumn("SCAL_FEE_CD");
										return inputBox_3;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 2},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_NM";
									cell.control = (function(){
										var inputBox_4 = new cpr.controls.InputBox("gdIpbScalFeeNm");
										inputBox_4.readOnly = true;
										inputBox_4.bind("value").toDataColumn("SCAL_FEE_NM");
										return inputBox_4;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 3},
								"configurator": function(cell){
									cell.columnName = "ST_DT";
									cell.control = (function(){
										var output_8 = new cpr.controls.Output("gdOptStDt");
										output_8.dataType = "date";
										output_8.format = "YYYY-MM-DD";
										output_8.style.css({
											"text-align" : "center"
										});
										output_8.bind("value").toDataColumn("ST_DT");
										return output_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 4},
								"configurator": function(cell){
									cell.columnName = "END_DT";
									cell.control = (function(){
										var output_9 = new cpr.controls.Output("gdOptEndDt");
										output_9.dataType = "date";
										output_9.format = "YYYY-MM-DD";
										output_9.style.css({
											"text-align" : "center"
										});
										output_9.bind("value").toDataColumn("END_DT");
										return output_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 5},
								"configurator": function(cell){
									cell.columnName = "DEPT_NM";
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 6},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS1_RCD";
									cell.control = (function(){
										var comboBox_6 = new cpr.controls.ComboBox("rptCbbScalFeeCls1Rcd");
										comboBox_6.enabled = false;
										comboBox_6.hideButton = true;
										(function(comboBox_6){
											comboBox_6.setItemSet(app.lookup("dsListScalFeeCls1"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_6);
										comboBox_6.bind("value").toDataColumn("SCAL_FEE_CLS1_RCD");
										return comboBox_6;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 7},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS2_RCD";
									cell.control = (function(){
										var comboBox_7 = new cpr.controls.ComboBox("rptCbbScalFeeCls2Rcd");
										comboBox_7.enabled = false;
										comboBox_7.hideButton = true;
										(function(comboBox_7){
											comboBox_7.setItemSet(app.lookup("dsListScalFeeCls2"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_7);
										comboBox_7.bind("value").toDataColumn("SCAL_FEE_CLS2_RCD");
										return comboBox_7;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 8},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS3_RCD";
									cell.control = (function(){
										var comboBox_8 = new cpr.controls.ComboBox("rptCbbScalFeeCls3Rcd");
										comboBox_8.enabled = false;
										comboBox_8.hideButton = true;
										(function(comboBox_8){
											comboBox_8.setItemSet(app.lookup("dsListScalFeeCls3"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_8);
										comboBox_8.bind("value").toDataColumn("SCAL_FEE_CLS3_RCD");
										return comboBox_8;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 9},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS4_RCD";
									cell.control = (function(){
										var comboBox_9 = new cpr.controls.ComboBox("rptCbbScalFeeCls4Rcd");
										comboBox_9.enabled = false;
										comboBox_9.hideButton = true;
										(function(comboBox_9){
											comboBox_9.setItemSet(app.lookup("dsListScalFeeCls4"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_9);
										comboBox_9.bind("value").toDataColumn("SCAL_FEE_CLS4_RCD");
										return comboBox_9;
									})();
								}
							},
							{
								"constraint": {"rowIndex": 0, "colIndex": 10},
								"configurator": function(cell){
									cell.columnName = "SCAL_FEE_CLS5_RCD";
									cell.control = (function(){
										var comboBox_10 = new cpr.controls.ComboBox("rptCbbScalFeeCls5Rcd");
										comboBox_10.enabled = false;
										comboBox_10.hideButton = true;
										(function(comboBox_10){
											comboBox_10.setItemSet(app.lookup("dsListScalFeeCls5"), {
												"label": "CD_NM",
												"value": "CD"
											});
										})(comboBox_10);
										comboBox_10.bind("value").toDataColumn("SCAL_FEE_CLS5_RCD");
										return comboBox_10;
									})();
								}
							}
						]
					}
				});
				if(typeof onGrdScalFeeRowDblclick == "function") {
					grid_1.addEventListener("row-dblclick", onGrdScalFeeRowDblclick);
				}
				container.addChild(grid_1, {
					"top": "30px",
					"left": "5px",
					"width": "575px",
					"height": "300px"
				});
			})(group_2);
			container.addChild(group_2, {
				"top": "122px",
				"left": "5px",
				"width": "585px",
				"height": "335px"
			});
			
			var button_2 = new cpr.controls.Button("btnCloseOk");
			button_2.value = "";
			button_2.bind("value").toLanguage("UI-SCR-CHOICLS");
			if(typeof onBtnCloseOkClick == "function") {
				button_2.addEventListener("click", onBtnCloseOkClick);
			}
			container.addChild(button_2, {
				"top": "462px",
				"left": "530px",
				"width": "60px",
				"height": "25px"
			});
			
			var button_3 = new cpr.controls.Button("btnCloseCancel");
			button_3.value = "";
			button_3.style.setClasses(["btn-commit"]);
			button_3.bind("value").toLanguage("UI-SCR-SCRNCLS");
			if(typeof onBtnCloseCancelClick == "function") {
				button_3.addEventListener("click", onBtnCloseCancelClick);
			}
			container.addChild(button_3, {
				"top": "462px",
				"left": "5px",
				"width": "60px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "장학금검색팝업";
	cpr.core.Platform.INSTANCE.register(app);
})();
