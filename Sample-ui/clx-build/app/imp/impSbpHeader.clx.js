/*
 * App URI: app/imp/impSbpHeader
 * Source Location: app/imp/impSbpHeader.clx
 *
 * This file was generated by eXbuilder6 compiler, Don't edit manually.
 */
(function(){
	var app = new cpr.core.App("app/imp/impSbpHeader", {
		onPrepare: function(loader){
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports){
			var linker = {};
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("dsCtrlList");
			dataSet_1.parseData({
				"columns": [
					{"name": "READ_CTRL"},
					{"name": "NO_SHOW_CTRL"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			
			var dataSet_2 = new cpr.data.DataSet("dsAuthList");
			dataSet_2.parseData({
				"columns": [{"name": "MENU_AUTH_DIV_RCD"}],
				"rows": []
			});
			app.register(dataSet_2);
			
			var dataSet_3 = new cpr.data.DataSet("dsCtrlList");
			dataSet_3.parseData({
				"columns": [
					{"name": "READ_CTRL"},
					{"name": "NO_SHOW_CTRL"}
				],
				"rows": []
			});
			app.register(dataSet_3);
			
			var dataSet_4 = new cpr.data.DataSet("dsAuthList");
			dataSet_4.parseData({
				"columns": [{"name": "MENU_AUTH_DIV_RCD"}],
				"rows": []
			});
			app.register(dataSet_4);
			var dataMap_1 = new cpr.data.DataMap("dmInstance");
			dataMap_1.parseData({
				"columns" : [{
					"name": "root",
					"dataType": "string"
				}]
			});
			app.register(dataMap_1);
			
			var dataMap_2 = new cpr.data.DataMap("dmInstance");
			dataMap_2.parseData({
				"columns" : [{
					"name": "root",
					"dataType": "string"
				}]
			});
			app.register(dataMap_2);
			
			var dataMap_3 = new cpr.data.DataMap("dmReqKey");
			dataMap_3.parseData({
				"columns" : [
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strPgmId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_3);
			
			var dataMap_4 = new cpr.data.DataMap("dmInstance");
			dataMap_4.parseData({
				"columns" : [{
					"name": "root",
					"dataType": "string"
				}]
			});
			app.register(dataMap_4);
			
			var dataMap_5 = new cpr.data.DataMap("dmReqKey");
			dataMap_5.parseData({
				"columns" : [
					{
						"name": "strOprtRoleId",
						"dataType": "string"
					},
					{
						"name": "strPgmId",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_5);
			
			var dataMap_6 = new cpr.data.DataMap("dmExcelFileInfo");
			dataMap_6.parseData({
				"columns" : [
					{
						"name": "strExcelPath",
						"dataType": "string"
					},
					{
						"name": "strExcelRealFileNm",
						"dataType": "string"
					},
					{
						"name": "strExcelChgFileNm",
						"dataType": "string"
					}
				]
			});
			app.register(dataMap_6);
			
			var dataMap_7 = new cpr.data.DataMap("dmInsExcelReq");
			dataMap_7.parseData({
				"columns" : [{
					"name": "bodyData",
					"dataType": "string"
				}]
			});
			app.register(dataMap_7);
			var submission_1 = new cpr.protocols.Submission("subAuth");
			submission_1.action = "/cmn/StdCmnRoleSbp/";
			submission_1.mediaType = "application/x-www-form-urlencoded";
			submission_1.addRequestData(dataMap_5);
			submission_1.addResponseData(dataSet_4, false);
			app.register(submission_1);
			
			var submission_2 = new cpr.protocols.Submission("subCheck");
			submission_2.action = "/cmn/StdCmnPgmAuth/";
			submission_2.mediaType = "application/x-www-form-urlencoded";
			submission_2.addRequestData(dataMap_5);
			submission_2.addResponseData(dataSet_3, false);
			app.register(submission_2);
			
			var submission_3 = new cpr.protocols.Submission("subImpHIsExistFile");
			submission_3.action = "/cmn/StdCmnFileTransUtil/";
			submission_3.mediaType = "application/x-www-form-urlencoded";
			app.register(submission_3);
			
			var submission_4 = new cpr.protocols.Submission("subExportExcel_header");
			submission_4.action = "/cmn/StdCmnFileTransUtil/";
			submission_4.mediaType = "application/x-www-form-urlencoded";
			submission_4.addResponseData(dataMap_6, false);
			app.register(submission_4);
			
			app.supportMedia("all and (min-width: 1235px)", "default");
			app.supportMedia("all and (min-width: 1020px) and (max-width: 1234px)", "notebook");
			app.supportMedia("all and (min-width: 760px) and (max-width: 1019px)", "tablet");
			app.supportMedia("all and (max-width: 759px)", "mobile");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"top" : "0px",
				"height" : "100%",
				"left" : "0px"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var output_1 = new cpr.controls.Output("ImpSbpHeader");
			output_1.value = "서브페이지임포트";
			container.addChild(output_1, {
				"top": "0px",
				"left": "0px",
				"width": "95px",
				"height": "25px"
			});
		}
	});
	app.title = "impSbpHeader";
	cpr.core.Platform.INSTANCE.register(app);
})();
